<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///D|/Games/GTA San Andreas Online/State 99 0.3e/compiler/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="helper.pwn">
	<assembly>
		<name>helper.pwn</name>
	</assembly>
	<members>

		<!-- enumerations -->

		<!-- constants -->
		<member name="C:EOS" value="0">
			<referrer name="strtok"/>
			<referrer name="strrest"/>
			<referrer name="token_by_delim"/>
		</member>
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="isNumeric"/>
			<referrer name="str_replace"/>
			<referrer name="explode"/>
			<referrer name="explodea"/>
			<referrer name="str_in_array"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="isNumeric"/>
			<referrer name="ReturnUser"/>
			<referrer name="str_ireplace"/>
			<referrer name="str_in_array"/>
			<referrer name="OnPlayerCommandText"/>
		</member>

		<!-- variables -->
		<member name="F:Groups">
			<referrer name="SSCANF_OnFilterScriptInit"/>
		</member>
		<member name="F:SSCANF_gInit">
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
		</member>
		<member name="F:SSCANF_gOPC">
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
		</member>
		<member name="F:SSCANF_gOPDC">
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<referrer name="Streamer_OnPlayerDisconnect"/>
		</member>
		<member name="F:Streamer_IncludeFileVersion">
			<attribute name="public"/>
		</member>
		<member name="F:Streamer_g_OPC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
		</member>
		<member name="F:Streamer_g_OPDC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:Streamer_g_OPEC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPEO">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerEditObject"/>
		</member>
		<member name="F:Streamer_g_OPERC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPLC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPLRC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPPP">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerPickUpPickup"/>
		</member>
		<member name="F:Streamer_g_OPSO">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerSelectObject"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:@receivepacket" syntax="@receivepacket(packet[], size, source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="packet">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@receivestring" syntax="@receivestring(message[], source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AddStaticVehicleEx" syntax="AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2, respawn_delay)">
			<attribute name="native"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
		</member>
		<member name="M:AttachTrailerToVehicle" syntax="AttachTrailerToVehicle(trailerid, vehicleid)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="trailerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<referrer name="Streamer_OnPlayerDisconnect"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:DestroyVehicle" syntax="DestroyVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetMaxPlayers" syntax="GetMaxPlayers()">
			<attribute name="native"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="ReturnUser"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerPos" syntax="GetPlayerPos(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerVehicleID" syntax="GetPlayerVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetVehicleModel" syntax="GetVehicleModel(vehicleid)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsKeyJustDown" syntax="IsKeyJustDown(key, newkeys, oldkeys)">
			<stacksize value="1"/>
			<param name="key">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:IsPlayerAdmin" syntax="IsPlayerAdmin(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<attribute name="native"/>
			<referrer name="PlaySoundForAll"/>
			<referrer name="PlaySoundForPlayersInRange"/>
			<referrer name="ReturnUser"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInRangeOfPoint" syntax="IsPlayerInRangeOfPoint(playerid, range, x, y, z)">
			<attribute name="native"/>
			<referrer name="PlaySoundForPlayersInRange"/>
			<param name="playerid">
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadStaticVehiclesFromFile" syntax="LoadStaticVehiclesFromFile(filename[])">
			<stacksize value="340"/>
			<dependency name="AddStaticVehicleEx"/>
			<dependency name="fclose"/>
			<dependency name="floatstr"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="io_read"/>
			<dependency name="printf"/>
			<dependency name="strval"/>
			<dependency name="token_by_delim"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDynamicObjectMoved" syntax="OnDynamicObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Streamer_g_OPC"/>
			<dependency name="Streamer_g_OPDC"/>
			<dependency name="Streamer_g_OPEC"/>
			<dependency name="Streamer_g_OPEO"/>
			<dependency name="Streamer_g_OPERC"/>
			<dependency name="Streamer_g_OPLC"/>
			<dependency name="Streamer_g_OPLRC"/>
			<dependency name="Streamer_g_OPPP"/>
			<dependency name="Streamer_g_OPSO"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Streamer_g_OPC"/>
			<dependency name="Streamer_g_OPDC"/>
			<dependency name="Streamer_g_OPEC"/>
			<dependency name="Streamer_g_OPEO"/>
			<dependency name="Streamer_g_OPERC"/>
			<dependency name="Streamer_g_OPLC"/>
			<dependency name="Streamer_g_OPLRC"/>
			<dependency name="Streamer_g_OPPP"/>
			<dependency name="Streamer_g_OPSO"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="445"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="AttachTrailerToVehicle"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="RepairVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="SetVehicleParamsForPlayer"/>
			<dependency name="format"/>
			<dependency name="isNumeric"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="strtok"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPDC"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditDynamicObject" syntax="OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPEO"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPEC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicArea" syntax="OnPlayerEnterDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicCP" syntax="OnPlayerEnterDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicRaceCP" syntax="OnPlayerEnterDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPERC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPLC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicArea" syntax="OnPlayerLeaveDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicCP" syntax="OnPlayerLeaveDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicRaceCP" syntax="OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPLRC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpDynamicPickup" syntax="OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPPP"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerSelectDynamicObject" syntax="OnPlayerSelectDynamicObject(playerid, objectid, modelid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPSO"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:PlaySoundForAll" syntax="PlaySoundForAll(soundid, x, y, z)">
			<stacksize value="8"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<param name="soundid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PlaySoundForPlayersInRange" syntax="PlaySoundForPlayersInRange(soundid, range, x, y, z)">
			<stacksize value="8"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerPlaySound"/>
			<param name="soundid">
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PlayerPlaySound" syntax="PlayerPlaySound(playerid, soundid, x, y, z)">
			<attribute name="native"/>
			<referrer name="PlaySoundForAll"/>
			<referrer name="PlaySoundForPlayersInRange"/>
			<param name="playerid">
			</param>
			<param name="soundid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:RepairVehicle" syntax="RepairVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ReturnUser" syntax="ReturnUser(text[])">
			<stacksize value="36"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="isNumeric"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SSCANF_Init" syntax="SSCANF_Init(players, invalid, len)">
			<attribute name="native"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<param name="players">
			</param>
			<param name="invalid">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:SSCANF_Join" syntax="SSCANF_Join(playerid, name[], npc)">
			<attribute name="native"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="npc">
			</param>
		</member>
		<member name="M:SSCANF_Leave" syntax="SSCANF_Leave(playerid)">
			<attribute name="native"/>
			<referrer name="Streamer_OnPlayerDisconnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnFilterScriptInit" syntax="SSCANF_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Groups"/>
			<dependency name="Groups"/>
			<dependency name="print"/>
		</member>
		<member name="M:SSCANF_OnGameModeInit" syntax="SSCANF_OnGameModeInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:SSCANF_OnPlayerConnect" syntax="SSCANF_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnPlayerDisconnect" syntax="SSCANF_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, color, message[])">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerPos" syntax="SetPlayerPos(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerSpecialAction" syntax="SetPlayerSpecialAction(playerid, actionid)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
		</member>
		<member name="M:SetVehicleParamsForPlayer" syntax="SetVehicleParamsForPlayer(vehicleid, playerid, objective, doorslocked)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="objective">
			</param>
			<param name="doorslocked">
			</param>
		</member>
		<member name="M:Streamer_CallbackHook" syntax="Streamer_CallbackHook(callback, ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<param name="callback">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_OnFilterScriptInit" syntax="Streamer_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="SSCANF_gOPC"/>
			<dependency name="SSCANF_gOPDC"/>
			<dependency name="funcidx"/>
			<dependency name="printf"/>
		</member>
		<member name="M:Streamer_OnGameModeInit" syntax="Streamer_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="SSCANF_gOPC"/>
			<dependency name="SSCANF_gOPDC"/>
			<dependency name="funcidx"/>
			<dependency name="printf"/>
		</member>
		<member name="M:Streamer_OnPlayerConnect" syntax="Streamer_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="29"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gOPDC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerDisconnect" syntax="Streamer_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="SSCANF_Leave"/>
			<dependency name="SSCANF_gOPDC"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerEditObject" syntax="Streamer_OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_OnPlayerEnterCP" syntax="Streamer_OnPlayerEnterCP(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerEnterRaceCP" syntax="Streamer_OnPlayerEnterRaceCP(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerLeaveCP" syntax="Streamer_OnPlayerLeaveCP(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerLeaveRaceCP" syntax="Streamer_OnPlayerLeaveRaceCP(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerPickUpPickup" syntax="Streamer_OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerSelectObject" syntax="Streamer_OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:explode" syntax="explode(aExplode[][], sSource[], sDelimiter[], iVertices, iLength)">
			<stacksize value="11"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="aExplode">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sDelimiter">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iVertices">
			</param>
			<param name="iLength">
			</param>
		</member>
		<member name="M:explodea" syntax="explodea(aExplode[][], sSource[], sDelimiter[], iVertices, iLength)">
			<stacksize value="12"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="aExplode">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sDelimiter">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iVertices">
			</param>
			<param name="iLength">
			</param>
		</member>
		<member name="M:fclose" syntax="fclose(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatstr" syntax="floatstr(string[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:fopen" syntax="fopen(name[], mode)">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:fread" syntax="fread(handle, string[], size, pack)">
			<attribute name="native"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:implode" syntax="implode(aPieces[][], sGlue[], iVertices)">
			<stacksize value="262"/>
			<dependency name="implode"/>
			<dependency name="strins"/>
			<param name="aPieces">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="sGlue">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iVertices">
			</param>
		</member>
		<member name="M:isNumeric" syntax="isNumeric(string[])">
			<stacksize value="4"/>
			<referrer name="ReturnUser"/>
			<referrer name="OnPlayerCommandText"/>
			<dependency name="false"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ltrim" syntax="ltrim(sSource[])">
			<stacksize value="263"/>
			<dependency name="ltrim"/>
			<dependency name="strcat"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:print" syntax="print(string[])">
			<attribute name="native"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:printf" syntax="printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:rtrim" syntax="rtrim(sSource[])">
			<stacksize value="263"/>
			<dependency name="rtrim"/>
			<dependency name="strcat"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_vehicle" syntax="sscanf_vehicle(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_weapon" syntax="sscanf_weapon(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:str_in_array" syntax="str_in_array(sNeedle[], aHaystack[][], iHaystack)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="false"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="sNeedle">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="aHaystack">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="iHaystack">
			</param>
		</member>
		<member name="M:str_ireplace" syntax="str_ireplace(sSearch[], sReplace[], sSubject[], &amp;iCount)">
			<stacksize value="396"/>
			<dependency name="str_ireplace"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<dependency name="strdel"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="true"/>
			<param name="sSearch">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sReplace">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sSubject">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iCount">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:str_pad" syntax="str_pad(sSource[], iPadLength, cPadChar)">
			<stacksize value="262"/>
			<dependency name="str_pad"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iPadLength">
			</param>
			<param name="cPadChar">
			</param>
		</member>
		<member name="M:str_repeat" syntax="str_repeat(sSource[], iMultiplier)">
			<stacksize value="265"/>
			<dependency name="str_repeat"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iMultiplier">
			</param>
		</member>
		<member name="M:str_replace" syntax="str_replace(sSearch[], sReplace[], sSubject[], &amp;iCount)">
			<stacksize value="396"/>
			<dependency name="false"/>
			<dependency name="str_replace"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<dependency name="strdel"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="sSearch">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sReplace">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sSubject">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iCount">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:str_rot13" syntax="str_rot13(sSource[])">
			<stacksize value="259"/>
			<dependency name="str_rot13"/>
			<dependency name="strlen"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strcat" syntax="strcat(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="str_replace"/>
			<referrer name="str_ireplace"/>
			<referrer name="str_pad"/>
			<referrer name="trim"/>
			<referrer name="ltrim"/>
			<referrer name="rtrim"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="ReturnUser"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="str_replace"/>
			<referrer name="str_ireplace"/>
			<referrer name="str_in_array"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strdel" syntax="strdel(string[], start, end)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="str_replace"/>
			<referrer name="str_ireplace"/>
			<referrer name="trim"/>
			<referrer name="ltrim"/>
			<referrer name="rtrim"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:strfind" syntax="strfind(string[], sub[], ignorecase, pos)">
			<attribute name="native"/>
			<referrer name="explode"/>
			<referrer name="explodea"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sub">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:strins" syntax="strins(string[], substr[], pos, maxlength)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="str_replace"/>
			<referrer name="str_ireplace"/>
			<referrer name="str_repeat"/>
			<referrer name="implode"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="substr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="strtok"/>
			<referrer name="strrest"/>
			<referrer name="isNumeric"/>
			<referrer name="ReturnUser"/>
			<referrer name="str_replace"/>
			<referrer name="str_ireplace"/>
			<referrer name="str_pad"/>
			<referrer name="str_repeat"/>
			<referrer name="str_rot13"/>
			<referrer name="strtr"/>
			<referrer name="trim"/>
			<referrer name="ltrim"/>
			<referrer name="rtrim"/>
			<referrer name="substr"/>
			<referrer name="explode"/>
			<referrer name="explodea"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strmid" syntax="strmid(dest[], source[], start, end, maxlength)">
			<attribute name="native"/>
			<referrer name="str_replace"/>
			<referrer name="str_ireplace"/>
			<referrer name="substr"/>
			<referrer name="explode"/>
			<referrer name="explodea"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strrest" syntax="strrest(string[], &amp;index)">
			<stacksize value="131"/>
			<dependency name="EOS"/>
			<dependency name="strlen"/>
			<dependency name="strrest"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:strtok" syntax="strtok(string[], &amp;index)">
			<stacksize value="23"/>
			<referrer name="OnPlayerCommandText"/>
			<dependency name="EOS"/>
			<dependency name="strlen"/>
			<dependency name="strtok"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:strtr" syntax="strtr(sSource[], sRemove[], sReplace[])">
			<stacksize value="264"/>
			<dependency name="strlen"/>
			<dependency name="strtr"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sRemove">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sReplace">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<referrer name="ReturnUser"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:substr" syntax="substr(sSource[], iStart, iLength)">
			<stacksize value="263"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="substr"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iStart">
			</param>
			<param name="iLength">
			</param>
		</member>
		<member name="M:token_by_delim" syntax="token_by_delim(string[], return_str[], delim, start_index)">
			<stacksize value="2"/>
			<referrer name="LoadStaticVehiclesFromFile"/>
			<dependency name="EOS"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="return_str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="delim">
			</param>
			<param name="start_index">
			</param>
		</member>
		<member name="M:trim" syntax="trim(sSource[])">
			<stacksize value="264"/>
			<dependency name="strcat"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<dependency name="trim"/>
			<param name="sSource">
				<paraminfo> [] </paraminfo>
			</param>
		</member>

	</members>
</doc>
