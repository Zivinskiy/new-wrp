/*
		БОЛЬШОЙ КАТАЛОГ ГОТОВЫХ СЕРВЕРОВ SAMP: http://v-sampe.ru
		Скачано с v-sampe.ru
		ПОДПИСЫВАЙТЕСЬ НА НАШУ ГРУППУ ВКОНТАКТЕ: https://vk.com/v.sampe
*/
#include <a_samp>
#include <a_http>
#include <gl_common>
#include <a_mysql>
#include <sscanf2>
#include <streamer>
#include <regex>
#include <yom_buttons>
#include <PointToPoint>
#include <strlib>
#include <mxINI>
#include <YSI\y_va>
#include <md5>
#include <foreach>
#include <getvehicledriver>

#define MYSQLHOST "" 		// HOST MYSQL
#define MYSQLUSER ""        // Имя пользователя MYSQL
#define MYSQLPASS ""        // Пароль пользователя MYSQL
#define MYSQLDABE ""     	// Имя базы MYSQL

#define EMAIL_ACTIVE  ""     // Путь к скрипту активации EMAIL
#define EMAIL_AUTHKEY ""    // Пароль EMAIL активации

#define SFCM(%0,%1,%2) do{new _s[256];format(_s,256,%2);SendClientMessage(%0,%1,_s) ;}while(FALSE)
#define SendMes(%0,%1,%2) do{new _s[256];format(_s,256,%2);SendClientMessage(%0,%1,_s) ;}while(FALSE)
#define FMQ(%0) do{new _s[256];format(_s,256,%0);mysql_query(_s) ;}while(FALSE)
#define SPFD(%0,%1,%2,%3,%4,%5,%6) do{new _s[256];format(_s,256,%6);ShowPlayerDialog(%0,%1,%2,%3,_s,%4,%5) ;}while(FALSE)
#define FailMessage(%0) SendClientMessage(%0,CGRAY,"Вам не доступна эта функция")
#define IsValidEmail(%1) \
    regex_match(%1, "|([a-z0-9_\\.\\-]{1,20})@([a-z0-9\\.\\-]{1,20})\\.([a-z]{2,4})|is")
#define RandomEx(%1,%2) (random(%2-%1)+%1)
#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))
#define INVALID_HOUSE_ID INVALID_PLAYER_ID
// ----------===== [Цвета] =====----------
#define CGRAY 0xAFAFAFAA
#define CGREEN 0x33AA33AA
#define CRED 0xFF0000AA
#define CLIGHTRED 0xFF0033FF
#define CYELLOW 0xFFFF00AA
#define CWHITE 0xFFFFFFFF
#define CBLUE 0x4682B4AA
#define CLIGHTBLUE 0x33CCFFAA
#define CORANGE 0xFF9900AA
#define CSYSTEM 0xEFEFF7AA
#define CPINK 0xE75480FF
#define CBRIGHTRED 0xB2222200
#define CDARKGREEN 0x004400AA
#define CLIGHTGREEN 0x00FF00AA
#define CCON_GREEN 0x00FF00FF
#define CBROWN 0x8b4513FF
#define CINFO 0x269BD8FF
#define CBADINFO 0xFF182DFF
#define CADMIN 0xF36223FF
#define CDEPARTMENT 0x007FFFFF
#define CRADIO 0x6B8E23FF
#define cGRAY AFAFAF
#define cGREEN 33AA33
#define cRED FF0000
#define cLIGHTRED FF0033
#define cYELLOW FFFF00
#define cWHITE FFFFFF
#define cBLUE 4682B4
#define cLIGHTBLUE 33CCFF
#define cORANGE FF9900
#define cSYSTEM EFEFF7
#define cPINK E75480
#define cBRIGHTRED B22222
#define cDARKGREEN 004400
#define cLIGHTGREEN 00FF00
#define cCON_GREEN 00FF00
#define cBROWN 8b4513
#define cINFO 269BD8
#define cBADINFO FF182D
#define cDEPARTMENT 007FFF
#define cRADIO 6B8E23

#define COLOR_SEA 			0x00808000
#define COLOR_GRAD1 		0xB4B5B7FF
#define COLOR_GRAD2 		0xBFC0C2FF
#define COLOR_GRAD3 		0xCBCCCEFF
#define COLOR_GRAD4 		0xD8D8D8FF
#define COLOR_GRAD5 		0xE3E3E3FF
#define COLOR_GRAD6 		0xF0F0F0FF
#define COLOR_GREY 			0xAFAFAFAA
#define COLOR_GREEN 		0x33AA33AA
#define COLOR_RED 			0xAA3333AA
#define COLOR_LIGHTYELLOW 	0xFFFF00AA
#define COLOR_LIGHTRED 		0xFF5030AA
#define COLOR_LIGHTRED2 	0xFF0000FF
#define COLOR_LIGHTBLUE 	0x33CCFFAA
#define COLOR_LIGHTGREEN 	0x9ACD32AA
#define COLOR_YELLOW 		0xFFFF00AA
#define COLOR_YELLOW2 		0xF5DEB3AA
#define COLOR_WHITE 		0xFFFFFFAA
#define COLOR_FADE1 		0xE6E6E6E6
#define COLOR_FADE2 		0xC8C8C8C8
#define COLOR_TOMATO 		0xFF6347AA
#define COLOR_FADE3 		0xAAAAAAAA
#define COLOR_FADE4 		0x8C8C8C8C
#define COLOR_BLUE 			0x33AAFFFF
#define COLOR_ENTER 		0x3333FFAA
#define COLOR_FADE5 		0x6E6E6E6E
#define COLOR_PURPLE		0xDD90FFAA
#define COLOR_LIME			0x66CC00AA
#define COLOR_DBLUE 		0x2641FEAA
#define COLOR_ALLDEPT 		0xFF8282AA
#define COLOR_NEWS 			0xFFA500AA
#define COLOR_OOC 			0xE0FFFFAA
#define COLOR_ORANGE 		0xFF9900AA
#define TEAM_BLUE_COLOR 	0x8D8DFF00
#define COLOR_BLACK 		0x000000AA
#define COLOR_BOX   		0x00000050
#define COLOR_BBLUE 		0x20A9FFAA
#define COLOR_BORDER 		0x00000AA
#define COLOR_INDIGO 		0x4B00B0AA
#define TEAM_GROVE_COLOR 	0x00D900C8
#define TEAM_VAGOS_COLOR 	0xFFC801C8
#define TEAM_BALLAS_COLOR 	0x6666FFC8
#define TEAM_AZTECAS_COLOR 	0x01FCFFC8
#define COLOR_ISPOLZUY 0x7FB151FF
#define COLOR_SYSTEM 0xEFEFF7AA
// ----------===== [Цвета (конец)] =====----------
new carshoter[MAX_PLAYERS];
new checkcs[MAX_PLAYERS];
// ----------===== [Языки] =====----------
enum (<<=1)
{
	LANG_FRENCH=1,
	LANG_RUSSIAN,
	LANG_SPAIN,
	LANG_PORTUGAL,
	LANG_FREE,
	LANG_ITALIAN,
	LANG_JAPAN,
	LANG_ENGLISH
}

// ----------===== [Языки (конец)] =====----------


// ----------===== [Лицензии] =====----------
#define LIC_DRIVING 0b1
#define LIC_FLY 0b10
#define LIC_BOAT 0b100
// ----------===== [Лицензии (конец)] =====----------

// ----------===== [Типы т/с] =====----------
#define VEHICLE_TYPE_CAR 0
#define VEHICLE_TYPE_BOAT 1
#define VEHICLE_TYPE_PLANE 2
#define VEHICLE_TYPE_PLANE 2
// ----------===== [Типы т/с (конец)] =====----------


// ----------===== [Цвета ников] =====----------
#define pcDISABLED 0xFFFFFF00
#define pcWHITE 0xF2E8C9FF
// ----------===== [Цвета ников (конец)] =====----------


// ----------===== [Основные настройки] =====----------
#define MAX_LOGIN_ATTEMPTS 3 //Максимальное количество неудачных попыток ввода пароля
#define BUS_LEVEL_2 100 //К-во рейсов автобуса для перехода на 2 уровень
#define BUS_LEVEL_3 200 //К-во рейсов автобуса для перехода на 3 уровень
#define BUS_ROUTE_COUNT 5 //К-во маршрутов

#define TRUCK_LEVEL_2 30000
#define TRUCK_LEVEL_3 70000
#define TRUCK_LOAD_1 5
#define TRUCK_LOAD_2 7
#define TRUCK_LOAD_3 10
#define MAX_HOUSE_COUNT 600//Макс. к-во домов
#define HINTS_COUNT 42//Точное к-во хинтов
#define FILLING_COUNT 15//Точное к-во заправок
#define SHOP_OBJECTS 4//Точное к-во предметов в 24/7
#define HOTEL_COUNT 1//Точно к-во отелей
#define FRACTION_COUNT 17 //К-во фракций
#define SUBFRACTION_COUNT 3 //К-во фракций
#define BINT_COUNT 23 //Точное к-во интерьеров бизнесов
#define MAX_BUSINESS_COUNT 100 //Макс к-во бизнесов
#define BUSINESS_TYPE_COUNT 8 //К-во типов бизнесов
#define MAX_ONFOOT_SPEED 15 //Макс скорость, с которой игрок может перемещаться не в транспорте
#define MAX_INCAR_SPEED 90 //Макс скорость, с которой игрок может перемещаться в транспорте
#define MAX_SPEED 190 //Общая максим. скорость
#define ATM_COUNT 16//К-во банкоматов
#define SHOP_COUNT 8//К-во 24/7
#define WANTED_TIME 40//Время исчезновения звезды в минутах
#define JAIL_QUATE 600 //Время заключения в секундах за каждую звезду
#define WARN_TIME 5 //К-во дней до снятия варна
#define SETTINGS_COUNT 4 //К-во настроек
#define CLIENT_TIMEOUT 180 //Таймаут клиента
#define MAX_ADVERT_COUNT 15 //Максимальное кол-во объявлений
#define FILLING_ID_OFFSET 1000 //Смещение ID для заправок в pData[][pBusiness]
#define DELIVERY_COUNT 15 //К-во мест в очереди на заказ продуктов
#define DELIVERY_DFT_COUNT 4
#define REPAIR_ID_OFFSET 49
#define TELEPORTS_COUNT 33
#define TUALET_COUNT 13

#define IsKicked(%0) GetPVarInt(%0, "kicked")
// ----------===== [Основные настройки (конец)] =====----------

enum //Диалоги
{
	dMes,
	dLogin,
	dLogin2,
	dRegister,
	dRegister2,
	dRegister22,
	dRegister3,
	dRegister5,
	dRegister6,
	dRegister7,
	dEmplHistory,
	dPlayerMenuSecurity,
	dPlayerMenuSecurityEConfirm,
	dPlayerMenuSecurityEConfirm2,
	dPlayerMenuSettingsAction,
	dCoalwork,
	dWoodwork,
	dGunWork,
	dHire,
	dBusRent,
	dBusRoute,
	dBusPrice,
	dBusEnd,
	dTruckRent,
	dTruckLoad,
	dTaxiRent,
	dCreatehouse1,
	dCreatehouse2,
	dCreatehouse3,
	dHints,
	dHouseInfo,
	dHouseBuy,
	dHouseMenu,
	dHouseImprove,
	dHouseImprove2,
	dHouseStat,
	dSellHouse,
	dBuyCarSalon,
	dBuyCar,
	dBuyCarC1,
	dBuyCarC1Edit,
	dBuyCarC2,
	dBuyCarC2Edit,
	dSellCar,
	dHotelEnter,
	dHotelBuy,
	dHotelBuy2,
	dHotelRent,
	dHotelRent2,
	dHotel,
	dHotelReject,
	dHotelExtend,
	dReception,
	dActPlayerMenu,
	dActPlayerMenuMoney,
	dChangePassCode,
	dChangePassPass,
	dChangePass1,
	dChangePass2,
	dCode,
	dCodeMes,
	dCodeSet1,
	dCodeSet2,
	dCodeChange1,
	dFillingBuy,
	dFillingSell,
	dFillingInfo,
	dFillingPrice,
	dFillingPrice2,
	dFillingEquip,
	dFillingTankSize,
	dFillingTankSize2,
	dFillingPumps,
	dFillingBank,
	dFillingCheck,
	dFillingPut,
	dFillingGet,
	dFillingOrderType,
	dFillingOrderAmount,
	dFillingOrder,
 	dStore,
	dStorePut,
	dStoreGet,
	dStoreDress,
	dStoreSkin,
	dSafe,
	dSafeCode,
	dSafeCodeChange,
	dSafeCodeChange2,
	dSafeAction,
	dSafePutMoney,
	dSafeGetMoney,
	dSafePutDrug,
	dSafeGetDrug,
	dFreez,
	dBuySkin,
	dBuySkin2,
	dGrocer,
	dGrocer2,
	dGPS,
	dGPSWork,
	dGPSMain,
	dGPSAuto,
	dGPSTruck,
	dBuyFood,
	dLeaderskin,
	dMakeleader,
	dInvite,
	dInviteSkin,
	dSetRank,
	dFractionSkin,
	dAutoExam1,
	dAutoExam2,
	dAutoExam3,
	dExamType,
	dAutoTest1,
	dAutoTest2,
	dAutoTest3,
	dAutoTest4,
	dAutoTest5,
	dAirExam1,
	dAirExam2,
	dAirExam3,
	dAirExam4,
	dAirExam5,
	dAirExam6,
	dAirExam7,
	dAirExam8,
	dAirExam9,
	dAirExam10,
	dAirExam11,
	dBoatExam1,
	dExamResult,
	dHeal,
	dReport,
	dKiosk,
	dATM,
	dATMWatch,
	dATMGet,
	dShop,
	dGangLeader,
	dGangRank,
	dGangRank2,
	dGangCode,
	dSellGangCar,
	dSellGangCar2,
	dCredentials,
	dCredentials2,
	dMakeGun,
	dMakeGun2,
	dBuyGangCar,
	dATMPut,
	dCommandList,
	dCommandShow,
	dCommandMain,
	dBank,
	dBuyShop,
	dBuyShop2,
	dEnterShop,
	dSubleader,
	dSubleaders,
	dStopLoad,
	dService,
	dEmergencyCall,
	dMechRent,
	dTow,
	dUnfill,
	dGobGun,
	dGobAmmo,
	dDissolution,
	dEmergencyPolice1,
	dEmergencyMedic1,
	dEmergencyMechanic1,
	dBuyBusiness1,
	dBuyBusiness2,
	dBusiness,
	dBusinessStat,
	dBusinessBank,
	dBusinessGet,
	dBusinessPut,
	dBusinessSell,
	dBusinessOrder1,
	dBusinessOrder2,
	dBusinessPrice,
	dBusinessBuyProd1,
	dBusinessBuyProd2,
	dBusinessDelivery1,
	dBusinessDelivery2,
	dDeliveryList,
	dBints,
	dBar,
	dAdvertSend,
	dAdvertList,
	dAdvertAction,
	dAdvertEdit,
	dNewsDial,
	dPresentPhone,
	dUnemplyment,
	dDFTRent,
	dDonate,
	dDonateInfo,
	dDonateMoney1,
	dDonateMoney2,
	dDonateNickname1,
	dDonateNickname2,
	dDonateNation1,
	dDonateNation2,
	dDonateNation3,
	dDonateAge1,
	dDonateAge2,
	dPhoneConfirm1,
	dPhoneConfirm2,
	dRecolor,
	dSellZone,
	dSellZone2,
	dZaxvat,
	dMinework,
	dAnim,
	dAnimdance,
	dVibMar,
	dVibMarEdit,
	dVibMarEditC1,
	dVibMarEditC2,
	dVibMarEditC3,
	dVibGolos,
	dBizWar,
	dTeleportMenu,
	dHelpInfo,
	dHelpInfoTwo,
    dDonateNumber,
    dAPass,
    dAPassNew,
    dMobGun,
    dRadio
}

enum //Потоки mysql
{
	msqRegister
}

enum //Слоты иконок
{
	iconTaxi
}

enum //Фракции
{
	frLicenser
}

enum (<<=1)//Настройки игрока
{
	setAdminInfo=1,
	setFractionChat,
	setPlayerIDChat,
	setShowNickname
}
enum PDATA
{
	pMysqlID,
	pNickname[32],
	pPassword[32],
	pEmail[64],
	pRegIP[16],
	pRPhone[24],
	pWarn,
	pMut,
	pEConfirmed,
	pSex,
	pColor,
	pAge,
	pNation,
	pSkin,
	pFractionSkin,
	Float:pHealth,
	pHunger,
	pHouse,
	pHotel,
	pHotelRoom,
	pCar,
	pJob,
	pSalary,
	pMoney,
	pBank,
	pBusSkill,
	pTruckSkill,
	pLevel,
	pExp,
	pPhone,
	pPhoneMoney,
	pWanted,
	pJail,
	pPrison,
	pKillings,
	pDeaths,
	pDrugs,
	pAmmo,
	pGunAmount,
	pSpouse,
	pFraction,
	pSubfraction,
	pRank,
	pBusiness,
	pWatch,
	pCode[32],
	pRequestCode,
	pLanguage,
	pAdmin,
	pLicenses,
	pStatus,
	pLast[12],
	pSettings,
	pUnemployment,
	pDonate,
	pVehicleKey,
	pArmyTime,
	pArmyRank,
	pDrunk,
	pGolos,
	pZakon,
	pAdminm,
	pGiveExp,
	pPiss,
	pShit,
	pRinvitation[28],
	pAPass[20],
	pSkills[80]
}
new bool:plogin[MAX_PLAYERS];
enum PTEMP
{
	bool:pJoined,
	bool:pLogined,
	pLoginAttempt,
	bool:pChoosingSkin,
	pOldVehicleid,
	pWork, //Временная работа. Берется по найму. 0-нет, 1-водитель дозера, 2-угольщик
	pWorkSalary,
	bool:pJustTP,
	pCarInfoTimer,
	pBusID,
	pCarDriver,
	pBusRoute,
	pBusPos,
	pBusPrice,
	Text3D:pBusText,
	pBusSpawnTimer,
	Float:pBusDemage,
	pTruckID,
	pTruckWagonID,
	Text3D:pTruckWagonText,
	pTruckWagonTime,
	pTruckWeight,
	pTruckLoadID,
	pTaxiID,
	pTaxiPrice,
	pTaxiTurn[2],
	Text3D:pTaxi3DText,
	bool:pTaxiGoing,
	Float:pTaxiStart,
	pTaxiPass,
	bool:pIsInHouse,
	pSelectedHouseID,
	pSellHouseOffer,
	pSellHouseOffee,
	pSellHousePrice,
	pSellHouseID,
	pSettleHouseOffer,
	pSettleHouseOffee,
	pSettleHouseID,
	bool:pSellCarSelect,
	PlayerText:pSellCarText,
	pSellCarOffer,
	pSellCarOffee,
	pSellCarPrice,
	pSellCarID,
	pSellBusinessOffer,
	pSellBusinessOffee,
	pSellBusinessPrice,
	pSellBusinessID,
	pActPlayer,
	pAFK,
	bool:pIsAFK,
	Text3D:pAFKText,
	bool:pShowNicknames,
	PlayerText:pFillingBar[9],
	bool:pFilling,
	Float:pFillingAmount,
	Float:pFillingSpeed,
	Float:pFillingAccel,
	pFillingID,
	pFillingMark,
	pFillingPrice,
	pSellFillingOffer,
	pSellFillingOffee,
	pSellFillingPrice,
	bool:pFillGoing,
	bool:pSelectStoreGun,
	pStoreGun,
	Float:pHealth,
	bool:pChangingSkin,
	pCarryProducts,
	pEat,
	bool:pGPS,
	bool:pUseButton,
	pOfferFraction,
	pOfferFractionid,
	pTestQNumber,
	bool:pWaitingExam,
	pExamType,
	bool:pOnExam,
	pExamCandidate,
	bool:pCheat,
	Float:pX,
	Float:pY,
	Float:pZ,
	bool:pAbletoTP,
	pAbletoGun,
	bool:pAbletoHP,
	Float:pArmour,
	pOff,
	bool:pSpectating,
	pSpectator,
	pSpectatee,
	pNotReport,
	bool:pDDOS,
	pDDOS2,
	pLoginTime,
	bool:pAntiDM,
	bool:pHealing,
	pCaller,
	pCallee,
	bool:pCall,
	pIP[32],
	pDM,
	pDarkAFK,
	bool:pDead,
	bool:pInHospital,
	bool:pGangKey,
	pEnterVehicle,
	Float:pAngle,
	pKick,
	pKick2,
	pKick3,
	pGiveSalary,
	pCleoFail,
	pTakeGun,
	bool:pDetonator,
	pMechID,
	pMechOffer,
	pMechOffee,
	pMechTrailer,
	pTazer,
	pCuffer,
	pCuffee,
	pControllable,
	pWorld,
	pWorldKick,
	pKick5,
	pKick6,
	pKick7,
	pKick8,
	pCoalmanTime,
	bool:pTPhone,
	pCSkin,
	pBangam,
	pSLimit,
	bool:pEconomicLog,
	pSelectedBusinessID,
	bool:pEther,
	pAdvertTime,
	pAntiCleoWood,
	pAntiCleoWoodKick,
	bool:pRadio,
	bool:pPresentOn,
	bool:pDeliving,
	pDeliveryid,
	pDeliveryNumber,
	pDFTID,
	Float:pSpeed0,
	Float:pAcceleration,
	bool:pDialog,
	bool:pTazerGun,
	pAbleToStart,
	pWantedListIndex,
	pLastTick,
	pLastTick2,
	pGunSkill[7],
	bool:pREGISKL,
	AntiCrack,
	PlayerStoned
}

enum CPs
{
	cpUnemployment, //безработица
	cpHire, //Нанятие на работу
	cpBinco //Магаз одежды
}

enum PCUP
{
	pcupUnemploymentInfo, //Инфа по безработице
}

enum ARs
{
	arCoalman, //Работа угольщика
	arCoalLoad1,
	arCoalLoad2,
	arCoalLoad3,
	arCoalUnload1,
	arCoalUnload2,
	arCoalmanLoad1,
	arCoalmanLoad2,
	arCoalmanLoad3,
	arCoalmanUnload1,
	arCoalmanUnload2,
	arCoalCenter,
	arWood,
	arWoodLoad1,
	arWoodLoad2,
	arWoodLoad3,
	arWoodLoad4,
	arWoodLoad5,
	arWoodLoad6,
	arWoodUnload,
	arGunWork,
	arGunWorkLoad[6],
	arGunWorkWork[10],
	arGunWorkUnload,
	arTruckLoadCoal,
	arTruckWagonCoal,
	arTruckUnload,
	arTruckLoadWood,
	arTruckWagonWood,
	arSellCar[4],
	arHotelReception,
	arHotelExit,
	arHotelEnters[8],
	arHotelExits[8],
	arFill[FILLING_COUNT],
	arAutoExam,
	arAutoExamEnter,
	arAutoExamExit,
	arInstructorBarrier,
	arKiosk[3],
	arGreenZone[17],
	arGang[5],
	arGangExit,
	arDorm,
	arGangBuyCar,
	arBank,
	arHire,
	arAntiCleo,
	arAntiCleoWood,
	arBarrier[3],
	arArmyAmmo,
	arPravAmmo,
	arArrest,
	arKioskPay,
	arCristmas[10],
	arBusinessBuyProd,
	arBusinessDelivery,
	arDeliLoad[3],
	arMine,
	arMineMes[3],
	arMinesklad,
	arMinezone,
	arWoodzone,
	arHelp[3],
	arHEALT[3],
	arMafiaObsh,
	arDrugsM
}

enum VEHICLE_DATA
{
	vID,
	Float:vX,
	Float:vY,
	Float:vZ,
	Float: vA,
	bool: vCheckDelay,
	bool: vOccupied,
	bool: vSpawned,
	bool: vEngine,
	Float:vDrived,
	Float:vFuel,
	Float:vHealth,
	vDemages[4],
	vTuning[14],
	vPJ,
	vLock,
	vOwnerid,
	vArea,
	vProbability,
	vColor[2]
}

enum TRANSPORT_DATA
{
	trID,
	trModel,
	trName[35],
	trPrice,
	trTank,
	trConsumption,
	trClass,
	trFuelable,
	trSellable,
	trFuelMark
}

enum CREATE_HOUSE_DATA
{
	chouseHint,
	chousePrice
}

enum HOUSE_DATA
{
	houseID,
	houseClass,
	houseApartmentCount,
	housePrice,
	houseHint,
	houseImprove[5],
	houseGun[9],
	houseSkin[4],
	houseSafeCode,
	houseSafeMoney,
	houseDrugs,
	houseProducts,
	houseClose,
	Float:houseX,
	Float:houseY,
	Float:houseZ,
	Float:houseR,
	Float:houseParkX,
	Float:houseParkY,
	Float:houseParkZ,
	Float:houseParkR,
	houseOwnerID,
	houseOwner[MAX_PLAYER_NAME],
	houseHabitID[3]
}

enum HINT_DATA
{
	hintID,
	Float:hintX,
	Float:hintY,
	Float:hintZ,
	Float:hintR,
	Float:hintSX,
	Float:hintSY,
	Float:hintSZ,
	Float:hintSR,
	hintInterior,
	hintDescription[55]
}

enum CAR_DATA
{
	carMysqlID,
	carOwnerid,
	carModelid,
	carPlate[12],
	Float:carFuel,
	Float:carDrived,
	Float:carHealth,
	carColor1,
	carColor2,
	carProbability,
	carDemages[4],
	carTuning[14],
	carVid,
	carX,
	carY,
	carZ,
	carRA
}

enum FILLING_DATA
{
	fillMysqlID,
	fillOwnerID,
	fillOwner[MAX_PLAYER_NAME],
	fillPrice,
	fillBank,
	bool:fillWorking,
	fillPumps,
	fillTanks[5],
	fillFuel[5],
	fillFuelPrice[5]
}

enum HOTEL_DATA
{
	hotelMysqlID,
	hotelOwnerid,
	hotelOwner[MAX_PLAYER_NAME],
	hotelPrice
}

enum VGUN_DATA
{
	vGunVid,
	vGunArea,
	vGunGunAmount,
	vGunAmmo,
	Text3D:vGunText,
	bool:vGunLoading,
	bool:vGunUnloading,
	vGunPickup
}

enum BINT_DATA
{
	bintID,
	bintInterior,
	Float:bintX,
	Float:bintY,
	Float:bintZ,
	Float:bintR,
	Float:bintXB,
	Float:bintYB,
	Float:bintZB,
	bintName[32]
}

enum ADVERT_DATA
{
	adSender[24],
	adCheker[24],
	adPhone,
	adText[100],
	adTime,
	adMoney,
	bool:adCheked,
	bool:adBusy,
	bool:adCheking
}

enum BUSINESS_DATA
{
	busiID,
	busiName[64],
	busiType, //1-прод магаз, 2-закусн, 3 - 24/7, 4-бар, 5-клуб, 6-спортзал
	busiBint,
	busiOwnerID,
	busiSellPrice,
	busiBank,
	busiPrice,
	busiProduct,
	busiStatus,
	Float:busiX,
	Float:busiY,
	Float:busiZ,
	Float:busiR,
	busiOrder,
	busiDeliving,
	busiMafia,
	busiDelivingArea
}

enum CALL_DATA
{
	g_caller,
	g_callee
}

enum DELIVERY_DATA
{
	deliBusinessid,
	deliCustomer[MAX_PLAYER_NAME],
	deliPerformerid[6],
	deliPrice,
	deliCount,
	deliPerforming,
	deliProduct[6],
	bool:deliBusy
}

enum TRAY_DATA
{
	trayEat,
	trayAreaID,
	trayPickupID,
	trayTimerID
}

forward OnPlayerJoin(playerid);
forward AnimationDelay(playerid,id);
forward WoodLoaded(playerid);
forward AbleToSelectCar(playerid);
forward GunReady(playerid);
forward MainTimer();
forward MainTimer2();
forward CarShotTimer();
forward BusStop(playerid);
forward BusSpawn(playerid);
forward BusSpawnEx(playerid);
forward UpdateCarInfo(playerid,const vehicleid,speedonly);
forward FuelTmier();
forward PlayerPlaySoundDelay(playerid,soundid);
forward PayDay();
forward MinuteTimer();
forward ReplayChurchTimer(playerid);
forward RegistrTimer(playerid);
forward OnPlayerAmmoChange(playerid, newammo, oldammo);

/* Выборы */
new Kandidat1[50] = "Нет кандидата";
new Kandidat2[50] = "Нет кандидата";
new Kandidat3[50] = "Нет кандидата";
new KandidatsGolosa[3], Text3D:gVibMarKan[2],Text3D:gVibMarKantwo[2];
new bool:StartVibori = false, svt = 0;
/* Выборы */
new Timer_Drugs[MAX_PLAYERS];
// Закусочные
new Text:gEateryTextDraw[10];
new PlayerText:gEateryCostTextDraw[MAX_PLAYERS][4];
new gEateryCosts[] = {2, 3, 4, 1};
new gEateryObj[] = {2215, 2354, 2220, 1546};
new gEateryNames[][] = {{"Burger"}, {"Salad"}, {"Pizza"}, {"Sprunk"}};

// Бары
new Text:gBarTextDraw[12];
new PlayerText:gBarCostTextDraw[MAX_PLAYERS][5];
new gBarCosts[] = {1, 2, 3, 4, 1};
new gBarObj[] = {1950, 1668, 1520, 1669, 2769};
new gBarNames[][] = {{"Beer"}, {"Vodka"}, {"Brandy"}, {"Wine"}, {"Shawarma"}};

new pData[MAX_PLAYERS][PDATA];
new pTemp[MAX_PLAYERS][PTEMP];
new pRegData[MAX_PLAYERS][7][64];
new Float: registration_miniatures[18][2][6] = {
 {
 {1712.207397, -2286.547851, 22.633438, 1710.341064, -2286.507568, 1.266306},
 {1707.208007, -2286.517089, 22.707973, 1705.368896, -2286.477050, 0.740258}
 },
 {
 {1627.109252, -755.498107, 154.925125, 1606.737670, -801.589477, 146.594619},
 {1628.883666, -760.084960, 154.023834, 1608.339843, -806.172546, 145.399276}
 },
 {
 {1361.059082, -882.859191, 84.104949, 1426.897094, -878.882202, 84.104949},
 {1360.757812, -877.870849, 84.265075, 1426.595825, -873.893859, 84.265075}
 },
 {
 {-296.287048, -1595.629394, 25.176271, -266.253387, -1622.165039, 25.176271},
 {-292.924499, -1591.932739, 25.008335, -262.970672, -1618.393676, 25.196121}
 },
 {
 {1626.224487, -1439.455688, 55.927925, 1488.745483, -1432.269165, 148.606231},
 {1624.134033, -1436.580566, 59.444068, 1490.854736, -1429.431762, 152.141769}
 },
 {
 {2916.498535, -1628.880249, 18.703788, 2938.121093, -1574.233520, 21.476581},
 {2915.629394, -1623.957519, 18.809249, 2936.547363, -1569.523193, 20.896181}
 },
 {
 {2112.072021, 1260.443847, 37.979156, 2119.436767, 1180.082397, 109.110282},
 {2116.451660, 1262.470825, 36.671531, 2122.804199, 1183.121826, 107.007164}
 },
 {
 {2213.008544, 1887.846069, 35.766742, 2121.373046, 1766.163085, 26.290328},
 {2217.265625, 1885.233154, 35.540576, 2125.559326, 1768.879882, 25.982250}
 },
 {
 {2169.038818, 954.359375, 157.635604, 2066.023681, 922.612487, 167.732192},
 {2169.012939, 959.307800, 156.919647, 2063.517333, 926.352722, 165.557647}
 },
 {
 {1724.389404, 390.285888, 59.728694, 1762.666381, 511.557708, 47.103473},
 {1724.116699, 395.251037, 59.206214, 1761.723876, 516.427368, 46.472351}
 },
 {
 {928.612792, 2626.731445, 26.005752, 961.734985, 2566.655761, 11.089242},
 {931.983459, 2623.050292, 26.302455, 965.996093, 2564.410888, 12.432239}
 },
 {
 {-49.069660, 2176.562988, 147.759994, -47.282554, 2005.574951, 180.394912},
 {-53.151138, 2179.437500, 147.479217, -52.219066, 2005.609375, 179.601409}
 },
 {
 {-1936.008544, 2016.041015, 79.002693, -2069.614257, 2137.992919, 78.872596},
 {-1935.872802, 2021.036254, 78.831169, -2068.558593, 2142.871337, 79.165718}
 },
 {
 {-2681.882568, 2559.457275, 96.862686, -2678.370849, 2449.347656, 84.525177},
 {-2677.403320, 2561.678710, 96.824836, -2674.033691, 2447.715576, 82.647781}
 },
 {
 {-2500.986328, 2066.782226, 13.977483, -2553.708740, 1782.968139, 5.930901},
 {-2503.990966, 2063.195312, 15.739585, -2555.907714, 1778.785278, 7.564413}
 },
 {
 {-2975.291259, 1215.493896, 45.357460, -2984.165527, 1117.990966, 78.488029},
 {-2971.692626, 1212.044677, 44.967548, -2980.832763, 1114.427368, 77.395668}
 },
 {
 {-2139.581054, 962.821228, 225.942672, -1984.992309, 708.513122, 193.720321},
 {-2135.511962, 960.069152, 225.010971, -1980.623535, 710.925781, 193.415817}
 },
 {
 {-1890.458496, -653.781555, 81.883850, -1890.880859, -847.303466, 74.221061},
 {-1892.749877, -658.203002, 81.436439, -1893.033935, -851.814392, 74.347259}
 }
};
new ChangeSkin[MAX_PLAYERS];
new Float:spawnRegistr[][4] = {
 {1694.0051,-1925.0061,13.5545,359.9042},
 {1205.4764,-1745.4001,13.5926,35.5795},
 {1776.0211,-1665.8920,14.4306,129.7107}
};
new randomspawn[MAX_PLAYERS];
new mNationalitySkin[10][12] = { // Мужские скины при регистрации
 {0, 0, 0},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200},
 {137, 134, 135, 181, 213, 212, 230, 239, 78, 79, 160, 200}
};
new wNationalitySkin[10][9] = {// Женские скины при регистрации
 {0, 0, 0},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198},
 {77, 13, 31, 39, 75, 77, 89, 197, 198}
};
new TrayData[1000][TRAY_DATA];
new gCheckpoints[CPs];
new gPickups[PCUP];
//***********************Скиллы для оружия*********************************
new iPlayerAmmo[MAX_PLAYERS];
new iNewPlayerAmmo[MAX_PLAYERS];
// Оружие - Кол-во патронов для 1%
#define Ammo_SDPISTOL           12
#define Ammo_DEAGLE             14
#define Ammo_SHOTGUN            8
#define Ammo_MP5                25
#define Ammo_AK47               30
#define Ammo_M4A1				30
//античит
new bool: gmadmin[MAX_PLAYERS];
new nationtext[MAX_PLAYERS][35];
new gAreas[ARs];
new gGuns[MAX_PLAYERS][13];
new gAmmos[MAX_PLAYERS][13];
new Float:gCoalManCPs[5][3] = {
	{614.0045,836.6118,-43.1024},
	{667.2912,929.2957,-40.5896},
	{685.1305,893.3502,-39.6231},
	{540.5689,840.7064,-32.8537},
	{562.1944,899.3883,-33.0537}
};
new gTimetable[3][2] = {
	{15,17},
	{25,18},
	{26,21}
	};
new Float:gWoodCPs[5][3] = {
	{-1932.6278,-2361.3521,30.9381},
	{-1931.2490,-2347.6594,32.8258},
	{-1914.0302,-2342.1960,34.0585},
	{-1889.8831,-2309.4946,45.3760},
	{-1965.6868,-2368.5894,30.6868}//разгрузка
};
new gCoalWH; //Склады угольной шахты
new gWoodWH; // Склад лесопилки
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washinon","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer" };
new Float:gGunWorkCPs[17][3] = {
	{2559.2253,-1300.0222,1044.1250},//0 Load
	{2551.1055,-1299.8928,1044.1250},//1
	{2543.1436,-1300.0195,1044.1250},//2
	{2543.0417,-1287.2638,1044.1250},//3
	{2551.1731,-1287.2742,1044.1250},//4
	{2559.0825,-1287.2739,1044.1250},//5
	{2558.5391,-1295.8527,1044.1250},//6 Work
	{2556.2336,-1295.8497,1044.1250},//7
	{2553.8550,-1295.8499,1044.1250},//8
	{2544.5049,-1295.8514,1044.1250},//9
	{2542.0510,-1295.8514,1044.1250},//10
	{2541.9375,-1291.0050,1044.1250},//11
	{2544.2910,-1291.0046,1044.1250},//12
	{2553.7991,-1291.0055,1044.1250},//13
	{2556.1155,-1291.0033,1044.1250},//14
	{2558.5779,-1291.0020,1044.1250},//15
	{2564.0759,-1292.8741,1044.1250}//16 Unload
};
new Float:gGunWorkTables[10][3] = {
	{2558.4794,-1295.1074,1044.1171},
	{2556.1500,-1295.1074,1044.1171},
	{2553.8300,-1295.1074,1044.1171},
	{2544.3100,-1295.1074,1044.1171},
	{2541.9200,-1295.1074,1044.1171},
	{2541.9200,-1291.9100,1044.1171},
	{2544.2800,-1291.9100,1044.1171},
	{2553.7900,-1291.9100,1044.1171},
	{2556.2400,-1291.9100,1044.1171},
	{2558.3500,-1291.9100,1044.1171}
};
new bool:gGunWorkTableStat[10];
new Fallen[MAX_PLAYERS];
new gGunWorkWeapon[6] = {348,353,355,356,346,349};
new gGunWorkWH[3]; //Склад оружейного цеха. 0-уголь, 1-дерево, 2-оружие
new gGunWorkTime[6];
new Float:gBusCPs[BUS_ROUTE_COUNT][100][3] =
{
	{ //ЖДСЛ - лесопилка
		{1171.3759766,-1759.1259766,12.5930004},//0 остановка
		{1171.3759766,-1759.1259766,12.5930004},//0 остановка
		{1243.0322266,-1854.5859375,12.5769997},//1
		{1650.3994141,-1875.5439453,12.5769997},//2 остановка
		{1650.3994141,-1875.5439453,12.5769997},//2 остановка
		{1718.5097656,-1734.9843750,12.5769997},//3
		{1752.8847656,-1677.2109375,12.5769997},//4 остановка
		{1752.8847656,-1677.2109375,12.5769997},//4 остановка
		{1614.3339844,-1589.5888672,12.7410002},//5
		{1426.1357422,-1673.8837891,12.5769997},//6 остановка
		{1426.1357422,-1673.8837891,12.5769997},//6 остановка
		{1386.4765625,-1801.8115234,12.5769997},//7
		{1075.0820312,-1849.7451172,12.5860004},//8
		{649.8330078,-1730.9658203,12.9750004},//9 остановка
		{649.8330078,-1730.9658203,12.9750004},//9 остановка
		{-109.9599609,-1166.6406250,1.8890001},//10 остановка
		{-109.9599609,-1166.6406250,1.8890001},//10 остановка
		{-283.7851562,-876.2734375,45.3510017},//11
		{-572.2646484,-1130.7001953,21.7870007},//12 остановка
		{-572.2646484,-1130.7001953,21.7870007},//12 остановка
		{-715.6562500,-1574.6513672,54.5169983},//13
		{-763.0673828,-1511.6982422,90.5609970},//14
		{-839.4726562,-1820.7880859,91.0960007},//15
		{-978.7041016,-1923.0585938,79.5979996},//16
		{-698.4833984,-2304.0683594,25.6499996},//17
		{-246.5625000,-1721.5634766,2.3090000},//18
		{-47.6552734,-1597.0302734,2.1020000},//19 остановка
		{-47.6552734,-1597.0302734,2.1020000},//19 остановка
		{188.6074219,-1629.9716797,13.6040001},//20
		{994.8056641,-1806.8291016,13.2430000},//21
		{1040.0009766,-1730.8154297,12.5769997},//22
		{1156.3242188,-1714.5839844,12.9759998},//23
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{ //ЖДСЛ - оружейный завод
		{1131.6937,-1742.4172,13.5317},//0
		{1173.3121,-1791.9070,13.5282},//1
		{1173.3269,-1848.7207,13.5324},//2
		{1306.7443,-1854.8820,13.5177},//3
		{1404.7411,-1874.6678,13.5163},//4
		{1648.1837,-1874.6202,13.5162},//5
		{1691.0266,-1818.8828,13.5191},//6
		{1813.4473,-1834.4799,13.5352},//7
		{1819.1641,-1875.4191,13.5343},//8
		{1804.4037,-1900.1384,13.5359},//9
		{1776.8835,-1917.5454,13.5204},//10
		{1776.8835,-1917.5454,13.5204},//11
		{1824.1866,-1872.9843,13.4757},//10
		{1799.1299,-1830.3486,13.5273},//11
		{1687.6433,-1829.1594,13.5162},//12
		{1631.9301,-1870.0249,13.5162},//13
		{1255.3687,-1850.2406,13.5171},//14
		{1097.5032,-1850.5048,13.5163},//15
		{983.9984,-1783.7482,14.2181},//16
		{674.1277,-1738.7640,13.5736},//17
		{283.4337,-1687.5043,7.7614},//18
		{131.5590,-1543.8154,8.8112},//19
		{-34.1399,-1512.7164,1.9560},//20
		{-145.9976,-1408.4440,2.8263},//21
		{-86.2150,-1112.2297,1.8690},//22
		{-168.0573,-948.1825,31.2957},//23
		{-286.3436,-808.5291,39.5799},//24
		{-360.2516,-737.8823,27.0220},//25
		{-397.5689,-543.0386,17.2644},//26
		{-547.7802,-389.9130,19.7874},//27
		{-864.5998,-456.5193,22.0437},//28
		{-1050.8396,-451.0550,35.6948},//29
		{-1050.8396,-451.0550,35.6948},//30
		{-1159.2014,-605.3624,37.1466},//31
		{-1217.8783,-751.8084,62.3498},//32
		{-1203.7816,-797.4733,64.7800},//33
		{-966.7754,-1041.8990,96.1255},//34
		{-900.4839,-1110.0897,98.8381},//35
		{-873.4835,-1089.6007,95.7238},//36
		{-726.4489,-1011.1463,75.1913},//37
		{-522.1794,-901.1967,55.4786},//38
		{-313.8239,-870.6406,47.0010},//39
		{-115.5873,-1000.1309,25.0101},//40
		{-104.9197,-1137.6686,1.3312},//41
		{-148.4158,-1419.6478,2.8303},//42
		{76.4783,-1545.1709,5.5131},//43
		{218.1639,-1664.9927,12.1952},//44
		{545.1073,-1735.3584,12.5760},//45
		{847.8002,-1786.5859,13.9122},//46
		{1043.2645,-1843.5508,13.5531},//47
		{1146.7556,-1854.9352,13.5222},//48
		{1283.8656,-1854.6372,13.5231},//49
		{1597.4392,-1874.6737,13.5161},//50
		{1712.4161,-1814.3204,13.4923},//51
		{1802.6058,-1833.3998,13.5244},//52
		{1820.1040,-1875.5990,13.5292},//53
		{1805.2075,-1912.1371,13.5338},//54
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{//ЖДЛС - Автошкола
		{1131.6937,-1742.4172,13.5317},//0
		{1173.3121,-1791.9070,13.5282},//1
		{1173.3269,-1848.7207,13.5324},//2
		{1306.7443,-1854.8820,13.5177},//3
		{1404.7411,-1874.6678,13.5163},//4
		{1648.1837,-1874.6202,13.5162},//5
		{1691.0266,-1818.8828,13.5191},//6
		{1813.4473,-1834.4799,13.5352},//7
		{1819.1641,-1875.4191,13.5343},//8
		{1804.4037,-1900.1384,13.5359},//9
		{1776.8835,-1917.5454,13.5204},//10
		{1776.8835,-1917.5454,13.5204},//11
		{1824.5092,-1875.6442,13.4725},//12
		{1824.4292,-1844.7772,13.5477},//13
		{1786.8104,-1827.8817,13.5120},//14
		{1687.6339,-1833.2113,13.5150},//15
		{1629.6763,-1869.7384,13.5158},//16
		{1408.0500,-1870.9196,13.5156},//17
		{1290.8760,-1850.3226,13.5164},//18
		{1102.5580,-1850.5492,13.5160},//19
		{1025.4644,-1796.4596,13.8555},//20
		{801.5259,-1766.4734,13.5483},//21
		{566.8671,-1718.1715,13.4022},//22
		{218.9709,-1638.3136,13.5778},//23
		{73.4190,-1524.8407,4.9931},//24
		{-125.6969,-1459.0708,2.8277},//25
		{-105.9540,-1157.3511,2.1591},//26
		{-105.4920,-1005.5072,24.3600},//27
		{-309.9851,-865.2658,46.9717},//28
		{-545.8192,-917.2550,57.4773},//29
		{-769.0962,-1002.0508,78.4602},//30
		{-881.1339,-1099.9788,97.6252},//31
		{-932.7646,-1070.2572,97.3788},//32
		{-1200.0577,-796.2583,64.8213},//33
		{-1240.6469,-776.1431,65.0108},//34
		{-1463.4351,-817.2104,71.9738},//35
		{-1740.5602,-720.1701,31.1961},//36
		{-1758.9797,-601.6389,16.3195},//37
		{-1787.1749,-579.0481,16.4430},//38
		{-1906.6909,-577.1236,24.6042},//39
		{-2015.8440,-576.5693,26.2723},//40
		{-2210.1155,-431.7657,50.9900},//41
		{-2252.5698,-232.8449,37.0954},//42
		{-2252.2341,-100.3800,35.3058},//43
		{-2158.1233,-72.1908,35.3097},//44
		{-2028.2584,-76.2963,35.4051},//45
		{-2028.2584,-76.2963,35.4051},//46
		{-1977.1454,-68.9980,28.7555},//47
		{-1887.0151,-109.2616,15.7941},//48
		{-1812.5629,-118.3803,5.6365},//49
		{-1801.2019,-210.8979,16.7970},//50
		{-1815.5803,-404.3306,16.1351},//51
		{-1821.1084,-563.9122,16.4075},//52
		{-1762.6345,-630.3921,17.7684},//53
		{-1700.2131,-756.2874,39.2362},//54
		{-1448.0122,-822.0989,75.5782},//55
		{-1244.7124,-783.8795,65.9552},//56
		{-1197.5762,-804.8977,65.0686},//57
		{-903.1201,-1108.2261,98.7553},//58
		{-872.8832,-1090.0394,95.7685},//59
		{-731.3338,-1010.9177,75.5417},//60
		{-518.8483,-897.1149,55.1161},//61
		{-328.3625,-864.4269,47.0247},//62
		{-102.4974,-1020.4588,24.1352},//63
		{-115.5831,-1161.6022,2.4877},//64
		{-155.7699,-1372.0577,2.8285},//65
		{-15.9004,-1522.7335,2.0214},//66
		{108.7094,-1552.7545,7.4183},//67
		{224.5935,-1670.5791,11.5457},//68
		{511.2748,-1730.1514,11.8978},//69
		{833.1093,-1784.4053,13.8517},//70
		{1032.6375,-1824.5038,13.8164},//71
		{1104.4901,-1854.4147,13.5333},//72
		{1307.9877,-1854.8677,13.5157},//73
		{1453.7366,-1874.4672,13.5227},//74
		{1638.1515,-1874.6606,13.5163},//75
		{1690.0352,-1827.1766,13.5177},//76
		{1730.0687,-1817.8905,13.4977},//77
		{1818.1184,-1840.3235,13.5474},//78
		{1819.0674,-1871.8085,13.5412},//79
		{1803.6918,-1908.9597,13.5315},//80
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{//ЖДСФ - шахта
		{1171.3759766,-1759.1259766,12.5930004},//0 остановка
		{1171.3759766,-1759.1259766,12.5930004},//0 остановка
		{1243.0322266,-1854.5859375,12.5769997},//1
		{1650.3994141,-1875.5439453,12.5769997},//2 остановка
		{1650.3994141,-1875.5439453,12.5769997},//2 остановка
		{1718.5097656,-1734.9843750,12.5769997},//3
		{1752.8847656,-1677.2109375,12.5769997},//4 остановка
		{1752.8847656,-1677.2109375,12.5769997},//4 остановка
		{1807.8291016,-1614.2832031,12.5431547},//5
		{1854.9079590,-1394.7840576,12.5850000},//6 остановка
		{1854.9079590,-1394.7840576,12.5850000},//6 остановка
		{1728.8800049,-1158.4709473,22.8360004},//7
		{1438.5040283,-1157.0250244,22.8509998},//8 остановка
		{1438.5040283,-1157.0250244,22.8509998},//8 остановка
		{1176.4279785,-1140.1190186,22.8710003},//9
		{1161.6679688,-921.2479858,42.0960007},//10 остановка
		{1161.6679688,-921.2479858,42.0960007},//10 остановка
		{1237.2230225,-415.1640015,2.8399999},//11
		{1004.2969971,-464.1960144,49.7869987},//12 остановка
		{1004.2969971,-464.1960144,49.7869987},//12 остановка
		{692.0460205,-527.5300293,15.3800001},//13
		{702.4890137,-862.2299805,42.4599991},//14
		{793.5579834,-1348.7840576,12.5769997},//15 остановка
		{793.5579834,-1348.7840576,12.5769997},//15 остановка
		{1035.0610352,-1548.0970459,12.5459995},//16 остановка
		{1035.0610352,-1548.0970459,12.5459995},//16 остановка
		{1162.1729736,-1714.8420410,12.9720001},//17
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{
		{-1989.6447,135.8273,27.6389},//0
		{-1989.6447,135.8273,27.6389},//1
		{-2009.4280,191.4415,27.6484},//2
		{-2009.4738,-9.0582,34.5845},//3
		{-1967.9578,-67.2739,26.3508},//4
		{-1882.6395,-112.6503,14.1967},//5
		{-1823.0339,-117.3354,5.5976},//6
		{-1801.4111,-159.4221,8.4275},//7
		{-1809.2880,-360.0031,19.7812},//8
		{-1824.9359,-531.3138,15.1566},//9
		{-1791.8075,-583.9956,16.3563},//10
		{-1763.9237,-629.0577,17.6288},//11
		{-1694.5961,-759.0417,39.8741},//12
		{-1403.3204,-819.9911,81.5658},//13
		{-1216.8079,-759.0780,62.9292},//14
		{-1154.5942,-606.0016,36.9103},//15
		{-1059.6494,-466.3908,34.9195},//16
		{-1059.6494,-466.3908,34.9195},//17
		{-1015.6788,-445.4153,36.3570},//18
		{-766.3979,-447.9368,16.4441},//19
		{-536.4657,-395.9972,18.7194},//20
		{-415.9517,-469.1754,18.6366},//21
		{-412.6799,-566.4797,14.0098},//22
		{-364.6128,-742.1336,27.2463},//23
		{-290.8961,-849.7155,45.8105},//24
		{-371.3086,-838.6815,47.2801},//25
		{-539.1481,-911.4272,56.7892},//26
		{-757.2288,-1002.4233,77.4880},//27
		{-875.5118,-1081.5959,94.7733},//28
		{-952.6277,-1048.0348,96.4827},//29
		{-1199.5753,-794.7943,64.7719},//30
		{-1294.9617,-802.4603,71.1355},//31
		{-1489.1173,-817.3900,65.1526},//32
		{-1758.4807,-620.0112,16.9693},//33
		{-1790.7917,-576.3046,16.3660},//34
		{-1821.8558,-526.0298,15.0545},//35
		{-1799.6505,-323.0317,24.4493},//36
		{-1797.3956,-151.1786,7.3109},//37
		{-1842.8853,-114.6310,5.5922},//38
		{-1980.1787,-65.8985,29.8867},//39
		{-2004.5010,-40.2464,35.2499},//40
		{-2004.0121,61.1921,29.7524},//41
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	}
};
new gBusSalary[BUS_ROUTE_COUNT] = {740,400,590,350,290};
new gBusAward[3] = {0,100,200}; //Премия по каждому уровню за рейс
new gTruckLoadTurn[2][10];
new gTruckLoadPrice[2] = {1000,1000};
new gTruckUnloadPrice[2] = {110,110}; //За 1 центнер (100 кг)
new Text3D:gTruckLoadTurnText[2];
new Text3D:gCoalWHText;
new Text3D:gCoalWHText2;
new Text3D:gWoodWHText;
//new Text3D:gEconomicText[3];
new gJobNames[5][32] = {"Bus driver","Trucker","Taxi","Mechanic","Transport goods"};
new Text:gHungerText1;
new Text:gHungerText2;
new Text:LOGOTEXT[3];
new bool:gGeneralChat;
new gCurHour;
new gCurDay;
new gBarrier[8];
new armgate[2];
new gBarrierButton[7];
new gSettingName[SETTINGS_COUNT][64]={
"Показывать информацию о действиях администрации",
"Показывать чат фракции",
"Показывать ID игроков в чате",
"Показывать ники игроков"
};
new gVehicleDriver[MAX_VEHICLES];
new gVehicles[MAX_VEHICLES][VEHICLE_DATA];
new gTransport[220][TRANSPORT_DATA];
new gVehicleGun[MAX_VEHICLES][VGUN_DATA];
new gCalls[MAX_PLAYERS][CALL_DATA];
new gGangRespawnCar;
//захват бизнесов
#define F_YAK 15
#define F_LCN 16
#define F_RM 17
new Text:CaptTimeM;
new Text:BandaCapt1aM;
new Text:BandaCapt2aM;
new Text:ScoreCapt1aM;
new Text:ScoreCapt2aM;
new Text:Textdraw4M;
new Text:ScoreCaptM;
new TOTALBIZZ;
enum pMafia
{
	pOffMafia,
	pOffMafiaid,
 	Float:hX,
	Float:hY,
	Float:hZ
};
new pMafias[MAX_PLAYERS][pMafia];
enum Ganginfa1
{
	capture,
	score,
	captureid,
	gangnumber
}
new GangInfoD[20][Ganginfa1];
new PokasGZ;
new MafiaNapad = 0;
new MafiaID = 0;
new IsStrela = 0;
new gNapadMafia = 0;
new	gSecury = 0;
new GZSafeTimeM[100];
new ZoneOnBattleM[100];
//new Terra[3];
//================================


enum GZINFO
{
 	idm,
 	Float:gCoords[4],
 	gFrak,
 	gNapad
}

new zGangTime[8];
new TotalGz[5];
new Text:CaptTime;
new Text:BandaCapt1a;
new Text:BandaCapt2a;
new Text:ScoreCapt1a;
new Text:ScoreCapt2a;
new Text:Textdraw4;
new Text:ScoreCapt;
#define MAX_GZONE 134
new ZoneOnBattle[MAX_GZONE];
new allowedfactions[] = { 3, 4, 5, 6, 7};
new GZSafeTime[MAX_GZONE];
new FrakCD[20];
new GZMZ[134][GZINFO];

#define F_BALLAS 3
#define F_GROVE  4
#define F_AZTEC  5
#define F_VAGOS  6
#define F_RIFA   7
#define TABLE_GANGZONE      "gangzone"
new TOTALGZ;
#define MAX_GANGS 20
enum Ganginfa
{
	capture,
	score,
	captureid,
	gangnumber
}

new GangInfo[MAX_GANGS][Ganginfa];
new IsCapture;
//===============
new PlayerText: PTD_adminSpec[MAX_PLAYERS][19];
//нужда
new idtolk[MAX_PLAYERS] = -1;
new prtl[TUALET_COUNT] = 0;
new Float:gToilet[TUALET_COUNT][1][3] =
{
	{
	    {2422.1520996,-1680.4610596,14.72500038147}
	},
	{
	    {2092.4541016,-1830.2609863,13.751999855042}
	},
 	{
 		{1701.6269531,-1870.4350586,13.763999938965}
	},
	{
	    {1414.1379395,-1719.8609619,13.741000175476}
	},
	{
	    {1144.2960205,-1761.9530029,13.848999977112}
	},
	{
	    {358.7409973,-1814.6390381,4.576000213623}
	},
	{
	    {-1104.1090088,-1642.2840576,76.561996459961}
	},
	{
	    {1047.9830322,-348.4460144,74.186996459961}
	},
 	{
	    {2387.7089844,2426.3630371,11.015000343323}
	},
 	{
	    {187.2359924,1925.9389648,17.905000686646}
	},
	{
	    {375.2070007,2475.5449219,16.679000854492}
	},
	{
	    {-1958.8299561,130.9579926,27.881999969482}
	},
	{
	    {-2101.1369629,-59.1969986,35.514999389648}
	}
};
new gToiletAreas[TUALET_COUNT][2];
//Телепорты
new Float:gTeleports[TELEPORTS_COUNT][2][4] =
{
	{ //Цех оружия
		{-1006.6297,-696.1597,32.0078,6.6875},
		{2576.8445,-1289.9153,1044.1250,86.4804}
	},
	{ //Бинко 1
		{9999.4844,-9999.1630,9999.4766,340.3020},
		{9999.9999,-9999.7655,9999.1328,354.6664}
	},
	{ //Инструкторы
		{-2026.4766,-102.0611,35.1641,0.0},
		{1211.5564,-43.6057,999.2265,0.0}
	},
	{ //Инструкторы 2
		{-2029.8129,-120.7440,35.1719,180.0},
		{1208.2450,-54.3535,999.2265,0.0}
	},
	{// Больница LS
		{1172.5408,-1325.2740,15.4040,270.0},
		{639.4489,793.7760,1001.4300}
	},
	{// Больница SF
		{-2655.1638,639.8657,14.4545,180.0},
		{639.4489,793.7760,1001.4300}
	},
	{// Больница LV
		{1583.5775,1769.1208,10.8203,90.0},
		{639.4489,793.7760,1001.4300}
	},
	{//Банк
		{1465.1885,-1010.4507,26.8438,180.0},
		{2305.2551,-16.2031,26.7422,270.0}
	},
	{//Мэрия лс
		{1481.1162,-1771.7369,18.7958,0.0},
		{-1835.7989501953,-307.30801391602,1036.2030029297}
	},
	{//ВСН
		{294.8133,1830.4604,17.9847,270.0},
		{279.0079,1833.1412,18.0874,0.0}
	},
	{//ВСН
		{117.4917,1934.0159,19.3108,90.0},
		{124.2144,1949.3051,19.6839,270.0}
	},
	{//ВСН казарма
		{177.1358,1843.3234,17.6406,0.7950},
		{411.1801, 2524.2222, 1123.0859,270.0}
	},
	{//ВСН аммо
		{374.7510,1975.3538,24.9156,0.0},
		{316.3444,-170.2945,999.5938,0.0}
	},
	{//ВСН подвал
		{438.5303, 2534.2466, 1123.0859,180.0},
		{426.7054, 2546.1177, 5.1375,90.0}
	},
	{//ВВС казарма
		{410.1789, 2546.0964, 16.4263,90.0},
		{411.1801, 2524.2222, 1123.0859,270.0}
	},
	{//ВВС аммо
		{242.1775,2434.6218,17.0449,270.0},
		{316.3444,-170.2945,999.5938,0.0}
	},
	{//ВВС подвал
		{438.5303, 2534.2466, 1123.0859,180.0},
		{426.7054, 2546.1177, 5.1375,90.0}
	},
	{//LSPD_1
		{1555.3967,-1675.4686,16.1953,90.0},
		{528.8380,-336.5406,1005.2712,90.0}
	},
	{//LSPD_Ammo
		{1524.5883,-1677.8153,6.2188,270.0},
		{316.3444,-170.2945,999.5938,0.0}
	},
	{//SFPD_1
		{-1605.3414,710.7410,13.8672,0.0},
		{528.8380,-336.5406,1005.2712,90.0}
	},
	{//SFPD_Ammo
		{-1606.1926,672.1654,-4.9063,0.0},
		{316.3444,-170.2945,999.5938,0.0}
	},
	{//LVPD_1
		{2286.9355,2432.2620,10.8203,180.0},
		{528.8380,-336.5406,1005.2712,90.0}
	},
	{//LVPD_Ammo
		{2297.0117,2468.6592,10.8203,90.0},
		{316.3444,-170.2945,999.5938,0.0}
	},
	{//News Network
		{-1806.6555,530.8445,35.1668,0.0},
		{-1742.8442,2589.8965,62.6659,0.0}
	},
	{//Шахта раздевалка
		{816.6460,856.6961,12.7891,9.7877},
		{645.2433,1608.9659,-4.1041,359.3026}
	},
	{//Церковь
		{-1989.0279541016, 1117.9389648438, 54.4717, 270.0},
		{-1991.126953125, 1117.9460449219, 54.5319, 90.0}
	},
    {//правительство
		{952.5091,-910.0012,45.7656,188.0764},
		{-1835.7989501953,-307.30801391602,1036.2030029297}
	},
	{//мэрия сф
		{-2765.4866,375.5078,6.3359,270.5049},
		{-1835.7989501953,-307.30801391602,1036.2030029297}
	},
	{//мэрия лв
		{2388.4753,2466.0361,10.8203,91.4717},
		{-1835.7989501953,-307.30801391602,1036.2030029297}
	},
	{//RM
	    {937.4295,1733.2169,8.8516},
	    {-2603.2954,-232.2728,1055.3970}
	},
	{//лкн
	    {1456.3574,2773.3640,10.8203},
	    {-2603.2954,-232.2728,1055.3970}
	},
	{//якудза
	    {2634.6487,1824.1573,11.0161},
	    {-2603.2954,-232.2728,1055.3970}
	},
	{
	    {2166.0068,-1671.3362,15.0734},
	    {318.6952,1114.5037,1083.8828}
	}
};
new gTeleportData[TELEPORTS_COUNT][2][2] = // вирт. мир, интерьер.
{
	{//Цех оружия
		{0,0},
		{0,2}
	},
	{//Бинко 1
		{0,0},
		{1,15}
	},
	{//Инструкторы
		{0,0},
		{1,6}
	},
	{ //Инструкторы 2
		{0,0},
		{1,6}
	},
	{//Больница LS
		{0,0},
		{0,12}
	},
	{//Больница SF
		{0,0},
		{1,12}
	},
	{//Больница LV
		{0,0},
		{2,12}
	},
	{//Банк
		{0,0},
		{1,0}
	},
	{//Мэрия лс
		{0,0},
		{0,3}
	},
	{//ВСН
		{0,0},
		{0,0}
	},
	{//ВВС
		{0,0},
		{0,0}
	},
	{//ВСН Казарма
		{0,0},
		{1,0}
	},
	{//ВСН аммо
		{0,0},
		{1,6}
	},
	{//ВСН подвал
		{1,0},
		{1,0}
	},
	{//ВВС Казарма
		{0,0},
		{0,0}
	},
	{//ВВС аммо
		{0,0},
		{0,6}
	},
	{//ВВС подвал
		{0,0},
		{0,0}
	},
	{//LSPD_1
		{0,0},
		{1,15}
	},
	{//LSPD_Ammo
		{0,0},
		{2,6}
	},
	{//SFPD_1
		{0,0},
		{2,15}
	},
	{//SFPD_Ammo
		{0,0},
		{3,6}
	},
	{//LVPD_1
		{0,0},
		{3,15}
	},
	{//LVPD_Ammo
		{0,0},
		{4,6}
	},
	{//News Network
		{0,0},
		{1,0}
	},
	{//Шахта раздевалка
		{0,0},
		{2,2}
	},
	{
	    {0,0},
	    {1,0}
	},
	{//правительство
		{0,0},
		{3,3}
	},
	{//Мэрия сф
		{0,0},
		{1,3}
	},
	{//Мэрия лв
		{0,0},
		{2,3}
	},
	{
	    {0,0},
	    {5,14}
	},
	{
	    {0,0},
	    {4,14}
	},
	{
	    {0,0},
	    {3,14}
	},
	{
	    {0,0},
	    {0,5}
	}
};
new gTeleportAreas[TELEPORTS_COUNT][2];
//лесоруб
new woodsklad,Text3D:gWoodload,objstart[3][MAX_PLAYERS];
//шахта лифт
new bool:exitp,bool:exitptwo;
new bool:vputi,bool:vputitwo;
new bool:lift,bool:lifttwo;
new floorlift[4],floorlifttwo[4],flooobject[4];
new floorate[4],flooratetwo[4];
new minemesto[3], ruda[3],ruda2[3], minesklad, sostlift[2][10];
new Text3D:gMinemesto[3],Text3D:gMineload, Text3D:gsostmine[4];
//Авто
new aBus[4];
new aTruck[3][2];
new aTaxi[2];
new aMech[2];
new aProduct[2];
new aSellCar[5];
new aInstructor[2];
new aHospital[3][2];
new aGang[5][5];
new aArmy1[2],aArmy2[2];
new aLSPD[2],aSFPD[2],aLVPD[2];
new aNews[2],aSkuter[2];
new aRM[2],aYak[2],aLCN[2];
new aPris[2],aMarLS[2],aMarSF[2],aMarLV[2];
//new aSanta;
//Дома
new gCreatehouse[MAX_PLAYERS][CREATE_HOUSE_DATA];
new gHouses[MAX_HOUSE_COUNT][HOUSE_DATA];
new gHouseHabits[MAX_HOUSE_COUNT][3][MAX_PLAYER_NAME];
new gHints[HINTS_COUNT][HINT_DATA];
new gHouseArea[MAX_HOUSE_COUNT];
new gHousePickup[MAX_HOUSE_COUNT];
new gHouseIcon[MAX_HOUSE_COUNT];
new gHouseCount;
new Float:gHintStore[HINTS_COUNT][6] = {
	{2230.9829,-1109.4178,1049.8623,0.0000,0.0000,180.0},
	{2185.5993,-1215.0634,1048.0128,0.0000,0.0000,0.0000},
	{2321.5439,-1007.9141,1053.7084,0.0000,0.0000,-90.0},
	{2268.2766,-1137.1439,1049.5922,0.0000,0.0000,-180.0},
	{2362.9790,-1133.6341,1049.8741,0.0000,0.0000,-90.0},
	{2281.3879,-1140.3836,1049.8778,0.0000,0.0000,180.0},
	{2214.6550,-1078.5512,1049.4733,0.0000,0.0000,180.0},
	{93.9579,1332.4388,1087.3562,0.0000,0.0000,-180.0},
	{232.0812,1078.6463,1086.7938,0.0000,0.0000,-180.0},
	{247.1169,306.4585,998.1483,0.0000,0.0000,0.0},//10
	{267.0915,307.1669,998.0889,0.0000,0.0000,42.3000},
	{2456.5756,-1705.1350,1012.4469,0.0000,0.0000,-90.0},
	{2490.8063,-1705.2812,1017.2929,0.0000,0.0000,90.0},
	{2259.0554,-1218.4326,1047.9423,0.0000,0.0000,180.0},
	{239.8603,1108.8549,1079.9216,0.0000,0.0000,-180.0},
	{236.2240,1186.8347,1083.3648,0.0000,0.0000,-180.0},
	{223.7360,1247.5538,1081.0595,0.0000,0.0000,0.0000},
	{230.5292,1291.7623,1081.1096,0.0000,0.0000,0.0000},
	{36.2862,1343.1430,1087.7739,0.0000,0.0000,-90.0},
	{289.1342,1473.9226,1079.1767,0.0000,0.0000,90.0},//20
	{2335.0346,-1142.2761,1053.3045,0.0000,0.0000,90.0},
	{-275.6218,1458.4542,1087.8499,0.0000,0.0000,0.0},
	{330.9278,1491.6746,1083.4166,0.0000,0.0000,0.0},
	{15.1880,1410.3474,1083.4199,0.0000,0.0000,90.0},
	{378.1139,1469.3828,1079.1645,0.0000,0.0000,0.0},
	{359.2552,1418.3598,1080.3144,0.0000,0.0000,0.0},
	{441.5642,1405.0961,1083.2796,0.0000,0.0000,0.0},
	{138.5746,1387.2512,1087.3559,0.0000,0.0000,0.0},
	{494.9393,1418.8679,1083.3260,0.0000,0.0000,-90.0},//29
	{232.0812,1078.6463,1086.7938,0.0000,0.0000,-180.0}, //30Взят с 9
	{255.3610,1285.5831,1079.1768,0.0000,0.0000,-180.0}, //31
	{-72.3775,1365.5113,1079.1300,0.0000,0.0000,91.4000},
	{2819.7868,-1168.0839,1028.0808,0.0000,0.0000,-89.4000},
	{2214.6550,-1078.5512,1049.4733,0.0000,0.0000,180.0},
	{2245.5871,-1076.5100,1047.9423,0.0000,0.0000,-89.1999},//35
	{2362.9790,-1133.6341,1049.8741,0.0000,0.0000,-90.0},
	{-43.2747,1412.8441,1083.3686,0.0000,0.0000,0.0000},//37
	{93.9579,1332.4388,1087.3562,0.0000,0.0000,-180.0},
	{256.2465,1243.9345,1083.1567,0.0000,0.0000,90.3999},
	{247.1169,306.4585,998.1483,0.0000,0.0000,0.0},//40
	{418.3812,2534.8603,8.9199,0.0000,0.0000,177.9998},
	{223.7360,1247.5538,1081.0595,0.0000,0.0000,0.0000}

};
new Float:gHintSafe[HINTS_COUNT][6] = {
	{2235.4714,-1110.5235,1051.1030,0.0000,0.0000,-90.0},
	{2195.5012,-1214.4873,1048.9133,0.0000,0.0000,90.0},
	{2328.3356,-1016.6773,1055.1214,0.0000,0.0000,180.0},
	{2270.1784,-1132.5655,1050.6328,0.0000,0.0000,0.0},
	{2376.2827,-1128.0906,1050.8750,0.0000,0.0000,-90.0},
	{2286.0820,-1136.6024,1050.3183,0.0000,0.0000,-90.0},
	{2211.3532,-1070.7612,1049.8637,0.0000,0.0000,0.0000},
	{88.2836,1331.9644,1088.3671,0.0000,0.0000,180.0},
	{237.1456,1083.8426,1087.2397,0.0000,0.0000,0.0000},
	{243.9187,300.8536,998.6580,0.0000,0.0000,180.0},//
	{271.6213,308.8014,998.5581,0.0000,0.0000,0.0000},
	{2448.1062,-1707.1964,1013.9082,0.0000,0.0000,-180.0},
	{2489.8315,-1707.4692,1018.8972,0.0000,0.0000,90.0},
	{2263.1818,-1220.9895,1049.6738,0.0000,0.0000,-90.0},
	{248.6875,1115.5089,1081.3425,0.0000,0.0000,-90.0},
	{232.1327,1212.0216,1085.0070,0.0000,0.0000,90.0},
	{216.1254,1251.3492,1082.1484,0.8999,0.0000,90.0},
	{234.2438,1288.8481,1082.6972,0.1999,0.0000,-90.0},
	{34.3900,1346.0241,1089.4454,0.0000,0.0000,0.0000},
	{306.8100,1472.0506,1080.9584,0.0000,0.0000,-90.0},//
	{2311.0009,-1142.9982,1054.7951,0.0000,0.0000,180.0},
	{-271.8809,1446.9813,1088.2868,0.0000,0.0000,180.0},
	{319.1344,1483.3703,1085.0111,0.0000,0.0000,90.0},
	{14.7595,1408.5457,1084.3806,0.0000,0.0000,90.0},
	{376.6550,1462.0053,1080.6071,0.0000,0.0000,-90.0},
	{369.5550,1414.0164,1081.7938,0.0000,0.0000,90.0},
	{452.2294,1396.9678,1084.1878,0.0000,0.0000,180.0},
	{147.8858,1365.4699,1083.6992,0.0000,0.0000,-180.0},
	{484.9017,1409.5024,1084.6965,0.0000,0.0000,0.0},//29
	{237.1456,1083.8426,1087.2397,0.0000,0.0000,0.0000},
	{258.4237,1285.0819,1081.0982,0.0000,0.0000,-180.0}, //31
	{-63.7436,1367.6302,1081.1818,0.0000,0.0000,0.0000},
	{2812.4853,-1160.7703,1029.8024,0.0000,0.0000,0.0000},
	{2211.3532,-1070.7612,1049.8637,0.0000,0.0000,0.0000},
	{2246.0314,-1070.8703,1049.6940,0.0000,0.0000,-89.9999},//35
	{2376.2827,-1128.0906,1050.8750,0.0000,0.0000,-90.0},
	{-53.1803,1403.9793,1085.4100,0.0000,0.0000,89.3999},
	{88.2836,1331.9644,1088.3671,0.0000,0.0000,180.0},
	{255.4362,1257.4599,1084.9782,0.0000,0.0000,0.0000},
	{243.9187,300.8536,998.6580,0.0000,0.0000,180.0},//40
	{421.1551,2543.2817,10.6400,0.0000,0.0000,0.0000},
	{216.1254,1251.3492,1082.1484,0.8999,0.0000,90.0}
};
new Float:gHintFreez[HINTS_COUNT][6] = {
	{2235.5417,-1111.9722,1049.7822,0.0000,0.0000,-90.0},
	{2181.6320,-1201.4257,1048.0137,0.0000,0.0000,90.0},
	{2317.4226,-1010.6076,1049.1505,0.0000,0.0000,-90.0},
	{2259.5715,-1140.9250,1049.6018,0.0000,0.0000,90.0},
	{2374.5036,-1135.4018,1049.8143,0.0000,0.0000,-90.0},
	{2277.0104,-1134.2462,1049.8574,0.0000,0.0000,90.0},
	{2207.1931,-1078.0441,1049.4438,0.0000,0.0000,-180.0},
	{81.5933,1341.5450,1082.8161,0.0000,0.0000,0.0000},
	{222.8106,1079.7976,1083.2221,0.0000,0.0000,90.0},
	{244.3773,306.5402,998.1083,0.0000,0.0000,0.0000},//
	{273.8364,303.5366,998.1285,0.0000,0.0000,-90.0},
	{2452.5605,-1688.7540,1012.4570,0.0000,0.0000,-90.0},
	{2498.2084,-1705.6575,1013.6620,0.0000,0.0000,0.2000},
	{2252.3479,-1214.1237,1048.0227,0.0000,0.0000,-180.0},
	{233.5347,1117.3530,1079.9711,0.0000,0.0000,90.4000},
	{239.4849,1195.7725,1079.2368,0.0000,0.0000,0.0},
	{231.6629,1249.4648,1081.1303,0.0000,0.0000,0.0},
	{220.4749,1291.4848,1081.0595,0.0000,0.0000,180.0},
	{23.6174,1346.4964,1083.3044,0.0000,0.0000,180.0},
	{298.9392,1487.5650,1079.2368,0.0000,0.0000,0.0},//
	{2334.2927,-1144.0842,1049.6922,0.0000,0.0000,180.0},
	{-267.7491,1451.9597,1083.3664,0.0000,0.0000,0.0},
	{326.8057,1482.9757,1083.4003,0.0000,0.0000,-90.0},
	{32.0121,1404.4827,1083.4290,0.0000,0.0000,-90.0},
	{381.8688,1452.2484,1079.1269,0.0000,0.0000,180.0},
	{364.0109,1428.4283,1080.3443,0.0000,-0.6999,90.0},
	{442.9196,1406.0825,1083.3435,0.0000,0.0000,180.0},
	{153.7756,1378.2567,1082.8392,0.0000,0.0000,180.0},
	{498.2791,1398.5397,1079.2698,0.0000,-0.5000,180.0},//29
	{222.8106,1079.7976,1083.2221,0.0000,0.0000,90.0},
	{266.8898,1295.5727,1079.2668,0.0000,0.0000,0.0000},//31
	{-59.0046,1366.9761,1079.1899,0.0000,0.0000,0.0000},
	{2814.8986,-1165.1279,1024.5367,0.0000,0.0000,0.0000},
	{2207.1931,-1078.0441,1049.4438,0.0000,0.0000,-180.0},
	{2240.2416,-1070.6458,1047.9724,0.0000,0.0000,90.0000},//35
	{2374.5036,-1135.4018,1049.8143,0.0000,0.0000,-90.0},
	{-45.0870,1402.3806,1083.3286,0.0000,0.0000,-90.1000},
	{81.5933,1341.5450,1082.8161,0.0000,0.0000,0.0000},
	{259.6937,1248.0192,1083.2167,0.0000,0.0000,90.3999},
	{244.3773,306.5402,998.1083,0.0000,0.0000,0.0000},//40
	{413.1856,2536.7585,8.9499,0.0000,0.0000,91.0000},
	{231.6629,1249.4648,1081.1303,0.0000,0.0000,0.0}
};
new Float:gHintGun[HINTS_COUNT][9][6] = {
	{//1
		{2230.5559,-1109.2418,1050.3012,83.6000,-118.3999,117.3999},
		{2229.4748,-1109.2708,1049.9582,83.2000,-89.3999,96.6999},
		{2230.0166,-1109.1765,1050.8988,-81.9998,61.3000,-96.7000},
		{2229.3176,-1109.1652,1051.1601,6.5000,-82.5000,-97.9999},
		{2229.2880,-1109.5543,1050.9100,12.1999,-71.2999,-87.9999},
		{2229.4479,-1109.5286,1050.3303,56.9999,7.5999,18.6000},
		{2230.2072,-1109.4383,1050.8728,89.8999,26.2999,-4.2000},
		{2230.7626,-1109.1232,1050.8629,94.8999,-40.3000,1.0000},
		{2229.9206,-1109.2763,1050.2739,-2.0999,-89.5000,9.0999}
	},
	{//2
		{2186.0261,-1215.1459,1048.1180,83.0000,-84.8999,-58.1999},
		{2187.0422,-1215.2155,1048.1230,85.7998,-85.6999,-80.0999},
		{2186.1198,-1215.2502,1049.0441,-77.2000,26.0999,29.7000},
		{2187.1918,-1215.0808,1049.2905,-19.6999,-87.3000,-94.0999},
		{2185.4855,-1215.0156,1049.0272,83.6999,-96.4000,40.3001},
		{2186.9467,-1215.3616,1048.4693,85.0000,-76.5999,-113.8000},
		{2185.6242,-1215.1845,1048.4630,90.1000,161.0999,0.0000},
		{2185.9206,-1215.1263,1048.4523,87.8000,-18.2000,2.0999},
		{2187.1906,-1215.3975,1049.2072,0.0000,11.1999,0.0000}
	},
	{//3
		{2321.5947,-1008.7932,1053.8161,82.7000,-82.2000,0.0000},
		{2321.1960,-1008.8005,1053.8085,83.8000,-82.7999,177.1000},
		{2321.2919,-1008.4655,1054.7375,85.1999,-15.3000,88.0000},
		{2321.4140,-1007.6964,1054.9479,-14.7999,-87.8999,0.0000},
		{2321.3486,-1009.3344,1054.6926,97.8000,70.8000,7.6999},
		{2321.2492,-1009.1431,1054.2075,84.3998,-81.3999,160.8999},
		{2321.3256,-1007.9334,1054.1973,92.9999,60.9000,0.0000},
		{2321.4428,-1008.1199,1054.1818,90.1998,-91.7999,0.0000},
		{2321.5231,-1009.5777,1054.9100,10.0999,0.0000,0.0000}
	},
	{//4
		{2268.6020,-1136.8701,1050.8730,0.0000,-84.2999,93.4000},
		{2267.2458,-1136.8748,1049.6923,83.3000,-79.5000,74.9999},
		{2266.5495,-1137.2025,1050.8144,4.7000,-86.1999,-100.5000},
		{2267.8305,-1136.8919,1050.6141,84.5999,-20.7000,12.7000},
		{2266.9887,-1136.8721,1050.5859,84.9999,-85.0999,74.9000},
		{2267.3652,-1137.0745,1050.0953,-94.8999,-81.1000,69.7999},
		{2268.5744,-1137.1590,1050.0795,-90.3000,-92.2000,79.8000},
		{2268.0302,-1136.9085,1050.0773,-85.9999,-84.4999,147.6000},
		{2266.7045,-1136.8273,1050.7457,17.6999,0.0000,-86.4999}
	},
	{
		{2363.0830,-1135.2955,1051.1525,7.2000,-89.3999,5.9999},
		{2362.8430,-1133.5778,1050.2916,80.7000,-91.4999,4.0999},
		{2363.0356,-1134.7260,1050.3225,84.7001,-91.7999,-15.2999},
		{2362.9033,-1133.5949,1050.8293,83.8000,-93.8000,0.0000},
		{2362.9553,-1134.6196,1050.8431,84.4999,-80.2999,11.3000},
		{2362.8706,-1134.0915,1050.0480,-95.4999,-88.6999,0.0000},
		{2362.8764,-1135.3797,1050.0174,-85.7000,-103.9999,5.2999},
		{2362.9414,-1134.5920,1049.9790,91.7000,-90.0999,0.0000},
		{2362.9582,-1133.7320,1050.3035,86.8999,0.0000,0.0000}
	},
	{
		{2281.6120,-1140.3304,1051.1688,-14.3999,-82.3999,-99.9999},
		{2280.4050,-1140.3299,1050.8349,83.8000,-94.0999,-85.6999},
		{2281.5002,-1140.4453,1050.3421,92.3999,96.7000,59.7999},
		{2279.9296,-1140.1995,1050.3269,82.3999,-15.9999,0.0000},
		{2281.0766,-1140.0678,1050.8569,81.0999,-34.0000,0.0000},
		{2280.4497,-1140.3245,1050.0104,101.4000,168.8000,4.9000},
		{2280.6052,-1140.3764,1050.0167,-83.8999,-95.7999,-29.9999},
		{2281.1916,-1140.3295,1050.0291,-83.4999,-99.0999,-46.0999},
		{2279.7604,-1140.4005,1051.0657,-17.7999,0.4999,76.6000}
	},
	{
		{2213.0502,-1078.5592,1050.7282,9.3000,-83.3999,-85.9000},
		{2213.2331,-1078.2573,1049.6422,82.6000,15.1000,0.0000},
		{2213.4951,-1078.4422,1050.5198,-91.7000,-2.8999,0.0000},
		{2214.5710,-1078.2583,1049.9890,-96.4999,-88.3000,108.1000},
		{2213.1699,-1078.2252,1049.9061,81.4999,-90.7999,0.0000},
		{2214.4401,-1078.2912,1049.6586,-96.1999,-91.0000,93.8000},
		{2214.5205,-1078.3054,1050.4462,85.6000,-96.8000,0.0000},
		{2213.6228,-1078.3291,1049.9040,92.6000,-86.2000,0.0000},
		{2214.7204,-1078.5628,1050.6632,-2.5000,10.3999,-3.3999}
	},
	{
		{92.3099,1332.3265,1088.5828,9.6000,-74.8000,-86.9999},
		{92.9487,1332.3618,1087.4586,83.4000,-88.6999,-102.7000},
		{92.9229,1332.4888,1087.8265,85.0000,-85.9000,-108.1999},
		{93.5603,1332.4053,1087.8052,86.8000,-90.8000,102.7000},
		{92.7731,1332.5959,1088.3270,81.7000,-87.2999,70.5000},
		{93.5145,1332.4875,1087.4589,83.4000,-85.3000,123.5999},
		{93.4993,1332.5137,1087.7939,88.4000,-102.8999,-106.3999},
		{93.2148,1332.5363,1087.4704,96.5000,-87.9000,-121.6999},
		{93.9607,1332.6926,1088.3223,83.5999,-62.7000,-4.2999}
	},
	{
		{230.4967,1078.5915,1088.0456,14.4000,-81.0999,-85.6999},
		{232.2165,1078.7932,1087.3403,-99.5999,-83.7997,97.1000},
		{230.6073,1078.7187,1087.2849,-94.1999,-90.1999,-80.9999},
		{231.0201,1078.7014,1087.7584,84.4999,-49.5000,57.4000},
		{232.3048,1078.9715,1086.9033,74.8999,-97.5999,0.0000},
		{230.5998,1078.8149,1086.9871,-108.1000,-10.4000,0.0000},
		{232.0678,1078.7966,1087.7777,85.5000,-95.3000,61.7999},
		{231.8922,1078.7626,1086.9039,87.2000,-95.2999,-49.7999},
		{231.0660,1078.5925,1086.8918,85.1000,0.0000,113.1999}
	},
	{//10
		{247.5639,306.4898,999.1984,-83.1999,168.1999,0.0000},
		{248.1473,306.3545,998.5646,79.9000,-20.6000,24.3999},
		{247.5267,306.2283,998.6350,86.6000,-80.6000,-116.1000},
		{248.7151,306.4465,999.4209,12.2000,-90.3000,92.8000},
		{248.4544,306.3364,999.1611,-97.0999,-128.8999,0.0000},
		{247.1092,306.3216,998.3325,-80.0999,39.5999,0.0000},
		{248.1372,306.1315,998.3295,-96.0000,-94.7000,0.0000},
		{248.6265,306.4161,998.2476,86.0000,-95.3999,0.0000},
		{246.8255,306.5256,999.3200,0.0000,-12.3999,-0.9000}
	},
	{//11
		{268.3220,307.9188,999.0593,84.0999,-83.1000,-47.5999},
		{268.1723,308.1833,999.0474,82.6000,-81.0999,-45.5000},
		{268.2259,308.1613,998.5336,84.7000,-87.2999,-49.3999},
		{267.0678,306.8350,999.3276,7.7999,-87.8999,-46.7999},
		{267.3970,307.2912,999.0565,83.4999,-81.8000,-58.9000},
		{267.5220,307.3995,998.5214,84.4000,-82.2999,-52.5000},
		{268.4016,308.1021,998.2188,88.4999,-90.4000,-52.0999},
		{267.9914,307.7230,998.2152,95.9000,-82.8000,-51.7000},
		{267.5364,307.2350,998.1726,0.0000,-89.1999,36.6000}
	},
	{//12
		{2456.3078,-1705.5811,1013.4035,83.5000,-83.3999,178.5000},
		{2456.6608,-1705.1473,1013.3914,82.9999,-79.8000,0.0000},
		{2456.4794,-1706.0928,1013.4514,86.0999,-87.6999,0.0000},
		{2456.6206,-1706.1218,1012.9425,-96.0000,-86.8000,177.9000},
		{2456.4226,-1705.2784,1012.9296,82.9999,-83.2000,-154.2000},
		{2456.3483,-1706.1225,1012.8743,95.1000,88.1000,10.1999},
		{2456.5654,-1705.1896,1012.5889,88.1999,-91.4999,-163.5000},
		{2456.4628,-1705.3089,1012.6160,-85.3999,-83.5999,-172.7000},
		{2456.3881,-1706.5881,1012.5346,0.0000,-88.9998,-94.0000}
	},
	{//13
		{2490.9672,-1703.6319,1018.5425,8.6000,-88.2000,-176.2999},
		{2491.0219,-1703.8283,1017.7672,88.9999,-96.5999,0.0000},
		{2490.7775,-1704.3631,1018.3134,-91.9000,-79.4999,0.0000},
		{2490.9799,-1705.2810,1018.2678,93.4999,99.2000,0.0000},
		{2490.9760,-1704.5550,1017.7200,80.6000,-79.4999,0.0000},
		{2491.0080,-1703.9350,1017.3984,77.6000,-72.2000,0.0000},
		{2490.9016,-1705.2501,1017.7492,91.1000,-50.0000,-19.2999},
		{2491.1857,-1704.1281,1017.7471,97.9999,-88.3000,-42.3999},
		{2490.8156,-1704.9768,1017.3994,87.4000,11.4000,0.0000}
	},
	{//14
		{2259.1115,-1218.4588,1048.9615,-95.1999,-72.2999,99.7999},
		{2258.0651,-1218.3839,1048.9776,-96.2999,-78.6999,97.3000},
		{2257.5622,-1218.3745,1048.3883,86.4999,-81.4000,73.5999},
		{2258.5187,-1218.3576,1048.3851,85.7000,-79.5000,75.4000},
		{2259.0212,-1218.2510,1048.9621,-94.7999,-77.7999,90.5999},
		{2259.0625,-1218.4287,1048.1147,-96.5000,-79.6999,92.3000},
		{2257.6025,-1218.1820,1048.9219,89.0000,-79.3000,65.8999},
		{2259.3522,-1218.2247,1048.4383,-86.6000,-80.3999,95.2999},
		{2258.0666,-1218.3903,1048.1110,-93.2000,0.0000,101.4000}
	},
	{//15
		{239.8925,1108.8837,1080.0909,-95.0999,-83.9000,83.6999},
		{238.8362,1108.9508,1080.0975,-96.2000,-80.9999,97.5000},
		{239.9271,1109.0430,1080.9439,-95.9000,-82.5999,112.7000},
		{238.3878,1108.8118,1080.8919,84.2999,-81.6999,89.9999},
		{239.3591,1109.0684,1080.9586,-96.5999,-79.5999,93.6000},
		{238.8908,1108.9544,1080.4282,-96.2999,-76.7000,98.5999},
		{239.6046,1109.1262,1080.4099,-92.7999,-86.1999,102.7000},
		{240.0611,1109.1127,1080.4090,-86.4000,-73.6999,109.0000},
		{239.9414,1108.9359,1080.3658,85.6999,0.0000,-85.3000}
	},
	{//16
		{235.7943,1186.8220,1084.3284,83.9000,-81.3999,85.6999},
		{234.7190,1186.8229,1084.3195,83.4000,-73.4999,78.3999},
		{236.2904,1186.7952,1083.8651,-94.7999,-78.5999,89.9000},
		{235.1794,1186.8266,1083.8560,-95.3000,-81.6000,99.0999},
		{234.9258,1186.9843,1084.3273,97.2999,100.0000,-83.7999},
		{235.7303,1187.0360,1084.3193,83.4000,-74.2999,77.2999},
		{236.1053,1186.9926,1083.4766,88.1000,0.0000,0.0000},
		{235.6629,1187.1165,1083.4848,95.6000,-79.3000,71.1999},
		{234.8319,1187.1558,1083.5410,-93.6999,0.0000,-99.7000}
	},
	{//17
		{223.7571,1247.4721,1082.1040,-95.5999,-83.8999,-85.4999},
		{224.7052,1247.5439,1082.0895,-95.7999,-79.0000,-85.9000},
		{223.6694,1247.4763,1081.5589,-96.6999,-85.9000,-81.4999},
		{224.7362,1247.5294,1081.5623,-94.4000,-92.0999,-95.6999},
		{224.9031,1247.3306,1082.0892,-97.4000,-89.1000,-93.5000},
		{223.6643,1247.4885,1081.2397,-96.3999,-80.6000,-85.5000},
		{223.8374,1247.3553,1082.0749,-86.0999,0.0000,0.0000},
		{224.0275,1247.3109,1081.5651,-88.8999,0.0000,0.0000},
		{224.6838,1247.4006,1081.1616,84.4999,0.0000,96.7999}
	},
	{//18
		{230.4987,1291.7316,1082.1445,-94.7000,-83.0999,-92.5000},
		{231.9430,1291.7117,1082.0645,82.9000,-80.4000,-99.6999},
		{230.4243,1291.7128,1081.5954,-96.0000,-90.5000,-93.5999},
		{231.9796,1291.7144,1081.5447,84.8999,-90.2000,-89.3000},
		{230.7390,1291.5628,1082.1367,-95.7999,-81.7999,-98.9999},
		{230.4246,1291.7406,1081.2797,-96.4000,-82.4999,-95.2999},
		{231.3169,1291.5233,1082.1241,-80.3999,0.0000,0.0000},
		{231.0770,1291.5345,1081.6129,-92.5999,0.0000,0.0000},
		{231.4147,1291.5936,1081.3225,-92.0999,0.0000,-84.6000}
	},
	{//19
		{36.2972,1341.6853,1088.7268,96.8000,114.5999,-17.3999},
		{36.1804,1343.1953,1088.8068,-83.5998,85.8999,0.0000},
		{36.2725,1341.6810,1088.2186,95.7000,82.1999,11.1999},
		{36.2382,1343.2108,1088.2773,-83.8000,94.6999,5.3999},
		{36.0467,1342.8043,1088.7895,-84.2999,86.1000,0.0000},
		{36.1500,1341.6118,1087.8713,96.1999,88.5999,11.6999},
		{36.1397,1342.3125,1088.7877,-92.2000,92.7999,0.0000},
		{36.0936,1341.9273,1088.7988,-93.7999,100.3999,0.0000},
		{36.0766,1343.2192,1087.8703,83.3999,0.1999,-1.2000}
	},
	{//20
		{289.1054,1474.3790,1080.1403,82.6999,-76.2999,0.0000},
		{289.0731,1475.4725,1080.1424,83.1000,-62.8999,-12.3000},
		{289.1487,1474.3052,1079.6361,86.8000,-91.6999,0.0000},
		{289.1153,1475.4134,1079.6175,85.2000,-80.5999,-4.9999},
		{289.3547,1474.4068,1080.1578,84.5000,-80.6999,0.0000},
		{289.1607,1474.4454,1079.2713,84.1999,-81.6000,0.0000},
		{289.3297,1475.3555,1080.1627,88.8999,-88.6000,0.0000},
		{289.3743,1474.8734,1079.6262,95.6999,-72.6000,0.0000},
		{289.2080,1475.4899,1079.2803,85.1999,0.0000,0.0000}
	},
	{//21
		{2335.0346,-1140.8133,1054.2668,84.8999,-87.8999,0.0000},
		{2335.0905,-1142.2985,1054.3415,-96.6000,-75.7000,2.4000},
		{2335.0964,-1140.7807,1053.7542,85.8999,-88.2999,0.0000},
		{2335.0932,-1141.8690,1053.7686,85.7999,-87.8999,0.0000},
		{2335.2182,-1141.0332,1054.2659,82.9000,-81.8000,0.0000},
		{2335.0808,-1140.8208,1053.3977,82.6999,-77.2000,2.5000},
		{2335.2526,-1141.1015,1053.7395,86.7999,-81.0000,0.0000},
		{2335.2692,-1141.6052,1053.7467,94.4000,-80.9000,-0.5999},
		{2334.9372,-1141.9320,1053.4128,84.3999,0.0000,0.0000}
	},
	{//22
		{-275.6310,1458.4064,1088.9001,-96.2999,-81.5999,-88.1000},
		{-274.8081,1458.2766,1088.8835,-96.6999,-84.5000,-82.7999},
		{-275.6578,1458.3278,1088.3679,-95.8999,-85.0000,-83.7000},
		{-274.6427,1458.2800,1088.3547,-94.8999,-83.2000,-87.0000},
		{-274.4346,1458.2713,1088.0075,-95.7999,-82.2000,-85.2999},
		{-275.6234,1458.1972,1088.0290,-97.4000,-75.9999,-79.1000},
		{-274.5433,1458.2071,1088.8630,-85.9999,0.0000,0.0000},
		{-275.5432,1458.2261,1088.8791,-87.7000,0.0000,0.0000},
		{-275.7035,1458.6300,1088.0202,-93.2999,0.0000,-90.5999}
	},
	{//23
		{332.3899,1491.6118,1084.3791,84.7999,-83.8999,-98.4999},
		{331.4678,1491.6483,1084.3801,83.6000,-81.1999,-96.9000},
		{330.8373,1491.6315,1083.9146,-95.1000,-87.3000,-86.7000},
		{332.4017,1491.6661,1083.8631,85.8001,-91.0999,-91.2999},
		{331.7659,1491.4316,1083.8620,84.4000,-92.6999,-87.8999},
		{332.4078,1491.6157,1083.5129,83.6000,-83.0999,-88.7999},
		{331.8088,1491.4703,1084.4344,-85.9999,0.0000,0.0000},
		{330.7988,1491.4667,1084.4477,-88.3999,0.0000,0.0000},
		{330.8575,1491.7581,1083.5954,-93.2000,0.0000,-93.3999}
	},
	{
		{15.2021,1410.8082,1084.3870,84.0999,-85.1999,0.0000},
		{15.2666,1411.7551,1084.3815,84.5000,-95.3000,0.0000},
		{15.2190,1410.7185,1083.8736,86.3000,-77.3999,-12.7999},
		{15.2654,1411.7731,1083.8763,86.1999,-91.7000,0.0000},
		{15.4718,1411.2347,1083.8482,83.5999,-85.4000,0.0000},
		{15.2831,1411.7567,1083.5112,84.0999,-94.1999,1.3999},
		{15.4275,1410.7847,1084.4072,91.9999,-105.0999,0.0000},
		{15.3657,1411.5898,1084.3947,95.0999,-86.4999,0.0999},
		{15.3400,1410.8660,1083.5299,85.3000,0.0000,0.0000}
	},
	{
		{378.0986,1469.3696,1080.2031,-95.8000,-74.5000,-86.2000},
		{379.0852,1469.5120,1080.2027,-96.2999,-79.8999,-93.8000},
		{378.0252,1469.3663,1079.6573,-95.5000,-82.5000,-83.4999},
		{379.5708,1469.3134,1079.6224,85.2000,-80.9999,-98.4999},
		{379.1604,1469.2324,1080.1846,-96.4999,-76.6999,-93.2999},
		{378.0580,1469.4152,1079.3438,-96.8000,-67.8999,-81.3000},
		{378.5576,1469.1242,1080.2122,-92.6000,-83.6000,-81.2000},
		{378.8966,1469.2093,1079.6074,94.7999,-74.5999,-100.2999},
		{379.1741,1469.1052,1079.2863,86.8999,0.0000,107.9000}
	},
	{
		{359.2514,1418.3083,1081.3470,-94.2000,-83.0000,-86.2999},
		{360.2318,1418.3282,1081.3535,-96.0999,-80.5000,-92.7999},
		{359.1972,1418.2072,1080.8242,-95.6000,-87.3999,-87.0000},
		{360.2810,1418.3123,1080.8214,-96.6999,-81.4999,-80.4000},
		{359.4210,1418.0992,1081.3474,-96.6000,-80.9999,-86.4000},
		{359.2064,1418.2963,1080.4909,-96.5999,-78.9999,-82.2000},
		{360.2532,1418.0867,1081.3291,-89.0999,0.0000,0.0000},
		{359.8768,1418.0490,1080.8067,-87.6000,-74.1999,-77.2999},
		{360.0738,1418.1641,1080.4312,85.1000,0.0000,99.2000}
	},
	{
		{443.0115,1405.0208,1084.2440,83.6000,-83.0999,-92.8000},
		{441.9963,1405.0355,1084.2547,84.2999,-84.9000,-94.6999},
		{442.6194,1405.0794,1083.7641,-95.5999,-93.2000,-98.6000},
		{441.5326,1405.0125,1083.8045,-95.0999,-81.6000,-86.4000},
		{441.3361,1404.9533,1084.3001,-94.6999,-89.2999,-115.1999},
		{443.0057,1404.8464,1083.3889,84.2999,-86.2000,-103.8999},
		{442.8976,1404.8208,1084.2971,-83.6000,0.0000,-10.5999},
		{442.3947,1404.9295,1084.2897,-85.1999,-74.5999,-103.1999},
		{441.9829,1405.0664,1083.3948,85.1999,0.0000,-86.4999}
	},
	{//28
		{139.5393,1387.2630,1088.3771,-94.9000,-83.1999,-90.4000},
		{138.4906,1387.2687,1088.3963,-96.7000,-80.4000,-85.1000},
		{138.4919,1387.1800,1087.8455,-95.2000,-87.4999,-89.2999},
		{139.5744,1387.2929,1087.8499,-95.0999,-85.2000,-91.3000},
		{138.6838,1387.0744,1088.3709,-96.4000,-79.7999,-93.5999},
		{139.4894,1387.2623,1087.5374,-96.4000,-77.1999,-88.3999},
		{138.9522,1387.0273,1087.8626,-93.3000,-87.0000,-79.2999},
		{139.5044,1387.1138,1088.3745,-86.6000,-79.4000,-88.7000},
		{138.4707,1387.2677,1087.4567,84.4000,0.0000,89.6999}
	},
	{//29
		{494.9739,1418.9226,1083.8183,-95.8999,-86.1999,176.6000},
		{494.9869,1417.8325,1083.8312,-83.6999,95.6000,0.0000},
		{494.9095,1418.9095,1084.3533,-83.8999,85.1000,0.0000},
		{494.8813,1417.8078,1084.3779,-83.0999,79.5999,-7.0999},
		{494.6785,1418.6434,1083.8275,-81.0999,82.3999,-7.5000},
		{494.8487,1418.9486,1083.5175,-82.4999,90.2999,0.0000},
		{494.7759,1417.7967,1083.8186,-86.9000,81.4999,0.0000},
		{494.7192,1418.5797,1084.3616,-93.1000,95.9000,0.0000},
		{494.9457,1417.8906,1083.4405,83.8999,0.0000,0.0000}
	},
	{//30 = 9
		{230.4967,1078.5915,1088.0456,14.4000,-81.0999,-85.6999},
		{232.2165,1078.7932,1087.3403,-99.5999,-83.7997,97.1000},
		{230.6073,1078.7187,1087.2849,-94.1999,-90.1999,-80.9999},
		{231.0201,1078.7014,1087.7584,84.4999,-49.5000,57.4000},
		{232.3048,1078.9715,1086.9033,74.8999,-97.5999,0.0000},
		{230.5998,1078.8149,1086.9871,-108.1000,-10.4000,0.0000},
		{232.0678,1078.7966,1087.7777,85.5000,-95.3000,61.7999},
		{231.8922,1078.7626,1086.9039,87.2000,-95.2999,-49.7999},
		{231.0660,1078.5925,1086.8918,85.1000,0.0000,113.1999}
	},
	{//31
		{255.4060,1285.6734,1080.1672,70.8000,-149.9000,0.0000},
		{253.7120,1285.5667,1080.4263,171.7998,92.4000,97.1000},
		{255.5195,1285.7003,1079.6258,97.0000,149.3000,38.2999},
		{253.8892,1285.7191,1079.6839,93.4999,2.9000,0.0000},
		{254.2004,1285.8594,1080.2132,-81.0999,95.8999,0.0000},
		{255.4808,1285.5416,1079.3565,-99.9998,-160.4000,0.0000},
		{254.7713,1285.8673,1080.1507,89.7000,-104.0000,0.0000},
		{253.8621,1285.8532,1079.2872,92.0000,-89.0999,0.0000},
		{254.0390,1285.5997,1079.3645,-93.6999,47.8000,-6.1999}
	},
	{//32
		{-72.2672,1365.2690,1080.3819,8.8000,-89.0999,0.0000},
		{-72.4729,1367.1359,1080.3486,170.5000,90.1000,8.4999},
		{-72.3257,1365.6975,1080.1779,-95.1999,-88.3000,0.0000},
		{-72.1813,1365.9337,1079.6055,84.5999,-96.9999,0.0000},
		{-72.1491,1366.8988,1079.6173,-95.4000,-80.1000,24.8999},
		{-72.1153,1365.9339,1079.2199,83.2000,-85.0999,0.0000},
		{-72.2038,1366.4986,1080.1407,-90.0999,-77.8000,0.0000},
		{-72.3567,1366.7307,1079.5688,89.0999,-90.9000,0.0000},
		{-72.3121,1366.4624,1079.3374,-1.2999,87.6001,83.6000}
	},
	{//33
		{2819.7800,-1169.7453,1029.3458,8.2999,-87.0999,0.0000},
		{2819.5563,-1167.8455,1029.3265,-14.2000,-85.7000,0.0000},
		{2819.7409,-1168.5109,1029.0617,94.8000,96.4999,0.0000},
		{2819.6308,-1169.0577,1028.5076,81.5999,-91.0999,0.0000},
		{2819.5979,-1169.0454,1029.0559,79.6999,-86.5999,51.3999},
		{2819.5966,-1169.0598,1028.1890,83.4999,-81.8000,0.0000},
		{2819.5048,-1168.3656,1028.5197,89.6000,-38.1000,0.0000},
		{2819.6105,-1168.2675,1028.5677,-85.7000,-40.1000,0.0000},
		{2819.4658,-1168.0531,1028.1804,87.1999,20.5000,0.0000}
	},
	{//34 = 7
		{2213.0502,-1078.5592,1050.7282,9.3000,-83.3999,-85.9000},
		{2213.2331,-1078.2573,1049.6422,82.6000,15.1000,0.0000},
		{2213.4951,-1078.4422,1050.5198,-91.7000,-2.8999,0.0000},
		{2214.5710,-1078.2583,1049.9890,-96.4999,-88.3000,108.1000},
		{2213.1699,-1078.2252,1049.9061,81.4999,-90.7999,0.0000},
		{2214.4401,-1078.2912,1049.6586,-96.1999,-91.0000,93.8000},
		{2214.5205,-1078.3054,1050.4462,85.6000,-96.8000,0.0000},
		{2213.6228,-1078.3291,1049.9040,92.6000,-86.2000,0.0000},
		{2214.7204,-1078.5628,1050.6632,-2.5000,10.3999,-3.3999}
	},
	{//35
		{2245.6208,-1078.0408,1049.1623,16.5999,-88.2999,0.0000},
		{2245.5698,-1076.2940,1049.1503,-17.0000,-84.7000,0.0000},
		{2245.6625,-1077.1047,1048.9124,83.7999,-84.7000,0.0000},
		{2245.6166,-1076.9239,1048.4226,-95.1000,-90.3000,0.0000},
		{2245.4377,-1076.7248,1048.8959,79.1999,-84.3999,155.4999},
		{2245.3645,-1076.4412,1048.0433,85.3000,-75.3999,0.0000},
		{2245.2890,-1077.8365,1048.3950,88.2999,-96.8999,50.3000},
		{2245.3842,-1077.4139,1048.3725,86.9999,-37.5999,0.0000},
		{2245.3469,-1077.5146,1048.0380,82.9999,-21.0000,0.0000}
	},
	{//36 = 5
		{2363.0830,-1135.2955,1051.1525,7.2000,-89.3999,5.9999},
		{2362.8430,-1133.5778,1050.2916,80.7000,-91.4999,4.0999},
		{2363.0356,-1134.7260,1050.3225,84.7001,-91.7999,-15.2999},
		{2362.9033,-1133.5949,1050.8293,83.8000,-93.8000,0.0000},
		{2362.9553,-1134.6196,1050.8431,84.4999,-80.2999,11.3000},
		{2362.8706,-1134.0915,1050.0480,-95.4999,-88.6999,0.0000},
		{2362.8764,-1135.3797,1050.0174,-85.7000,-103.9999,5.2999},
		{2362.9414,-1134.5920,1049.9790,91.7000,-90.0999,0.0000},
		{2362.9582,-1133.7320,1050.3035,86.8999,0.0000,0.0000}
	},
	{//37
		{-41.6386,1412.7680,1084.6761,10.5000,-77.9000,102.9000},
		{-43.4732,1412.7374,1084.5902,-14.8000,-76.6999,96.9999},
		{-42.4834,1412.8143,1084.4294,-67.0999,13.8000,0.0000},
		{-43.3162,1412.8255,1084.5738,-28.4000,-76.1999,95.7000},
		{-41.5712,1412.9429,1083.7976,78.3999,-95.6000,0.0000},
		{-42.4863,1412.6728,1083.8813,-96.8999,-149.5000,0.0000},
		{-42.9541,1412.9147,1084.3524,87.7999,-97.2999,0.0000},
		{-41.7952,1412.5294,1083.5147,-84.6999,-85.4999,0.0000},
		{-43.1897,1412.7611,1083.5784,0.0000,87.5999,-15.8999}
	},
	{//38 = 8
		{92.3099,1332.3265,1088.5828,9.6000,-74.8000,-86.9999},
		{92.9487,1332.3618,1087.4586,83.4000,-88.6999,-102.7000},
		{92.9229,1332.4888,1087.8265,85.0000,-85.9000,-108.1999},
		{93.5603,1332.4053,1087.8052,86.8000,-90.8000,102.7000},
		{92.7731,1332.5959,1088.3270,81.7000,-87.2999,70.5000},
		{93.5145,1332.4875,1087.4589,83.4000,-85.3000,123.5999},
		{93.4993,1332.5137,1087.7939,88.4000,-102.8999,-106.3999},
		{93.2148,1332.5363,1087.4704,96.5000,-87.9000,-121.6999},
		{93.9607,1332.6926,1088.3223,83.5999,-62.7000,-4.2999}
	},
	{//39
		{256.3548,1244.0051,1084.2097,-98.7000,-86.5999,0.0000},
		{256.2642,1245.4951,1084.3514,16.6000,-69.2999,-178.2998},
		{256.3316,1243.8586,1083.6878,-99.2999,-83.9999,6.3999},
		{256.4181,1244.8297,1083.6614,-96.5999,-87.1999,0.0000},
		{256.5545,1245.0104,1084.1835,-97.5999,-78.0999,63.2000},
		{256.4557,1243.8541,1083.3726,-99.3000,-76.7999,0.0000},
		{256.6176,1244.7528,1083.3374,-98.9999,-139.1999,0.0000},
		{256.6083,1245.2900,1083.3148,-92.7999,-140.7999,0.0000},
		{256.3888,1243.6926,1084.3319,9.9000,0.0000,5.8999}
	},
	{//40 = 10
		{247.5639,306.4898,999.1984,-83.1999,168.1999,0.0000},
		{248.1473,306.3545,998.5646,79.9000,-20.6000,24.3999},
		{247.5267,306.2283,998.6350,86.6000,-80.6000,-116.1000},
		{248.7151,306.4465,999.4209,12.2000,-90.3000,92.8000},
		{248.4544,306.3364,999.1611,-97.0999,-128.8999,0.0000},
		{247.1092,306.3216,998.3325,-80.0999,39.5999,0.0000},
		{248.1372,306.1315,998.3295,-96.0000,-94.7000,0.0000},
		{248.6265,306.4161,998.2476,86.0000,-95.3999,0.0000},
		{246.8255,306.5256,999.3200,0.0000,-12.3999,-0.9000}
	},
	{//41
		{416.7353,2534.9340,10.1889,9.8999,-82.4000,-91.4000},
		{418.6109,2534.8391,10.1762,-16.2999,-77.8000,-75.6999},
		{417.7354,2534.9187,9.9454,73.2000,0.0000,0.0000},
		{416.9045,2534.9692,9.4110,-92.2999,-86.5999,-87.7000},
		{418.2468,2535.0405,9.4042,-92.5999,-90.0000,-144.5999},
		{416.8479,2535.1301,9.1300,-132.4999,3.1000,0.0000},
		{417.3960,2535.1157,9.9035,88.8000,-100.1999,0.0000},
		{418.0726,2535.0727,9.3532,86.5000,-90.8999,-24.0000},
		{418.4166,2535.1574,9.0597,87.5999,-54.6999,-14.0999}
	},
	{//42=17
		{223.7571,1247.4721,1082.1040,-95.5999,-83.8999,-85.4999},
		{224.7052,1247.5439,1082.0895,-95.7999,-79.0000,-85.9000},
		{223.6694,1247.4763,1081.5589,-96.6999,-85.9000,-81.4999},
		{224.7362,1247.5294,1081.5623,-94.4000,-92.0999,-95.6999},
		{224.9031,1247.3306,1082.0892,-97.4000,-89.1000,-93.5000},
		{223.6643,1247.4885,1081.2397,-96.3999,-80.6000,-85.5000},
		{223.8374,1247.3553,1082.0749,-86.0999,0.0000,0.0000},
		{224.0275,1247.3109,1081.5651,-88.8999,0.0000,0.0000},
		{224.6838,1247.4006,1081.1616,84.4999,0.0000,96.7999}
	}
};
new Float:gHintDress[HINTS_COUNT][3][6] = {
	{// 1
		{2230.7561,-1109.3177,1051.6035,0.0000,0.0000,87.6999},
		{2230.4709,-1109.3085,1051.6031,0.0000,0.0000,87.5000},
		{2230.1989,-1109.3076,1051.6131,0.0000,0.0000,86.8999}
	},
	{
		{2185.7556,-1215.1505,1049.7541,0.0000,0.0000,90.2000},
		{2186.0126,-1215.2023,1049.7639,0.0000,0.0000,92.6000},
		{2186.2758,-1215.2150,1049.7640,0.0000,0.0000,90.1999}
	},
	{
		{2321.4028,-1008.1798,1055.4594,0.0000,0.0000,0.0000},
		{2321.4079,-1008.4442,1055.4594,0.0000,0.0000,0.0000},
		{2321.3979,-1008.7277,1055.4593,0.0000,0.0000,0.0000}
	},
	{
		{2268.0490,-1137.0057,1051.3399,0.0000,0.0000,-93.8000},
		{2267.8422,-1136.9985,1051.3504,0.0000,0.0000,-91.1999},
		{2267.6376,-1137.0075,1051.3404,0.0000,0.0000,-89.5999}
	},
	{
		{2362.8381,-1134.1116,1051.6055,0.0000,0.0000,0.0000},
		{2362.8317,-1134.3430,1051.6151,0.0000,0.0000,0.0000},
		{2362.8374,-1133.8858,1051.5957,0.0000,0.0000,0.0000}
	},
	{
		{2281.1655,-1140.2518,1051.6091,0.0000,0.0000,97.1999},
		{2280.8806,-1140.2381,1051.6080,1.5999,0.0000,-88.3999},
		{2280.5556,-1140.2357,1051.6091,0.0000,0.0000,-90.1999}
	},
	{
		{2214.3535,-1078.4116,1051.2050,0.0000,0.0000,-88.0000},
		{2214.1384,-1078.4151,1051.2050,0.0000,0.0000,-84.0999},
		{2213.9343,-1078.4007,1051.2050,0.0000,0.0000,-85.8999}
	},
	{
		{93.9547,1332.5895,1089.0878,0.0000,0.0000,-88.4000},
		{93.6951,1332.5623,1089.0878,0.0000,0.0000,-85.3999},
		{93.3951,1332.5629,1089.0878,0.0000,0.0000,-87.3000}
	},
	{
		{231.6773,1078.7901,1088.5310,0.0000,0.0000,-95.3000},
		{231.3967,1078.7889,1088.5310,0.0000,0.0000,-86.6000},
		{230.9703,1078.7958,1088.5208,0.0000,0.0000,-97.5999}
	},
	{// 10
		{248.1866,306.3258,999.8886,0.0000,0.0000,-90.7999},
		{247.8925,306.3224,999.8785,0.0000,0.0000,-91.5000},
		{247.6226,306.3232,999.8887,0.0000,0.0000,-93.0999}
	},
	{
		{267.2603,307.1318,999.8288,0.0000,0.0000,-43.4999},
		{267.4571,307.3040,999.8383,0.0000,0.0000,131.2000},
		{267.6746,307.4893,999.8383,0.0000,0.0000,131.8999}
	},
	{// 12
		{2456.4367,-1705.1768,1014.1978,0.0000,0.0000,0.0000},
		{2456.4477,-1705.3992,1014.1981,0.0000,0.0000,0.0000},
		{2456.4277,-1705.6420,1014.1880,0.0000,0.0000,0.0000}
	},
	{// 13
		{2490.9521,-1705.2984,1019.0339,0.0000,0.0000,0.0000},
		{2490.9519,-1705.0588,1019.0339,0.0000,0.0000,0.0000},
		{2490.9323,-1704.8081,1019.0336,0.0000,0.0000,0.0000}
	},
	{//14
		{2258.7270,-1218.2954,1049.6840,0.0000,0.0000,92.8999},
		{2258.9287,-1218.2882,1049.6838,0.0000,0.0000,-92.3000},
		{2258.4926,-1218.2690,1049.6895,0.0999,0.0000,-93.4999}
	},
	{//15
		{239.7649,1109.0095,1081.6627,0.0000,0.0000,-94.3999},
		{239.4978,1109.0018,1081.6684,1.4000,0.3000,-90.3999},
		{239.2356,1108.9979,1081.6627,0.0000,0.0000,-92.5000}
	},
	{//16
		{235.8394,1186.9857,1085.1147,0.0000,0.0000,-94.7999},
		{235.2902,1186.9892,1085.1145,0.0000,0.0000,-91.1000},
		{235.5202,1186.9881,1085.1147,0.0000,0.0000,-91.9000}
	},
	{//17
		{223.5325,1247.4138,1082.8009,0.0000,0.0000,-85.6000},
		{223.7394,1247.4224,1082.8105,0.0000,0.0000,-87.5000},
		{223.9936,1247.4332,1082.8010,0.0000,0.0000,-92.3000}
	},
	{//18
		{231.7338,1291.6315,1082.8612,0.0000,0.0000,-89.8999},
		{231.4665,1291.6236,1082.8607,0.0000,0.0000,-90.7000},
		{231.2164,1291.6245,1082.8513,0.0000,0.0000,-90.5999}
	},
	{//19
		{36.1358,1342.8082,1089.5156,0.0000,0.0000,0.0000},
		{36.1558,1342.5882,1089.5255,0.0000,0.0000,0.0000},
		{36.1458,1342.3680,1089.5155,0.0000,0.0000,0.0000}
	},
	{//20
		{289.2781,1474.6901,1080.9283,0.0000,0.0000,0.0000},
		{289.2783,1474.4600,1080.9284,0.0000,0.0000,0.0000},
		{289.2682,1474.8903,1080.9184,0.0000,0.0000,0.0000}
	},
	{//21
		{2335.1701,-1140.9875,1055.0546,0.0000,0.0000,0.0000},
		{2335.1784,-1141.2189,1055.0451,0.0000,0.0000,0.0000},
		{2335.1755,-1141.4189,1055.0449,0.0000,0.0000,0.0000}
	},
	{
		{-274.4190,1458.3150,1089.5974,0.0000,0.0000,-86.0999},
		{-274.8084,1458.3132,1089.5977,0.0000,0.0000,-93.5999},
		{-274.6285,1458.3247,1089.5965,0.0000,0.0000,-90.0999}
	},
	{
		{332.2619,1491.5399,1085.1674,0.0000,0.0000,-93.6999},
		{331.8175,1491.5330,1085.1578,0.0000,0.0000,-91.4999},
		{331.5682,1491.5412,1085.1682,0.0000,0.0000,-92.0999}
	},
	{
		{15.3231,1410.4112,1085.1672,0.0000,0.0000,0.0000},
		{15.3331,1410.6710,1085.1671,0.0000,0.0000,0.0000},
		{15.3231,1410.8406,1085.1674,0.0000,0.0000,0.0000}
	},
	{
		{379.0177,1469.2437,1080.9151,0.0000,0.0000,-88.5999},
		{379.2108,1469.2636,1080.9251,0.0000,0.0000,-91.5999},
		{378.7455,1469.2509,1080.9056,0.0000,0.0000,-94.0999}
	},
	{
		{360.0541,1418.2092,1082.0560,0.0000,0.0000,-91.5999},
		{359.7888,1418.2208,1082.0662,0.0000,0.0000,-85.5999},
		{359.5729,1418.2239,1082.0661,0.0000,0.0000,-88.5000}
	},
	{
		{442.8853,1404.9498,1085.0253,0.0000,0.0000,-83.5000},
		{442.5996,1404.9448,1085.0250,-0.4999,0.0000,-85.4000},
		{442.2410,1404.9689,1085.0354,0.0000,0.0000,-88.4000}
	},
	{
		{138.9462,1387.1064,1089.0977,0.0000,0.0000,-88.7999},
		{139.2735,1387.1109,1089.0975,0.0000,0.0000,-86.9999},
		{139.5074,1387.1221,1089.1069,0.0000,0.0000,-87.2000}
	},
	{//29
		{494.7901,1417.7601,1085.0686,0.0000,0.0000,0.0000},
		{494.7901,1418.0297,1085.0677,0.0000,0.0000,0.0000},
		{494.7803,1418.4199,1085.0683,0.0000,0.0000,0.0000}
	},
	{//30 = 9
		{231.6773,1078.7901,1088.5310,0.0000,0.0000,-95.3000},
		{231.3967,1078.7889,1088.5310,0.0000,0.0000,-86.6000},
		{230.9703,1078.7958,1088.5208,0.0000,0.0000,-97.5999}
	},
	{
		{255.2463,1285.7261,1080.9078,0.0000,0.0000,-88.8999},
		{254.9406,1285.7218,1080.9152,0.0000,0.0000,-87.9999},
		{254.6030,1285.7338,1080.9051,0.0000,0.0000,-92.7999}
	},
	{
		{-72.2493,1365.7786,1080.8613,0.0000,0.0000,0.0000},
		{-72.2205,1366.0891,1080.8515,0.0000,0.0000,0.0000},
		{-72.2794,1366.7750,1080.8691,0.0000,0.0000,0.0000}
	},
	{//33
		{2819.6354,-1168.6489,1029.8032,0.0000,0.0000,0.0000},
		{2819.6479,-1169.2730,1029.8225,0.0000,0.0000,0.0000},
		{2819.6379,-1168.8729,1029.8225,0.0000,0.0000,0.0000}
	},
	{//34 = 7
		{2214.3535,-1078.4116,1051.2050,0.0000,0.0000,-88.0000},
		{2214.1384,-1078.4151,1051.2050,0.0000,0.0000,-84.0999},
		{2213.9343,-1078.4007,1051.2050,0.0000,0.0000,-85.8999}
	},
	{//35
		{2245.4472,-1076.9935,1049.6816,0.0000,0.0000,0.0000},
		{2245.4455,-1077.2581,1049.6740,0.0000,0.0000,0.0000},
		{2245.4355,-1077.4984,1049.6740,0.0000,0.0000,0.0000}
	},
	{//36 = 5
		{2362.8381,-1134.1116,1051.6055,0.0000,0.0000,0.0000},
		{2362.8317,-1134.3430,1051.6151,0.0000,0.0000,0.0000},
		{2362.8374,-1133.8858,1051.5957,0.0000,0.0000,0.0000}
	},
	{//37
		{-42.7864,1412.7080,1085.1103,0.0000,0.0000,92.5000},
		{-42.3435,1412.6968,1085.1003,0.0000,0.0000,90.0999},
		{-42.6312,1412.7117,1085.1003,0.0000,0.0000,-91.2999}
	},
	{//38 = 8
		{93.9547,1332.5895,1089.0878,0.0000,0.0000,-88.4000},
		{93.6951,1332.5623,1089.0878,0.0000,0.0000,-85.3999},
		{93.3951,1332.5629,1089.0878,0.0000,0.0000,-87.3000}
	},
	{//39
		{256.4397,1244.1110,1084.8782,0.0000,0.0000,0.0000},
		{256.3773,1244.5097,1084.8884,0.0000,0.0000,0.0000},
		{256.3638,1244.9287,1084.8984,0.0000,0.0000,0.0000}
	},
	{//40 = 10
		{248.1866,306.3258,999.8886,0.0000,0.0000,-90.7999},
		{247.8925,306.3224,999.8785,0.0000,0.0000,-91.5000},
		{247.6226,306.3232,999.8887,0.0000,0.0000,-93.0999}
	},
	{//41
		{418.2810,2535.0168,10.6500,0.0000,0.0000,-85.2999},
		{417.9325,2535.0192,10.6500,0.0000,0.0000,-84.8999},
		{417.5417,2535.0476,10.6599,0.0000,0.0000,-90.3999}
	},
	{//42 = 17
		{223.5325,1247.4138,1082.8009,0.0000,0.0000,-85.6000},
		{223.7394,1247.4224,1082.8105,0.0000,0.0000,-87.5000},
		{223.9936,1247.4332,1082.8010,0.0000,0.0000,-92.3000}
	}
};
new gHintGunID[9] = {358,357,356,355,353,349,348,347,336};
new gHouseGunObject[MAX_HOUSE_COUNT][9];
new gHintStoreArea[HINTS_COUNT];
new gHintSafeArea[HINTS_COUNT];
new gHintFreezArea[HINTS_COUNT];
new gHouseImprovePrice[5] = {10000,30000,40000,65000,120000};
new gHouseImproveName[5][64] = {"Автоматические двери","Сейф для хранения наркотиков и денег","Холодильник","Шкаф для одежды и оружия","Субсидии для снижения кварт. платы"};



//Отели
new Float:gHotelRoomEnters[8][4] = {
	{2242.3237,-1159.6515,1029.7969,89.1319},//0
	{2240.1545,-1159.5923,1029.7969,271.4702},//1
	{2240.0933,-1170.7921,1029.7969,262.0701},//2
	{2225.5703,-1187.4229,1029.7969,176.8426},//3
	{2209.5781,-1189.6549,1029.7969,359.1809},//4
	{2194.3877,-1173.0500,1029.7969,83.4449},//5
	{2192.0396,-1157.0106,1029.7969,270.1934},//6
	{2194.4224,-1157.0431,1029.7969,89.0851}//7
};
new Float:gHotelRoomExits[8][4] = {
	{2243.8650,-1159.8906,1029.7969,271.4098},//0
	{2238.6030,-1159.6714,1029.7969,94.4707},//1
	{2238.7017,-1170.5791,1029.7969,72.0063},//2
	{2225.6091,-1186.1622,1029.7969,354.1539},//3
	{2209.3914,-1191.0940,1029.7969,174.6122},//4
	{2195.7808,-1173.0089,1029.8043,272.6864},//5
	{2190.7280,-1157.1416,1029.7969,97.2181},//6
	{2195.5393,-1156.9688,1029.7969,268.1313}//7
};
new Float:gHotels[HOTEL_COUNT][4] = {
	{2233.0859,-1159.7690,25.8906,90.0}
};
new gHotelData[HOTEL_COUNT][HOTEL_DATA];
new gHotelResidents[HOTEL_COUNT][8];
new gHotelEndurance[HOTEL_COUNT][8];
new gHotelArea[HOTEL_COUNT];
new Float:gHotelPark[HOTEL_COUNT][8][4] = {
	{
		{2161.8826,-1143.7087,24.6459,90.4629},//0
		{2161.7021,-1148.5948,24.1485,88.8682},//1
		{2161.0669,-1152.7008,23.7412,88.3845},//2
		{2161.5020,-1158.3961,23.6346,87.7852},//3
		{2161.1558,-1163.6001,23.6133,89.3230},//4
		{2161.3308,-1167.8167,23.6159,87.9049},//5
		{2161.3450,-1172.9393,23.6163,88.6371},//6
		{2161.3694,-1177.9595,23.6159,89.2538}//7
	}
};
new Text3D:gHotelText[HOTEL_COUNT];


//Заправки
new gFillings[FILLING_COUNT][FILLING_DATA];
new gFuelPrice[5][2] = { //Минимальная и максимальная цена за литр топлива каждого вида
{50,150}, //Дизель
{50,150}, //Регуляр
{100,200}, //Midgrade
{150,250}, //Premium
{200,300} //Super Premium
};
new Float:gFuelPumps[FILLING_COUNT][4][6] = {
{
	{1000.0058,-937.4569,41.2972,0.0000,0.0000,95.2000},
	{1007.2109,-936.4054,41.2896,0.0000,0.0000,95.6999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0}
},
{
	{-97.02, -1173.29, 1.51,   0.00, 0.00, -21.24},
	{-92.40, -1162.24, 1.44,   0.00, 0.00, -21.78},
	{-85.27, -1164.43, 1.34,   0.00, 0.00, -19.80},
	{-90.49, -1176.42, 1.23,   0.00, 0.00, -23.10}
},
{
	{1941.88, -1767.68, 12.63,   0.00, 0.00, 0.00},
	{1941.78, -1771.02, 12.63,   0.00, 0.00, 0.00},
	{1941.83, -1774.56, 12.63,   0.00, 0.00, 0.00},
	{1941.83, -1777.99, 12.63,   0.00, 0.00, 0.00}
},
{
	{655.27, -558.63, 15.49,   0.00, 0.00, 0.00},
	{655.36, -560.65, 15.49,   0.00, 0.00, 0.00},
	{655.32, -569.42, 15.49,   0.00, 0.00, 0.00},
	{655.34, -571.29, 15.49,   0.00, 0.00, 0.00}
},
{
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},

{
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
    {0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
    {0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
    {0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
},
{
    {0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00},
	{0.00, 0.00, 0.00,   0.00, 0.00, 0.00}
}
};
new Float:gFillingBuy[FILLING_COUNT][3] = {
	{1000.4443,-919.9459,42.3281},
	{-78.3897,-1169.9388,2.1354},
	{1929.0951,-1776.3113,13.5469},
	{661.3578,-573.3368,16.3359},
	{2637.2900,1129.6758,11.1797},
	{1599.3605,2221.6692,11.0625},
	{-1320.4128,2698.5439,50.2663},
	{-1675.9949,432.0869,7.1797},
	{-2032.9757,161.4488,29.0461},
	{-1623.5625,-2693.1926,48.7427},
	{-2231.4863,-2558.3176,31.9219},
	
	{2117.4512,896.7789,11.1797},
	{2150.7451,2733.8682,11.1763},
	{639.1013,1683.3879,7.1875},
	{2187.7112,2469.6316,11.2422}
};
new gFuelPumpObjects[FILLING_COUNT][4];
//new Text3D:gFillingsText[FILLING_COUNT];
new gFillingBuyArea[FILLING_COUNT];


new gReconnectIP[MAX_PLAYERS][32];
new gReconnectTime[MAX_PLAYERS];

//Личные авто
new gCars[MAX_VEHICLES][CAR_DATA];
//new gCarsCount;

//Клиенты
new gClientIP[MAX_PLAYERS][24];
new gClientID[MAX_PLAYERS];
new gClientTimeout[MAX_PLAYERS];

//Скины
enum SKIN_DATA {
	skinID,
	skinPrice,
	skinClass, // 1 - эконом, 2 - средний, 3 - дорогой
	skinSex, // 1 - женский, 2 - мужской
	skinColor // 0 - белый, 1 - черный
}
#define SKIN_CLASS_ECONOM 1
#define SKIN_CLASS_MEDIUM 2
#define SKIN_CLASS_EXPENSIVE 3
#define SKIN_SEX_MALE 1
#define SKIN_SEX_FEMALE 2
#define SKIN_COLOR_WHITE 0
#define SKIN_COLOR_BLACK 1
new gSkins[114][SKIN_DATA] = {
	{31, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{38, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{39, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{131, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{198, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{201, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{207, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{193, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{226, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{237, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},//10
	{192, 20000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{214, 20000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{55, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{56, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{90, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{151, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{152, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{169, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{1, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{2, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},//20
	{3, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{8, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{32, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{72, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{94, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{128, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{133, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{23, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{33, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{34, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},//30
	{48, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{73, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{96, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{161, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{202, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{206, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{4, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{5, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{6, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{7, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},//40
	{15, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{183, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{14, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{35, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{36, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{156, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{21, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{22, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{24, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{25, 30000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},//50
	{28, 40000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{66, 40000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{67, 40000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{176, 40000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{293, 40000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{9, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{10, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{13, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{69, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{190, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},//60
	{195, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{238, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{57, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{59, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{100, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{170, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{181, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{185, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{241, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{242, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},//70
	{98, 65000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{112, 65000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{126, 65000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{247, 65000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{254, 65000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{269, 65000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{290, 65000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{117, 70000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{188, 70000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{240, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},//80
	{249, 70000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{250, 70000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{93, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{141, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{150, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{172, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{263, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{194, 70000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{211, 70000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{233, 70000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},//90
	{19, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{20, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{180, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{222, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{297, 60000, SKIN_CLASS_MEDIUM, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
	{11, 50000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{12, 50000, SKIN_CLASS_MEDIUM, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
	{46, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{111, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{171, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},//100
	{189, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{223, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{147, 180000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{187, 180000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{186, 180000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{208, 180000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{228, 180000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{294, 200000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{91, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{216, 160000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},//110
    {17, 100000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
    {296, 200000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_MALE, SKIN_COLOR_BLACK},
    {219, 200000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK},
    {296, 200000, SKIN_CLASS_EXPENSIVE, SKIN_SEX_FEMALE, SKIN_COLOR_BLACK}
};

new Text: gSkinShopDraw[5];
new PlayerText: gSkinShopPriceDraw[MAX_PLAYERS];

//Банкоматы
new Float:gATMC[ATM_COUNT][6] = {
	{1699.7099609,-1889.7850342,13.4150000,0.0000000,0.0000000,0.0000000},
	{1760.4489746,-1687.5909424,13.2749996,0.0000000,0.0000000,0.0000000},
	{1464.6390381,-1749.8189697,15.2969999,0.0000000,0.0000000,270.0000000},
	{1172.5710449,-1328.4980469,15.2559996,0.0000000,0.0000000,270.0000000},
	{1162.4079590,-1766.6369629,13.5109997,0.0000000,0.0000000,180.0000000},
	{456.7369995,-1486.6839600,30.9120007,0.0000000,0.0000000,19.9945068},
	{387.1340027,-1823.6219482,7.7129998,0.0000000,0.0000000,359.9896240},
	{-2035.3489990,-101.9550018,35.0159988,0.0000000,0.0000000,269.9890137},
	{-81.9091797,-1184.1894531,1.6020000,0.0000000,0.0000000,69.9884033},
	{1652.2209473,2200.2829590,10.6470003,0.0000000,0.0000000,89.9890137},
	{-1980.6533203,133.5351562,27.5149994,0.0000000,0.0000000,359.9835205},
	{-2674.2500000,634.5996094,14.3050003,0.0000000,0.0000000,89.9890137},
	{1582.9510498,1778.7600098,10.6719999,0.0000000,0.0000000,359.9890137},
	{2023.4820557,1017.6359863,10.6470003,0.0000000,0.0000000,179.9835205},
	{2355.8261719,2460.0869141,10.6470003,0.0000000,0.0000000,179.9835205},
	{2106.4960938,-1790.6159668,13.3879995,0.0000000,0.0000000,269.9835205}
};
new gATMArea[ATM_COUNT];


//Фракции
new gFractionName[FRACTION_COUNT][32] = {"Инструкторы","Минздрав","The Ballas","Grove Street","Varios Los Aztecas","Los Santos Vagos","The Rifa","Department of Defence","Department of Interior","Новостная сеть","Администрация штата","Мэрия LS","Мэрия SF","Мэрия LV","Yakuza","La Cosa Nostra","Russian mafia"};
new gFractionRankCount[FRACTION_COUNT] = {8,10,10,10,10,10,10,16,17,10,8,8,8,8,10,10,10};
new gFractionRankName[FRACTION_COUNT][18][32] = {
	{"Стажер","Консультант","Экзаменатор","Мл. Инструктор","Инструктор","Менеджер","Зам. Директора","Директор","","","","","","","","","",""},//Инструкторы
	{"Интерн","Участковый врач","Терапевт","Проктолог","Окулист","Хирург","Зав. отделением","Зам. Главврача","Главврач","Министр","","","","","","","",""},//Медики
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"Рядовой","Специалист","Капрал","Сержант","Мастер сержант","Первый сержант","Уорент-Офицер","Ст. Уорент-Офицер","Второй Лейтенант","Первый Лейтенант","Капитан","Майор","Подполковник","Полковник","Генерал","Министр","",""},
	{"Кадет","Офицер","Мл.Сержант","Сержант","Ст. Сержант","Мл. Прапорщик","Прапорщик","Ст. Прапорщик","Мл. Лейтенант","Лейтенант","Ст. Лейтенант","Капитан","Майор","Подполковник","Полковник","Шериф","Министр",""},
	{"Стажер","Помощник редакции","Светотехник","Репортер","Оператор","Ведущий","Режисер","Редактор","Главный редактор","Директор","","","","","","","",""},
	{"Водитель","Охранник","Секретарь","Советник здравоохрнения","Советник МВД","Советник обороны","Вице Губернатор","Губернатор","","","","","","","","","",""},
	{"Водитель","Охранник","Начальник охраны","Секретарь","Адвокат","Депутат","Зам.Мэра LS","Мэр LS","","","","","","","","","",""},
	{"Водитель","Охранник","Начальник охраны","Секретарь","Адвокат","Депутат","Зам.Мэра SF","Мэр SF","","","","","","","","","",""},
	{"Водитель","Охранник","Начальник охраны","Секретарь","Адвокат","Депутат","Зам.Мэра LV","Мэр LV","","","","","","","","","",""},
	{"Вакасю","Сятэй","Сятейгасира","Вакагасира","Со-хобунтё","Камбу","Оядзи","Сайко-комон","Оябун-кобун","Кумитэ","","","","","","","",""},
	{"Новицио","Ассосиато","Сомбатеннте","Cолдато","Боец","Сотто-Капо","Капо","Младший Босс","Консильери","Дон","","","","","","","",""},
	{"Шнырь","Босяк","Барыга","Фраер","Бандит","Смотритель","Пахан","Вор в Законе","Аристократ","Авторитет","","","","","","","",""}
};
/*{"District Nigga","Busta","Hustla","Homeboy","Play","Killa","Gangster","O.G.","Old Nigga","Ghetto Legend","","","","","","","",""},
	{"New Nigga","Up Bro","Honorary Rapper","Big Nigga","Street Dog","Gangster","O.G.","Big Bro","Rich Nigga","Legend","","","","","","","",""},
	{"Dudoso","Novato","Calavera","Asesino","Madre","Latinos","Gangster","Proximo","Suplente","Padre","","","","","","","",""},
	{"Local","Verificado","Buscando","Amigo","Cutthroat","Soldado","Autoridad","Veterano","La Leyenda","Padre","","","","","","","",""},
	{"Раро","Extrano","Ordinario","Amigo","Latino","Entrenador","Criminal","Veterano","Suplente","El'Padre","","","","","","","",""}*/
new gFractionSkin[FRACTION_COUNT][9] = {
	{11,98,171,172,189,240,0,0,0}, //Инструкторы
	{274,275,276,70,148,150,0,0,0}, //Медики LS
	{102,103,104,195,0,0,0,0,0}, //Ballas
	{105,106,107,195,269,270,271,0,0}, //Groove
	{193,114,115,116,292,0,0,0,0}, //Aztecaz
	{108,109,110,56,0,0,0,0,0}, //Vagos
	{173,174,175,226,273,0,0,0,0}, //Rifa
	{287,191,61,295,0,0,0,0,0}, //Defence
	{280,284,282,283,266,285,265,211,0}, //DOI
	{187,186,170,188,20,93,150,219,0},
	{255,294,59,70,288,61,147,295,0}, //правительство
	{255,164,165,59,185,187,227,147,141},//мэрия лс
	{255,164,165,59,185,187,227,147,141},//мэрия сф
	{255,164,165,59,185,187,227,147,141},//мэрия лв
    {121,122,123,118,0,0,0,0,0}, //Yakuza
    {124,125,126,127,0,0,0,0,0}, // LCN
    {111,112,113,272,0,0,0,0,0} // RM
};
new Float:gFractionSpawnC[FRACTION_COUNT][4] = {
	{1215.3970,-50.8125,999.2265,89.9743}, //Инструкторы
	{644.1702,796.4171,1001.4333,265.9992}, //Медики LS
	{1512.0883,-65.3134,1054.1859,270.0}, //Balls
	{1512.0883,-65.3134,1054.1859,270.0}, //Groove
	{1512.0883,-65.3134,1054.1859,270.0}, //Aztecaz
	{1512.0883,-65.3134,1054.1859,270.0}, //Vagos
	{1512.0883,-65.3134,1054.1859,270.0}, //Rifa
	{417.9000,2532.9639,1123.0859,270.0}, //Мин. Обороны
	{519.95,-357.32,1005.27,90.0}, //DOI
	{-1745.5535,2617.8218,62.6159,124.1560}, //Новости
	{-1831.0397,-279.1494,1036.1205}, //правительство
	{-1831.0397,-279.1494,1036.1205},//мэрия лс
	{-1831.0397,-279.1494,1036.1205},//мэрия сф
	{-1831.0397,-279.1494,1036.1205},//мэрия лв
	{-2600.7546,-226.5616,1055.2223},//Yakuza
	{-2600.7546,-226.5616,1055.2223},//LCN
	{-2600.7546,-226.5616,1055.2223}//RM
};
new gFractionSpawnData[FRACTION_COUNT][2] = {
	{6,1},
	{12,0},
	{1,0},
	{1,1},
	{1,2},
	{1,3},
	{1,4},
	{3,0},
	{15,1},
	{0,1},
	{3,3},
	{3,0},//мэрия лс
	{3,1},//мэрия сф
	{3,2},//мэрия лв
	{14,3},//yakudza
	{14,4}, // LCN
	{14,5} // RM
};
new gFractionColor[FRACTION_COUNT] = {0xFFE7BA11,0xF3622311,0xA020F011,0x00CD0011,0x00EEEE11,0xFFD70011,0x3A75C411,0xCDB38B11,0x0000ff11,0xcd107611,0x4682b4,0x4682b4,0x4682b4,0x4682b4, 0xCCCCCC,0xCCCCCC,0xCCCCCC};
new Float:gSubfractionSpawnC[SUBFRACTION_COUNT][3][4] = {
{
	{644.1702,796.4171,1001.4333,265.9992},
	{644.1702,796.4171,1001.4333,265.9992},
	{644.1702,796.4171,1001.4333,265.9992}
},
{
	{417.9000,2532.9639,1123.0859,270.0},
	{259.3429,1870.0015,8.7578,90.0},
	{0.0,0.0,0.0,0.0}
},
{
	{519.95,-357.32,1005.27,90.0},
	{519.95,-357.32,1005.27,90.0},
	{519.95,-357.32,1005.27,90.0}
}
};
new gSubfractionSpawnData[SUBFRACTION_COUNT][3][2] = {
{
	{12,0},
	{12,1},
	{12,2}
},
{
	{0,0},
	{0,0},
	{0,0}
},
{
	{15,1},
	{15,2},
	{15,3}
}
};
new gSubfractionName[SUBFRACTION_COUNT][3][24] = {
	{"Больница LS","Больница SF","Больница LV"},
	{"ВВС","ВСН",""},
	{"LSPD","SFPD","LVPD"}
};
new gFractionSalary[FRACTION_COUNT][18] = {
{250,500,750,1000,1250,1500,1750,2000},
{250,500,750,1000,1250,1500,1750,2000,2250,2500},
{0},
{0},
{0},
{0},
{0},
{250,375,500,625,750,875,1000,1125,1250,1375,1500,1625,1750,1875,2000,2125},
{250,375,500,625,750,875,1000,1125,1250,1375,1500,1625,1750,1875,2000,2125,2250},
{0},
{1200,2700,3100,3500,3800,4400,7000,7700},//правительство
{1200,2700,3100,3500,3800,4400,7000,7700},//мэрия
{1200,2700,3100,3500,3800,4400,7000,7700},//мэрия
{1200,2700,3100,3500,3800,4400,7000,7700},//мэрия
{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950},// YAKUZA
{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950}, // LCN
{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950}// RM
};


//Автошкола
new gExamQuestions[25][90] = {
"В каком случае разрешен обгон впереди движущегося т/с?",
"Разрешен ли обгон впереди движущегося т/с по городу?",
"Какова макс скорость транспортного средства по автомагистрали?",
"Какова макс скорость транспортного средства по пригороду?",
"При виде т/с с включенным спец.сигналом, водитель обязан?",
"В каких случаях разрешен обгон с права?",
"Какова макс. скорость транспортного средства по городу?",
"Какого типа установлены перекрестки в штате?",
"Что такое ДТП?",
"Что следует делать при возникновении ДТП в первую очередь?",
"В каком месте водитель имеет право осуществлять парковку?",
"Что следует делать водителю при проезде перекрестка?",
"Со скольки лет можно получить водительские права?",
"В каком случае следует пристегивать ремень безопастности?",
"Когда можно включать дальний свет фар?",
"Разрешен ли обгон по двойной сплошной линии?",
"Можно ли устанавливать спец. Сигнал на личный автомобиль?",
"Разрешен ли обгон по прерывистой линии?",
"Стоит ли соблюдать грузоподъемность тягача?",
"В каком случае можно включать аварийный сигнал?",
"Обязательна ли остановка перед пешеходным переходом?",
"Разрешен ли разворот т/c в туннеле?",
"Необходимо ли смотреть в зеркала заднего вида при маневре задним ходом?",
"Разрешено ли движение задним ходом на магистрале?",
"Должны ли быть видны гос.номера автомобиля? "
};
new gExamAnswers[25][4][75] = {
{"В случае отсутствия очевидной угрозы лобового столкновения.","В случае передвижения за городом.","В случае передвижения по городу.","В случае очевидной угрозы лобового столкновения"}, //1
{"Разрешен всегда","Запрещен обгон с лева","Разрешен в случае отсутствия угрозы столкновения","Запрещен всегда"}, //2
{"60 Км/ч","10 Км/ч","130 Км/ч","150 Км/ч"}, //3
{"100 Км/ч","110 Км/ч","60 Км/ч","90 Км/ч"}, //4
{"Продолжить движение в прежнем темпе.","Резко остановить транспортное средство.","Снизить скорость транспортного средства до 40 Км/ч","Постепенно снизить скорость и прижаться к обочине."}, //5
{"Разрешен всегда","Запрещен","Разрешен в случае поворота впереди движущегося транспортного средства.","Разрешен за городом"}, //6
{"50 Км/ч","60 Км/ч","70 Км/ч","80 Км/ч"}, //7
{"Регулируемые равнозначных дорог","Регулируемые неравнозначных дорог","Нерегулируемые равнозначных дорог","Нерегулируемые неравнозначных дорог"}, //8
{"Дорожно-транспортное происшествие.","Дорожно-транспортное предприятие.","Дорожно-торговое предприятие.","Дорожно-торговое предприятствие."}, //9
{"Скрыться с места ДТП.","Оставаться на месте ДТП и Вызвать сотрудников ПО.","Оставаться на месте ДТП и Вызвать службу спасения.","Вызвать сотрудников скорой помощи."}, //10
{"По среди дороги","На парковке.","На перекрестке","На тротуаре"}, //11
{"Снизить скорость и проехать при отсутствии помех.","Увеличить скорость.","Проехать не изменяя скорость.","Перелететь его с читом"}, //12
{"16 лет","18 лет","20 лет","25 лет"}, //13
{"При виде сотрудника ПД","При передвижении за городом"," При передвижении в городе ","В любом случае"}, //14
{"В городе","В пробке","На трассе","При проезде на перекрестке"}, //15
{"Только на трассе ","Запрещен","В городе","На перекрестке"}, //16
{"Нет, нельзя","Да","Только на внедорожниках","Только на грузовиках"}, //17
{"Только для машин со спец.сигналом","Только для велосипедистов","Всегда разрешен","Всегда запрещен"}, //18
{"Да, всегда","Нет, не обязательно","Только при погрузке угля","Только при перевозке людей"}, //19
{"В любом случае","Если надо «Отойти»","При обгоне","При ДТП"}, //20
{"Нет, не обязательно ","Обязательно","Только при виде сотрудников ПД","Только при включенном поворотнике"}, //21
{"Нет","Только при включенном аварийном сигнале","Только при виде сотрудников ПД","Только при включенном дальнем свете"}, //22
{"При включенных фарах","При виде пешехода","Обязательно","Не обязательно"}, //23
{"Нет, не разрешено","Да, разрешено","Только при виде сотрудников ПД","Только при включенном правом поворотнике"}, //24
{"Нет, не должны","Только сзади","Только спереди","Должны спереди и сзади"} //25
};
new gExamTrueAnswer[25]={1,3,4,2,4,3,2,3,1,2,2,1,2,4,3,2,1,3,1,4,2,1,3,1,4};
new gDSTurn[20]; //DS = Driving School;
new Text3D:gDSTurnText;
//new gInstructorBarrierID;
//new bool:gIsInstructorBarrierOpen;
//new PlayerText:RegisterTextdraw[17][MAX_PLAYERS];
//new PlayerText:RegisterTextdrawST2[17][MAX_PLAYERS];
new PlayerText:RegisterTextdrawST3[3][MAX_PLAYERS];
new PlayerText:RegistertextdrawST4[3][MAX_PLAYERS];
new PlayerText:PTD_autosalon[MAX_PLAYERS][13];
//new PlayerText:LoginTextdraw[13][MAX_PLAYERS];
new PlayerText:SpeedTextdraws[31][MAX_PLAYERS];
new PlayerText:BarTextdraws[12][MAX_PLAYERS];
new PlayerText:StatsTextdraw[61][MAX_PLAYERS];
//Банды
new gGangCars[5][5];
new Float:gGangCarSlot[5][5][4] = {
{ //Ballas
	{2364.0896,-1172.9833,27.4324,359.6881},
	{2363.9124,-1191.3015,27.4311,0.5064},
	{2364.1777,-1212.7860,27.4313,0.7053},
	{2378.2334,-1191.4183,27.2506,359.6901},
	{2378.0852,-1216.9338,27.2596,358.7422}
},
{ //Grove
	{2481.9072,-1653.3868,13.2185,88.9954},
	{2470.3342,-1666.8761,13.1353,298.0269},
	{2471.3022,-1670.6198,13.1605,300.6299},
	{2472.9883,-1674.5118,13.1705,303.5992},
	{2475.1748,-1677.9551,13.1710,304.7424}
},
{ //Aztecas
	{2287.7449,-1889.2540,13.2736,91.7830},
	{2302.6021,-1889.1619,13.3010,88.9345},
	{2314.0730,-1889.2440,13.2970,90.1131},
	{2319.0537,-1898.7491,13.3277,176.7931},
	{2319.2393,-1910.8010,13.3560,178.2617}
},
{ //Vagos
	{2596.5967,-1086.7743,69.2921,359.0652},
	{2596.4709,-1064.7863,69.4106,359.4511},
	{2604.6116,-1068.0859,69.4179,5.0838},
	{2604.9248,-1086.3004,69.4164,351.7209},
	{2603.2903,-1106.1270,68.2702,0.9351}
},
{ //Rifa
	{2732.2234,-1936.2267,13.3749,87.9128},
	{2729.1311,-1972.0330,13.3747,91.0217},
	{2728.6475,-1967.9152,13.3783,90.0126},
	{2719.4963,-1957.6360,13.2384,358.2563},
	{2719.7668,-1944.2588,13.2355,358.5551}
}
};
new gGangAccess[5][4];
new Float:gGangEnter[5][4] = {
	{2352.0657,-1170.2786,28.0559,0.0},
	{2486.4348,-1644.5369,14.0772,180.0},
	{2296.4370,-1882.2383,14.2344,180.0},
	{2628.1016,-1067.9161,69.7156,270.0},
	{2736.6423,-1952.6158,13.5469,90.0}
};
new gGangDorm[5][4];
new gGangDormLimit[5];
new gGangCode[5];
new Text3D:gGangDormText[5];
//Настройки для банд
new gGunAmount[8] = {70,180,200,280,300,380,350,500}; //SD,Deagle,MP5,Shotgun,M4,AK47,Rifle,Sniper Rifle
new gGunID[8] = {23,24,29,25,30,33,31,34};
new gGangCarModelID[15] = {412,419,422,474,475,482,491,492,517,534,536,566,567,575,576};
new gGangCarColors[5] = {174,86,2,6,53};
new gGangDormLevel[3][3] = {//
	{4000,4000,2000},
	{6000,6000,4000},
	{10000,10000,7000}
};
//new gGangDormLimitPrice[3] = {0,30000,60000};
//
new Text3D:gMafDormText[3];
new gMafWarehouse[3];
//Армии
new gArmyWarehouse[2][2];
new Text3D:gArmyWarehouseText[2];

//PD
#define PD_DOOR_COUNT 6
#define PD_DOOR_SPEED 0.8
#define PD_DOOR_DELAY 5000
new gPDWarehouse[3][2];
new Text3D:gPDWarehouseText[3];
new Float:camExit[3][4] = {
	{1544.3622,-1675.7802,13.5583,91.3277},
	{2286.9624,2429.0190,10.8203,179.9788},
	{-1606.0493,717.6782,12.0734,359.5204}
};
new gEmCall[3];
new gPDDoors[PD_DOOR_COUNT][3];
new gPDDoorButton[PD_DOOR_COUNT];
new Float:gPDDoorOPos[PD_DOOR_COUNT][6] = {
	{1640.74, -1630.95, 1582.80, 0.0, 0.0, 0.0},
	{1622.06, -1631.34, 1582.80, 0.00, 0.00, 90.00},
	{1618.50, -1631.29, 1582.80, 0.00, 0.00, 90.00},
	{1613.81, -1630.16, 1584.11,   0.00, 0.00, 62.00},
	{1611.00, -1628.86, 1584.11,   0.00, 0.00, -33.00},
	{1614.73, -1628.27, 1584.11,   0.00, 0.00, -120.00}
};
new Float:gPDDoorCPos[PD_DOOR_COUNT][6] = {
	{1642.08, -1630.95, 1582.80, 0.0, 0.0, 0.0},
	{1622.06, -1629.98, 1582.80, 0.00, 0.00, 90.00},
	{1618.50, -1629.97, 1582.80, 0.00, 0.00, 90.00},
	{1614.30, -1630.91, 1584.11,   0.00, 0.00, 0.00},
	{1610.29, -1629.28, 1584.11,   0.00, 0.00, -90.00},
	{1614.30, -1627.51, 1584.11,   0.00, 0.00, -180.00}
};
new gPDCamArea[3];
new bool:gPDCamStatus[3];

//Новости
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA];
new gAdvertCount;
new gAdvertPrice = 8;
new gAdvertTime;
new gNewsDialing = false;
new gNewsDialer = INVALID_PLAYER_ID;
new gNewsDialee = INVALID_PLAYER_ID;
new gNewsDialPrice = 0;
new gNewsDialMoney = 0;
new gNewsMoney = 0;

//Детонации
new gDetonatePickup[50][2];
new gDetonateArea[50][2];


//new bool:logFreez = true;
new bool:logGang = false;
new bool:logExit;

//Динамическая экономика
new gWorkSalary[3]; //Зарплата на угле, лесопилке, заводе оружия
const Float:gunFactor = -0.6; //Коэффициент (зарплата - ед. оружя) на оруж заводе;
new Float:economicFactor; //Коэффициент (К-во угля / К-во дерева)

//Бизнесы
new gBints[BINT_COUNT][BINT_DATA];
new gBintEnterArea[BINT_COUNT];
new gBintBuyArea[BINT_COUNT];
new gBusiness[MAX_BUSINESS_COUNT][BUSINESS_DATA];
new gBusinessArea[MAX_BUSINESS_COUNT];
new Text3D: gBusinessText[MAX_BUSINESS_COUNT];
new gBusinessIcon[MAX_BUSINESS_COUNT];
new gBusinessTypeName[BUSINESS_TYPE_COUNT][24] = {"Прод. магазин","Закусочная","24/7","Бар","Клуб","Спортзал","Магазин одежды","Автомастерская"};
new gBusinessCount;
new gShopProduct[SHOP_OBJECTS] = {200,150,100,30}; //К-во продуктов на телефон, аптечку, часы.
new gShopObject[SHOP_OBJECTS][24] = {"Телефон","Аптечка","Часы","Фотоаппарат"};
//
//Ремонт
enum REPAIR_OBJECTS
{
	repairColor
}
//new gRepairProduct[REPAIR_OBJECTS] = {250};
new gRepairArea[3];

//Развозчики
new gDelivery[DELIVERY_COUNT][DELIVERY_DATA];
new gDFTObject[DELIVERY_DFT_COUNT][2];

//Полицейский компьютер
#define MAX_PAGE_ELEMENTS 60 //Максимальное к-во элементов на 1 странице компьютера полиции
#define MAX_PLAYER_ELEMENT 19 //Максимальное к-во игроков в списке разыскиваемых на 1 странице


enum COMP_ELEMENTS
{
	Text:C_ELEMENT_BACKGROUND,
	Text:C_ELEMENT_WANTED,
	Text:C_ELEMENT_HOME,
	Text:C_ELEMENT_WANTED_LIST[MAX_PLAYERS],
	Text:C_ELEMENT_NEXT,
	Text:C_ELEMENT_BACK,
	Text:C_ELEMENT_BEARING,
	Text:C_ELEMENT_GOTO_WANTED_LIST,
	Text:C_ELEMENT_MAP1,
	Text:C_ELEMENT_MAP2,
	Text:C_ELEMENT_MAP3,
	Text:C_ELEMENT_MAP4,
	Text:C_ELEMENT_EXIT,
	PlayerText:C_ELEMENT_COUNTER[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_NAME[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_PHOTO1[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_PHOTO2[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_INFO[MAX_PLAYERS],
	PlayerText:C_ELEMENT_BEARING_SQUARE[MAX_PLAYERS]
}

enum COMP_PAGES
{
	C_PAGE_MAIN,
	C_PAGE_WANTED,
	C_PAGE_WANTED_INFO
}
new gInterfaceElement[COMP_ELEMENTS];
new gInterfaceWantedList[MAX_PLAYERS];
new gInterfaceWantedListCount;
new gBearingArea[100];
new gPlayerBearingID[MAX_PLAYERS];


static const MaxPassengers[27] =
{
    0x10331113, 0x11311131, 0x11331313, 0x80133301,
    0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
    0x13113311, 0x31101100, 0x30001301, 0x11031311,
    0x11111331, 0x10013111, 0x01131100, 0x11111110,
    0x11100031, 0x11130221, 0x33113311, 0x11111101,
    0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
    0x13330111, 0xFF131111, 0x0000FF3F
}; // HEX смещения макс. кол-ва пассажиров на основной транспорт

main()
{
	//print("State 99 gamemode loaded");
}

stock CreateVehicleEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new id = CreateVehicle(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	gVehicles[id - 1][vCheckDelay] = true;
	gVehicles[id - 1][vX] = X;
	gVehicles[id - 1][vY] = Y;
	gVehicles[id - 1][vZ] = Z;
	gVehicles[id - 1][vA] = A;
	gVehicles[id - 1][vSpawned] = true;
	gVehicles[id - 1][vCheckDelay] = true;
	return id;
}

stock AddStaticVehicleExEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new id = AddStaticVehicleEx(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	gVehicles[id - 1][vCheckDelay] = true;
	gVehicles[id - 1][vX] = X;
	gVehicles[id - 1][vY] = Y;
	gVehicles[id - 1][vZ] = Z;
	gVehicles[id - 1][vA] = A;
	gVehicles[id - 1][vSpawned] = true;
	gVehicles[id - 1][vCheckDelay] = true;
	return id;
}

stock AddStaticVehicleExx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2)
{
	new id = AddStaticVehicle(modelid, X, Y, Z, A, Color1, Color2);
	gVehicles[id - 1][vCheckDelay] = true;
	gVehicles[id - 1][vX] = X;
	gVehicles[id - 1][vY] = Y;
	gVehicles[id - 1][vZ] = Z;
	gVehicles[id - 1][vA] = A;
	gVehicles[id - 1][vSpawned] = true;
	gVehicles[id - 1][vCheckDelay] = true;
	return id;
}

stock SetVehiclePosEx(vehicleid, Float: X, Float: Y, Float: Z) {
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	gVehicles[vehicleid - 1][vX] = X;
	gVehicles[vehicleid - 1][vY] = Y;
	gVehicles[vehicleid - 1][vZ] = Z;
	SetVehiclePos(vehicleid, X, Y, Z);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	return 1;
}

stock SetVehicleZAngleEx(vehicleid, Float: Angle) {
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	gVehicles[vehicleid - 1][vA] = Angle;
	SetVehicleZAngle(vehicleid, Angle);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	return 1;
}

stock RemovePlayerFromVehicleEx(playerid)
{
	SetTimerEx("CarHack",3000,false,"ii",playerid,GetPlayerVehicleID(playerid));
	return RemovePlayerFromVehicle(playerid);
}

stock PutPlayerInVehicleEx(playerid,vehicleid,seatid)
{
	pTemp[playerid][pEnterVehicle] = vehicleid;
	PutPlayerInVehicle(playerid,vehicleid,seatid);
}

stock TogglePlayerControllableEx(playerid,toggle)
{
	pTemp[playerid][pControllable] = toggle;
	TogglePlayerControllable(playerid,toggle);
}

stock SetPlayerVirtualWorldEx(playerid,worldid)
{
	pTemp[playerid][pWorld] = worldid;
	SetPlayerVirtualWorld(playerid,worldid);
}

stock SetVehicleParamsExEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective)
{
	if(engine == 1) gVehicles[vehicleid-1][vEngine] = true;
	else gVehicles[vehicleid-1][vEngine] = false;
	SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
}

stock SetPlayerSkinEx(playerid,skinid)
{
	pTemp[playerid][pCSkin] = skinid;
	SetPlayerSkin(playerid,skinid);
}

stock SetPlayerSkinNA(playerid,skinid)
{
	SetPlayerSkin(playerid,skinid);
}

stock SetPlayerPosEx(playerid,Float:x,Float:y,Float:z, control = 1)
{
	pTemp[playerid][pAbletoTP] = true;
	if(control) TogglePlayerControllableEx(playerid,1);
	pTemp[playerid][pX] = x;
	pTemp[playerid][pY] = y;
	pTemp[playerid][pZ] = z;
	return SetPlayerPos(playerid,x,y,z);
}

stock ResetPlayerWeaponsEx(playerid)
{
	pTemp[playerid][pAbletoGun] = 2;
	ResetPlayerWeapons(playerid);
	for(new i;i<13;i++)
	{
		gGuns[playerid][i] = 0;
		gAmmos[playerid][i] = 0;
	}
	pTemp[playerid][pAbletoGun] = 2;
}

stock ShowPlayerDialogEx(playerid,dialogid,style,caption[],info[],button1[],button2[])
{
	pTemp[playerid][pDialog] = true;
	return ShowPlayerDialog(playerid,dialogid,style,caption,info,button1,button2);
}

stock ChangeVehicleColorEx(vehicleid,color1,color2)
{
	gVehicles[vehicleid-1][vColor][0] = color1+1;
	gVehicles[vehicleid-1][vColor][1] = color2+1;
	ChangeVehicleColor(vehicleid,color1,color2);
}

stock PlayerTextDrawDestroyEx(playerid,PlayerText:textdraw)
{
	PlayerTextDrawDestroy(playerid,textdraw);
	textdraw = PlayerText:INVALID_TEXT_DRAW;
}

#define CreateVehicle CreateVehicleEx
#define AddStaticVehicleEx AddStaticVehicleExEx
#define AddStaticVehicle AddStaticVehicleExx
#define SetVehiclePos SetVehiclePosEx
#define SetVehicleZAngle SetVehicleZAngleEx
#define RemovePlayerFromVehicle RemovePlayerFromVehicleEx
#define PutPlayerInVehicle PutPlayerInVehicleEx
#define TogglePlayerControllable TogglePlayerControllableEx
#define SetPlayerVirtualWorld SetPlayerVirtualWorldEx
#define SetVehicleParamsEx SetVehicleParamsExEx
#define SetPlayerSkin SetPlayerSkinEx
#define SetPlayerPos SetPlayerPosEx
#define ResetPlayerWeapons ResetPlayerWeaponsEx
#define ShowPlayerDialog ShowPlayerDialogEx
#define ChangeVehicleColor ChangeVehicleColorEx
#define PlayerTextDrawDestroy PlayerTextDrawDestroyEx
stock DestroyDynamic3DTextLabelEx(&Text3D:text)
{
	DestroyDynamic3DTextLabel(text);
	text = Text3D:INVALID_3DTEXT_ID;
}

stock IsValid3DTextLabel(Text3D:textid)
{
	if(textid != Text3D:INVALID_3DTEXT_ID) return 1;
	else return 0;
}

public OnGameModeInit()
{
	gCurDay = GetDayNumber();
	printf("Current day: %d",gCurDay);
	mysql_connect(MYSQLHOST, MYSQLUSER, MYSQLDABE, MYSQLPASS);
	new mi,h,addob;
	gettime(h,mi,gCurHour);
	SetWorldTime(h);
	if(mysql_ping()==1)
	{
	    mysql_debug(0);
		print("Соединение с Mysql сервером установлено");
	}
	else
	{
		print("Ошибка соединеиня с Mysql сервером");
		SendRconCommand("exit");
		GameModeExit();
		return 1;
	}
	CreateTextDraws();
	LoadWood();
	LoadMine();
	//UsePlayerPedAnims();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	ManualVehicleEngineAndLights();
	LimitGlobalChatRadius(13.0);
	LimitPlayerMarkerRadius(12.0);
	SendRconCommand("Western State | v-sampe.ru");
	SetGameModeText("Western State RP | v-sampe.ru");
	mysql_query("SET CHARACTER SET cp1251");
	//Остальные обнуления
	for(new i;i<MAX_VEHICLES;i++)
	{
	    //if(!gVehicles[i][vFuel]) gVehicles[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		gVehicleDriver[i] = INVALID_PLAYER_ID;
		gVehicles[i][vOwnerid] = INVALID_PLAYER_ID;
		gVehicles[i][vID] = INVALID_VEHICLE_ID;
		gCars[i][carVid] = INVALID_VEHICLE_ID;
	}

	for(new i;i<20;i++)
	{
		if(i<10)
		{
			gTruckLoadTurn[0][i] = INVALID_PLAYER_ID;
			gTruckLoadTurn[1][i] = INVALID_PLAYER_ID;
		}
		gDSTurn[i] = INVALID_PLAYER_ID;
	}
	LoadServerData();
	CreateComputer();
	AddPlayerClass(36,0.0,0.0,5.0,0.0,0,0,0,0,0,0);
	//Авто (НЕ В КОЕМ СЛУЧАЕ НЕ СОЗДАВАТЬ АВТО ВНАЧАЛЕ / ВСЕРЕДИНЕ)
	/*aBus[0] = AddStaticVehicle(431,1065.5126,-1740.3846,13.5701,269.6766,-1,-1); // bus_lvl1
	AddStaticVehicle(431,1065.3364,-1746.2484,13.5514,269.2426,-1,-1); // bus_lvl1
	AddStaticVehicle(431,1065.4845,-1752.0958,13.5418,270.1455,-1,-1); // bus_lvl1
	aBus[1] = AddStaticVehicle(431,1065.4896,-1758.0294,13.5138,269.1935,3,3); // bus_lvl2
	AddStaticVehicle(431,1065.4841,-1763.8165,13.4912,270.0736,3,3); // bus_lvl2
	AddStaticVehicle(431,1065.3090,-1769.6989,13.4643,270.3407,3,3); // bus_lvl2
	aBus[2] = AddStaticVehicle(437,1095.9595,-1772.5842,13.4802,89.6331,-1,-1); // bus_lvl3
	AddStaticVehicle(437,1095.8929,-1766.7120,13.4865,89.8746,-1,-1); // bus_lvl3
	aBus[3] = AddStaticVehicle(437,1095.8616,-1760.8796,13.4898,90.3470,-1,-1); // bus_lvl3*/
	aBus[0] = AddStaticVehicleEx(431,1065.5126,-1740.3846,13.5701,269.6766,-1,-1,30); // bus_lvl1
	AddStaticVehicleEx(431,1065.3364,-1746.2484,13.5514,269.2426,-1,-1,30); // bus_lvl1
	AddStaticVehicleEx(431,1065.4845,-1752.0958,13.5418,270.1455,-1,-1,30); // bus_lvl1
	AddStaticVehicleEx(431,1065.4896,-1758.0294,13.5138,269.1935,3,3,30); // bus_lvl2
	AddStaticVehicleEx(431,1065.4841,-1763.8165,13.4912,270.0736,3,3,30); // bus_lvl2
	AddStaticVehicleEx(431,1065.3090,-1769.6989,13.4643,270.3407,3,3,30); // bus_lvl2
	AddStaticVehicleEx(437,1095.9595,-1772.5842,13.4802,89.6331,-1,-1,30); // bus_lvl3
	AddStaticVehicleEx(437,1095.8929,-1766.7120,13.4865,89.8746,-1,-1,30); // bus_lvl3
	AddStaticVehicleEx(431,-1974.2617,105.0518,27.7845,90.0732,75,59,30); // bus
	AddStaticVehicleEx(431,-1974.1754,101.4730,27.7883,91.0329,92,72,30); // bus
	AddStaticVehicleEx(431,-1974.1790,98.2264,27.7928,91.0322,47,74,30); // bus
	AddStaticVehicleEx(431,-1974.1078,95.0183,27.7903,90.7128,55,83,30); // bus
	AddStaticVehicleEx(431,-1974.0328,91.7896,27.7900,90.5819,59,83,30); // bus
	AddStaticVehicleEx(431,-1973.9318,88.5459,27.7891,90.6637,71,87,30); // bus
	AddStaticVehicleEx(431,-1973.8425,85.5222,27.7924,90.2029,82,87,30); // bus
	AddStaticVehicleEx(431,-1973.8335,82.6077,27.7893,90.2947,71,59,30); // bus
	AddStaticVehicleEx(431,-1973.8757,79.5791,27.7921,90.3179,75,59,30); // bus
	aBus[1] = AddStaticVehicleEx(437,1095.8616,-1760.8796,13.4898,90.3470,-1,-1,30); // bus_lvl3
	aTruck[0][0] = AddStaticVehicleEx(403,-469.0925,-473.1735,25.8117,179.6118,99,110,900); // truck_lvl1
	AddStaticVehicleEx(403,-474.1475,-473.0745,25.8234,179.0125,9,125,900); // truck_lvl1
	AddStaticVehicleEx(403,-479.4808,-473.1855,25.8218,180.7846,71,59,900); // truck_lvl1
	AddStaticVehicleEx(403,-484.3706,-473.1215,25.8190,177.9315,55,109,900); // truck_lvl1
	AddStaticVehicleEx(403,-489.1335,-473.2111,25.7615,178.1487,26,115,900); // truck_lvl1
	AddStaticVehicleEx(403,-539.3622,-474.0030,26.1237,177.7859,62,28,900); // truck
	AddStaticVehicleEx(403,-544.5037,-473.0396,26.1240,179.1537,62,28,900); // truck
	AddStaticVehicleEx(403,-549.5845,-472.8242,26.1238,179.5340,62,28,900); // truck
	AddStaticVehicleEx(403,-554.6649,-472.9566,26.1258,178.0499,62,28,900); // truck
	AddStaticVehicleEx(403,-559.8219,-472.9081,26.1271,178.3835,62,28,900); // truck
	AddStaticVehicleEx(403,-564.6916,-472.8824,26.1269,178.4194,62,28,900); // truck
	aTruck[0][1] = AddStaticVehicleEx(403,-494.5827,-473.3059,25.7617,178.9194,19,8,900); // truck_lvl1
	aTruck[1][1] = AddStaticVehicleEx(514,-504.5151,-473.8123,26.1642,178.1761,96,41,900); // truck_lvl2
	AddStaticVehicleEx(514,-509.7253,-473.7090,26.1641,178.1126,103,5,900); // truck_lvl2
	AddStaticVehicleEx(514,-514.6749,-473.6663,26.1643,179.4919,114,114,900); // truck_lvl2
	AddStaticVehicleEx(514,-519.7073,-473.7448,26.1029,179.0666,50,31,900); // truck_lvl2
	AddStaticVehicleEx(514,-524.4808,-473.6838,26.1098,180.3333,99,119,900); // truck_lvl2
	aTruck[2][0] = AddStaticVehicleEx(514,-529.6729,-473.9480,26.1133,179.1224,35,108,900); // truck_lvl2
	AddStaticVehicleEx(515,-551.8542,-499.3320,26.5812,2.8824,57,32,900); // truck_lvl3
	AddStaticVehicleEx(515,-546.5049,-499.1800,26.5756,359.8683,71,20,900); // truck_lvl3
	AddStaticVehicleEx(515,-541.1127,-499.1738,26.5794,0.2357,84,93,900); // truck_lvl3
	AddStaticVehicleEx(515,-535.5409,-499.1789,26.5703,359.4540,93,40,900); // truck_lvl3
	AddStaticVehicleEx(515,-513.1154,-499.4394,26.5723,359.2873,95,86,900); // truck_lvl3
	aTruck[2][1] = AddStaticVehicleEx(515,-507.4083,-499.2944,26.5762,359.8493,33,105,900); // truck_lvl3
	aTaxi[0] = AddStaticVehicleEx(420,1279.4307,-1832.5129,13.1630,89.0221,6,6,900); // taxi
	AddStaticVehicleEx(420,1278.9377,-1795.4553,13.0068,87.4217,6,6,900); // taxi
	AddStaticVehicleEx(420,1279.4341,-1799.2744,12.9921,82.6579,6,6,900); // taxi
	AddStaticVehicleEx(420,1278.8439,-1804.9135,12.9918,93.6691,6,6,900); // taxi
	AddStaticVehicleEx(420,1279.3879,-1811.8484,12.9946,89.6135,6,6,900); // taxi
	AddStaticVehicleEx(420,1260.7161,-1794.9956,13.0305,184.5284,6,6,900); // taxi
	AddStaticVehicleEx(420,1266.3860,-1795.4166,13.0197,180.5436,6,6,900); // taxi
	AddStaticVehicleEx(420,1271.0792,-1795.6670,13.0121,179.0659,6,6,900); // taxi
	AddStaticVehicleEx(420,1198.5874,-1827.7423,13.0175,273.0919,6,6,900); // taxi
	AddStaticVehicleEx(420,1197.9106,-1831.5488,13.0051,273.0247,6,6,900); // taxi
	AddStaticVehicleEx(420,1197.5557,-1835.4008,13.0098,270.8376,6,6,900); // taxi
	AddStaticVehicleEx(438,-1976.9308,171.0926,27.6965,90.8432,6,76,900); // taxi
	AddStaticVehicleEx(438,-1977.0186,173.8885,27.6929,91.4295,6,76,900); // taxi
	AddStaticVehicleEx(438,-1976.9823,176.5466,27.6897,90.1423,6,76,900); // taxi
	AddStaticVehicleEx(438,-1977.0211,179.0512,27.6925,91.7943,6,76,900); // taxi
	AddStaticVehicleEx(438,-1977.1218,181.8764,27.6899,91.1119,6,76,900); // taxi
	AddStaticVehicleEx(438,-1977.3246,184.7602,27.6906,91.1435,6,76,900); // taxi
	AddStaticVehicleEx(438,-1977.4196,187.3457,27.6921,91.3429,6,76,900); // taxi
	AddStaticVehicleEx(438,-1977.4862,189.8986,27.6908,90.5097,6,76,900); // taxi
	AddStaticVehicleEx(438,-1977.3994,192.5732,27.6801,88.1553,6,76,900); // taxi
	aTaxi[1] = AddStaticVehicleEx(420,1279.4696,-1823.6371,13.1650,89.4813,6,6,900); // taxi
	aMech[0] = AddStaticVehicleEx(525,1629.9731,-1107.3790,23.7770,269.0417,1,1,900); // mech1
	AddStaticVehicleEx(525,1629.4841,-1103.1021,23.7909,269.0558,1,1,900); // mech
	AddStaticVehicleEx(525,1629.2927,-1098.5747,23.7868,267.8041,1,1,900); // mech
	AddStaticVehicleEx(525,1629.7563,-1094.1249,23.7804,270.0126,1,1,900); // mech
	AddStaticVehicleEx(525,1629.6484,-1089.6924,23.7825,268.6381,1,1,900); // mech
	AddStaticVehicleEx(525,1629.6514,-1085.4105,23.7888,269.7866,1,1,900); // mech
	AddStaticVehicleEx(525,1650.0527,-1080.3723,23.7779,90.1558,1,1,900); // mech
	AddStaticVehicleEx(525,1649.8688,-1084.6675,23.7874,89.6070,1,1,900); // mech
	AddStaticVehicleEx(525,1649.8636,-1089.0616,23.7756,89.4469,1,1,900); // mech
	AddStaticVehicleEx(525,1649.8226,-1093.4200,23.7847,89.4492,1,1,900); // mech
	AddStaticVehicleEx(525,1649.7798,-1097.9421,23.7892,89.4507,1,1,900); // mech
	AddStaticVehicleEx(525,1649.7368,-1102.4625,23.7936,89.4489,1,1,900); // mech
	AddStaticVehicleEx(525,1649.6962,-1106.7177,23.7977,89.4471,1,1,900); // mech
	AddStaticVehicleEx(525,1649.6538,-1111.1470,23.8028,89.4456,1,1,900); // mech
	AddStaticVehicleEx(525,1657.5012,-1111.4420,23.7869,269.4698,1,1,900); // mech
	AddStaticVehicleEx(525,1657.5392,-1107.2997,23.7973,269.4655,1,1,900); // mech
	AddStaticVehicleEx(525,1657.5796,-1102.9006,23.8014,269.4637,1,1,900); // mech
	AddStaticVehicleEx(525,1657.6230,-1098.2303,23.8014,269.4638,1,1,900); // mech
	AddStaticVehicleEx(525,1657.6656,-1093.6613,23.8055,269.4624,1,1,900); // mech
	AddStaticVehicleEx(525,1657.7426,-1089.2646,23.8144,269.2196,1,1,900); // mech
	AddStaticVehicleEx(525,1657.8044,-1084.7079,23.8144,269.2196,1,1,900); // mech
	aMech[1] = AddStaticVehicleEx(525,1657.8617,-1080.4961,23.8141,269.2154,1,1,900); // mech
	aProduct[0] = AddStaticVehicleEx(578,2445.9709,-2115.5151,14.1740,1.5377,1,1,900); // product_delivery_DFT
	AddStaticVehicleEx(578,2450.9590,-2115.3340,14.1750,1.1378,1,1,900); // product_delivery_DFT
	AddStaticVehicleEx(578,2456.0015,-2115.1748,14.1733,1.6843,1,1,900); // product_delivery_DFT
	aProduct[1] = AddStaticVehicleEx(578,2461.1812,-2115.0378,14.1741,1.4003,1,1,900); // product_delivery_DFT
	/*for(new i=aTruck[0][0]; i<= aTruck[2][1];i++)
	{
		if(!gVehicles[i][vFuel]) gVehicles[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		gVehicles[i][vHealth] = 1000.0;
		gVehicles[i][vOwnerid] = INVALID_PLAYER_ID;
		gVehicles[i][vLock] = 0;
		gVehicles[i][vID] = i;
	}
	for(new i=aTaxi[0]; i<= aTaxi[1];i++)
	{
		if(!gVehicles[i][vFuel]) gVehicles[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		gVehicles[i][vHealth] = 1000.0;
		gVehicles[i][vOwnerid] = INVALID_PLAYER_ID;
		gVehicles[i][vLock] = 0;
		gVehicles[i][vID] = i;
	}*/
	//Инструкторские
	aInstructor[0] = AddStaticVehicleEx(426,-2064.4763,-83.9578,34.9072,180.3327,103,103,900); // instructor_car
	AddStaticVehicleEx(426,-2068.7195,-84.2227,34.9070,179.1029,103,103,900); // instructor_car
	AddStaticVehicleEx(426,-2072.8586,-84.1812,34.9079,179.3012,103,103,900); // school
	AddStaticVehicleEx(426,-2076.7844,-84.0811,34.9070,179.1321,103,103,900); // school
	AddStaticVehicleEx(426,-2081.0637,-84.0294,34.9071,178.8306,103,103,900); // school
	AddStaticVehicleEx(426,-2085.3965,-84.0140,34.9071,179.4417,103,103,900); // school
	AddStaticVehicleEx(426,-2089.6570,-83.8969,34.9069,179.9201,103,103,900); // school
	AddStaticVehicleEx(426,-2093.5469,-83.8435,34.9072,179.9613,103,103,900); // school
	AddStaticVehicleEx(426,-2062.5479,-107.9437,35.0666,180.0183,103,103,900); //
	AddStaticVehicleEx(426,-2072.5149,-108.5107,35.0661,178.3475,103,103,900); //
	AddStaticVehicleEx(426,-2081.9304,-108.6051,35.0633,179.7431,103,103,900); //
	AddStaticVehicleEx(487,-2022.7490,-146.7416,35.4975,74.7317,103,1,900); //
	AddStaticVehicleEx(487,-2022.8062,-133.2469,35.4544,58.9670,103,1,900); //
	aInstructor[1] = AddStaticVehicleEx(426,-2091.1855,-108.1634,35.0636,179.4700,103,103,900); //
	//Медики LS
	aHospital[0][0] = AddStaticVehicleEx(416,1178.1208,-1308.4890,13.9971,267.5370,1,3,900); // hospital
	AddStaticVehicleEx(416,1183.7217,-1315.4930,13.7208,177.4501,1,3,900); // hospital
	AddStaticVehicleEx(416,1183.3890,-1332.6063,13.7284,180.5732,1,3,900); // hospital
	aHospital[0][1] = AddStaticVehicleEx(416,1179.0024,-1338.7366,13.9911,269.5879,1,3,900); // hospital
	aHospital[2][0] = AddStaticVehicleEx(416,1616.9485,1839.7766,10.9706,358.9094,1,3,900); // LV
	AddStaticVehicleEx(416,1612.5883,1839.6746,10.9737,359.1996,1,3,900); // LV
	AddStaticVehicleEx(416,1608.4215,1839.7316,10.9727,359.9915,1,3,900); // LV
	AddStaticVehicleEx(416,1604.2671,1839.6920,10.9785,0.6400,1,3,900); // LV
	AddStaticVehicleEx(416,1600.0608,1839.7880,10.9723,0.5822,1,3,900); // LV
	aHospital[2][1] = AddStaticVehicleEx(416,1595.7424,1839.6642,10.9720,0.6194,1,3,900); // LV
	aHospital[1][0] = AddStaticVehicleEx(416,-2691.3818,589.3907,14.6058,322.5470,1,3,900); // SF1
	AddStaticVehicleEx(416,-2685.8813,586.1801,14.6056,349.3502,1,3,900); // SF1
	AddStaticVehicleEx(416,-2679.4211,585.5439,14.6043,359.6515,1,3,900); // SF1
	AddStaticVehicleEx(416,-2635.6680,586.6409,14.6033,11.8443,1,3,900); // SF1
	AddStaticVehicleEx(416,-2628.8210,587.8708,14.6030,10.9003,1,3,900); // SF1
	aHospital[1][1] = AddStaticVehicleEx(416,-2621.2273,589.3113,14.6027,10.3721,1,3,900); // SF1
	//ВВС
	/*AddStaticVehicleEx(432,278.1998,1956.2650,17.6512,267.6799,12,62,900); // tank CB
	AddStaticVehicleEx(432,278.0634,1989.5869,17.6509,269.9026,13,66,900); // tank CB
	AddStaticVehicleEx(432,276.5450,2023.8059,17.6510,268.5060,52,100,900); // tank CB*/
	aArmy1[0] = AddStaticVehicleEx(470,278.3864,1949.4484,17.6330,268.4811,58,77,900); // car CB
	AddStaticVehicleEx(470,278.1216,1961.2740,17.6303,268.2277,58,77,900); // car CB
	AddStaticVehicleEx(470,277.7153,1995.6267,17.6347,270.3250,58,77,900); // car CB
	AddStaticVehicleEx(470,278.5241,1983.1259,17.6319,270.3934,58,77,900); // car CB
	AddStaticVehicleEx(470,276.7611,2029.0687,17.6339,268.2755,58,77,900); // car CB
	AddStaticVehicleEx(470,276.9034,2015.8909,17.6311,269.0788,58,77,900); // car CB
	AddStaticVehicleEx(433,363.6293,1906.9233,18.0772,179.7599,32,124,-1); // car CB
	aArmy1[1] = AddStaticVehicleEx(497,234.3897,1986.6165,25.8980,1.7555,236,16,900); // maverick CB
	aArmy2[0] = AddStaticVehicleEx(497,364.9075,2538.2505,16.8360,181.4555,236,16,900); // MAVERICK BBC
	AddStaticVehicleEx(520,327.0137,2538.1475,17.5300,179.9892,71,35,900); // gidra
	AddStaticVehicleEx(520,290.0973,2536.6250,17.5434,182.7577,107,10,900); // gidra
	/*AddStaticVehicleEx(425,366.1024,2460.5054,17.0422,0.2221,56,106,900); // hunter
	AddStaticVehicleEx(425,332.1692,2460.0532,17.0506,0.1494,99,51,900); // hunter*/
	AddStaticVehicleEx(520,188.5631,2539.9128,17.2821,179.4396,37,126,900); // gidra
	AddStaticVehicleEx(520,150.2627,2539.8372,17.2586,179.0216,99,118,900); // gidra
	AddStaticVehicleEx(520,93.4664,2452.0037,17.2076,0.3587,119,101,900); // gidra
	AddStaticVehicleEx(433,389.5696,2536.3906,17.0440,179.1073,84,29,-1); // gruz
	AddStaticVehicleEx(470,303.0540,2466.8909,16.4903,89.4160,57,79,900); // car BBC
	AddStaticVehicleEx(470,302.9773,2457.0703,16.4880,87.8985,58,77,900); // car BBC
	AddStaticVehicleEx(470,302.8240,2446.4553,16.4964,89.1945,58,77,900); // car BBC
	AddStaticVehicleEx(470,302.3978,2435.9561,16.4887,89.8699,58,77,900); // car BBC
	AddStaticVehicleEx(470,271.3999,2458.0125,16.4842,270.0651,58,77,900); // car BBC
	aArmy2[1] = AddStaticVehicleEx(470,271.1644,2467.7969,16.4852,268.7523,58,77,900); // car BBC
	//LSPD
	aLSPD[0] = AddStaticVehicleEx(596,1595.6506,-1711.8431,5.6183,359.8867,0,1,900); // lspdcar
	AddStaticVehicleEx(596,1591.7241,-1711.8275,5.6235,359.8774,0,1,900); // lspdcar
	AddStaticVehicleEx(596,1587.4192,-1711.8121,5.6188,359.3947,0,1,900); // lspdcar
	AddStaticVehicleEx(596,1583.4957,-1711.8350,5.5571,0.8552,0,1,900); // lspdcar
	AddStaticVehicleEx(596,1578.6215,-1711.8555,5.6216,0.8517,0,1,900); // lspdcar
	AddStaticVehicleEx(596,1574.6592,-1711.8396,5.6250,0.0291,0,1,900); // lspdcar
	AddStaticVehicleEx(596,1570.1732,-1711.8813,5.5593,0.0281,0,1,900); // lspdcar
	AddStaticVehicleEx(599,1564.6235,-1711.8700,6.0872,359.2119,0,1,900); // lspdranger
	AddStaticVehicleEx(596,1558.6179,-1711.8911,5.5346,359.9999,0,1,900); // lspdcar
	AddStaticVehicleEx(599,1546.8105,-1662.9476,6.0823,89.9610,0,1,900); // lspdranger
	AddStaticVehicleEx(599,1546.8788,-1659.0616,6.0797,89.2484,0,1,900); // lspdranger
	AddStaticVehicleEx(523,1548.1615,-1669.5220,5.4618,112.7056,0,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.2115,-1671.5839,5.4610,120.0000,0,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.2952,-1673.6007,5.4590,114.6303,0,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.1531,-1675.7496,5.4518,120.6376,0,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.1145,-1677.8777,5.4414,118.0241,0,1,900); // lspdmoto
	AddStaticVehicleEx(427,1538.8373,-1645.3999,5.9671,180.1406,0,1,900); // lspdswat
	AddStaticVehicleEx(528,1534.7966,-1644.2129,5.8976,179.5976,0,1,900); // lspdbtr
	AddStaticVehicleEx(601,1530.4061,-1644.6962,5.6965,178.8003,0,1,900); // lspdbtr
	AddStaticVehicleEx(427,1529.1628,-1688.1145,6.0276,270.2883,0,1,900); // lspd427
	addob = AddStaticVehicleEx(482,1546.3385,-1654.9017,6.0070,90.5229,0,0,-1); //  буритто
	//AttachDynamicObjectToVehicle(CreateDynamicObject(19420,0.0,0.0,0.0,0.0,0.0,0.0),addob,0.0,0.8,0.9,0.0,0.0,0.0);
	AddStaticVehicleEx(497,1549.4730,-1641.8416,28.5790,90.0711,0,1,900); // lspd_heli
	aLSPD[1] = AddStaticVehicleEx(427,1529.0786,-1683.8983,6.0236,270.4686,0,1,900); // lspd427
	//SFPD
	aSFPD[0] = AddStaticVehicleEx(601,-1639.2742,670.0042,-5.4486,269.8602,0,1,900); // sfpdvoda
	AddStaticVehicleEx(427,-1639.0233,682.1505,-5.0854,270.1815,0,1,900); // sfpdswat
	AddStaticVehicleEx(427,-1638.9888,686.3229,-5.0856,270.0407,0,1,900); // sfpdswat
	AddStaticVehicleEx(599,-1620.8568,692.8153,-4.9987,180.1635,0,1,900); // sfpdranger
	AddStaticVehicleEx(599,-1616.5930,692.8578,-5.0127,177.9342,0,1,900); // sfpdranger
	AddStaticVehicleEx(599,-1612.8293,692.7169,-5.0470,179.3193,0,1,900); // sfpdranger
	AddStaticVehicleEx(528,-1600.0597,676.2303,-5.1872,1.3288,0,1,900); // sfpdbtr
	AddStaticVehicleEx(528,-1596.2113,676.2355,-5.1945,356.3854,0,1,900); // sfpdbtr
	AddStaticVehicleEx(597,-1572.9147,706.0131,-5.4700,91.6360,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.7220,710.3838,-5.4738,90.0642,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.8831,714.5292,-5.5070,89.9968,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.8605,718.1851,-5.4748,91.9907,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.9169,722.1935,-5.4729,87.0568,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.6735,726.5764,-5.4806,89.1766,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.6223,730.6839,-5.4703,86.7548,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.2717,742.8502,-5.4749,91.1999,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.2643,738.7764,-5.4715,91.3459,0,1,900); // sfpdcar
	AddStaticVehicleEx(597,-1572.7437,734.6852,-5.5109,91.2371,0,1,900); // sfpdcar
	AddStaticVehicleEx(523,-1588.2140,750.4854,-5.6770,180.7430,0,1,900); // sfpdmoto
	AddStaticVehicleEx(523,-1592.1270,750.2172,-5.6754,177.9434,0,1,900); // sfpdmoto
	AddStaticVehicleEx(523,-1595.9806,750.4556,-5.6752,180.8003,0,1,900); // sfpdmoto
	AddStaticVehicleEx(523,-1600.3767,750.3168,-5.6756,177.7568,0,1,900); // sfpdmoto
	AddStaticVehicleEx(523,-1604.4688,750.4863,-5.6745,169.9970,0,1,900); // sfpdmoto
	addob = AddStaticVehicleEx(482,-1622.8169,653.5810,-5.1181,89.7575,0,0,-1); //  буритто
	AttachDynamicObjectToVehicle(CreateDynamicObject(19420,0.0,0.0,0.0,0.0,0.0,0.0),addob,0.0,0.8,0.9,0.0,0.0,0.0);
	aSFPD[1] = AddStaticVehicleEx(497,-1679.0399,705.5018,30.7489,91.9520,0,1,900); // sfpdvert
	//LVPD
	aLVPD[0] = AddStaticVehicleEx(528,2268.2695,2430.0938,3.3171,358.6068,0,1,900); // lvpdbtr
	AddStaticVehicleEx(528,2263.9670,2430.1416,3.3177,1.4797,0,1,900); // lvpdbtr
	AddStaticVehicleEx(601,2246.4668,2430.2537,3.0330,358.8506,0,1,900); // lvpdbtrvoda
	AddStaticVehicleEx(427,2240.3972,2442.6682,3.4036,271.4677,0,1,900); // lvpdswat
	AddStaticVehicleEx(427,2240.4106,2447.0754,3.4058,270.0402,0,1,900); // lvpdswat
	AddStaticVehicleEx(599,2272.5317,2473.7097,3.4714,0.1665,0,1,900); // lvpdranger
	AddStaticVehicleEx(599,2277.1033,2473.7627,3.4720,358.9612,0,1,900); // lvpdranger
	AddStaticVehicleEx(599,2281.4683,2473.8914,3.4715,359.7398,0,1,900); // lvpdranger
	AddStaticVehicleEx(598,2298.0623,2464.5388,3.0151,270.2421,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2297.9556,2460.4087,3.0232,271.0115,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2298.2161,2455.8787,3.0152,270.4524,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2298.2314,2451.5583,3.0229,269.8048,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2314.8003,2455.3889,3.0077,91.1429,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2314.8572,2460.4841,3.0074,91.8853,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2314.9209,2465.3906,3.0045,91.5347,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2315.1702,2470.2319,3.0205,89.5300,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2315.0566,2475.4482,3.0461,89.8078,0,1,900); // lvpdcar
	AddStaticVehicleEx(598,2314.9263,2480.1689,3.0197,89.2964,0,1,900); // lvpdcar
	AddStaticVehicleEx(523,2298.9216,2429.1909,2.8418,4.5826,0,1,900); // lvpdmoto
	AddStaticVehicleEx(523,2303.5938,2429.3633,2.8414,1.8499,0,1,900); // lvpdmoto
	AddStaticVehicleEx(523,2307.9351,2429.3860,2.8416,357.4909,0,1,900); // lvpdmoto
	AddStaticVehicleEx(523,2312.2292,2429.5088,2.8375,2.2066,0,1,900); // lvpdmoto
	AddStaticVehicleEx(523,2316.3352,2429.6118,2.8396,357.8275,0,1,900); // lvpdmoto
	AddStaticVehicleEx(497,2321.7639,2478.5476,38.9019,182.9352,0,1,900); // lvpdvert
	addob = AddStaticVehicleEx(482,2268.0413,2473.4277,3.3912,359.7198,0,0,-1); //  буритто
	AttachDynamicObjectToVehicle(CreateDynamicObject(19420,0.0,0.0,0.0,0.0,0.0,0.0),addob,0.0,0.8,0.9,0.0,0.0,0.0);
	aLVPD[1] = AddStaticVehicleEx(497,2334.9746,2477.6904,38.8246,179.8571,0,1,900); // lvpdvert
	aNews[0] = AddStaticVehicleEx(582,-1825.4116,561.1965,35.2218,120.4942,1,86,900); // NN_car
	AddStaticVehicleEx(582,-1823.7255,558.3981,35.2202,121.9299,1,86,900); // NN_car
	AddStaticVehicleEx(582,-1822.0033,555.7914,35.2193,121.7408,1,86,900); // NN_car
	AddStaticVehicleEx(582,-1820.3096,553.1531,35.2215,121.2978,1,86,900); // NN_car
	AddStaticVehicleEx(582,-1818.5457,550.3917,35.2202,121.5019,1,86,900); // NN_car
	AddStaticVehicleEx(582,-1816.9834,547.7856,35.2226,121.6938,1,86,900); // NN_car
	AddStaticVehicleEx(488,-1786.8878,530.5458,35.2060,340.7338,1,86,900); // helic
	aNews[1] = AddStaticVehicleEx(582,-1815.3400,545.1140,35.2195,121.1620,1,86,900); // NN_car
	
 	aRM[0] = AddStaticVehicleEx(409,950.2869873,1747.2690430,8.5730000,0.0000000,0,0,600); //Stretch
	AddStaticVehicleEx(580,983.9039917,1745.6120605,8.6479998,70.0000000,0,0,600); //Sentinel
	AddStaticVehicleEx(580,983.7520142,1742.4499512,8.6479998,69.9992676,0,0,600); //Sentinel
	AddStaticVehicleEx(580,983.6580200,1739.0510254,8.6479998,69.9938965,0,0,600); //Sentinel
	AddStaticVehicleEx(580,983.4470215,1735.7709961,8.6479998,69.9938965,0,0,600); //Sentinel
	AddStaticVehicleEx(579,983.1329956,1728.6610107,8.7539997,90.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,983.1680298,1725.3719482,8.7539997,90.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,983.1459961,1721.9420166,8.7539997,90.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,951.0839844,1724.6440430,8.7469997,0.0000000,0,0,600); //Huntley
	aRM[1] = AddStaticVehicleEx(579,951.1199951,1716.3110352,8.7469997,0.0000000,0,0,600); //Huntley
	aYak[0] = AddStaticVehicleEx(529,2591.2509766,1862.6269531,10.5579996,90.0000000,0,0,600); //Willard
	AddStaticVehicleEx(529,2591.1950684,1859.4029541,10.5579996,90.0000000,0,0,600); //Willard
	AddStaticVehicleEx(529,2591.1950684,1853.0419922,10.5579996,90.0000000,0,0,600); //Willard
	AddStaticVehicleEx(529,2591.1420898,1849.7810059,10.5579996,90.0000000,0,0,600); //Willard
	AddStaticVehicleEx(579,2591.1499023,1815.0839844,10.9189997,90.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,2591.1520996,1811.9360352,10.9189997,90.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,2591.1379395,1808.7640381,10.9189997,90.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,2591.1010742,1805.4830322,10.9189997,90.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,2591.1398926,1802.3669434,10.9189997,90.0000000,0,0,600); //Huntley
	aYak[1] = AddStaticVehicleEx(409,2608.1818848,1812.8599854,10.7449999,0.0000000,0,0,600); //Stretch
	aLCN[0] = AddStaticVehicleEx(445,1475.5429688,2742.3220215,10.8100004,64.9958496,0,0,600); //Admiral
	AddStaticVehicleEx(445,1465.5489502,2750.2041016,10.8100004,29.9992676,0,0,600); //Admiral
	AddStaticVehicleEx(445,1482.1300049,2740.1708984,10.8100004,81.6634521,0,0,600); //Admiral
	AddStaticVehicleEx(445,1489.0389404,2740.0720215,10.8100004,98.3226318,0,0,600); //Admiral
	AddStaticVehicleEx(579,1460.0019531,2813.4069824,10.9230003,0.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,1463.2850342,2813.3649902,10.9189997,0.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,1466.5949707,2813.3369141,10.9189997,0.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,1469.9139404,2813.2780762,10.9189997,0.0000000,0,0,600); //Huntley
	AddStaticVehicleEx(579,1473.3630371,2813.2399902,10.9189997,0.0000000,0,0,600); //Huntley
	aLCN[1] = AddStaticVehicleEx(409,1474.7860107,2773.1359863,10.7449999,0.0000000,0,0,600); //Stretch
	aMarLS[0] =	AddStaticVehicleEx(579,1404.9029541,-1793.9050293,13.6459999,90.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(579,1404.8540039,-1797.6750488,13.6459999,90.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(579,1404.8189697,-1801.4680176,13.6459999,90.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(436,1403.9649658,-1773.7790527,13.4250002,90.0000000,25,25,600); //Previon
	AddStaticVehicleEx(409,1454.7209473,-1748.5839844,13.4720001,0.0000000,25,25,600); //Stretch
	AddStaticVehicleEx(436,1403.8940430,-1776.9980469,13.4250002,90.0000000,25,25,600); //Previon
	AddStaticVehicleEx(436,1403.8549805,-1780.1099854,13.4250002,90.0000000,25,25,600); //Previon
	aMarLS[1] = AddStaticVehicleEx(436,1403.8079834,-1783.4460449,13.4250002,90.0000000,25,25,600); //Previon
	aMarSF[0] =	AddStaticVehicleEx(409,-2756.6210938,380.2999878,4.2610002,0.0000000,25,25,600); //Stretch
	AddStaticVehicleEx(579,-2736.4570312,388.7269897,4.4660001,90.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(579,-2736.4770508,385.7170105,4.4660001,90.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(579,-2736.4360352,382.4530029,4.4660001,90.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(579,-2736.4360352,379.1319885,4.4660001,90.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(436,-2757.6340332,349.7330017,4.2610002,0.0000000,25,25,600); //Previon
	AddStaticVehicleEx(436,-2757.6000977,356.5060120,4.2610002,0.0000000,25,25,600); //Previon
	AddStaticVehicleEx(436,-2742.1279297,393.2369995,4.2449999,0.0000000,25,25,600); //Previon
	aMarSF[1] = AddStaticVehicleEx(436,-2742.1010742,400.7619934,4.2449999,0.0000000,25,25,600); //Previon
	aMarLV[0] =	AddStaticVehicleEx(436,2375.8449707,2426.2099609,10.6980000,0.0000000,25,25,600); //Previon
	AddStaticVehicleEx(436,2375.8249512,2433.0270996,10.6980000,0.0000000,25,25,600); //Previon
	AddStaticVehicleEx(436,2375.9431152,2440.3491211,10.6980000,0.0000000,25,25,600); //Previon
	AddStaticVehicleEx(436,2375.9309082,2446.8330078,10.6980000,0.0000000,25,25,600); //Previon
	AddStaticVehicleEx(409,2375.0778809,2488.4169922,10.7449999,0.0000000,25,25,600); //Stretch
	AddStaticVehicleEx(579,2383.4541016,2427.9440918,10.9189997,180.0000000,25,25,600); //Huntley
	AddStaticVehicleEx(579,2384.0939941,2462.2451172,10.9189997,179.9981079,25,25,600); //Huntley
	AddStaticVehicleEx(579,2383.4409180,2436.5148926,10.9189997,180.0000000,25,25,600); //Huntley
	aMarLV[1] = AddStaticVehicleEx(579,2383.4440918,2445.8540039,10.9189997,180.0000000,25,25,600); //Huntley
	aPris[0] = AddStaticVehicleEx(579,905.7020264,-922.9910278,42.7000008,181.6652832,25,25,600); //Huntley
	AddStaticVehicleEx(579,910.9290161,-922.5440063,42.7000008,181.6644287,25,25,600); //Huntley
	AddStaticVehicleEx(579,916.1329956,-922.2160034,42.7000008,181.6644287,25,25,600); //Huntley
	AddStaticVehicleEx(579,921.4169922,-921.8150024,42.7000008,181.6644287,25,25,600); //Huntley
	AddStaticVehicleEx(409,925.3129883,-929.4730225,42.5270004,94.9958496,25,25,600); //Stretch
	AddStaticVehicleEx(426,925.3579712,-936.2069702,42.4819984,340.0000000,25,25,600); //Premier
	AddStaticVehicleEx(426,921.7299805,-936.4039917,42.4819984,340.0000000,25,25,600); //Premier
	AddStaticVehicleEx(487,967.4470,-921.4232,45.7656,273.5601,25,25,600); //Premier
	aPris[1] = AddStaticVehicleEx(426,917.8300171,-936.4799805,42.4799995,340.0000000,25,25,600); //Premier
	//Авто на продажу
	aSellCar[0] = AddStaticVehicle(419,1302.8236,-44.6462,1000.8309,24.1577,77,51); // sellcar_0_35000
	AddStaticVehicle(404,1298.0209,-44.9729,1000.7653,33.1011,38,105); // sellcar_0_19000
	AddStaticVehicle(401,1293.8719,-46.5130,1000.7643,32.0864,82,66); // sellcar_0_19000
	AddStaticVehicle(410,1288.7443,-46.0593,1000.6711,25.7565,22,115); // sellcar_0_15000
	AddStaticVehicle(412,1283.7389,-45.3619,1000.8550,28.4571,13,1); // sellcar_0_40000
	AddStaticVehicle(413,1279.5016,-45.6180,1001.1185,24.1778,36,40); // sellcar_0_29000
	AddStaticVehicle(422,1275.0186,-45.9465,1001.0178,24.1488,0,63); // sellcar_0_36000
	AddStaticVehicle(439,1270.6516,-45.7034,1000.9250,21.9071,32,2); // sellcar_0_42000
	AddStaticVehicle(467,1266.4666,-45.6292,1000.7679,25.1875,71,65); // sellcar_0_34000
	AddStaticVehicle(466,1262.1138,-45.7998,1000.7674,24.4194,92,7); // sellcar_0_34000
	AddStaticVehicle(474,1257.1700,-45.8534,1000.7882,25.6300,60,7); // sellcar_0_39000
	AddStaticVehicle(479,1252.1801,-45.7914,1000.8214,26.4010,43,78); // sellcar_0_28000
	AddStaticVehicle(492,1251.4933,-30.1541,1000.8171,15.1447,21,36); // sellcar_0_35000
	AddStaticVehicle(491,1255.8770,-29.7283,1000.8144,17.7180,44,5); // sellcar_0_28000
	AddStaticVehicle(517,1260.7719,-30.0299,1000.8712,25.2982,18,37); // sellcar_0_38000
	AddStaticVehicle(518,1265.2708,-29.3882,1000.6660,27.2057,54,68); // sellcar_0_40000
	AddStaticVehicle(542,1270.5450,-29.6981,1000.7713,26.9645,25,42); // sellcar_0_19000
	AddStaticVehicle(543,1275.3824,-29.8824,1000.8456,27.2854,119,91); // sellcar_0_15000
	AddStaticVehicle(545,1280.0165,-30.3759,1000.8317,29.0543,66,55); // sellcar_0_33000
	AddStaticVehicle(549,1284.8921,-30.2734,1000.7149,29.9158,95,93); // sellcar_0_27000
	AddStaticVehicle(575,1289.2832,-30.1253,1000.6227,27.0103,121,6); // sellcar_0_30000
	AddStaticVehicle(576,1293.4846,-29.0492,1000.6356,29.7778,119,88); // sellcar_0_30000
	AddStaticVehicle(600,1298.7906,-29.1182,1000.6723,31.6127,94,6); // sellcar_0_25000
	AddStaticVehicle(585,1303.9507,-29.4106,1000.6199,31.8209,50,4); // sellcar_0_30000
	aSellCar[1] = AddStaticVehicle(603,1305.3701,-45.3668,1000.8694,23.2538,35,30); // sellcar_1_80000
	AddStaticVehicle(579,1301.1688,-45.3092,1000.9689,25.1178,72,65); // sellcar_1_160000
	AddStaticVehicle(589,1296.9932,-45.6991,1000.6646,22.7531,18,90); // sellcar_1_120000
	AddStaticVehicle(580,1292.9755,-45.7820,1000.8212,22.4272,38,119); // sellcar_1_90000
	AddStaticVehicle(567,1288.7568,-45.4029,1000.8929,21.7554,127,38); // sellcar_1_150000
	AddStaticVehicle(566,1284.7667,-45.7250,1000.8033,19.7257,103,14); // sellcar_1_150000
	AddStaticVehicle(561,1280.7505,-46.0764,1000.8390,22.7251,81,116); // sellcar_1_120000
	AddStaticVehicle(558,1276.7665,-46.2174,1000.6623,21.6428,7,122); // sellcar_1_110000
	AddStaticVehicle(555,1273.0706,-46.2643,1000.6893,22.1643,33,40); // sellcar_1_120000
	AddStaticVehicle(554,1269.2496,-45.8100,1001.1102,19.5006,63,14); // sellcar_1_165000
	AddStaticVehicle(551,1265.0603,-45.6368,1000.8245,19.0549,50,80); // sellcar_1_130000
	AddStaticVehicle(534,1261.2686,-45.7629,1000.7502,20.6767,28,89); // sellcar_1_200000
	AddStaticVehicle(527,1257.7206,-46.3373,1000.7405,20.3040,12,22); // sellcar_1_70000
	AddStaticVehicle(535,1253.8002,-46.1047,1000.7886,19.2233,102,120); // sellcar_1_180000
	AddStaticVehicle(507,1251.5607,-29.7160,1000.8594,20.0748,62,16); // sellcar_1_140000
	AddStaticVehicle(505,1256.2074,-30.0696,1001.1690,19.5139,71,2); // sellcar_1_130000
	AddStaticVehicle(526,1260.3203,-30.3422,1000.7875,18.6489,126,48); // sellcar_1_115000
	AddStaticVehicle(533,1264.0769,-30.4523,1000.7321,19.2512,86,115); // sellcar_1_150000
	AddStaticVehicle(500,1268.0706,-31.4199,1001.1306,17.4927,60,16); // sellcar_1_120000
	AddStaticVehicle(496,1271.6703,-30.5981,1000.7427,19.5604,40,76); // sellcar_1_190000
	AddStaticVehicle(475,1275.4199,-30.2082,1000.8187,13.0102,8,43); // sellcar_1_120000
	AddStaticVehicle(445,1279.0770,-30.1764,1000.8968,16.4704,90,22); // sellcar_1_100000
	AddStaticVehicle(426,1283.1449,-30.0307,1000.7653,16.1860,87,98); // sellcar_1_150000
	AddStaticVehicle(421,1287.2786,-30.1478,1000.9050,18.6064,34,94); // sellcar_1_140000
	AddStaticVehicle(405,1290.9747,-30.4034,1000.8942,18.5090,106,9); // sellcar_1_130000
	AddStaticVehicle(400,1295.2905,-30.5084,1001.1205,20.4823,60,10); // sellcar_1_120000
	aSellCar[2] = AddStaticVehicle(602,1305.9739,-45.2217,1000.8414,22.9231,27,117); // sellcar_2_530000
	AddStaticVehicle(587,1302.3273,-45.5010,1000.7596,24.7975,110,28); // sellcar_2_600000
	AddStaticVehicle(559,1298.7634,-45.7074,1000.6902,24.4487,31,115); // sellcar_2_540000
	AddStaticVehicle(560,1295.2759,-46.0003,1000.7293,23.8502,114,94); // sellcar_2_570000
	AddStaticVehicle(562,1292.0872,-46.0900,1000.6601,21.3363,29,102); // sellcar_2_540000
	AddStaticVehicle(541,1288.6479,-46.5468,1000.6412,24.2069,116,45); // sellcar_2_1100000
	AddStaticVehicle(506,1284.9368,-46.3794,1000.7270,23.6935,40,54); // sellcar_2_850000
	AddStaticVehicle(480,1281.2935,-46.3131,1000.8007,22.6606,74,11); // sellcar_2_600000
	AddStaticVehicle(434,1277.8857,-46.6288,1000.9910,22.0082,115,25); // sellcar_2_2000000
	AddStaticVehicle(477,1273.8201,-45.9291,1000.7811,23.7554,45,55); // sellcar_2_900000
	AddStaticVehicle(415,1270.2792,-46.3135,1000.8000,22.7784,39,7); // sellcar_2_1000000
	AddStaticVehicle(429,1266.5199,-46.2116,1000.7053,20.2264,75,25); // sellcar_2_1000000
	AddStaticVehicle(402,1262.8329,-45.9191,1000.8575,20.3566,27,88); // sellcar_2_900000
	AddStaticVehicle(451,1259.1124,-46.1813,1000.7335,19.4850,113,98); // sellcar_2_1500000
	AddStaticVehicle(411,1254.3438,-46.3438,1000.7497,21.6719,63,92); // sellcar_2_5000000
	aSellCar[3] = AddStaticVehicle(481,1306.4983,-47.1944,1000.5438,25.8685,14,21); // sellcar_3_2000
	AddStaticVehicle(509,1304.6302,-47.2879,1000.5430,23.1620,42,119); // sellcar_3_2100
	AddStaticVehicle(510,1302.6761,-47.5112,1000.6401,25.9649,126,127); // sellcar_3_5000
	AddStaticVehicle(462,1301.2220,-47.4267,1000.6096,26.1954,60,28); // sellcar_3_10000
	AddStaticVehicle(461,1299.1796,-47.1514,1000.6048,25.3737,36,122); // sellcar_3_120000
	AddStaticVehicle(521,1296.7845,-47.1868,1000.5744,19.6370,46,14); // sellcar_3_140000
	AddStaticVehicle(463,1294.9624,-47.2593,1000.5577,22.5673,42,8); // sellcar_3_100000
	AddStaticVehicle(586,1292.9932,-47.3803,1000.5433,20.9233,46,81); // sellcar_3_30000
	AddStaticVehicle(471,1290.3950,-47.6690,1000.5033,10.4175,32,114); // sellcar_3_50000
	AddStaticVehicle(468,1288.1127,-47.8391,1000.6822,17.4002,15,94); // sellcar_3_80000
	aSellCar[4] = AddStaticVehicle(522,1285.8309,-47.5706,1000.5962,24.4852,93,85); // sellcar_3_2500000
	for(new i=aSellCar[0];i<=aSellCar[4];i++)
	{
		if(i >= aSellCar[3]) SetVehicleVirtualWorld(i,4);
		else if(i >= aSellCar[2]) SetVehicleVirtualWorld(i,3);
		else if(i >= aSellCar[1]) SetVehicleVirtualWorld(i,2);
		else if(i >= aSellCar[0]) SetVehicleVirtualWorld(i,1);
		LinkVehicleToInterior(i,18);
	}

    aSkuter[0] = AddStaticVehicleEx(462,2358.7619629,2447.4208984,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.7609863,2448.3601074,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.7871094,2449.2871094,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.8010254,2450.2399902,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.8479004,2451.2729492,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.8181152,2452.3620605,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.8410645,2453.4860840,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.8049316,2454.5190430,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.8420410,2455.6369629,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2358.8449707,2456.7780762,10.4910002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2272.1059570,2425.5119629,10.4910002,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2272.9860840,2425.5371094,10.4910002,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2273.9160156,2425.4809570,10.4910002,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2274.8190918,2425.4130859,10.4910002,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2275.6159668,2425.4790039,10.4910002,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2276.4790039,2425.5568848,10.4910002,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,2277.4069824,2425.4750977,10.4910002,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.2249756,1804.6960449,10.4910002,110.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.2790527,1803.8110352,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.2469482,1802.7700195,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.2419434,1801.7519531,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.2070312,1800.6230469,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.2110596,1799.6920166,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.1750488,1798.6169434,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.0810547,1797.5579834,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.1159668,1796.5429688,10.4910002,109.9951172,1,1,30); //Faggio
	AddStaticVehicleEx(462,1576.0970459,1795.5729980,10.4910002,109.9951172,1,1,30); //Faggio
    AddStaticVehicleEx(462,-2018.9470215,-94.2119980,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2020.0620117,-94.1869965,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2021.1490479,-94.1910019,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2022.3330078,-94.1709976,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2023.5810547,-94.1890030,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2024.7629395,-94.1750031,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2025.8859863,-94.2300034,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2026.9580078,-94.1589966,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2028.1040039,-94.1880035,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2029.4449463,-94.2170029,34.8339996,180.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.5170898,390.9030151,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.4829102,391.9700012,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.4619141,392.9620056,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.4079590,393.9880066,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.3920898,394.9530029,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.3190918,395.9500122,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.3120117,396.9419861,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.3068848,397.9490051,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.3129883,399.0509949,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2714.2568359,400.1015625,4.0370002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2638.6420898,583.3770142,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2639.6359863,583.3629761,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2640.7229004,583.3259888,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2641.7639160,583.2670288,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2642.9099121,583.2789917,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2643.9938965,583.2379761,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2645.1149902,583.2659912,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2646.1831055,583.2260132,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2647.3898926,583.2280273,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-2648.4951172,583.1929932,14.1230001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1532.9339600,646.5809937,6.8490000,80.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1532.9530029,645.6259766,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1532.9890137,644.6220093,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1532.9809570,643.6030273,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1532.9780273,642.5659790,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1533.0080566,641.5640259,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1533.0229492,640.3900146,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1533.0179443,639.1530151,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1532.9940186,638.0510254,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1532.9969482,636.8510132,6.8490000,79.9969482,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.8889771,-622.3270264,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.9400024,-623.8140259,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.8709717,-624.8449707,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.8569946,-626.3040161,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.8790283,-627.3670044,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.8549805,-628.8070068,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.7910156,-629.9320068,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.7670288,-631.3369751,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.7849731,-632.4210205,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1001.7109985,-633.8339844,31.6779995,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.2860107,-540.5609741,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.3759766,-541.7739868,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.3729858,-542.9249878,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.3679810,-543.9199829,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.4390259,-545.0239868,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.4409790,-546.0650024,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.5260010,-547.2620239,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.5209961,-548.2940063,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.4970093,-549.3820190,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,-516.4890137,-550.5809937,25.1940002,270.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1238.9219971,-1732.7559814,13.2550001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1237.9749756,-1732.7070312,13.2550001,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1237.0989990,-1732.6789551,13.2539997,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1236.0360107,-1732.6710205,13.2539997,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1234.9210205,-1732.7209473,13.2530003,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1233.8549805,-1732.7459717,13.2530003,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1232.7060547,-1732.7449951,13.2519999,0.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.7060547,-1873.9730225,13.2309999,60.0000000,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.6369629,-1875.0589600,13.2309999,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.5679932,-1876.2209473,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.4840088,-1877.3950195,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.4940186,-1878.6800537,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.4830322,-1879.9790039,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.4389648,-1881.3280029,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.4790039,-1882.7299805,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.5300293,-1884.1219482,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1698.4959717,-1885.6120605,13.2299995,59.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.6889648,-1681.1409912,13.2309999,89.9963379,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.6760254,-1679.9389648,13.2309999,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.6979980,-1678.5729980,13.2309999,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.6750488,-1677.3900146,13.2309999,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.7249756,-1676.0479736,13.2320004,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.7419434,-1674.9239502,13.2320004,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.7419434,-1660.0739746,13.2320004,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.7459717,-1661.1070557,13.2320004,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.7080078,-1662.0849609,13.2309999,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1762.7120361,-1663.1330566,13.2309999,89.9945068,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.5909424,-1704.7469482,13.2170000,259.9942627,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.6540527,-1703.6569824,13.2170000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.6949463,-1702.5649414,13.2100000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.6979980,-1701.5150146,13.2100000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.7239990,-1700.2399902,13.2170000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.7209473,-1699.0469971,13.2170000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.7330322,-1697.8570557,13.2170000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.6949463,-1696.6009521,13.2170000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.7359619,-1695.4460449,13.2170000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1418.7550049,-1694.4160156,13.2170000,259.9914551,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.5439453,-1322.3919678,13.2370005,89.9913330,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.5350342,-1323.3029785,13.2370005,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.4830322,-1324.1989746,13.2370005,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.5069580,-1325.1579590,13.2370005,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.5080566,-1321.3349609,13.2360001,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.4959717,-1326.2010498,13.2379999,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.4930420,-1327.2850342,13.2379999,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.4859619,-1328.4919434,13.2379999,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.4630127,-1329.6319580,13.2379999,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1214.4630127,-1330.8669434,13.2390003,89.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1546.9129639,-1720.8399658,13.2250004,169.9890137,1,1,30); //Faggio
	AddStaticVehicleEx(462,1547.8480225,-1720.9079590,13.2250004,169.9859619,1,1,30); //Faggio
	AddStaticVehicleEx(462,1548.9799805,-1720.9620361,13.2250004,169.9859619,1,1,30); //Faggio
	AddStaticVehicleEx(462,1550.0830078,-1720.9930420,13.2250004,169.9859619,1,1,30); //Faggio
	AddStaticVehicleEx(462,1551.3060303,-1721.0450439,13.2250004,169.9859619,1,1,30); //Faggio
	AddStaticVehicleEx(462,1552.4389648,-1721.0439453,13.2250004,169.9859619,1,1,30); //Faggio
	AddStaticVehicleEx(462,1143.7139893,-1758.3020020,13.3090000,269.9859619,1,1,30); //Faggio
	AddStaticVehicleEx(462,1143.6850586,-1757.2590332,13.3059998,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1143.7270508,-1756.1899414,13.3059998,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1143.6939697,-1755.1199951,13.2930002,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1143.6870117,-1754.0250244,13.2810001,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1143.7259521,-1752.9659424,13.2679996,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1143.7280273,-1751.8089600,13.2550001,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1146.8559570,-1752.1770020,13.2589998,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1146.8499756,-1753.2020264,13.2709999,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1146.9160156,-1754.5109863,13.2860003,269.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.7969971,-347.1889954,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.7960205,-348.1040039,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.7740479,-349.1050110,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.8020020,-350.1189880,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.8220215,-351.1950073,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.7760010,-352.2000122,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.7750244,-353.3380127,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.8499756,-354.4410095,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.7800293,-355.4110107,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,1047.7509766,-356.5660095,73.6620026,89.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1116.7729492,-1642.2659912,76.0370026,169.9835205,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1115.7189941,-1642.2180176,76.0370026,169.9804688,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1114.7290039,-1642.2790527,76.0370026,169.9804688,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1113.7010498,-1642.2900391,76.0370026,169.9804688,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1112.6770020,-1642.3360596,76.0370026,169.9804688,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1111.5949707,-1642.2969971,76.0370026,169.9804688,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1110.4499512,-1642.3549805,76.0370026,169.9804688,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1109.1130371,-1642.3659668,76.0370026,169.9804688,1,1,30); //Faggio
	AddStaticVehicleEx(462,-1107.9060059,-1642.3819580,76.0370026,169.9804688,1,1,30); //Faggio
	aSkuter[1] = AddStaticVehicleEx(462,-1106.5749512,-1642.4279785,76.0370026,169.9804688,1,1,30); //Faggio
	#include <objects>
	//Чекпоинты
	gCheckpoints[cpUnemployment] = CreateDynamicCP(1810.6814,-1296.5061,27.6719,1.3,0,0,-1,10.0); //Безработица
	//gCheckpoints[cpHire] = CreateDynamicCP(1797.4264,-1299.1569,22.2109,1.3,0,0,-1,10.0); //Безработица
	//gCheckpoints[cpBinco] = CreateDynamicCP(218.0733,-98.5118,1005.2578,1.3,-1,15); //Магаз одежды Бинко

	//Пикапы
	gPickups[pcupUnemploymentInfo] = CreateDynamicPickup(1239,1,-1830.2440,-281.0920,1036.1205);
	CreateDynamicPickup(1275,1,638.9107,1610.9178,-4.1041);
	CreateDynamicPickup(1275,1,-1889.1473,-2230.8853,63.3759);

	CreateDynamicPickup(1275,1,1019.4085,-342.1970,73.9922);//шахтёр
	CreateDynamicPickup(1275,1,-1112.9160,-1666.3573,76.3672);//лесоруб
	
	CreateDynamicPickup(1240,1,-1101.6862,-1639.2487,76.3672);//сердечки
	CreateDynamicPickup(1240,1,1020.2358,-337.4423,73.9922);//сердечки
	CreateDynamicPickup(1240,1,-1981.4244,145.2462,27.6875);//сердечки

	CreateDynamicPickup(1275,1,2568.2566,-1281.5046,1044.1250);
	CreateDynamicPickup(1239,1,1059.3031,-341.4867,73.9922);
	CreateDynamicPickup(1239,1,-1084.7234,-1622.5729,76.3672);
	CreateDynamicPickup(1318,1,555.1915,-1293.4724,17.2482);//Автомагазины
	CreateDynamicPickup(1318,1,507.6233,-1608.4905,16.3576);
	CreateDynamicPickup(1318,1,-1968.6801,619.9734,35.1719);
	CreateDynamicPickup(1318,1,1658.5024,2199.9299,10.8203);
	CreateDynamicPickup(1239,1,2217.3040,-1146.6182,1025.7969);//Пикап рисэпшона
	CreateDynamicPickup(1318,1,2215.1782,-1150.4290,1025.7969,-1,15);//Пикап Выхода из отеля
	CreateDynamicPickup(1239,1,1210.1440,-50.0325,999.2265);//Пикап экзамена АШ
	CreateDynamicPickup(1239,1,593.1306,837.7568,-42.9699);//Пикап киоска
	CreateDynamicPickup(1239,1,-2030.6959,-2330.1057,30.6250);//Пикап киоска
	CreateDynamicPickup(1318,1,2352.0657,-1170.2786,28.0559); //Вход ballas
	CreateDynamicPickup(1318,1,2486.4348,-1644.5369,14.0772); //Вход groove
	CreateDynamicPickup(1318,1,2296.4370,-1882.2383,14.2344); //Вход aztecas
	CreateDynamicPickup(1318,1,2628.1016,-1067.9161,69.7156); //Вход vagos
	CreateDynamicPickup(1318,1,2736.6423,-1952.6158,13.5469); //Вход rifa
	CreateDynamicPickup(1318,1,1525.0891,-72.8142,1054.1859); //Выход для банд
	CreateDynamicPickup(1318,1,2494.0757,-1464.6000,24.0254); //Покупка авто для банд
	CreateDynamicPickup(1239,1,-1829.6392,-278.1113,1036.1205); //Пикап работы в ЦЗ
	CreateDynamicPickup(1239,1,1345.9944,-805.9055,1185.7059); //Пикап столовой
	CreateDynamicPickup(19133,1,312.4241,-165.9406,999.6010); //Пикап аммо в армиях/PD
	CreateDynamicPickup(1239,1,2798.1987,-2393.9775,13.9560); //Пикап заказа товаров для бизнеса
	CreateDynamicPickup(1239,1,2782.9521,-2417.7288,13.6348); //Пикап заказа товаров для доставки товаров

    CreateDynamicPickup(1275,1,-1831.1530,-263.6448,1036.1245);


	for(new i;i<6;i++)	CreateDynamicPickup(19198,1,gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2]);
	//помощь
	gAreas[arHelp][0] = CreateDynamicSphere(1772.1836,-1672.9611,14.4205,3.0);
	gAreas[arHelp][1] = CreateDynamicSphere(1689.5123,-1916.0725,13.5439,3.0);
	gAreas[arHelp][2] = CreateDynamicSphere(1192.3112,-1742.3038,13.5811,3.0);
	//хп
	gAreas[arHEALT][0] = CreateDynamicSphere(-1101.6862,-1639.2487,76.3672,3.0);
	gAreas[arHEALT][1] = CreateDynamicSphere(1020.2358,-337.4423,73.9922,3.0);
	gAreas[arHEALT][2] = CreateDynamicSphere(-1981.4244,145.2462,27.6875,3.0);
	//шахта
	gAreas[arMineMes][0] = CreateDynamicSphere(1156.2096,-331.7195,0.4706,6.0);
	gAreas[arMineMes][1] = CreateDynamicSphere(972.3193,-332.8459,-2.3484,6.0);
	gAreas[arMineMes][2] = CreateDynamicSphere(1018.8712,-435.6537,-0.6542,6.0);
	gAreas[arMinesklad] = CreateDynamicSphere(1051.6567,-323.0804,73.9851,6.0);
	gAreas[arMinezone] = CreateDynamicSphere(1051.6567,-323.0804,73.9851,280.0);
	gAreas[arWoodzone] = CreateDynamicSphere(-1122.4027,-1624.7273,76.3672,280.0);
	//Зоны
	gAreas[arCoalman] = CreateDynamicSphere(638.9107,1610.9178,-4.1041,1.0,2,2);
	gAreas[arWood] = CreateDynamicSphere(-1112.9160,-1666.3573,76.3672,2.0,0,0);
	gAreas[arMine] = CreateDynamicSphere(1019.4085,-342.1970,73.9922,1.0,0,0);
	gAreas[arCoalLoad1] = CreateDynamicSphere(494.8073,787.9619,-22.0785,12.0);
	//gAreas[arCoalLoad2] = CreateDynamicSphere(498.4685,795.7770,-21.9676,2.0);
	//gAreas[arCoalLoad3] = CreateDynamicSphere(507.9470,790.7484,-22.0667,2.0);
	gAreas[arCoalUnload1] = CreateDynamicSphere(696.3429,842.6878,-27.3646,2.0);
	gAreas[arCoalUnload2] = CreateDynamicSphere(683.9480,822.1237,-27.2425,2.0);
	gAreas[arCoalmanLoad1] = CreateDynamicSphere(gCoalManCPs[0][0],gCoalManCPs[0][1],gCoalManCPs[0][2],3.0);
	gAreas[arCoalmanLoad2] = CreateDynamicSphere(gCoalManCPs[1][0],gCoalManCPs[1][1],gCoalManCPs[1][2],3.0);
	gAreas[arCoalmanLoad3] = CreateDynamicSphere(gCoalManCPs[2][0],gCoalManCPs[2][1],gCoalManCPs[2][2],3.0);
	gAreas[arCoalmanUnload1] = CreateDynamicSphere(gCoalManCPs[3][0],gCoalManCPs[3][1],gCoalManCPs[3][2],2.0);
	gAreas[arCoalmanUnload2] = CreateDynamicSphere(gCoalManCPs[4][0],gCoalManCPs[4][1],gCoalManCPs[4][2],2.0);
	gAreas[arCoalCenter] = CreateDynamicCircle(598.9229,850.1863,280.0);
	gAreas[arWoodLoad1] = CreateDynamicSphere(-1066.2384,-1631.7026,76.3672,3.0);
	gAreas[arWoodLoad2] = CreateDynamicSphere(-1056.0449,-1626.5811,76.3672,3.0);
	gAreas[arWoodLoad3] = CreateDynamicSphere(-1043.1099,-1617.9283,76.3672,3.0);
	gAreas[arWoodLoad4] = CreateDynamicSphere(-1042.7314,-1631.8470,76.3672,3.0);
	gAreas[arWoodLoad5] = CreateDynamicSphere(-1027.1847,-1640.0745,76.3672,3.0);
	gAreas[arWoodLoad6] = CreateDynamicSphere(-1014.1890,-1625.7858,76.3672,3.0);
	gAreas[arWoodUnload] = CreateDynamicSphere(-1122.4027,-1624.7273,76.3672,3.0);
	gAreas[arGunWork] = CreateDynamicSphere(2568.2566,-1281.5046,1044.1250,1.0,0,2);
	gAreas[arTruckLoadCoal] = CreateDynamicSphere(1059.3031,-341.4867,73.9922,5.0);
	gAreas[arTruckWagonCoal] = CreateDynamicSphere(384.9763,902.6101,20.2163,35.0);
	gAreas[arTruckLoadWood] = CreateDynamicSphere(-1084.7234,-1622.5729,76.3672,5.0);
	gAreas[arTruckWagonWood] = CreateDynamicSphere(-2003.7578,-2421.1641,31.6471,25.0);
	gAreas[arTruckUnload] = CreateDynamicSphere(-1042.3368,-640.1612,33.0058,10.0);
	gAreas[arSellCar][0] = CreateDynamicSphere(555.1915,-1293.4724,17.2482,1.0);
	gAreas[arSellCar][1] = CreateDynamicSphere(-1968.6801,619.9734,35.1719,1.0);
	gAreas[arSellCar][2] = CreateDynamicSphere(1658.5024,2199.9299,10.8203,1.0);
	gAreas[arSellCar][3] = CreateDynamicSphere(507.6233,-1608.4905,16.3576,1.0);
	//gAreas[arFilling][0] = CreateDynamicSphere(2217.3040,-1146.6182,1025.7969,1.0);
	gAreas[arHotelReception] = CreateDynamicSphere(2217.3040,-1146.6182,1025.7969,1.0);
	gAreas[arHotelExit] = CreateDynamicSphere(2215.1782,-1150.4290,1025.7969,1.0,-1,15);
	gAreas[arAutoExam] = CreateDynamicSphere(1210.1440,-50.0325,999.2265,1.0,1,6);
	gAreas[arAutoExamEnter] = CreateDynamicSphere(-2029.7671,-119.6200,1035.1719,1.0,1,0);
	gAreas[arAutoExamExit] = CreateDynamicSphere(-2029.8129,-120.7440,35.1719,1.0,0,0);
	gAreas[arInstructorBarrier] = CreateDynamicSphere(-2057.8718,-97.3589,35.1641,10.0,0,0);
	gAreas[arKiosk][0] = CreateDynamicSphere(593.1306,837.7568,-42.9699,1.0,0,0);
	gAreas[arKiosk][1] = CreateDynamicSphere(-2030.6959,-2330.1057,30.6250,1.0,0,0);
	gAreas[arKiosk][2] = CreateDynamicSphere(1345.9944,-805.9055,1185.7059,1.0,-1,-1);
	gAreas[arKioskPay] = CreateDynamicSphere(1755.9497,-1886.1160,13.5566,1.0,-1,-1);
	gAreas[arGreenZone][0] = CreateDynamicSphere(1755.0529,-1894.1108,13.5568,100.0,0,0);//ЖДЛС
	gAreas[arGreenZone][1] = CreateDynamicCircle(486.8350,883.5020,250.0,0,0);//Карьер
	gAreas[arGreenZone][2] = CreateDynamicSphere(-1965.6868,-2368.5894,30.6868,150.0,0,0);//Лесопилка
	gAreas[arGreenZone][3] = CreateDynamicSphere(1214.8436,-51.8120,999.2265,30.0,-1,3);//АШ +
	gAreas[arGreenZone][4] = CreateDynamicSphere(333.4385,-1337.6041,14.5078,30.0,-1,0);//Респ 1
	gAreas[arGreenZone][5] = CreateDynamicSphere(2130.4749,-1149.5190,24.2389,30.0,-1,0);//Респ 2
	gAreas[arGreenZone][6] = CreateDynamicSphere(2568.2566,-1281.5046,1044.1250,30.0,-1,2);//Оруж завод
	gAreas[arGreenZone][7] = CreateDynamicSphere(1176.0903,-1795.3257,13.3984,60.0,-1,0);//Стоянка
	gAreas[arGreenZone][8] = CreateDynamicCircle(1784.12, -1301.11,60.0,-1,0);//Центр занятости
	gAreas[arGreenZone][9] = CreateDynamicSphere(630.0368,792.5223,1001.4040,100.0,-1,-1);//Больница +
	gAreas[arGreenZone][10] = CreateDynamicSphere(-1835.6329,-295.3522,1035.3604,100.0,-1,-1);//Мэрия +
	gAreas[arGreenZone][11] = CreateDynamicSphere(1201.8276,-1741.2444,13.5918,100.0,-1,-1);
	gAreas[arGreenZone][12] = CreateDynamicSphere(-1080.6881,-1631.9431,76.3672,100.0,-1,-1);
	gAreas[arGreenZone][13] = CreateDynamicSphere(1019.2482,-335.8931,-2.4862,100.0,-1,-1);
	gAreas[arGreenZone][14] = CreateDynamicSphere(1475.6259,-1726.5753,13.5469,100.0,-1,-1);
	gAreas[arGreenZone][15] = CreateDynamicSphere(1765.0551,-1670.4940,14.0747,100.0,-1,-1);
	gAreas[arGreenZone][16] = CreateDynamicSphere(1692.7854,-1896.1481,13.5391,100.0,-1,-1);
	gAreas[arGangBuyCar] = CreateDynamicSphere(2494.0757,-1464.6000,24.0254,1.0);
	gAreas[arBank] = CreateDynamicSphere(2308.9014,-13.4927,26.7422,1.0);
	gAreas[arHire] = CreateDynamicSphere(-1829.6392,-278.1113,1036.1205,1.0);
	gAreas[arAntiCleo] = CreateDynamicCircle(613.0270,870.0396,50.0);
	gAreas[arAntiCleoWood] = CreateDynamicCircle(-1966.3129,-2369.2002,15.0);
	gAreas[arBarrier][0] = CreateDynamicSphere(347.9673,1800.8309,18.5518,2.0);
	gAreas[arBarrier][1] = CreateDynamicSphere(143.1136,1964.7142,19.4872,2.0);
	gAreas[arBarrier][2] = CreateDynamicSphere(462.21, 2540.05, 19.31,2.0);
	gAreas[arArmyAmmo] = CreateDynamicSphere(312.4241,-165.9406,999.6010,1.0);
	gAreas[arPravAmmo] = CreateDynamicSphere(-1831.1530,-263.6448,1036.1245,1.0);
	gAreas[arDorm] = CreateDynamicSphere(1521.5228,-79.2000,1054.1859,2.0);
	gAreas[arArrest] = CreateDynamicRectangle(1605.5659,-1635.0826,1620.1270,-1614.5710,-1,6);
	gAreas[arBusinessBuyProd] = CreateDynamicSphere(2798.1987,-2393.9775,13.9560,1.0);
	gAreas[arBusinessDelivery] = CreateDynamicSphere(2782.9521,-2417.7288,13.6348,1.0);
	gAreas[arDeliLoad][0] = CreateDynamicRectangle(2775.7600,-2428.7532,2800.6060,-2406.8003);
	gAreas[arDeliLoad][1] = CreateDynamicRectangle(2775.7607,-2466.8469,2800.6057,-2444.8938);
	gAreas[arDeliLoad][2] = CreateDynamicRectangle(2775.7551,-2504.9473,2800.6074,-2482.9939);
	gPDCamArea[0] = CreateDynamicRectangle(1610.6860,-1633.6836,1615.8539,-1631.3563,-1,6);
	gPDCamArea[1] = CreateDynamicRectangle(1607.6161,-1632.9540,1609.8140,-1628.0160,-1,6);
	gPDCamArea[2] = CreateDynamicRectangle(1610.6862,-1627.1437,1615.8534,-1624.8464,-1,6);
	gRepairArea[0] = CreateDynamicRectangle(1016.6974,-1437.6859,1031.1575,-1431.4160,0,0);
	gRepairArea[1] = CreateDynamicRectangle(-2186.4395,963.8301,-2180.1125,978.5938,0,0);
	gRepairArea[2] = CreateDynamicRectangle(1938.1539,2158.9758,1947.6489,2168.8398,0,0);
	gAreas[arDrugsM] = CreateDynamicSphere(330.6324,1122.9980,1083.8828,4.0);
	gAreas[arMafiaObsh] = CreateDynamicSphere(-2603.2954,-232.2728,1055.3970,4.0);
	for(new i;i<5;i++)
	{
		gAreas[arGang][i] = CreateDynamicSphere(gGangEnter[i][0],gGangEnter[i][1],gGangEnter[i][2],1.0,0,0);
	}
	gAreas[arGangExit] = CreateDynamicSphere(1525.0891,-72.8142,1054.1859,1.0,-1,1);
	for(new i;i<8;i++)
	{
		gAreas[arHotelEnters][i] = CreateDynamicSphere(gHotelRoomEnters[i][0],gHotelRoomEnters[i][1],gHotelRoomEnters[i][2],1.0);
		gAreas[arHotelExits][i] = CreateDynamicSphere(gHotelRoomExits[i][0],gHotelRoomExits[i][1],gHotelRoomExits[i][2],1.0);
	}
	gEmCall[0] = INVALID_PLAYER_ID;
	gEmCall[1] = INVALID_PLAYER_ID;
	gEmCall[2] = INVALID_PLAYER_ID;
	for(new i;i<17;i++)
	{
		if(i == 16) gAreas[arGunWorkUnload] = CreateDynamicSphere(gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2],1.0);
		else if(i<16 && i >=6) gAreas[arGunWorkWork][i-6] = CreateDynamicSphere(gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2],1.0);
		else if(i<6)gAreas[arGunWorkLoad][i] = CreateDynamicSphere(gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2],1.0);
	}
	for(new i;i<TELEPORTS_COUNT;i++)
	{
		CreateDynamicPickup(1318,1,gTeleports[i][0][0],gTeleports[i][0][1],gTeleports[i][0][2],gTeleportData[i][0][0]);
		CreateDynamicPickup(1318,1,gTeleports[i][1][0],gTeleports[i][1][1],gTeleports[i][1][2],gTeleportData[i][1][0]);
		gTeleportAreas[i][0] = CreateDynamicSphere(gTeleports[i][0][0],gTeleports[i][0][1],gTeleports[i][0][2],2.0,gTeleportData[i][0][0],gTeleportData[i][0][1]);
		gTeleportAreas[i][1] = CreateDynamicSphere(gTeleports[i][1][0],gTeleports[i][1][1],gTeleports[i][1][2],2.0,gTeleportData[i][1][0],gTeleportData[i][1][1]);
	}
	for(new i;i<TUALET_COUNT;i++)
	{
		CreateDynamicPickup(1318,1,gToilet[i][0][0],gToilet[i][0][1],gToilet[i][0][2],0);
		//CreateDynamicPickup(1318,1,gToilet[i][1][0],gToilet[i][1][1],gToilet[i][1][2],gToiletData[i][1][0]);
		gToiletAreas[i][0] = CreateDynamicSphere(gToilet[i][0][0],gToilet[i][0][1],gToilet[i][0][2],2.0,0,0);
	}
	for(new i;i<ATM_COUNT;i++)
	{
		CreateDynamicObject(2754,gATMC[i][0],gATMC[i][1],gATMC[i][2],gATMC[i][3],gATMC[i][4],gATMC[i][5]);
		gATMArea[i] = CreateDynamicSphere(gATMC[i][0],gATMC[i][1],gATMC[i][2],1.0);
		CreateDynamic3DTextLabel("ALT",CINFO,gATMC[i][0],gATMC[i][1],gATMC[i][2]+0.0500000,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	}
	new Float:xt=3000.0, Float:yt=3000.0;
	for(new i;i<100;i++)
	{
		gBearingArea[i] = CreateDynamicCube(xt-600.0,yt-600.0,-300.0,xt,yt,300.0,0,0);
		if(xt - 600.0 == -3000.0) xt = 3000.0, yt -= 600.0;
		else xt -= 600.0;
	}
	//работы
	//шахта
	//конец работы
	//Лифт
	CreateDynamic3DTextLabel("Помощь по серверу",CWHITE,1772.1836,-1672.9611,14.4205,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    CreateDynamic3DTextLabel("Помощь по серверу",CWHITE,1689.5123,-1916.0725,13.5439,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    CreateDynamic3DTextLabel("Помощь по серверу",CWHITE,1192.3112,-1742.3038,13.5811,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    
   	CreateDynamicPickup(1239,1,1772.1836,-1672.9611,14.4205);//помощь новичкам
	CreateDynamicPickup(1239,1,1689.5123,-1916.0725,13.5439);//помощь новичкам
	CreateDynamicPickup(1239,1,1192.3112,-1742.3038,13.5811);//помощь новичкам

    CreateDynamic3DTextLabel("Подойдите сюда, чтобы начать пилить дерево.",CWHITE,-1066.2384,-1631.7026,76.3672,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    CreateDynamic3DTextLabel("Подойдите сюда, чтобы начать пилить дерево.",CWHITE,-1056.0449,-1626.5811,76.3672,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    CreateDynamic3DTextLabel("Подойдите сюда, чтобы начать пилить дерево.",CWHITE,-1043.1099,-1617.9283,76.3672,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    CreateDynamic3DTextLabel("Подойдите сюда, чтобы начать пилить дерево.",CWHITE,-1042.7314,-1631.8470,76.3672,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    CreateDynamic3DTextLabel("Подойдите сюда, чтобы начать пилить дерево.",CWHITE,-1027.1847,-1640.0745,76.3672,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
    CreateDynamic3DTextLabel("Подойдите сюда, чтобы начать пилить дерево.",CWHITE,-1014.1890,-1625.7858,76.3672,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);

    Create3DTextLabel("{8ACF30}Купить наркотики\n{FFFFFF}/buydrugs [кол-во]",CYELLOW,330.6324,1122.9980,1083.8828+0.4,10.0,0,1);
	for(new i;i<MAX_PLAYERS;i++)
	{
		gCalls[i][g_caller] = INVALID_PLAYER_ID;
		gCalls[i][g_callee] = INVALID_PLAYER_ID;
	}
	//3D тексты
	new string[400];
	format(string,sizeof(string),"Используйте /lf",sostlift[0]);
 	gsostmine[0] = CreateDynamic3DTextLabel(string,CWHITE,1019.5755,-316.5138,74.0029,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);// состояние лифта 1 верх
 	format(string,sizeof(string),"Используйте /lft",sostlift[1]);
 	gsostmine[1] = CreateDynamic3DTextLabel(string,CWHITE,1045.7369,-316.1818,74.0035,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);// состояние лифта 2 верх
	format(string,sizeof(string),"Используйте /lf",sostlift[0]);
 	gsostmine[2] = CreateDynamic3DTextLabel(string,CWHITE,1019.6482,-316.5551,-2.4511,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);// состояние лифта 1 низ
 	format(string,sizeof(string),"Используйте /lft",sostlift[1]);
 	gsostmine[3] = CreateDynamic3DTextLabel(string,CWHITE,1045.4812,-317.3964,-2.3952,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);// состояние лифта 2 низ
 	
	format(string,sizeof(string),"Состояние склада:\n %i кг.",minesklad);
 	gMineload = CreateDynamic3DTextLabel(string,CWHITE,1046.89, -323.42, 74.07,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
 	format(string,sizeof(string),"Всего древесины на складе\n %i кг.",woodsklad);
 	gWoodload = CreateDynamic3DTextLabel(string,CWHITE,-1122.4027,-1624.7273,76.3672,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	gCoalWHText = CreateDynamic3DTextLabel("_",CWHITE,319.6559,868.7329,20.9622,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	gCoalWHText2 = CreateDynamic3DTextLabel("_",CWHITE,487.9110,904.2743,-29.4846,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	gWoodWHText = CreateDynamic3DTextLabel("_",CWHITE,-2002.7762,-2419.1975,36.6250,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	//gEconomicText[0] = Create3DTextLabel("_",CWHITE,-1831.5834,-276.2459,1036.1205,20.0,0,0);
	//gEconomicText[1] = Create3DTextLabel("_",CWHITE,-1831.5834,-276.2459,1036.1205,20.0,1,0);
	//gEconomicText[2] = Create3DTextLabel("_",CWHITE,-1831.5834,-276.2459,1036.1205,20.0,2,0);

	CreateDynamic3DTextLabel("{"#cGREEN"}Вход",CWHITE,2571.9583,-1301.9756,1046.4250,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	gTruckLoadTurnText[0] = CreateDynamic3DTextLabel("_",CWHITE,-1091.8380,-1625.3231,76.3672,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	gTruckLoadTurnText[1] = CreateDynamic3DTextLabel("_",CWHITE,1054.2604,-343.5429,73.9922,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	gDSTurnText = CreateDynamic3DTextLabel("_",CWHITE,1220.0929,-48.5497,1000.000,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1,6);
	gArmyWarehouseText[0] = CreateDynamic3DTextLabel("_",CWHITE,312.4241,-165.9406,1000.3010,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	gArmyWarehouseText[1] = CreateDynamic3DTextLabel("_",CWHITE,312.4241,-165.9406,1000.3010,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1);
	gPDWarehouseText[0] = CreateDynamic3DTextLabel("_",CWHITE,312.4241,-165.9406,1000.3010,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,2);
	gPDWarehouseText[1] = CreateDynamic3DTextLabel("_",CWHITE,312.4241,-165.9406,1000.3010,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);
	gPDWarehouseText[2] = CreateDynamic3DTextLabel("_",CWHITE,312.4241,-165.9406,1000.3010,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,4);
	gGangDormText[0] = CreateDynamic3DTextLabel("_",CWHITE,1521.5228,-79.2000,1054.1859,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	gGangDormText[1] = CreateDynamic3DTextLabel("_",CWHITE,1521.5228,-79.2000,1054.1859,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1);
	gGangDormText[2] = CreateDynamic3DTextLabel("_",CWHITE,1521.5228,-79.2000,1054.1859,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,2);
	gGangDormText[3] = CreateDynamic3DTextLabel("_",CWHITE,1521.5228,-79.2000,1054.1859,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);
	gGangDormText[4] = CreateDynamic3DTextLabel("_",CWHITE,1521.5228,-79.2000,1054.1859,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,4);
	//мафии
	gMafDormText[0] = CreateDynamic3DTextLabel("_",CWHITE,-2596.6785,-228.3342,1056.3282,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);
	gMafDormText[1] = CreateDynamic3DTextLabel("_",CWHITE,-2596.6785,-228.3342,1056.3282,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,4);
	gMafDormText[2] = CreateDynamic3DTextLabel("_",CWHITE,-2596.6785,-228.3342,1056.3282,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,5);
	//Кнопки
	gBarrierButton[0] = CreateButton(347.42, 1800.57, 19.03, 304.0);
	gBarrierButton[2] = CreateButton(458.96, 2537.79, 19.70, 315.0);
	gBarrierButton[3] = CreateButton(525.76702880859,-355.8450012207,1005.5850219727, 270.0);	//LSPD
	gBarrierButton[4] = CreateButton(0.00, 0.00, 0.00, 0.00);	//SFPD1
	gBarrierButton[5] = CreateButton(-1701.52, 689.60, 25.05, 180.0);	//SFPD2

	gHungerText1 = TextDrawCreate(548.000000, 34.000000, "_");
	TextDrawBackgroundColor(gHungerText1, 255);
	TextDrawFont(gHungerText1, 1);
	TextDrawLetterSize(gHungerText1, 0.500000, 0.599999);
	TextDrawColor(gHungerText1, -1);
	TextDrawSetOutline(gHungerText1, 0);
	TextDrawSetProportional(gHungerText1, 1);
	TextDrawSetShadow(gHungerText1, 1);
	TextDrawUseBox(gHungerText1, 1);
	TextDrawBoxColor(gHungerText1, 255);
	TextDrawTextSize(gHungerText1, 606.000000, 0.000000);

	gHungerText2 = TextDrawCreate(550.000000, 36.000000, "_");
	TextDrawBackgroundColor(gHungerText2, 255);
	TextDrawFont(gHungerText2, 1);
	TextDrawLetterSize(gHungerText2, 0.500000, 0.199999);
	TextDrawColor(gHungerText2, -1);
	TextDrawSetOutline(gHungerText2, 0);
	TextDrawSetProportional(gHungerText2, 1);
	TextDrawSetShadow(gHungerText2, 1);
	TextDrawUseBox(gHungerText2, 1);
	TextDrawBoxColor(gHungerText2, 33023);
	TextDrawTextSize(gHungerText2, 604.000000, 0.000000);

	// Закусочные
	// черный бокс вокруг
	gEateryTextDraw[4] = TextDrawCreate(200.0, 100.0, "                                           ~n~");
	TextDrawFont(gEateryTextDraw[4], 1);
	TextDrawLetterSize(gEateryTextDraw[4], 5.0, 3.5);
	TextDrawUseBox(gEateryTextDraw[4], 1);
	TextDrawTextSize(gEateryTextDraw[4], 510.0, 0.0);
	TextDrawBackgroundColor(gEateryTextDraw[4], 0xFFFFFF00);
	TextDrawBoxColor(gEateryTextDraw[4], 0x00000066);

	gEateryTextDraw[9] = TextDrawCreate(200.0, 82.0, "Eatery");
	TextDrawLetterSize(gEateryTextDraw[9], 1.0, 2.5);
	TextDrawAlignment(gEateryTextDraw[9], 1);
	TextDrawColor(gEateryTextDraw[9], -1);
	TextDrawSetShadow(gEateryTextDraw[9], 0);
	TextDrawSetOutline(gEateryTextDraw[9], 1);
	TextDrawBackgroundColor(gEateryTextDraw[9], 51);
	TextDrawFont(gEateryTextDraw[9], 0);
	TextDrawSetProportional(gEateryTextDraw[9], 1);

	new Float: gEateryPos[2];
	gEateryPos[0] = 200.0, gEateryPos[1] = 100.0;
	for(new x = 0; x <= 3; x ++) { // превьюшки
		if(x > 0) gEateryPos[1] += 50.0;
	    gEateryTextDraw[x] = TextDrawCreate(gEateryPos[0], gEateryPos[1], "_");
		TextDrawFont(gEateryTextDraw[x], TEXT_DRAW_FONT_MODEL_PREVIEW);
		TextDrawUseBox(gEateryTextDraw[x], 1);
		if(x == 3) TextDrawTextSize(gEateryTextDraw[x], 100.0, 75.0);
		else TextDrawTextSize(gEateryTextDraw[x], 100.0, 50.0);
		TextDrawBackgroundColor(gEateryTextDraw[x], 0xFFFFFF00);

		TextDrawSetPreviewModel(gEateryTextDraw[x], gEateryObj[x]);

		if(x == 3) TextDrawSetPreviewRot(gEateryTextDraw[x], 0, 0, 180, 1.5);
		else TextDrawSetPreviewRot(gEateryTextDraw[x], -60, -45, 90, 1.0);
	}

	gEateryPos[0] = 305.0, gEateryPos[1] = 125.0;
	for(new x = 5; x <= 8; x ++) { // названия
	    if(x > 5) gEateryPos[1] += 50.0;
		gEateryTextDraw[x] = TextDrawCreate(gEateryPos[0], gEateryPos[1], gEateryNames[x - 5]);
		TextDrawLetterSize(gEateryTextDraw[x], 0.460000, 1.722499);
		TextDrawTextSize(gEateryTextDraw[x], 450.000000, 20.0);
		TextDrawAlignment(gEateryTextDraw[x], 1);
		TextDrawColor(gEateryTextDraw[x], -1);
		TextDrawSetShadow(gEateryTextDraw[x], 0);
		TextDrawSetOutline(gEateryTextDraw[x], 1);
		TextDrawBackgroundColor(gEateryTextDraw[x], 51);
		TextDrawFont(gEateryTextDraw[x], 2);
		TextDrawSetProportional(gEateryTextDraw[x], 1);
		TextDrawSetSelectable(gEateryTextDraw[x], 1);
	}

	// Магазин одежды
	gSkinShopDraw[0] = TextDrawCreate(88.000000, 242.000000, "~>~");
	TextDrawBackgroundColor(gSkinShopDraw[0], 255);
	TextDrawFont(gSkinShopDraw[0], 1);
	TextDrawLetterSize(gSkinShopDraw[0], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[0], -1);
	TextDrawSetOutline(gSkinShopDraw[0], 0);
	TextDrawSetProportional(gSkinShopDraw[0], 1);
	TextDrawSetShadow(gSkinShopDraw[0], 1);
	TextDrawTextSize(gSkinShopDraw[0], 107.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[0], 1);

	gSkinShopDraw[1] = TextDrawCreate(18.000000, 242.000000, "~<~");
	TextDrawBackgroundColor(gSkinShopDraw[1], 255);
	TextDrawFont(gSkinShopDraw[1], 1);
	TextDrawLetterSize(gSkinShopDraw[1], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[1], -1);
	TextDrawSetOutline(gSkinShopDraw[1], 0);
	TextDrawSetProportional(gSkinShopDraw[1], 1);
	TextDrawSetShadow(gSkinShopDraw[1], 1);
	TextDrawTextSize(gSkinShopDraw[1], 36.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[1], 1);

	gSkinShopDraw[2] = TextDrawCreate(115.000000, 221.000000, "_");
	TextDrawBackgroundColor(gSkinShopDraw[2], 0x00000066);
	TextDrawBoxColor(gSkinShopDraw[2], 0x00000066);
	TextDrawFont(gSkinShopDraw[2], 1);
	TextDrawLetterSize(gSkinShopDraw[2], 0.000000, 7.199996);
	TextDrawUseBox(gSkinShopDraw[2], 1);
	TextDrawTextSize(gSkinShopDraw[2], 11.000000, 0.000000);
	TextDrawSetSelectable(gSkinShopDraw[2], 0);

	gSkinShopDraw[3] = TextDrawCreate(45.000000, 245.000000, "BUY");
	TextDrawBackgroundColor(gSkinShopDraw[3], 255);
	TextDrawFont(gSkinShopDraw[3], 3);
	TextDrawLetterSize(gSkinShopDraw[3], 0.629999, 1.500000);
	TextDrawColor(gSkinShopDraw[3], -1);
	TextDrawSetOutline(gSkinShopDraw[3], 0);
	TextDrawSetProportional(gSkinShopDraw[3], 1);
	TextDrawSetShadow(gSkinShopDraw[3], 1);
	TextDrawTextSize(gSkinShopDraw[3], 83.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[3], 1);


	gSkinShopDraw[4] = TextDrawCreate(30.000000, 268.000000, "CANCEL");
	TextDrawBackgroundColor(gSkinShopDraw[4], 255);
	TextDrawFont(gSkinShopDraw[4], 3);
	TextDrawLetterSize(gSkinShopDraw[4], 0.629998, 1.500000);
	TextDrawColor(gSkinShopDraw[4], -1);
	TextDrawSetOutline(gSkinShopDraw[4], 0);
	TextDrawSetProportional(gSkinShopDraw[4], 1);
	TextDrawSetShadow(gSkinShopDraw[4], 1);
	TextDrawTextSize(gSkinShopDraw[4], 101.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[4], 1);

	// Бары
	// черный бокс вокруг
	gBarTextDraw[5] = TextDrawCreate(200.0, 100.0, "                                           ~n~");
	TextDrawFont(gBarTextDraw[5], 1);
	TextDrawLetterSize(gBarTextDraw[5], 5.0, 4.35);
	TextDrawUseBox(gBarTextDraw[5], 1);
	TextDrawTextSize(gBarTextDraw[5], 510.0, 0.0);
	TextDrawBackgroundColor(gBarTextDraw[5], 0xFFFFFF00);
	TextDrawBoxColor(gBarTextDraw[5], 0x00000066);

	gBarTextDraw[11] = TextDrawCreate(200.0, 82.0, "Bar");
	TextDrawLetterSize(gBarTextDraw[11], 1.0, 2.5);
	TextDrawAlignment(gBarTextDraw[11], 1);
	TextDrawColor(gBarTextDraw[11], -1);
	TextDrawSetShadow(gBarTextDraw[11], 0);
	TextDrawSetOutline(gBarTextDraw[11], 1);
	TextDrawBackgroundColor(gBarTextDraw[11], 51);
	TextDrawFont(gBarTextDraw[11], 0);
	TextDrawSetProportional(gBarTextDraw[11], 1);

		//capture
	ScoreCapt = TextDrawCreate(14.000000, 260.000000, "Time:");
	TextDrawBackgroundColor(ScoreCapt, 255);
	TextDrawFont(ScoreCapt, 1);
	TextDrawLetterSize(ScoreCapt, 0.500000, 1.000000);
	TextDrawColor(ScoreCapt, 0x00D900C8);
	TextDrawSetOutline(ScoreCapt, 1);
	TextDrawSetProportional(ScoreCapt, 1);

	CaptTime = TextDrawCreate(75.000000, 260.000000, "6:00");
//		TextDrawBackgroundColor(CaptTime[i], 255);
	TextDrawFont(CaptTime, 1);
	TextDrawLetterSize(CaptTime, 0.500000, 1.000000);
	TextDrawColor(CaptTime, 0x00D900C8);
	TextDrawSetOutline(CaptTime, 1);
	TextDrawSetProportional(CaptTime, 1);

	BandaCapt1a = TextDrawCreate(14.000000, 276.000000, "_");
//		TextDrawBackgroundColor(BandaCapt1a[i], 255);
	TextDrawFont(BandaCapt1a, 1);
	TextDrawLetterSize(BandaCapt1a, 0.500000, 1.000000);
	TextDrawColor(BandaCapt1a, -1);
	TextDrawSetOutline(BandaCapt1a, 1);
	TextDrawSetProportional(BandaCapt1a, 1);

	BandaCapt2a = TextDrawCreate(14.000000, 293.000000, "_");
	//	TextDrawBackgroundColor(BandaCapt2a[i], 255);
	TextDrawFont(BandaCapt2a, 1);
	TextDrawLetterSize(BandaCapt2a, 0.500000, 1.000000);
	TextDrawColor(BandaCapt2a, -1);
	TextDrawSetOutline(BandaCapt2a, 1);
	TextDrawSetProportional(BandaCapt2a, 1);


	ScoreCapt1a = TextDrawCreate(190.000000, 277.000000, "0");
	//	TextDrawBackgroundColor(ScoreCapt1a[i], 255);
	TextDrawFont(ScoreCapt1a, 1);
	TextDrawLetterSize(ScoreCapt1a, 0.500000, 1.000000);
	TextDrawColor(ScoreCapt1a, 0xFF0000FF);
	TextDrawSetOutline(ScoreCapt1a, 1);
	TextDrawSetProportional(ScoreCapt1a, 1);

	Textdraw4 = TextDrawCreate(211.000000, 310.000000, "_");
	TextDrawUseBox(Textdraw4, 1);
	TextDrawTextSize(Textdraw4, 5.000000, 200.000000);
	TextDrawLetterSize(Textdraw4, 0.240000, -7.000000);
	TextDrawBoxColor(Textdraw4, 0x00000050);

	ScoreCapt2a = TextDrawCreate(190.000000, 293.000000, "0");
//		TextDrawBackgroundColor(ScoreCapt2a[i], 255);
	TextDrawFont(ScoreCapt2a, 1);
	TextDrawLetterSize(ScoreCapt2a, 0.500000, 1.000000);
	TextDrawColor(ScoreCapt2a, 0xFF0000FF);
	TextDrawSetOutline(ScoreCapt2a, 1);
	TextDrawSetProportional(ScoreCapt2a, 1);
	//мафии
	ScoreCaptM = TextDrawCreate(14.000000, 260.000000, "Time:");
	TextDrawBackgroundColor(ScoreCaptM, 255);
	TextDrawFont(ScoreCaptM, 1);
	TextDrawLetterSize(ScoreCaptM, 0.500000, 1.000000);
	TextDrawColor(ScoreCaptM, 0x00D900C8);
	TextDrawSetOutline(ScoreCaptM, 1);
	TextDrawSetProportional(ScoreCaptM, 1);

	CaptTimeM = TextDrawCreate(75.000000, 260.000000, "6:00");
//		TextDrawBackgroundColor(CaptTime[i], 255);
	TextDrawFont(CaptTimeM, 1);
	TextDrawLetterSize(CaptTimeM, 0.500000, 1.000000);
	TextDrawColor(CaptTimeM, 0x00D900C8);
	TextDrawSetOutline(CaptTimeM, 1);
	TextDrawSetProportional(CaptTimeM, 1);

	BandaCapt1aM = TextDrawCreate(14.000000, 276.000000, "_");
//		TextDrawBackgroundColor(BandaCapt1a[i], 255);
	TextDrawFont(BandaCapt1aM, 1);
	TextDrawLetterSize(BandaCapt1aM, 0.500000, 1.000000);
	TextDrawColor(BandaCapt1aM, -1);
	TextDrawSetOutline(BandaCapt1aM, 1);
	TextDrawSetProportional(BandaCapt1aM, 1);

	BandaCapt2aM = TextDrawCreate(14.000000, 293.000000, "_");
	//	TextDrawBackgroundColor(BandaCapt2a[i], 255);
	TextDrawFont(BandaCapt2aM, 1);
	TextDrawLetterSize(BandaCapt2aM, 0.500000, 1.000000);
	TextDrawColor(BandaCapt2aM, -1);
	TextDrawSetOutline(BandaCapt2aM, 1);
	TextDrawSetProportional(BandaCapt2aM, 1);


	ScoreCapt1aM = TextDrawCreate(190.000000, 277.000000, "0");
	//	TextDrawBackgroundColor(ScoreCapt1a[i], 255);
	TextDrawFont(ScoreCapt1aM, 1);
	TextDrawLetterSize(ScoreCapt1aM, 0.500000, 1.000000);
	TextDrawColor(ScoreCapt1aM, 0xFF0000FF);
	TextDrawSetOutline(ScoreCapt1aM, 1);
	TextDrawSetProportional(ScoreCapt1aM, 1);

	Textdraw4M = TextDrawCreate(211.000000, 310.000000, "_");
	TextDrawUseBox(Textdraw4M, 1);
	TextDrawTextSize(Textdraw4M, 5.000000, 200.000000);
	TextDrawLetterSize(Textdraw4M, 0.240000, -7.000000);
	TextDrawBoxColor(Textdraw4M, 0x00000050);

	ScoreCapt2aM = TextDrawCreate(190.000000, 293.000000, "0");
//		TextDrawBackgroundColor(ScoreCapt2a[i], 255);
	TextDrawFont(ScoreCapt2aM, 1);
	TextDrawLetterSize(ScoreCapt2aM, 0.500000, 1.000000);
	TextDrawColor(ScoreCapt2aM, 0xFF0000FF);
	TextDrawSetOutline(ScoreCapt2aM, 1);
	TextDrawSetProportional(ScoreCapt2aM, 1);

	new Float: gBarPos[2];
	gBarPos[0] = 200.0, gBarPos[1] = 100.0;
	for(new x = 0; x < 5; x ++) { // превьюшки
		if(x > 0) gBarPos[1] += 50.0;
	    gBarTextDraw[x] = TextDrawCreate(gBarPos[0], gBarPos[1], "_");
		TextDrawFont(gBarTextDraw[x], TEXT_DRAW_FONT_MODEL_PREVIEW);
		TextDrawUseBox(gBarTextDraw[x], 1);
		TextDrawTextSize(gBarTextDraw[x], 100.0, 75.0);
		TextDrawBackgroundColor(gBarTextDraw[x], 0xFFFFFF00);

		TextDrawSetPreviewModel(gBarTextDraw[x], gBarObj[x]);

        TextDrawSetPreviewRot(gBarTextDraw[x], 0, 0, 0, 1.3);
        if(x == 0) TextDrawSetPreviewRot(gBarTextDraw[x], 0, 0, 90, 1.3);
		else if(x == 4) TextDrawSetPreviewRot(gBarTextDraw[x], -75, -20, 10, 1.3);
	}

	gBarPos[0] = 305.0, gBarPos[1] = 125.0;
	for(new x = 6; x < 11; x ++) { // названия
	    if(x > 6) gBarPos[1] += 50.0;
		gBarTextDraw[x] = TextDrawCreate(gBarPos[0], gBarPos[1], gBarNames[x - 6]);
		TextDrawLetterSize(gBarTextDraw[x], 0.460000, 1.722499);
		TextDrawTextSize(gBarTextDraw[x], 450.000000, 20.0);
		TextDrawAlignment(gBarTextDraw[x], 1);
		TextDrawColor(gBarTextDraw[x], -1);
		TextDrawSetShadow(gBarTextDraw[x], 0);
		TextDrawSetOutline(gBarTextDraw[x], 1);
		TextDrawBackgroundColor(gBarTextDraw[x], 51);
		TextDrawFont(gBarTextDraw[x], 2);
		TextDrawSetProportional(gBarTextDraw[x], 1);
		TextDrawSetSelectable(gBarTextDraw[x], 1);
	}

	//Таймеры
	SetTimer("MainTimer",1000,true);
	SetTimer("MainTimer2",1000,true);
	SetTimer("FuelTmier",1000,true);
	SetTimer("MinuteTimer",60000,true);
	SetTimer("ReklamaTimer",1200000,true);
    SetTimer("CarShotTimer",60000,true);
    
	new result[1000];
	mysql_query("UPDATE `accounts` SET `status` = '0'");
	mysql_query("SELECT * FROM `hints`");
	mysql_store_result();
	if(mysql_num_rows() != HINTS_COUNT) print("Hints count difference");
	else
	{
		for(new i;i<mysql_num_rows();i++)
		{
			mysql_fetch_row(result);
			sscanf(result,"p<|>e<iffffffffis[51]>",gHints[i]);
			gHintStoreArea[i] = CreateDynamicSphere(gHintStore[i][0],gHintStore[i][1],gHintStore[i][2],2.0);
			gHintSafeArea[i] = CreateDynamicSphere(gHintSafe[i][0],gHintSafe[i][1],gHintSafe[i][2],2.0);
			gHintFreezArea[i] = CreateDynamicSphere(gHintFreez[i][0],gHintFreez[i][1],gHintFreez[i][2],2.0);
			//CreateDynamicObject(2708,gHintStore[i][0],gHintStore[i][1],gHintStore[i][2],gHintStore[i][3],gHintStore[i][4],gHintStore[i][5],i+500);
			if(i < HINTS_COUNT)
			{
				for(new k;k<9;k++)
				{
					//if(!k) CreateDynamicObject(2689,gHintDress[i][k][0],gHintDress[i][k][1],gHintDress[i][k][2],gHintDress[i][k][3],gHintDress[i][k][4],gHintDress[i][k][5],i+500);
					//if(k==1) CreateDynamicObject(2704,gHintDress[i][k][0],gHintDress[i][k][1],gHintDress[i][k][2],gHintDress[i][k][3],gHintDress[i][k][4],gHintDress[i][k][5],i+500);
					//if(k==2) CreateDynamicObject(2705,gHintDress[i][k][0],gHintDress[i][k][1],gHintDress[i][k][2],gHintDress[i][k][3],gHintDress[i][k][4],gHintDress[i][k][5],i+500);
					CreateDynamicObject(gHintGunID[k],gHintGun[i][k][0],gHintGun[i][k][1],gHintGun[i][k][2],gHintGun[i][k][3],gHintGun[i][k][4],gHintGun[i][k][5],i+500);
				}
			}
		}
	}
	mysql_free_result();
	mysql_query("SELECT * FROM `houses` ORDER BY `id`");
	mysql_store_result();
	if(mysql_num_rows() >= MAX_HOUSE_COUNT) print("Кол-во домов в базе больше максимального");
	else if(!mysql_num_rows()) print("Домов в базе не найдено");
	else
	{
		gHouseCount = mysql_num_rows();
		for(new i;i<mysql_num_rows();i++)
		{
			mysql_fetch_row(result);
			sscanf(result,"p<|>iiiia<i>[5]a<i>[9]a<i>[4]iiiiiffffffffis[24]a<i>[3]s[24]s[24]s[24]",gHouses[i][houseID],gHouses[i][houseClass],gHouses[i][housePrice],gHouses[i][houseHint],gHouses[i][houseImprove],gHouses[i][houseGun],gHouses[i][houseSkin],gHouses[i][houseSafeCode],gHouses[i][houseSafeMoney],gHouses[i][houseDrugs],gHouses[i][houseProducts],gHouses[i][houseClose],
			gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],gHouses[i][houseR], gHouses[i][houseParkX],gHouses[i][houseParkY],gHouses[i][houseParkZ],gHouses[i][houseParkR],gHouses[i][houseOwnerID],gHouses[i][houseOwner],gHouses[i][houseHabitID],gHouseHabits[i][0],gHouseHabits[i][1],gHouseHabits[i][2]);
		//	printf("%d: %s[%d] %s[%d] %s[%d] %s[%d]",gHouses[i][houseID],gHouses[i][houseOwner],gHouses[i][houseOwnerID],gHouseHabits[i][0],gHouses[i][houseHabitID][0],gHouseHabits[i][1],gHouses[i][houseHabitID][1],gHouseHabits[i][2],gHouses[i][houseHabitID][2]);
			//printf("%.2f %.2f %.2f",gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
			gHouseArea[i] = CreateDynamicSphere(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],2.0,0,0,-1);
			if(gHouses[i][houseOwnerID] != 0)
			{
				gHousePickup[i] = CreateDynamicPickup(1272,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
				gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],32,CWHITE);
			}
			else
			{
				gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
				gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);
			}
			new hintid = gHouses[i][houseHint];
			for(new k;k<5;k++) //Улучшения
			{
				if(!gHouses[i][houseImprove][k]) continue;
				switch(k)
				{
					case 1:	CreateDynamicObject(2332,gHintSafe[hintid][0],gHintSafe[hintid][1],gHintSafe[hintid][2],gHintSafe[hintid][3],gHintSafe[hintid][4],gHintSafe[hintid][5],i+1); //Сейф
					case 2: CreateDynamicObject(2141,gHintFreez[hintid][0],gHintFreez[hintid][1],gHintFreez[hintid][2],gHintFreez[hintid][3],gHintFreez[hintid][4],gHintFreez[hintid][5],i+1);
					case 3:
					{
						CreateDynamicObject(2708,gHintStore[hintid][0],gHintStore[hintid][1],gHintStore[hintid][2],gHintStore[hintid][3],gHintStore[hintid][4],gHintStore[hintid][5],i+1);
						new cnt;
						for(new l;l<4;l++)
						{
							if(gHouses[i][houseSkin][l]) cnt++;
						}
						cnt--;
						if(cnt < 0 && gHouses[i][houseOwnerID]) printf("Возможны лаги с одеждой в доме %d",i+1);
						else if(cnt > 0)
						{
							CreateDynamicObject(2689,gHintDress[hintid][0][0],gHintDress[hintid][0][1],gHintDress[hintid][0][2],gHintDress[hintid][0][3],gHintDress[hintid][0][4],gHintDress[hintid][0][5],i+1);
							if(cnt > 1) CreateDynamicObject(2704,gHintDress[hintid][1][0],gHintDress[hintid][1][1],gHintDress[hintid][1][2],gHintDress[hintid][1][3],gHintDress[hintid][1][4],gHintDress[hintid][1][5],i+1);
							if(cnt > 2) CreateDynamicObject(2705,gHintDress[hintid][2][0],gHintDress[hintid][2][1],gHintDress[hintid][2][2],gHintDress[hintid][2][3],gHintDress[hintid][2][4],gHintDress[hintid][2][5],i+1);
						}
						for(new l;l<9;l++)
						{
							if(!gHouses[i][houseGun][l]) continue;
							gHouseGunObject[i][l] = CreateDynamicObject(gHintGunID[l],gHintGun[hintid][l][0],gHintGun[hintid][l][1],gHintGun[hintid][l][2],gHintGun[hintid][l][3],gHintGun[hintid][l][4],gHintGun[hintid][l][5],i+1);
						}
					}
				}
			}
		}
		printf("%d houses loaded", gHouseCount);
	}
	mysql_free_result();
	for(new houseid; houseid < MAX_HOUSE_COUNT; houseid ++) {
		if(!gHouses[houseid][houseOwnerID]) continue;
		new str[512];
		format(str, 512, "SELECT * FROM `accounts` WHERE `id` = %i AND `house` = %i", gHouses[houseid][houseOwnerID], houseid+1);
		mysql_query(str);
		mysql_store_result();
		new rows = mysql_num_rows();
		if(!rows) {
			format(str,sizeof(str),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0', skin = '0|0|0|0',safecode='0', safemoney='0', drugs='0', products='0',inhabit2id = '0',inhabit3id = '0',inhabit4id = '0',inhabit2='',inhabit3='',inhabit4='' WHERE `id` = '%d'",houseid+1);
			mysql_query(str);
			gHouses[houseid][houseOwnerID] = 0;
			strdel(gHouses[houseid][houseOwner],0,24);
			strdel(gHouseHabits[houseid][0],0,24);
			strdel(gHouseHabits[houseid][1],0,24);
			strdel(gHouseHabits[houseid][2],0,24);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			for(new i;i<9;i++)
			{
				if(i < 5)
				{
					gHouses[houseid][houseImprove][i] = 0;
					if(i < 4) gHouses[houseid][houseSkin][i] = 0;
				}
				gHouses[houseid][houseGun][i] = 0;
			}
			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseProducts] = 0;
			DestroyDynamicPickup(gHousePickup[houseid]);
			gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
			DestroyDynamicMapIcon(gHouseIcon[houseid]);
			gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
		}
		mysql_free_result();
	}
	mysql_query("SELECT * FROM `hotels` ORDER BY `id`");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		if(mysql_num_rows() != HOTEL_COUNT) print("К-во отелей не совпадает с предопределенным количеством");
		else
		{
			for(new i;i<mysql_num_rows();i++)
			{
				mysql_fetch_row(result);
				sscanf(result,"p<|>e<iis[24]i>a<i>[8]a<i>[8]",gHotelData[i],gHotelResidents[i],gHotelEndurance[i]);
				CreateDynamicPickup(19132,1,gHotels[i][0],gHotels[i][1],gHotels[i][2]);
				gHotelArea[i] = CreateDynamicSphere(gHotels[i][0],gHotels[i][1],gHotels[i][2],1.0);
				new mes[128];
				if(!gHotelData[i][hotelOwnerid]) format(mes,sizeof(mes),"\t{"#cORANGE"}Отель\nВладелец: {"#cORANGE"}Нет\nЦена: {"#cORANGE"}$60000");
				else
				{
					new cnt;
					for(new k;k<8;k++) if(gHotelResidents[i][k]) cnt++;
					format(mes,sizeof(mes),"\t{"#cORANGE"}Отель\nВладелец: {"#cORANGE"}%s\nЦена за номер (в сутки): {"#cORANGE"}$%d\nЖильцов: %d/8",gHotelData[i][hotelOwner],gHotelData[i][hotelPrice],cnt);
				}
				gHotelText[i] = CreateDynamic3DTextLabel(mes,CWHITE,gHotels[i][0],gHotels[i][1],gHotels[i][2]+1.0,20.0);
				//printf("%f %f %f",gHotels[i][0],gHotels[i][1],gHotels[i][2]);
				//printf("Filling: %d, Mark[0]: %d",gFillings[i][fillMysqlID],gFillings[i][fillFuelMark][0]);
			}
		}
	}
	mysql_free_result();
	mysql_query("SELECT * FROM `transport` ORDER BY `model`");
	mysql_store_result();
	for(new i;i<mysql_num_rows();i++)
	{
		mysql_fetch_row(result);
		sscanf(result,"p<|>e<iis[35]iiiiiii>",gTransport[i]);
		//printf("ID:%d Model:%d Name:%s Cons:%d Tank:%d",i,gTransport[i][trModel],gTransport[i][trName],gTransport[i][trConsumption],gTransport[i][trTank]);
	}
	mysql_free_result();
	mysql_query("SELECT * FROM `cars` ORDER BY `id`");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new i;i<mysql_num_rows();i++)
		{
			mysql_fetch_row(result);
			new data[256];
			sscanf(result,"p<|>e<iiis[12]fffiiiffff>s[256]",gCars[i],data);
			sscanf(data,"a<i>[4]a<i>[14]",gCars[i][carDemages],gCars[i][carTuning]);
			//printf("plate: %s, data:%s",gCars[i][carPlate],data);
		}
	}
	mysql_free_result();
	mysql_query("SELECT `id`,`car`,`house`,`hotel`,`hotelroom` FROM `accounts` WHERE (NOT `house` = '0' OR NOT `hotel` = '0') AND NOT `car` = '0'");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new i2;i2<mysql_num_rows();i2++)
		{
			mysql_fetch_row(result);
			new car,house,hotel,houseid,hotelid,plid,room;
			sscanf(result,"p<|>iiiii",plid,car,house,hotel,room);
			houseid = house - 1;
			hotelid = hotel - 1;
			new i=-1;
			for(new i3;i3<MAX_VEHICLES;i3++)
			{
				if(car == gCars[i3][carMysqlID])
				{
					i = i3;
					break;
				}
			}
			if(i != -1)
			{
				new modelid = gCars[i][carModelid];
				if(house)
				{
					new vehicleid = CreateVehicle(gTransport[modelid][trModel],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[i][carColor1],gCars[i][carColor2],-1);
					gCars[i][carVid] = vehicleid;
					UpdateVehicleDamageStatus(vehicleid,gCars[i][carDemages][0],gCars[i][carDemages][1],gCars[i][carDemages][2],gCars[i][carDemages][3]);
					if(gCars[i][carHealth] < 300.0) gCars[i][carHealth] = 300.0;
					SetVehicleHealthEx(vehicleid,gCars[i][carHealth]);
					ToggleLock(vehicleid);
					gVehicles[vehicleid-1][vFuel] = gCars[i][carFuel];
					gVehicles[vehicleid-1][vDrived] = gCars[i][carDrived];
					gVehicles[vehicleid-1][vHealth] = gCars[i][carHealth];
					gVehicles[vehicleid-1][vOwnerid] = gCars[i][carOwnerid];
					gVehicles[vehicleid-1][vProbability] = gCars[i][carProbability];
				}
				else if(hotel)
				{
					new vehicleid = CreateVehicle(gTransport[modelid][trModel],gHotelPark[hotelid][room][0],gHotelPark[hotelid][room][1],gHotelPark[hotelid][room][2],gHotelPark[hotelid][room][3],gCars[i][carColor1],gCars[i][carColor2],-1);
					SetVehicleZAngle(vehicleid,gHotelPark[hotelid][room][3]);
					gCars[i][carVid] = vehicleid;
					UpdateVehicleDamageStatus(vehicleid,gCars[i][carDemages][0],gCars[i][carDemages][1],gCars[i][carDemages][2],gCars[i][carDemages][3]);
					SetVehicleHealthEx(vehicleid,gCars[i][carHealth]);
					ToggleLock(vehicleid);
					gVehicles[vehicleid-1][vFuel] = gCars[i][carFuel];
					gVehicles[vehicleid-1][vDrived] = gCars[i][carDrived];
					gVehicles[vehicleid-1][vHealth] = gCars[i][carHealth];
					gVehicles[vehicleid-1][vOwnerid] = gCars[i][carOwnerid];
					gVehicles[vehicleid-1][vX] = gHotelPark[hotelid][room][0];
					gVehicles[vehicleid-1][vY] = gHotelPark[hotelid][room][1];
					gVehicles[vehicleid-1][vZ] = gHotelPark[hotelid][room][2];
					printf("%f %f %f",gHotelPark[hotelid][room][0],gHotelPark[hotelid][room][1],gHotelPark[hotelid][room][2]);
				}
/*				else
				{
					new vehicleid = CreateVehicle(gTransport[modelid][trModel],gCars[car][carX],gCars[car][carY],gCars[car][carZ],gCars[car][carRA],gCars[i][carColor1],gCars[i][carColor2],-1);
					SetVehicleZAngle(vehicleid,gHotelPark[hotelid][room][3]);
					gCars[i][carVid] = vehicleid;
					UpdateVehicleDamageStatus(vehicleid,gCars[i][carDemages][0],gCars[i][carDemages][1],gCars[i][carDemages][2],gCars[i][carDemages][3]);
					SetVehicleHealthEx(vehicleid,gCars[i][carHealth]);
					ToggleLock(vehicleid);
					gVehicles[vehicleid-1][vFuel] = gCars[i][carFuel];
					gVehicles[vehicleid-1][vDrived] = gCars[i][carDrived];
					gVehicles[vehicleid-1][vHealth] = gCars[i][carHealth];
					gVehicles[vehicleid-1][vOwnerid] = gCars[i][carOwnerid];
					gVehicles[vehicleid-1][vX] = gHotelPark[hotelid][room][0];
					gVehicles[vehicleid-1][vY] = gHotelPark[hotelid][room][1];
					gVehicles[vehicleid-1][vZ] = gHotelPark[hotelid][room][2];
					printf("%d %f %f %f",gTransport[modelid][trModel],gCars[i][carX],gCars[i][carY],gCars[i][carZ]);
				}
				printf("%d %f %f %f",gTransport[modelid][trModel],gCars[car][carX],gCars[car][carY],gCars[car][carZ]);*/
			}
			else printf("Неверная связка машины у игрока %d (машина %d не найдена)",plid,car);
		}
	}
	mysql_free_result();
	mysql_query("SELECT * FROM `fillings` ORDER BY `id`");
	mysql_store_result();
	if(mysql_num_rows() != FILLING_COUNT) print("Кол-во заправок в базе не совпадает с предопределным количеством");
	if(mysql_num_rows() > 0)
	{
		for(new i;i<mysql_num_rows();i++)
		{
			mysql_fetch_row(result);
			sscanf(result,"p<|>iis[24]iiiia<i>[5]a<i>[5]a<i>[5]",gFillings[i][fillMysqlID],gFillings[i][fillOwnerID],gFillings[i][fillOwner],gFillings[i][fillPrice],gFillings[i][fillBank],gFillings[i][fillWorking],gFillings[i][fillPumps],gFillings[i][fillTanks],gFillings[i][fillFuel],gFillings[i][fillFuelPrice]);
			//printf("Filling: %d, Mark[0]: %d",gFillings[i][fillMysqlID],gFillings[i][fillFuel][0]);
			CreateDynamicPickup(19132,1,gFillingBuy[i][0],gFillingBuy[i][1],gFillingBuy[i][2]);
			gFillingBuyArea[i] = CreateDynamicSphere(gFillingBuy[i][0],gFillingBuy[i][1],gFillingBuy[i][2],1.0);
			//printf("Area: %d",gFillingBuyArea[i]);
			for(new i2;i2<4;i2++)
			{
				if(gFuelPumps[i][i2][0] == 0.0) break;
				if(!gFillings[i][fillPumps]) gFuelPumpObjects[i][i2] = CreateDynamicObject(1686,gFuelPumps[i][i2][0],gFuelPumps[i][i2][1],gFuelPumps[i][i2][2],gFuelPumps[i][i2][3],gFuelPumps[i][i2][4],gFuelPumps[i][i2][5]);
				else gFuelPumpObjects[i][i2] = CreateDynamicObject(1676,gFuelPumps[i][i2][0],gFuelPumps[i][i2][1],gFuelPumps[i][i2][2]+1.5,gFuelPumps[i][i2][3],gFuelPumps[i][i2][4],gFuelPumps[i][i2][5]+90.0);
			}
		}
		for(new i,m=mysql_num_rows();i<m;i++) gAreas[arFill][i] = CreateDynamicSphere(gFuelPumps[i][0][0],gFuelPumps[i][0][1],gFuelPumps[i][0][2],10.0);
	}
	mysql_free_result();
	mysql_query("SELECT * FROM `gangs` ORDER BY `id`");
	mysql_store_result();
	if(mysql_num_rows() != 5) print("Кол-во банд в базе не совпадает с предопределным количеством");
	else
	{
		if(mysql_num_rows() > 0)
		{
			for(new i;i<mysql_num_rows();i++)
			{
				new ranks[256];
				mysql_fetch_row(result);
				sscanf(result,"p<|>{i}s[255]a<i>[5]ia<i>[4]ia<i>[4]",ranks,gGangCars[i],gGangDormLimit[i],gGangDorm[i],gGangCode[i],gGangAccess[i]);
				//print(ranks);
				explode(gFractionRankName[i+2],ranks,",");
				//printf("%d %d %d",gGangCars[i][0],gGangCars[i][4],gGangAccess[i][1]);
				//new last;
				for(new j;j<5;j++)
				{
					if(!gGangCars[i][j]) gGangCars[i][j] = 481;
					new vid;
					vid = CreateVehicle(gGangCars[i][j],gGangCarSlot[i][j][0],gGangCarSlot[i][j][1],gGangCarSlot[i][j][2],gGangCarSlot[i][j][3],gGangCarColors[i],gGangCarColors[i],900);
					aGang[i][j] = vid;
					//if(!j) aGang[i][j] = vid;
					//last = vid;
					gVehicles[vid-1][vFuel] = gTransport[GetVehicleModel(vid)-400][trTank];
					gVehicles[vid-1][vHealth] = 1000.0;
					gVehicles[vid-1][vOwnerid] = INVALID_PLAYER_ID;
					gVehicles[vid-1][vLock] = 0;
					gVehicles[vid-1][vID] = vid;
				}
				//aGang[i][1] = last;
			}
		}
	}
	mysql_free_result();
	mysql_query("SELECT * FROM `bints` ORDER BY `id`");
	mysql_store_result();
	if(mysql_num_rows() != BINT_COUNT) print("Кол-во БИНТ'ов в базе не совпадает с предопределным количеством");
	else
	{
		for(new i;i<BINT_COUNT;i++)
		{
			mysql_fetch_row(result);
			sscanf(result,"p<|>e<iifffffffs[32]>",gBints[i]);
			gBintEnterArea[i] = CreateDynamicSphere(gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],1.0);
			CreateDynamicPickup(1318,1,gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ]);
			CreateDynamicPickup(1239,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB]);
		}
		for(new i;i<BINT_COUNT;i++) gBintBuyArea[i] = CreateDynamicSphere(gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],1.0);
	}
	mysql_free_result();
	mysql_query("SELECT * FROM `business` ORDER BY `id`");
	mysql_store_result();
	gBusinessCount = mysql_num_rows();
	if(gBusinessCount >= MAX_BUSINESS_COUNT) print("Кол-во бизнесов в базе превышает предопределнное количество");
	else if(gBusinessCount > 0)
	{
		for(new i;i<gBusinessCount;i++)
		{
			mysql_fetch_row(result);
			sscanf(result,"p<|>e<is[64]iiiiiiiiffffiii>",gBusiness[i]);
			gBusinessArea[i] = CreateDynamicSphere(gBusiness[i][busiX],gBusiness[i][busiY],gBusiness[i][busiZ],1.0);
			CreateDynamicPickup(19132,1,gBusiness[i][busiX],gBusiness[i][busiY],gBusiness[i][busiZ]);
			gBusinessText[i] = CreateDynamic3DTextLabel("_",CWHITE,gBusiness[i][busiX],gBusiness[i][busiY],gBusiness[i][busiZ]+1.0,20.0);
            TOTALBIZZ++;
            GZSafeTimeM[i] = 0;
            ZoneOnBattleM[i] = 0;
			new icon = 0, bint = gBusiness[i][busiBint];
			if(bint >= 1 && bint <= 4) icon = 49;
			else if((bint >= 5 && bint <= 9) || bint == 23) icon = 45;
			else if(bint >= 17 && bint <= 21) icon = 50;
			else if(bint == 22) icon = 27;
			else if(bint == 14 || bint == 15) icon = 48;
			if(icon) gBusinessIcon[i] = CreateDynamicMapIcon(gBusiness[i][busiX], gBusiness[i][busiY], gBusiness[i][busiZ], icon, -1);
		}
	}
	else print("Не обнаружено бизнесов в базе");
	mysql_free_result();
	LoadGZ();
	for(new i;i<gBusinessCount;i++)
	{
		UpdateBusinessText(i);
		gBusiness[i][busiDelivingArea] = CreateDynamicSphere(gBusiness[i][busiX],gBusiness[i][busiY],gBusiness[i][busiZ],10.0);
	}
	for(new i; i<= aNews[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aRM[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aLCN[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aYak[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aMarLS[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aMarSF[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aMarLV[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aPris[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i;i<DELIVERY_DFT_COUNT;i++)
	{
		gDFTObject[i][0] = INVALID_OBJECT_ID;
		gDFTObject[i][1] = INVALID_OBJECT_ID;
	}
	//mysql_debug();
	new fid = ini_openFile("warehouses.ini");
	if(fid < 0) printf("Error while opening file warehouses.ini (%d)",fid);
	ini_getInteger(fid,"coal",gCoalWH);
	ini_getInteger(fid,"wood",gWoodWH);
	ini_getInteger(fid,"guncoal",gGunWorkWH[0]);
	ini_getInteger(fid,"gunwood",gGunWorkWH[1]);
	ini_getInteger(fid,"gun",gGunWorkWH[2]);
	ini_getInteger(fid,"army1gun",gArmyWarehouse[0][0]);
	ini_getInteger(fid,"army1ammo",gArmyWarehouse[0][1]);
	ini_getInteger(fid,"army2gun",gArmyWarehouse[1][0]);
	ini_getInteger(fid,"army2ammo",gArmyWarehouse[1][1]);
	ini_getInteger(fid,"lspdgun",gPDWarehouse[0][0]);
	ini_getInteger(fid,"lspdammo",gPDWarehouse[0][1]);
	ini_getInteger(fid,"sfpdgun",gPDWarehouse[1][0]);
	ini_getInteger(fid,"sfpdammo",gPDWarehouse[1][1]);
	ini_getInteger(fid,"lvpdgun",gPDWarehouse[2][0]);
	ini_getInteger(fid,"lvpdammo",gPDWarehouse[2][1]);
	ini_getInteger(fid,"yaksklad",gMafWarehouse[0]);
	ini_getInteger(fid,"lcnsklad",gMafWarehouse[1]);
	ini_getInteger(fid,"rmsklad",gMafWarehouse[2]);
	ini_closeFile(fid);
	LoadNewsMoney();
	UpdateEconomic();
	LOGOTEXT[0] = TextDrawCreate(498.000000, 1.000000, "WESTERN");
	TextDrawBackgroundColor(LOGOTEXT[0] , 255);
	TextDrawFont(LOGOTEXT[0] , 3);
	TextDrawLetterSize(LOGOTEXT[0] , 0.389999, 1.599998);
	TextDrawColor(LOGOTEXT[0] , -361430785);
	TextDrawSetOutline(LOGOTEXT[0] , 0);
	TextDrawSetProportional(LOGOTEXT[0] , 1);
	TextDrawSetShadow(LOGOTEXT[0] , 1);
	TextDrawSetSelectable(LOGOTEXT[0] , 0);

	LOGOTEXT[1] = TextDrawCreate(533.000000, 10.000000, "STATE");
	TextDrawBackgroundColor(LOGOTEXT[1], 255);
	TextDrawFont(LOGOTEXT[1], 3);
	TextDrawLetterSize(LOGOTEXT[1], 0.310000, 1.299998);
	TextDrawColor(LOGOTEXT[1], -1);
	TextDrawSetOutline(LOGOTEXT[1], 0);
	TextDrawSetProportional(LOGOTEXT[1], 1);
	TextDrawSetShadow(LOGOTEXT[1], 1);
	TextDrawSetSelectable(LOGOTEXT[1], 0);

	LOGOTEXT[2] = TextDrawCreate(602.000000, 3.000000, "CALIFORNIA");
	TextDrawAlignment(LOGOTEXT[2], 2);
	TextDrawBackgroundColor(LOGOTEXT[2], 255);
	TextDrawFont(LOGOTEXT[2], 1);
	TextDrawLetterSize(LOGOTEXT[2], 0.369998, 1.599998);
	TextDrawColor(LOGOTEXT[2], -361430785);
	TextDrawSetOutline(LOGOTEXT[2], 0);
	TextDrawSetProportional(LOGOTEXT[2], 1);
	TextDrawSetShadow(LOGOTEXT[2], 1);
	TextDrawSetSelectable(LOGOTEXT[2], 0);
	SetWeather(1);
    LoadDeliveryData();
	return 1;
}

public OnGameModeExit()
{
	//SaveServerData();
	mysql_close();
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(pTemp[playerid][pLogined]) return SpawnPlayer(playerid);
	new ip[24];
	GetPlayerIp(playerid,ip,24);
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!strcmp(ip,gClientIP[i],false) && strlen(gClientIP[i]))
		{
			gClientID[i] = playerid;
			SetPVarInt(playerid,"clientid",i+1);
			return 0;
		}
	}
	pTemp[playerid][pJoined] = true;
	//SetTimerEx("OnPlayerJoin",300,false,"i",playerid);
	OnPlayerJoin(playerid);
	return 1;
}

public OnPlayerConnect(playerid)
{
    new ip[32];
	GetPlayerName(playerid,pRegData[playerid][0],MAX_PLAYER_NAME);
 	if(strfind(pRegData[playerid][0],"_",true,1) == -1)
 	{
  		SendClientMessage(playerid, CRED, "Вы были кикнуты сервером, Причина: НонРП ник. Придумайте пожалуйста РП ник.");
        SendClientMessage(playerid, CRED, "Пример РП никнейма: Vasya_Pupkin");
        NewKick(playerid);
        return 1;
    }
	GetPlayerIp(playerid,ip,32);
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(gReconnectTime[i] <= 0) continue;
		if(!strcmp(ip,gReconnectIP[i],false) && strlen(gReconnectIP[i]))
		{
			printf("Reconnect IP: %s = %s, Time: %d",ip,gReconnectIP[i],gReconnectTime[i]);
			SendClientMessage(playerid,CGRAY,"Перезаходить можно не менее чем через 5 секунд");
			gReconnectTime[i] += 5;
			if(gReconnectTime[i] >= 30)
			{
				new mes[128];
				format(mes,sizeof(mes),"banip %s",ip);
				SendRconCommand(mes);
			}
			NewKick(playerid);
			return 0;
		}
	}
	ResetWeaponAll(playerid);
	createPTD_adminSpec(playerid);

	PTD_autosalon[playerid][0] = CreatePlayerTextDraw(playerid,219.000000, 283.000000, "fon");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][0], 90);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][0], 5);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][0], 0.600000, 0.000000);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][0], 16711935);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,PTD_autosalon[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid,PTD_autosalon[playerid][0], 16777215);
	PlayerTextDrawTextSize(playerid,PTD_autosalon[playerid][0], 204.000000, 140.000000);
	PlayerTextDrawSetPreviewModel(playerid, PTD_autosalon[playerid][0], 12400);
	PlayerTextDrawSetPreviewRot(playerid, PTD_autosalon[playerid][0], -16.000000, 0.000000, -55.000000, 200000.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][0], 0);

	PTD_autosalon[playerid][1] = CreatePlayerTextDraw(playerid,229.000000, 393.000000, "ld_beat:left");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][1], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][1], 4);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][1], 0.400000, 0.000000);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][1], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][1], 1);
	PlayerTextDrawUseBox(playerid,PTD_autosalon[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid,PTD_autosalon[playerid][1], 255);
	PlayerTextDrawTextSize(playerid,PTD_autosalon[playerid][1], 21.000000, 21.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][1], 1);

	PTD_autosalon[playerid][2] = CreatePlayerTextDraw(playerid,229.000000, 301.000000, "MODEL:     INFERNUS");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][2], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][2], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][2], 0.229999, 1.299999);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][2], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][2], 0);

	PTD_autosalon[playerid][3] = CreatePlayerTextDraw(playerid,392.000000, 393.000000, "ld_beat:right");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][3], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][3], 4);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][3], 0.400000, 0.000000);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][3], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][3], 1);
	PlayerTextDrawUseBox(playerid,PTD_autosalon[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid,PTD_autosalon[playerid][3], 255);
	PlayerTextDrawTextSize(playerid,PTD_autosalon[playerid][3], 21.000000, 21.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][3], 1);

	PTD_autosalon[playerid][4] = CreatePlayerTextDraw(playerid,229.000000, 314.000000, "MAX. FUEL:    200 L");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][4], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][4], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][4], 0.229999, 1.299999);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][4], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][4], 0);

	PTD_autosalon[playerid][5] = CreatePlayerTextDraw(playerid,229.000000, 327.000000, "MAX. SPEED:    200 km/h");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][5], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][5], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][5], 0.229999, 1.299999);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][5], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][5], 0);

	PTD_autosalon[playerid][6] = CreatePlayerTextDraw(playerid,320.000000, 371.000000, "45000 $");
	PlayerTextDrawAlignment(playerid,PTD_autosalon[playerid][6], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][6], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][6], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][6], 0.289997, 2.099999);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][6], 16711935);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][6], 0);

	PTD_autosalon[playerid][7] = CreatePlayerTextDraw(playerid,229.000000, 341.000000, "ENGINE:    DIESEL");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][7], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][7], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][7], 0.229999, 1.299999);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][7], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][7], 0);

	PTD_autosalon[playerid][8] = CreatePlayerTextDraw(playerid,229.000000, 355.000000, "CONS.:    19 l/100km");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][8], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][8], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][8], 0.229999, 1.299999);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][8], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][8], 0);

	PTD_autosalon[playerid][9] = CreatePlayerTextDraw(playerid,320.000000, 394.000000, "CONTINUE");
	PlayerTextDrawAlignment(playerid,PTD_autosalon[playerid][9], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][9], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][9], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][9], 0.310000, 1.899999);
	PlayerTextDrawTextSize(playerid,PTD_autosalon[playerid][9], 320.000000+62, 15.0);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][9], -65281);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][9], 1);

	PTD_autosalon[playerid][10] = CreatePlayerTextDraw(playerid,219.000000, 283.000000, "fon");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][10], 90);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][10], 5);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][10], 0.509998, 0.000000);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][10], 16711935);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][10], 1);
	PlayerTextDrawUseBox(playerid,PTD_autosalon[playerid][10], 1);
	PlayerTextDrawBoxColor(playerid,PTD_autosalon[playerid][10], 16777215);
	PlayerTextDrawTextSize(playerid,PTD_autosalon[playerid][10], 204.000000, 14.000000);
	PlayerTextDrawSetPreviewModel(playerid, PTD_autosalon[playerid][10], 12400);
	PlayerTextDrawSetPreviewRot(playerid, PTD_autosalon[playerid][10], -16.000000, 0.000000, -55.000000, 200000.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][10], 0);

	PTD_autosalon[playerid][11] = CreatePlayerTextDraw(playerid,410.000000, 284.000000, "ld_beat:cross");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][11], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][11], 4);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][11], 0.400000, 0.000000);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][11], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][11], 1);
	PlayerTextDrawUseBox(playerid,PTD_autosalon[playerid][11], 1);
	PlayerTextDrawBoxColor(playerid,PTD_autosalon[playerid][11], 255);
	PlayerTextDrawTextSize(playerid,PTD_autosalon[playerid][11], 12.000000, 12.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][11], 1);

	PTD_autosalon[playerid][12] = CreatePlayerTextDraw(playerid,292.000000, 285.000000, "Buying a car");
	PlayerTextDrawBackgroundColor(playerid,PTD_autosalon[playerid][12], 255);
	PlayerTextDrawFont(playerid,PTD_autosalon[playerid][12], 2);
	PlayerTextDrawLetterSize(playerid,PTD_autosalon[playerid][12], 0.189998, 1.100000);
	PlayerTextDrawColor(playerid,PTD_autosalon[playerid][12], - 1);
	PlayerTextDrawSetOutline(playerid,PTD_autosalon[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid,PTD_autosalon[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid,PTD_autosalon[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_autosalon[playerid][12], 0);

    StatsTextdraw[0][playerid] = CreatePlayerTextDraw(playerid,0.000000, 0.000000, "fon1");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[0][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[0][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[0][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[0][playerid], 100);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[0][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[0][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[0][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[0][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[0][playerid], -16776961);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[0][playerid], 642.000000, 452.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[0][playerid], 1240);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[0][playerid], -16.000000, 0.000000, -55.000000, -50.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[0][playerid], 0);

	StatsTextdraw[1][playerid] = CreatePlayerTextDraw(playerid,215.000000, 176.000000, "fon2");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[1][playerid], 120);
	PlayerTextDrawFont(playerid,StatsTextdraw[1][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[1][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[1][playerid], 120);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[1][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[1][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[1][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[1][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[1][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[1][playerid], 208.000000, 175.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[1][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[1][playerid], 0.000000, 0.000000, 0.000000, -50.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[1][playerid], 0);

	StatsTextdraw[2][playerid] = CreatePlayerTextDraw(playerid,0.000000, 96.000000, "rfon");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[2][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[2][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[2][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[2][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[2][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[2][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[2][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[2][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[2][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[2][playerid], 640.000000, 80.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[2][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[2][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[2][playerid], 0);

	StatsTextdraw[3][playerid] = CreatePlayerTextDraw(playerid,309.000000, 200.000000, "Name:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[3][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[3][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[3][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[3][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[3][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[3][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[3][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[3][playerid], 0);

	StatsTextdraw[4][playerid] = CreatePlayerTextDraw(playerid,215.000000, 46.000000, "fon4");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[4][playerid], 150);
	PlayerTextDrawFont(playerid,StatsTextdraw[4][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[4][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[4][playerid], 120);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[4][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[4][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[4][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[4][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[4][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[4][playerid], 208.000000, 50.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[4][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[4][playerid], 0.000000, 0.000000, 0.000000, -50.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[4][playerid], 0);

	StatsTextdraw[5][playerid] = CreatePlayerTextDraw(playerid,309.000000, 210.000000, "LEVEL:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[5][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[5][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[5][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[5][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[5][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[5][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[5][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[5][playerid], 0);

	StatsTextdraw[6][playerid] = CreatePlayerTextDraw(playerid,309.000000, 220.000000, "MONEY:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[6][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[6][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[6][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[6][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[6][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[6][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[6][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[6][playerid], 0);

	StatsTextdraw[7][playerid] = CreatePlayerTextDraw(playerid,309.000000, 230.000000, "ORG:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[7][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[7][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[7][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[7][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[7][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[7][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[7][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[7][playerid], 0);

	StatsTextdraw[8][playerid] = CreatePlayerTextDraw(playerid,215.000000, 344.000000, "rfon1");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[8][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[8][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[8][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[8][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[8][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[8][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[8][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[8][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[8][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[8][playerid], 208.000000, 7.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[8][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[8][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[8][playerid], 0);

	StatsTextdraw[9][playerid] = CreatePlayerTextDraw(playerid,174.000000, 186.000000, "key1");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[9][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[9][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[9][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[9][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[9][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[9][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[9][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[9][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[9][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[9][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[9][playerid], 1272);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[9][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[9][playerid], 0);

	StatsTextdraw[10][playerid] = CreatePlayerTextDraw(playerid,309.000000, 240.000000, "WARN TIME:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[10][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[10][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[10][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[10][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[10][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[10][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[10][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[10][playerid], 0);

	StatsTextdraw[11][playerid] = CreatePlayerTextDraw(playerid,394.000000, 200.000000, "Joe_Bath");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[11][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[11][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[11][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[11][playerid], 0.170000, 0.899999);
	PlayerTextDrawColor(playerid,StatsTextdraw[11][playerid], 16711935);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[11][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[11][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[11][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[11][playerid], 0);

	StatsTextdraw[12][playerid] = CreatePlayerTextDraw(playerid,395.000000, 210.000000, "8 (12/24)");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[12][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[12][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[12][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[12][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[12][playerid], -65281);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[12][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[12][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[12][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[12][playerid], 0);

	StatsTextdraw[13][playerid] = CreatePlayerTextDraw(playerid,394.000000, 220.000000, "999999");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[13][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[13][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[13][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[13][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[13][playerid], 16711935);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[13][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[13][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[13][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[13][playerid], 0);

	StatsTextdraw[14][playerid] = CreatePlayerTextDraw(playerid,394.000000, 230.000000, "DOD");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[14][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[14][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[14][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[14][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[14][playerid], -16776961);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[14][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[14][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[14][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[14][playerid], 0);

	StatsTextdraw[15][playerid] = CreatePlayerTextDraw(playerid,295.000000, 176.000000, "STATS");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[15][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[15][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[15][playerid], 0.370000, 1.999999);
	PlayerTextDrawColor(playerid,StatsTextdraw[15][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[15][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[15][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[15][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[15][playerid], 0);

	StatsTextdraw[16][playerid] = CreatePlayerTextDraw(playerid,174.000000, 228.000000, "key2");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[16][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[16][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[16][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[16][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[16][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[16][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[16][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[16][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[16][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[16][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[16][playerid], 1274);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[16][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[16][playerid], 0);

	StatsTextdraw[17][playerid] = CreatePlayerTextDraw(playerid,174.000000, 270.000000, "key3");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[17][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[17][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[17][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[17][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[17][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[17][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[17][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[17][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[17][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[17][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[17][playerid], 1274);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[17][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[17][playerid], 0);

	StatsTextdraw[18][playerid] = CreatePlayerTextDraw(playerid,395.000000, 240.000000, "1/3");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[18][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[18][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[18][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[18][playerid], 0.219999, 0.799998);
	PlayerTextDrawColor(playerid,StatsTextdraw[18][playerid], -65281);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[18][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[18][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[18][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[18][playerid], 0);

	StatsTextdraw[19][playerid] = CreatePlayerTextDraw(playerid,203.000000, 188.000000, "skin");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[19][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[19][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[19][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[19][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[19][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[19][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[19][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[19][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[19][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[19][playerid], 120.000000, 149.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[19][playerid], 208);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[19][playerid], 0.000000, 0.000000, 10.000000, 0.899999);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[19][playerid], 0);

	StatsTextdraw[20][playerid] = CreatePlayerTextDraw(playerid,174.000000, 312.000000, "key4");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[20][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[20][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[20][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[20][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[20][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[20][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[20][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[20][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[20][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[20][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[20][playerid], 505);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[20][playerid], -15.000000, 0.000000, 45.000000, 0.899999);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[20][playerid], 0);

	StatsTextdraw[21][playerid] = CreatePlayerTextDraw(playerid,433.000000, 186.000000, "key5");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[21][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[21][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[21][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[21][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[21][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[21][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[21][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[21][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[21][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[21][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[21][playerid], 1272);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[21][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[21][playerid], 0);

	StatsTextdraw[22][playerid] = CreatePlayerTextDraw(playerid,433.000000, 228.000000, "key6");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[22][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[22][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[22][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[22][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[22][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[22][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[22][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[22][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[22][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[22][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[22][playerid], 1272);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[22][playerid], 0.000000, 0.000000, 0.000000, -50.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[22][playerid], 0);

	StatsTextdraw[23][playerid] = CreatePlayerTextDraw(playerid,433.000000, 270.000000, "key7");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[23][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[23][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[23][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[23][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[23][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[23][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[23][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[23][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[23][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[23][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[23][playerid], 1272);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[23][playerid], 0.000000, 0.000000, 0.000000, -50.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[23][playerid], 0);

	StatsTextdraw[24][playerid] = CreatePlayerTextDraw(playerid,433.000000, 312.000000, "key8");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[24][playerid], 80);
	PlayerTextDrawFont(playerid,StatsTextdraw[24][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[24][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[24][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[24][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[24][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[24][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[24][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[24][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[24][playerid], 31.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[24][playerid], 1272);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[24][playerid], 0.000000, 0.000000, 0.000000, -50.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[24][playerid], 0);

	StatsTextdraw[25][playerid] = CreatePlayerTextDraw(playerid,168.000000, 186.000000, "rfon2");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[25][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[25][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[25][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[25][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[25][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[25][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[25][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[25][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[25][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[25][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[25][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[25][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[25][playerid], 0);

	StatsTextdraw[26][playerid] = CreatePlayerTextDraw(playerid,168.000000, 228.000000, "rfon3");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[26][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[26][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[26][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[26][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[26][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[26][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[26][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[26][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[26][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[26][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[26][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[26][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[26][playerid], 0);

	StatsTextdraw[27][playerid] = CreatePlayerTextDraw(playerid,168.000000, 270.000000, "rfon4");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[27][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[27][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[27][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[27][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[27][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[27][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[27][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[27][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[27][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[27][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[27][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[27][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[27][playerid], 0);

	StatsTextdraw[28][playerid] = CreatePlayerTextDraw(playerid,168.000000, 312.000000, "rfon5");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[28][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[28][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[28][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[28][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[28][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[28][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[28][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[28][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[28][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[28][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[28][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[28][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[28][playerid], 0);

	StatsTextdraw[29][playerid] = CreatePlayerTextDraw(playerid,464.000000, 186.000000, "rfon6");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[29][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[29][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[29][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[29][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[29][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[29][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[29][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[29][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[29][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[29][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[29][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[29][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[29][playerid], 0);

	StatsTextdraw[30][playerid] = CreatePlayerTextDraw(playerid,464.000000, 228.000000, "rfon7");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[30][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[30][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[30][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[30][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[30][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[30][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[30][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[30][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[30][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[30][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[30][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[30][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[30][playerid], 0);

	StatsTextdraw[31][playerid] = CreatePlayerTextDraw(playerid,285.000000, 153.000000, "LD_POOL:ball");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[31][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[31][playerid], 4);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[31][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[31][playerid], 150);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[31][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[31][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[31][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[31][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[31][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[31][playerid], 68.000000, 9.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[31][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[31][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[31][playerid], 0);

	StatsTextdraw[32][playerid] = CreatePlayerTextDraw(playerid,302.000000, 148.000000, "REPORT");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[32][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[32][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[32][playerid], 0.239999, 1.399997);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[32][playerid], 340.000000, 10.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[32][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[32][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[32][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[32][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[32][playerid], 1);

	StatsTextdraw[33][playerid] = CreatePlayerTextDraw(playerid,288.000000, 102.000000, "reporticon");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[33][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[33][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[33][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[33][playerid], -65281);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[33][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[33][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[33][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[33][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[33][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[33][playerid], 60.000000, 69.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[33][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[33][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[33][playerid], 0);

	StatsTextdraw[34][playerid] = CreatePlayerTextDraw(playerid,390.000000, 153.000000, "LD_POOL:ball");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[34][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[34][playerid], 4);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[34][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[34][playerid], 150);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[34][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[34][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[34][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[34][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[34][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[34][playerid], 68.000000, 9.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[34][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[34][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[34][playerid], 0);

	StatsTextdraw[35][playerid] = CreatePlayerTextDraw(playerid,392.000000, 104.000000, "helpicon");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[35][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[35][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[35][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[35][playerid], -65281);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[35][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[35][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[35][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[35][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[35][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[35][playerid], 57.000000, 65.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[35][playerid], 1239);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[35][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[35][playerid], 0);

	StatsTextdraw[36][playerid] = CreatePlayerTextDraw(playerid,403.000000, 149.000000, "COMMANDS");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[36][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[36][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[36][playerid], 0.189998, 1.299998);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[36][playerid], 447.000000, 10.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[36][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[36][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[36][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[36][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[36][playerid], 1);

	StatsTextdraw[37][playerid] = CreatePlayerTextDraw(playerid,180.000000, 153.000000, "LD_POOL:ball");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[37][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[37][playerid], 4);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[37][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[37][playerid], 150);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[37][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[37][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[37][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[37][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[37][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[37][playerid], 68.000000, 9.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[37][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[37][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[37][playerid], 0);

	StatsTextdraw[38][playerid] = CreatePlayerTextDraw(playerid,181.000000, 167.000000, "otverka");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[38][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[38][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[38][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[38][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[38][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[38][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[38][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[38][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[38][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[38][playerid], 57.000000, -51.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[38][playerid], 18644);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[38][playerid], 0.000000, 20.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[38][playerid], 0);

	StatsTextdraw[39][playerid] = CreatePlayerTextDraw(playerid,191.000000, 114.000000, "molotok");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[39][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[39][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[39][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[39][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[39][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[39][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[39][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[39][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[39][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[39][playerid], 57.000000, 48.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[39][playerid], 18635);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[39][playerid], 0.000000, 30.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[39][playerid], 0);

	StatsTextdraw[40][playerid] = CreatePlayerTextDraw(playerid,196.000000, 149.000000, "SETTINGS");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[40][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[40][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[40][playerid], 0.189998, 1.299998);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[40][playerid], 234.000000, 10.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[40][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[40][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[40][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[40][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[40][playerid], 1);

	StatsTextdraw[41][playerid] = CreatePlayerTextDraw(playerid,496.000000, 153.000000, "LD_POOL:ball");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[41][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[41][playerid], 4);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[41][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[41][playerid], 150);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[41][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[41][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[41][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[41][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[41][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[41][playerid], 68.000000, 9.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[41][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[41][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[41][playerid], 0);

	StatsTextdraw[42][playerid] = CreatePlayerTextDraw(playerid,498.000000, 109.000000, "donateicon");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[42][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[42][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[42][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[42][playerid], -65281);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[42][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[42][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[42][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[42][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[42][playerid], 255);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[42][playerid], 57.000000, 59.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[42][playerid], 1276);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[42][playerid], 0.000000, 0.000000, -100.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[42][playerid], 0);

	StatsTextdraw[43][playerid] = CreatePlayerTextDraw(playerid,515.000000, 149.000000, "DONATE");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[43][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[43][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[43][playerid], 0.189998, 1.299998);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[43][playerid], 549.000000, 10.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[43][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[43][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[43][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[43][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[43][playerid], 1);

	StatsTextdraw[44][playerid] = CreatePlayerTextDraw(playerid,74.000000, 153.000000, "LD_POOL:ball");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[44][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[44][playerid], 4);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[44][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[44][playerid], 150);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[44][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[44][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[44][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[44][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[44][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[44][playerid], 68.000000, 9.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[44][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[44][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[44][playerid], 0);

	StatsTextdraw[45][playerid] = CreatePlayerTextDraw(playerid,85.000000, 117.000000, "guideicon");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[45][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[45][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[45][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[45][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[45][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[45][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[45][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[45][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[45][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[45][playerid], 45.000000, 48.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[45][playerid], 1253);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[45][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[45][playerid], 0);

	StatsTextdraw[46][playerid] = CreatePlayerTextDraw(playerid,96.000000, 149.000000, "GUIDE");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[46][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[46][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[46][playerid], 0.219999, 1.299998);
 	PlayerTextDrawTextSize(playerid,StatsTextdraw[46][playerid], 122.000000, 10.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[46][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[46][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[46][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[46][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[46][playerid], 1);

	StatsTextdraw[47][playerid] = CreatePlayerTextDraw(playerid,257.000000, 57.000000, "Main Menu");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[47][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[47][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[47][playerid], 0.600000, 2.700000);
	PlayerTextDrawColor(playerid,StatsTextdraw[47][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[47][playerid], 1);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[47][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[47][playerid], 0);

	StatsTextdraw[48][playerid] = CreatePlayerTextDraw(playerid,554.000000, 56.000000, "LD_POOL:ball");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[48][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[48][playerid], 4);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[48][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[48][playerid], 150);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[48][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[48][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[48][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[48][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[48][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[48][playerid], 68.000000, 9.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[48][playerid], 1314);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[48][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[48][playerid], 0);

	StatsTextdraw[49][playerid] = CreatePlayerTextDraw(playerid,565.000000, 21.000000, "exiticon");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[49][playerid], 0);
	PlayerTextDrawFont(playerid,StatsTextdraw[49][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[49][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[49][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[49][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[49][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[49][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[49][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[49][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[49][playerid], 54.000000, 58.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[49][playerid], 19133);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[49][playerid], 0.000000, 110.000000, 90.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[49][playerid], 0);

	StatsTextdraw[50][playerid] = CreatePlayerTextDraw(playerid,577.000000, 52.000000, "EXIT");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[50][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[50][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[50][playerid], 0.289999, 1.299998);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[50][playerid], 610.000000, 10.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[50][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[50][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[50][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[50][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[50][playerid], 1);

	StatsTextdraw[51][playerid] = CreatePlayerTextDraw(playerid,464.000000, 270.000000, "rfon8");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[51][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[51][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[51][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[51][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[51][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[51][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[51][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[51][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[51][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[51][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[51][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[51][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[51][playerid], 0);

	StatsTextdraw[52][playerid] = CreatePlayerTextDraw(playerid,464.000000, 312.000000, "rfon8");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[52][playerid], -1);
	PlayerTextDrawFont(playerid,StatsTextdraw[52][playerid], 5);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[52][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,StatsTextdraw[52][playerid], -1995046657);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[52][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[52][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[52][playerid], 1);
	PlayerTextDrawUseBox(playerid,StatsTextdraw[52][playerid], 1);
	PlayerTextDrawBoxColor(playerid,StatsTextdraw[52][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,StatsTextdraw[52][playerid], 6.000000, 32.000000);
	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[52][playerid], 19463);
	PlayerTextDrawSetPreviewRot(playerid,StatsTextdraw[52][playerid], 0.000000, 0.000000, 90.000000, 0.300000);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[52][playerid], 0);

	StatsTextdraw[53][playerid] = CreatePlayerTextDraw(playerid,309.000000, 250.000000, "Phone:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[53][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[53][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[53][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[53][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[53][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[53][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[53][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[53][playerid], 0);

	StatsTextdraw[54][playerid] = CreatePlayerTextDraw(playerid,309.000000, 260.000000, "JOB1:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[54][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[54][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[54][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[54][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[54][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[54][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[54][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[54][playerid], 0);

	StatsTextdraw[55][playerid] = CreatePlayerTextDraw(playerid,309.000000, 270.000000, "JOB2:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[55][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[55][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[55][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[55][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[55][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[55][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[55][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[55][playerid], 0);

	StatsTextdraw[56][playerid] = CreatePlayerTextDraw(playerid,309.000000, 280.000000, "NAT:");
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[56][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[56][playerid], 2);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[56][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[56][playerid], -1);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[56][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[56][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[56][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[56][playerid], 0);

	StatsTextdraw[57][playerid] = CreatePlayerTextDraw(playerid,395.000000, 250.000000, "3244");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[57][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[57][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[57][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[57][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[57][playerid], 16711935);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[57][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[57][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[57][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[57][playerid], 0);

	StatsTextdraw[58][playerid] = CreatePlayerTextDraw(playerid,395.000000, 260.000000, "TRUCKER");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[58][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[58][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[58][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[58][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[58][playerid], 16711935);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[58][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[58][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[58][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[58][playerid], 0);

	StatsTextdraw[59][playerid] = CreatePlayerTextDraw(playerid,395.000000, 280.000000, "AMERICAN");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[59][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[59][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[59][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[59][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[59][playerid], 16711935);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[59][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[59][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[59][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[59][playerid], 0);

	StatsTextdraw[60][playerid] = CreatePlayerTextDraw(playerid,395.000000, 270.000000, "none");
	PlayerTextDrawAlignment(playerid,StatsTextdraw[60][playerid], 3);
	PlayerTextDrawBackgroundColor(playerid,StatsTextdraw[60][playerid], 255);
	PlayerTextDrawFont(playerid,StatsTextdraw[60][playerid], 1);
	PlayerTextDrawLetterSize(playerid,StatsTextdraw[60][playerid], 0.219999, 0.799997);
	PlayerTextDrawColor(playerid,StatsTextdraw[60][playerid], -16776961);
	PlayerTextDrawSetOutline(playerid,StatsTextdraw[60][playerid], 0);
	PlayerTextDrawSetProportional(playerid,StatsTextdraw[60][playerid], 1);
	PlayerTextDrawSetShadow(playerid,StatsTextdraw[60][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,StatsTextdraw[60][playerid], 0);


	BarTextdraws[0][playerid] = CreatePlayerTextDraw(playerid,460.000000, 423.000000, "fon2");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[0][playerid], 100);
	PlayerTextDrawFont(playerid,BarTextdraws[0][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[0][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[0][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[0][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[0][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[0][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[0][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[0][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[0][playerid], 58.000000, 60.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[0][playerid], 1232);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[0][playerid], -16.000000, 0.000000, -55.000000, -20.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[0][playerid], 0);

	BarTextdraws[1][playerid] = CreatePlayerTextDraw(playerid,400.000000, 423.000000, "fon1");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[1][playerid], 100);
	PlayerTextDrawFont(playerid,BarTextdraws[1][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[1][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[1][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[1][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[1][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[1][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[1][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[1][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[1][playerid], 58.000000, 60.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[1][playerid], 1232);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[1][playerid], -16.000000, 0.000000, -55.000000, -20.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[1][playerid], 0);

	BarTextdraws[2][playerid] = CreatePlayerTextDraw(playerid,394.000000, 423.000000, "eda");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[2][playerid], 0);
	PlayerTextDrawFont(playerid,BarTextdraws[2][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[2][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[2][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[2][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[2][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[2][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[2][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[2][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[2][playerid], 26.000000, 25.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[2][playerid], 2821);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[2][playerid], -20.000000, 0.000000, 140.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[2][playerid], 0);

	BarTextdraws[3][playerid] = CreatePlayerTextDraw(playerid,520.000000, 423.000000, "fon3");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[3][playerid], 100);
	PlayerTextDrawFont(playerid,BarTextdraws[3][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[3][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[3][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[3][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[3][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[3][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[3][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[3][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[3][playerid], 58.000000, 60.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[3][playerid], 1232);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[3][playerid], -16.000000, 0.000000, -55.000000, -20.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[3][playerid], 0);

	BarTextdraws[4][playerid] = CreatePlayerTextDraw(playerid,580.000000, 423.000000, "fon4");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[4][playerid], 100);
	PlayerTextDrawFont(playerid,BarTextdraws[4][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[4][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[4][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[4][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[4][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[4][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[4][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[4][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[4][playerid], 58.000000, 60.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[4][playerid], 1232);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[4][playerid], -16.000000, 0.000000, -55.000000, -20.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[4][playerid], 0);

	BarTextdraws[5][playerid] = CreatePlayerTextDraw(playerid,515.000000, 423.000000, "tuelet");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[5][playerid], 0);
	PlayerTextDrawFont(playerid,BarTextdraws[5][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[5][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[5][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[5][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[5][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[5][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[5][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[5][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[5][playerid], 26.000000, 25.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[5][playerid], 2738);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[5][playerid], -20.000000, 0.000000, 130.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[5][playerid], 0);

	BarTextdraws[6][playerid] = CreatePlayerTextDraw(playerid,570.000000, 423.000000, "dush");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[6][playerid], 0);
	PlayerTextDrawFont(playerid,BarTextdraws[6][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[6][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[6][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[6][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[6][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[6][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[6][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[6][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[6][playerid], 26.000000, 25.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[6][playerid], 2527);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[6][playerid], -20.000000, 0.000000, 130.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[6][playerid], 0);

	BarTextdraws[7][playerid] = CreatePlayerTextDraw(playerid,602.000000, 429.000000, "lllll");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[7][playerid], 0x000000);
	PlayerTextDrawFont(playerid,BarTextdraws[7][playerid], 1);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[7][playerid], 0.319999, 1.399999);
	PlayerTextDrawColor(playerid,BarTextdraws[7][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[7][playerid], 1);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[7][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[7][playerid], 0);

	BarTextdraws[8][playerid] = CreatePlayerTextDraw(playerid,542.000000, 429.000000, "lllll");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[8][playerid], 0x000000);
	PlayerTextDrawFont(playerid,BarTextdraws[8][playerid], 1);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[8][playerid], 0.319999, 1.399999);
	PlayerTextDrawColor(playerid,BarTextdraws[8][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[8][playerid], 1);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[8][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[8][playerid], 0);

	BarTextdraws[9][playerid] = CreatePlayerTextDraw(playerid,482.000000, 429.000000, "lllll");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[9][playerid], 0x000000);
	PlayerTextDrawFont(playerid,BarTextdraws[9][playerid], 1);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[9][playerid], 0.319999, 1.399999);
	PlayerTextDrawColor(playerid,BarTextdraws[9][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[9][playerid], 1);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[9][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[9][playerid], 0);

	BarTextdraws[10][playerid] = CreatePlayerTextDraw(playerid,422.000000, 429.000000, "lllll");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[10][playerid], 0x000000);
	PlayerTextDrawFont(playerid,BarTextdraws[10][playerid], 1);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[10][playerid], 0.319999, 1.399999);
	PlayerTextDrawColor(playerid,BarTextdraws[10][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[10][playerid], 1);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[10][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[10][playerid], 0);

	BarTextdraws[11][playerid] = CreatePlayerTextDraw(playerid,455.000000, 423.000000, "stul");
	PlayerTextDrawBackgroundColor(playerid,BarTextdraws[11][playerid], 0);
	PlayerTextDrawFont(playerid,BarTextdraws[11][playerid], 5);
	PlayerTextDrawLetterSize(playerid,BarTextdraws[11][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,BarTextdraws[11][playerid], -1);
	PlayerTextDrawSetOutline(playerid,BarTextdraws[11][playerid], 0);
	PlayerTextDrawSetProportional(playerid,BarTextdraws[11][playerid], 1);
	PlayerTextDrawSetShadow(playerid,BarTextdraws[11][playerid], 1);
	PlayerTextDrawUseBox(playerid,BarTextdraws[11][playerid], 1);
	PlayerTextDrawBoxColor(playerid,BarTextdraws[11][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,BarTextdraws[11][playerid], 26.000000, 25.000000);
	PlayerTextDrawSetPreviewModel(playerid,BarTextdraws[11][playerid], 2096);
	PlayerTextDrawSetPreviewRot(playerid,BarTextdraws[11][playerid], -20.000000, 0.000000, 130.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,BarTextdraws[11][playerid], 0);
	

	RegisterTextdrawST3[0][playerid] = CreatePlayerTextDraw(playerid,230.000000, 221.000000, "ld_beat:left");
	PlayerTextDrawBackgroundColor(playerid,RegisterTextdrawST3[0][playerid], 255);
	PlayerTextDrawFont(playerid,RegisterTextdrawST3[0][playerid], 4);
	PlayerTextDrawLetterSize(playerid,RegisterTextdrawST3[0][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,RegisterTextdrawST3[0][playerid], -1);
	PlayerTextDrawSetOutline(playerid,RegisterTextdrawST3[0][playerid], 0);
	PlayerTextDrawSetProportional(playerid,RegisterTextdrawST3[0][playerid], 1);
	PlayerTextDrawSetShadow(playerid,RegisterTextdrawST3[0][playerid], 1);
	PlayerTextDrawUseBox(playerid,RegisterTextdrawST3[0][playerid], 1);
	PlayerTextDrawBoxColor(playerid,RegisterTextdrawST3[0][playerid], 255);
	PlayerTextDrawTextSize(playerid,RegisterTextdrawST3[0][playerid], 24.000000, 25.000000);
	PlayerTextDrawSetSelectable(playerid,RegisterTextdrawST3[0][playerid], 1);

	RegisterTextdrawST3[1][playerid] = CreatePlayerTextDraw(playerid,385.000000, 221.000000, "ld_beat:right");
	PlayerTextDrawBackgroundColor(playerid,RegisterTextdrawST3[1][playerid], 255);
	PlayerTextDrawFont(playerid,RegisterTextdrawST3[1][playerid], 4);
	PlayerTextDrawLetterSize(playerid,RegisterTextdrawST3[1][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,RegisterTextdrawST3[1][playerid], -1);
	PlayerTextDrawSetOutline(playerid,RegisterTextdrawST3[1][playerid], 0);
	PlayerTextDrawSetProportional(playerid,RegisterTextdrawST3[1][playerid], 1);
	PlayerTextDrawSetShadow(playerid,RegisterTextdrawST3[1][playerid], 1);
	PlayerTextDrawUseBox(playerid,RegisterTextdrawST3[1][playerid], 1);
	PlayerTextDrawBoxColor(playerid,RegisterTextdrawST3[1][playerid], 255);
	PlayerTextDrawTextSize(playerid,RegisterTextdrawST3[1][playerid], 24.000000, 25.000000);
	PlayerTextDrawSetSelectable(playerid,RegisterTextdrawST3[1][playerid], 1);

	RegisterTextdrawST3[2][playerid] = CreatePlayerTextDraw(playerid,321.000000, 327.000000, "CONTINUE");
	PlayerTextDrawAlignment(playerid,RegisterTextdrawST3[2][playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,RegisterTextdrawST3[2][playerid], 255);
	PlayerTextDrawFont(playerid,RegisterTextdrawST3[2][playerid], 2);
	PlayerTextDrawLetterSize(playerid,RegisterTextdrawST3[2][playerid], 0.310000, 1.899999);
	PlayerTextDrawTextSize(playerid,RegisterTextdrawST3[2][playerid], 25.000000, 50.000000);
	PlayerTextDrawColor(playerid,RegisterTextdrawST3[2][playerid], -65281);
	PlayerTextDrawSetOutline(playerid,RegisterTextdrawST3[2][playerid], 0);
	PlayerTextDrawSetProportional(playerid,RegisterTextdrawST3[2][playerid], 1);
	PlayerTextDrawSetShadow(playerid,RegisterTextdrawST3[2][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,RegisterTextdrawST3[2][playerid], 1);

    SpeedTextdraws[0][playerid] = CreatePlayerTextDraw(playerid,444.000000, 392.000000, "fon");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[0][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[0][playerid], 5);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[0][playerid], 0.600000, -0.100000);
	PlayerTextDrawColor(playerid,SpeedTextdraws[0][playerid], 100);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[0][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[0][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[0][playerid], 1);
	PlayerTextDrawUseBox(playerid,SpeedTextdraws[0][playerid], 1);
	PlayerTextDrawBoxColor(playerid,SpeedTextdraws[0][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,SpeedTextdraws[0][playerid], 191.000000, 51.000000);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[0][playerid], 0);

	SpeedTextdraws[1][playerid] = CreatePlayerTextDraw(playerid,420.000000, 354.000000, "CARPIC");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[1][playerid], 0);
	PlayerTextDrawFont(playerid,SpeedTextdraws[1][playerid], 5);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[1][playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,SpeedTextdraws[1][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[1][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[1][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[1][playerid], 1);
	PlayerTextDrawUseBox(playerid,SpeedTextdraws[1][playerid], 1);
	PlayerTextDrawBoxColor(playerid,SpeedTextdraws[1][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,SpeedTextdraws[1][playerid], 72.000000, 68.000000);
	PlayerTextDrawSetPreviewModel(playerid,SpeedTextdraws[1][playerid], 445);
	PlayerTextDrawSetPreviewRot(playerid,SpeedTextdraws[1][playerid], -10.000000, 5.000000, -30.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[1][playerid], 0);

	SpeedTextdraws[2][playerid] = CreatePlayerTextDraw(playerid,455.000000, 404.000000, "SPEED");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[2][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[2][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[2][playerid], 0.330000, 1.099998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[2][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[2][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[2][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[2][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[2][playerid], 0);

	SpeedTextdraws[4][playerid] = CreatePlayerTextDraw(playerid,453.000000, 404.000000, "fonpolosok");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[4][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[4][playerid], 5);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[4][playerid], 0.400000, -0.100000);
	PlayerTextDrawColor(playerid,SpeedTextdraws[4][playerid], 100);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[4][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[4][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[4][playerid], 1);
	PlayerTextDrawUseBox(playerid,SpeedTextdraws[4][playerid], 1);
	PlayerTextDrawBoxColor(playerid,SpeedTextdraws[4][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,SpeedTextdraws[4][playerid], 172.000000, 11.000000);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[4][playerid], 0);

	SpeedTextdraws[3][playerid] = CreatePlayerTextDraw(playerid,503.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[3][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[3][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[3][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[3][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[3][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[3][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[3][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[3][playerid], 0);

	SpeedTextdraws[5][playerid] = CreatePlayerTextDraw(playerid,510.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[5][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[5][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[5][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[5][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[5][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[5][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[5][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[5][playerid], 0);

	SpeedTextdraws[6][playerid] = CreatePlayerTextDraw(playerid,517.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[6][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[6][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[6][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[6][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[6][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[6][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[6][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[6][playerid], 0);

	SpeedTextdraws[7][playerid] = CreatePlayerTextDraw(playerid,524.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[7][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[7][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[7][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[7][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[7][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[7][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[7][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[7][playerid], 0);

	SpeedTextdraws[8][playerid] = CreatePlayerTextDraw(playerid,531.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[8][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[8][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[8][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[8][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[8][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[8][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[8][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[8][playerid], 0);

	SpeedTextdraws[9][playerid] = CreatePlayerTextDraw(playerid,538.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[9][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[9][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[9][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[9][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[9][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[9][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[9][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[9][playerid], 0);

	SpeedTextdraws[10][playerid] = CreatePlayerTextDraw(playerid,545.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[10][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[10][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[10][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[10][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[10][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[10][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[10][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[10][playerid], 0);

	SpeedTextdraws[11][playerid] = CreatePlayerTextDraw(playerid,552.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[11][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[11][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[11][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[11][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[11][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[11][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[11][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[11][playerid], 0);

	SpeedTextdraws[12][playerid] = CreatePlayerTextDraw(playerid,559.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[12][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[12][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[12][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[12][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[12][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[12][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[12][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[12][playerid], 0);

	SpeedTextdraws[13][playerid] = CreatePlayerTextDraw(playerid,566.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[13][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[13][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[13][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[13][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[13][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[13][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[13][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[13][playerid], 0);

	SpeedTextdraws[14][playerid] = CreatePlayerTextDraw(playerid,580.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[14][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[14][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[14][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[14][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[14][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[14][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[14][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[14][playerid], 0);

	SpeedTextdraws[15][playerid] = CreatePlayerTextDraw(playerid,573.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[15][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[15][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[15][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[15][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[15][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[15][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[15][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[15][playerid], 0);

	SpeedTextdraws[16][playerid] = CreatePlayerTextDraw(playerid,587.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[16][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[16][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[16][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[16][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[16][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[16][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[16][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[16][playerid], 0);

	SpeedTextdraws[17][playerid] = CreatePlayerTextDraw(playerid,594.000000, 404.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[17][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[17][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[17][playerid], 0.670000, 1.199998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[17][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[17][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[17][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[17][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[17][playerid], 0);

	SpeedTextdraws[18][playerid] = CreatePlayerTextDraw(playerid,615.000000, 404.000000, "111");
	PlayerTextDrawAlignment(playerid,SpeedTextdraws[18][playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[18][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[18][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[18][playerid], 0.330000, 1.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[18][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[18][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[18][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[18][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[18][playerid], 0);

	SpeedTextdraws[19][playerid] = CreatePlayerTextDraw(playerid,459.000000, 424.000000, "FUEL");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[19][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[19][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[19][playerid], 0.330000, 1.099998);
	PlayerTextDrawColor(playerid,SpeedTextdraws[19][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[19][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[19][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[19][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[19][playerid], 0);

	SpeedTextdraws[20][playerid] = CreatePlayerTextDraw(playerid,453.000000, 424.000000, "fonpolosok2");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[20][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[20][playerid], 5);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[20][playerid], 0.400000, -0.100000);
	PlayerTextDrawColor(playerid,SpeedTextdraws[20][playerid], 100);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[20][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[20][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[20][playerid], 1);
	PlayerTextDrawUseBox(playerid,SpeedTextdraws[20][playerid], 1);
	PlayerTextDrawBoxColor(playerid,SpeedTextdraws[20][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,SpeedTextdraws[20][playerid], 86.000000, 11.000000);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[20][playerid], 0);

	SpeedTextdraws[21][playerid] = CreatePlayerTextDraw(playerid,513.000000, 424.000000, "54/80");
	PlayerTextDrawAlignment(playerid,SpeedTextdraws[21][playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[21][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[21][playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[21][playerid], 0.330000, 1.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[21][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[21][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[21][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[21][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[21][playerid], 0);

	SpeedTextdraws[22][playerid] = CreatePlayerTextDraw(playerid,540.000000, 424.000000, "fonpolosok2");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[22][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[22][playerid], 5);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[22][playerid], 0.400000, -0.100000);
	PlayerTextDrawColor(playerid,SpeedTextdraws[22][playerid], 100);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[22][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[22][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[22][playerid], 1);
	PlayerTextDrawUseBox(playerid,SpeedTextdraws[22][playerid], 1);
	PlayerTextDrawBoxColor(playerid,SpeedTextdraws[22][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,SpeedTextdraws[22][playerid], 85.000000, 11.000000);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[22][playerid], 0);

	SpeedTextdraws[23][playerid] = CreatePlayerTextDraw(playerid,543.000000, 424.000000, "LOCK");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[23][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[23][playerid], 2);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[23][playerid], 0.209999, 1.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[23][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[23][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[23][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[23][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[23][playerid], 0);

	SpeedTextdraws[24][playerid] = CreatePlayerTextDraw(playerid,570.000000, 424.000000, "L");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[24][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[24][playerid], 2);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[24][playerid], 0.209999, 1.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[24][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[24][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[24][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[24][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[24][playerid], 0);

	SpeedTextdraws[25][playerid] = CreatePlayerTextDraw(playerid,593.000000, 424.000000, "S");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[25][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[25][playerid], 2);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[25][playerid], 0.209999, 1.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[25][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[25][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[25][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[25][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[25][playerid], 0);

	SpeedTextdraws[26][playerid] = CreatePlayerTextDraw(playerid,604.000000, 424.000000, "MAX");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[26][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[26][playerid], 2);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[26][playerid], 0.209999, 1.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[26][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[26][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[26][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[26][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[26][playerid], 0);

	SpeedTextdraws[27][playerid] = CreatePlayerTextDraw(playerid,581.000000, 424.000000, "M");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[27][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[27][playerid], 2);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[27][playerid], 0.209999, 1.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[27][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[27][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[27][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[27][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[27][playerid], 0);

	SpeedTextdraws[28][playerid] = CreatePlayerTextDraw(playerid,459.000000, 380.000000, "ADMIRAL");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[28][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[28][playerid], 2);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[28][playerid], 0.329998, 2.099997);
	PlayerTextDrawColor(playerid,SpeedTextdraws[28][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[28][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[28][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[28][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[28][playerid], 0);

	SpeedTextdraws[29][playerid] = CreatePlayerTextDraw(playerid,64.000000, 432.000000, "fonspeedometr");
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[29][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[29][playerid], 5);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[29][playerid], 0.400000, -0.100000);
	PlayerTextDrawColor(playerid,SpeedTextdraws[29][playerid], 100);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[29][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[29][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[29][playerid], 1);
	PlayerTextDrawUseBox(playerid,SpeedTextdraws[29][playerid], 1);
	PlayerTextDrawBoxColor(playerid,SpeedTextdraws[29][playerid], 0x000000);
	PlayerTextDrawTextSize(playerid,SpeedTextdraws[29][playerid], 47.000000, 11.000000);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[29][playerid], 0);

	SpeedTextdraws[30][playerid] = CreatePlayerTextDraw(playerid,88.000000, 430.000000, "003000");
	PlayerTextDrawAlignment(playerid,SpeedTextdraws[30][playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,SpeedTextdraws[30][playerid], 255);
	PlayerTextDrawFont(playerid,SpeedTextdraws[30][playerid], 2);
	PlayerTextDrawLetterSize(playerid,SpeedTextdraws[30][playerid], 0.289999, 1.399999);
	PlayerTextDrawColor(playerid,SpeedTextdraws[30][playerid], -1);
	PlayerTextDrawSetOutline(playerid,SpeedTextdraws[30][playerid], 0);
	PlayerTextDrawSetProportional(playerid,SpeedTextdraws[30][playerid], 1);
	PlayerTextDrawSetShadow(playerid,SpeedTextdraws[30][playerid], 0);
	PlayerTextDrawSetSelectable(playerid,SpeedTextdraws[30][playerid], 0);
 	SetPlayerDataToDefault(playerid);
	format(pTemp[playerid][pIP],32,"%s",ip);
	new slot;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!gReconnectTime[i]) {slot = i; break;}
	}
	format(gReconnectIP[slot],32,"%s",pTemp[playerid][pIP]);
	gReconnectTime[slot] = 5;
	for(new s = 1;s <= TOTALGZ;s++) { GangZoneShowForPlayer(playerid,GZMZ[s][idm],GetGangZoneColor(s));}
	TextDrawShowForPlayer(playerid,LOGOTEXT[0]);
	TextDrawShowForPlayer(playerid,LOGOTEXT[1]);
	TextDrawShowForPlayer(playerid,LOGOTEXT[2]);
	ResetPlayerWeaponsEx(playerid);
	new Float: gEateryPos[2], str[16];
	gEateryPos[0] = 450.0; gEateryPos[1] = 125.0;
	for(new x = 0; x < 4; x ++) { // цены
		if(x > 0) gEateryPos[1] += 50.0;
		format(str, sizeof(str), "$%i", gEateryCosts[x]);
		gEateryCostTextDraw[playerid][x] = CreatePlayerTextDraw(playerid, gEateryPos[0], gEateryPos[1], str);
		PlayerTextDrawLetterSize(playerid, gEateryCostTextDraw[playerid][x], 0.560000, 2.142500);
		PlayerTextDrawAlignment(playerid, gEateryCostTextDraw[playerid][x], 1);
		PlayerTextDrawColor(playerid, gEateryCostTextDraw[playerid][x], -1);
		PlayerTextDrawSetShadow(playerid, gEateryCostTextDraw[playerid][x], 0);
		PlayerTextDrawSetOutline(playerid, gEateryCostTextDraw[playerid][x], 1);
		PlayerTextDrawBackgroundColor(playerid, gEateryCostTextDraw[playerid][x], 51);
		PlayerTextDrawFont(playerid, gEateryCostTextDraw[playerid][x], 3);
		PlayerTextDrawSetProportional(playerid, gEateryCostTextDraw[playerid][x], 1);
	}
	new Float: gBarPos[2];
	gBarPos[0] = 450.0; gBarPos[1] = 125.0;
	for(new x = 0; x < 5; x ++) { // цены
		if(x > 0) gBarPos[1] += 50.0;
		format(str, sizeof(str), "$%i", gBarCosts[x]);
		gBarCostTextDraw[playerid][x] = CreatePlayerTextDraw(playerid, gBarPos[0], gBarPos[1], str);
		PlayerTextDrawLetterSize(playerid, gBarCostTextDraw[playerid][x], 0.560000, 2.142500);
		PlayerTextDrawAlignment(playerid, gBarCostTextDraw[playerid][x], 1);
		PlayerTextDrawColor(playerid, gBarCostTextDraw[playerid][x], -1);
		PlayerTextDrawSetShadow(playerid, gBarCostTextDraw[playerid][x], 0);
		PlayerTextDrawSetOutline(playerid, gBarCostTextDraw[playerid][x], 1);
		PlayerTextDrawBackgroundColor(playerid, gBarCostTextDraw[playerid][x], 51);
		PlayerTextDrawFont(playerid, gBarCostTextDraw[playerid][x], 3);
		PlayerTextDrawSetProportional(playerid, gBarCostTextDraw[playerid][x], 1);
	}
	gSkinShopPriceDraw[playerid] = CreatePlayerTextDraw(playerid, 31.000000, 224.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, gSkinShopPriceDraw[playerid], 255);
	PlayerTextDrawFont(playerid, gSkinShopPriceDraw[playerid], 3);
	PlayerTextDrawLetterSize(playerid, gSkinShopPriceDraw[playerid], 0.500000, 1.600000);
	PlayerTextDrawColor(playerid, gSkinShopPriceDraw[playerid], -1);
	PlayerTextDrawSetOutline(playerid, gSkinShopPriceDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid, gSkinShopPriceDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, gSkinShopPriceDraw[playerid], 1);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    KillTimer(Fallen[playerid]);
	//Защита от реконекта
	new slot;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!gReconnectTime[i]) {slot = i; break;}
	}
	format(gReconnectIP[slot],32,"%s",pTemp[playerid][pIP]);
	gReconnectTime[slot] = 5;
	if(GetPVarInt(playerid,"pgunobject"))
	{
		new objectid = GetPVarInt(playerid,"pgunobject");
		if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
	}
	if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(pTemp[playerid][pBusID]);
		//BusSpawn(playerid);
	}
	if(pData[playerid][pJob] == 2 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(pTemp[playerid][pTruckID]);
		if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
		pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
		if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pTruckWagonID]);
			pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
		}
		for(new i2;i2<2;i2++)
		{
			for(new i;i<10;i++)
			{
				if(gTruckLoadTurn[i2][i] == playerid || gTruckLoadTurn[i2][i] == playerid) gTruckLoadTurn[i2][i] = INVALID_PLAYER_ID;
			}
		}
	}
	if(pData[playerid][pJob] == 3 && pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(pTemp[playerid][pTaxiID]);
		if(IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTaxi3DText]);
	}
	if(GetPVarInt(playerid,"pgunlocat"))
	{
		new locat = GetPVarInt(playerid,"pgunlocat") - 1;
		gGunWorkTableStat[locat] = false;
	}
	if(pTemp[playerid][pCuffee] != INVALID_PLAYER_ID)
	{
		new id = pTemp[playerid][pCuffee];
		if(id == playerid)
		{
			new cuffer = pTemp[playerid][pCuffer];
			new mes[128];
			format(mes,sizeof(mes),"Арестованный {"#cWHITE"}%s {"#cINFO"}вышел из игры",pData[playerid][pNickname]);
			SendClientMessage(cuffer,CINFO,mes);
			pTemp[cuffer][pCuffer] = INVALID_PLAYER_ID;
			pTemp[cuffer][pCuffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pCuffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pCuffer] = INVALID_PLAYER_ID;
		}
		else if(IsPlayerConnected(id))
		{
			SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id,0);
			pTemp[id][pCuffer] = INVALID_PLAYER_ID;
			pTemp[id][pCuffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pCuffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pCuffer] = INVALID_PLAYER_ID;
			SendClientMessage(playerid,CGREEN,"Офицер, надевший на вас наручники, вышел из игры. Наручники сняты");
		}
	}
	if(gCalls[playerid][g_caller] == playerid || gCalls[playerid][g_callee] == playerid)//
	{
		new id;
		if(gCalls[playerid][g_caller] == playerid) id = gCalls[playerid][g_callee];
		else if(gCalls[playerid][g_callee] == playerid) id = gCalls[playerid][g_caller];
		else return SendClientMessage(playerid,CGRAY,"Ошибка (#112)");
		SendClientMessage(id,CYELLOW,"Собеседник вышел из игры");
		SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetTimerEx("ClearPhone",2000,false,"i",id);
		gCalls[playerid][g_caller] = INVALID_PLAYER_ID;
		gCalls[playerid][g_callee] = INVALID_PLAYER_ID;
		gCalls[id][g_caller] = INVALID_PLAYER_ID;
		gCalls[id][g_callee] = INVALID_PLAYER_ID;
		pTemp[playerid][pCall] = false;
		pTemp[id][pCall] = false;
	}
	if(pTemp[playerid][pDFTID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(pTemp[playerid][pDFTID]);
	}
	if(gNewsDialee == playerid)
	{
		gNewsDialee = INVALID_PLAYER_ID;
		SendClientMessage(gNewsDialer,CSYSTEM,"Игрок вышел из игры");
	}
	if(gNewsDialer == playerid)
	{
		OnPlayerCommandText(playerid,"/stopdial");
	}
	if(pTemp[playerid][pExamCandidate] != INVALID_PLAYER_ID)
	{
		new actplayerid = pTemp[playerid][pExamCandidate];
		if(IsPlayerConnected(actplayerid) && pTemp[actplayerid][pOnExam])
		{
			SendClientMessage(actplayerid,CGRAY,"Ваш инструктор вышел из игры, экзамен прерван");
			RemovePlayerFromVehicle(actplayerid);
			pTemp[actplayerid][pOnExam] = false;
		}
	}
	new h,m,s;
	gettime(h,m,s);
	RemovePlayerFromWantedList(playerid);
	//if(m >= 45) cmap_insert(cmapDisconnect,pData[playerid][pNickname],m);
	new gunids[56],ammos[56],cnt,pgun[128];
	for (new i;i<13;i++)
	{
		new weapid,ammo;
		GetPlayerWeaponData(playerid,i,weapid,ammo);
		if(weapid && ammo && gGuns[playerid][i] == weapid && gAmmos[playerid][i] <= ammo)
		{
			if(!cnt)
			{
				format(gunids,sizeof(gunids),"%d",gGuns[playerid][i]);
				format(ammos,sizeof(ammos),"%d",gAmmos[playerid][i]);
			}
			else
			{
				format(gunids,sizeof(gunids),"%s|%d",gunids,gGuns[playerid][i]);
				format(ammos,sizeof(ammos),"%s|%d",ammos,gAmmos[playerid][i]);
			}
			cnt++;
			if(cnt >= 6) break;
		}
	}
	if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid,2);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid,4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid,5);
	if(strlen(gunids) && strlen(ammos)) format(pgun,sizeof(pgun),"%s:%s",gunids,ammos);
	new query[1000];
	format(pData[playerid][pSkills],80,"%d,%d,%d,%d,%d,%d,%d",
	pTemp[playerid][pGunSkill][0],pTemp[playerid][pGunSkill][1],pTemp[playerid][pGunSkill][2],
	pTemp[playerid][pGunSkill][3],pTemp[playerid][pGunSkill][4],pTemp[playerid][pGunSkill][5],pTemp[playerid][pGunSkill][6]);
	format(query,sizeof(query),"UPDATE `accounts` SET `level` = '%d',`exp` = '%d',`health` = '%.2f',`hunger` = '%d',`money` = '%d',`bank`= '%d',`salary`=%d,`deaths`=%d,`killings`=%d,jail=%d,`gun`='%s',`status`=0,`drunk`='%i',`zakon` = '%d',`adminm` = '%d',`giveexp` = '%d',`piss`='%d',`shit` = '%d',`skills`='%s'  WHERE `id` = '%d'",pData[playerid][pLevel],pData[playerid][pExp],
	pData[playerid][pHealth],pData[playerid][pHunger],pData[playerid][pMoney],pData[playerid][pBank],pData[playerid][pSalary],pData[playerid][pDeaths],pData[playerid][pKillings],pData[playerid][pJail],pgun,GetPlayerDrunkLevel(playerid),pData[playerid][pZakon],pData[playerid][pAdminm],pData[playerid][pGiveExp],pData[playerid][pPiss],pData[playerid][pShit],pData[playerid][pSkills],pData[playerid][pMysqlID]);
	mysql_query(query);
	if(mysql_errno()) printf("Mysql error while saving account ID:%d",pData[playerid][pMysqlID]);
	return 1;
}

public OnPlayerJoin(playerid)
{
	SetPlayerVirtualWorld(playerid,playerid+1);
	SetPlayerCameraPos(playerid,1692.0305,-806.5074,203.0863);
	SetPlayerCameraLookAt(playerid,1590.0665,-1202.3657,203.0863);
	GetPlayerName(playerid,pRegData[playerid][0],MAX_PLAYER_NAME);
	new query[128];
	mysql_real_escape_string(pRegData[playerid][0],pRegData[playerid][0]);
	format(query,sizeof(query),"SELECT `id` FROM `accounts` WHERE `nickname` = '%s'",pRegData[playerid][0]);
	mysql_query(query);
	new tmp[16],id;
	mysql_store_result();
	mysql_fetch_row(tmp);
	id = strval(tmp);
	mysql_free_result();
	FMQ("SELECT `time`, `reason` FROM `ban` WHERE `takeid` = '%d'",id);
	mysql_store_result();
	if(mysql_num_rows() > 0 && id > 0)
	{
		new result[128],reason[128],time,ipStr[16];
		mysql_fetch_row(result);
		sscanf(result,"p<|>is[128]",time,reason);
		time = time - gCurDay;
		if(time <= 0) {
			FMQ("DELETE FROM `ban` WHERE `takeid` = '%d'",id);
			GetPlayerIp( id, ipStr, 16 );
			//UnBlockIpAddress(ipStr);
			//UnBanSet(playerid);
		}
		else
		{
			new mes[128];
			if(time == -1) format(mes,sizeof(mes),"Вы забанены по причине: '%s'",reason);
			else format(mes,sizeof(mes),"Вы забанены по причине: '%s'. Осталось дней: %d",reason,time);
			SendClientMessage(playerid,CBADINFO,mes);
			NewKick(playerid);
		}
	}
	mysql_free_result();
	FMQ("SELECT `password`,`requestcode`,`code` FROM `accounts` WHERE `nickname` = '%s'",pRegData[playerid][0]);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
	    for(new c = 0; c < 21; c++) SendClientMessage(playerid,-1," ");
		new string[300];
		format(string,sizeof(string),"{"#cWHITE"}Добро пожаловать на сервер Western State RolePlay | v-sampe.ru.\n\nДанный аккаунт зарегистрирован.\nЧтобы войти введите пароль:",pData[playerid][pNickname]);
		ShowPlayerDialog(playerid,dLogin,3,"Вход",string,"ОК","Выход");
	}
	else
	{
	    //TogglePlayerControllable(playerid,0);
  		for(new c = 0; c < 21; c++) SendClientMessage(playerid,-1," ");
        SendClientMessage(playerid,-1,"Пароль должен состоять как минимум из 6 символов.");
		SendClientMessage(playerid,-1,"Содержание пароля должно быть как минимум из одной буквы или цифры.");
		ShowPlayerDialog(playerid,dRegister,DIALOG_STYLE_INPUT,"Western State RolePlay | v-sampe.ru","Данный аккаунт свободен.\nПожалуйста, введите будущий пароль ниже:","Далее","Выход");
	}
	mysql_free_result();
	return 1;
}

public OnPlayerSpawn(playerid)
{
	SetCameraBehindPlayer(playerid);
    if(GetPVarInt(playerid,"menumm") == 1) for(new i = 0; i < 61; i++) PlayerTextDrawHide(playerid, StatsTextdraw[i][playerid]);
    pTemp[playerid][pAbletoGun] = 2;
    SetPlayerColor(playerid,0xFFFFFF11);
	pTemp[playerid][pChangingSkin] = false;
	HidePlayerClothesTD(playerid);
	//TogglePlayerControllable(playerid,1);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	pTemp[playerid][pWork] = 0;
	if(!pTemp[playerid][pLogined] || !pTemp[playerid][pJoined]) return 1;
	if (pData[playerid][pJail])
	{
		new prison = pData[playerid][pPrison];
		SetPlayerVirtualWorld(playerid,prison + 1);
		TogglePlayerControllable(playerid,0);
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,521.06701660156,-346.01501464844,1004.2789916992);
		SetPlayerFacingAngle(playerid,270.0);
		if(pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		if(pData[playerid][pFraction]) SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction] - 1]);
		SetTimerEx("Unfreez",2000,false,"i",playerid);
	}
	else if(pTemp[playerid][pDead] || pData[playerid][pHealth] < 10.0)
	{
		pTemp[playerid][pDead] = false;
		new Float:c[3][3] = {
		{621.1590,782.8464,1001.4515},
		{621.5809,773.3959,1001.4455},
		{621.4994,764.2051,1001.4455}
		};
		new f = RandomEx(0,3);
		SetPlayerInterior(playerid,12);
		SetPlayerVirtualWorld(playerid,RandomEx(0,3));
		pTemp[playerid][pInHospital] = true;
		SetPlayerPos(playerid,c[f][0],c[f][1],c[f][2]);
		TogglePlayerControllable(playerid,0);
		if(pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		SetTimerEx("Unfreez",2000,false,"i",playerid);
		SetPlayerHealthEx(playerid,3.0);
	}
	else if(pData[playerid][pHouse])
	{
		SetPlayerVirtualWorld(playerid,pData[playerid][pHouse]);
		new interior, Float:r;
		new houseid = pData[playerid][pHouse] - 1;
		new hint = gHouses[houseid][houseHint];
		if(pData[playerid][pFraction])
		{
			if(gHouses[houseid][houseImprove][3] && gHouses[houseid][houseOwnerID] == pData[playerid][pMysqlID]) SetPlayerSkin(playerid,pData[playerid][pSkin]);
			else SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		}
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		pTemp[playerid][pSelectedHouseID] = houseid;
		x = gHints[hint][hintSX];
		y = gHints[hint][hintSY];
		z = gHints[hint][hintSZ];
		r = gHints[hint][hintSR];
		interior = gHints[hint][hintInterior];
		SetPlayerInterior(playerid,interior);
		SetPlayerPos(playerid,x,y,z);
		SetPlayerFacingAngle(playerid,r);
		pTemp[playerid][pIsInHouse] = true;
		if(pData[playerid][pFraction]) SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction] - 1]);
	}
	else if(pData[playerid][pHotel])
	{
		new hotelid = pData[playerid][pHotel]-1;
		new room = pData[playerid][pHotelRoom];
		if(gHotelResidents[hotelid][room] != pData[playerid][pMysqlID])
		{
			SendClientMessage(playerid,CORANGE,"Вы были выселены из отеля за неуплату");
			SendClientMessage(playerid,CORANGE,"Если у Вас было т/с, то оно было продано гос-у за 80 процентов от цены на рынке");
			pData[playerid][pHotel] = 0;
			pData[playerid][pHotelRoom] = 0;
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `hotel` = '0', `hotelroom` = '0' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
			mysql_query(query);
			SpawnPlayer(playerid);
		}
		else
		{
			SetPVarInt(playerid,"selectedhotel",hotelid);
			if(pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
			else SetPlayerSkin(playerid,pData[playerid][pSkin]);
			SetPlayerVirtualWorld(playerid,hotelid);
			SetPlayerInterior(playerid,15);
			SetPlayerPos(playerid,gHotelRoomExits[room][0],gHotelRoomExits[room][1],gHotelRoomExits[room][2]);
			SetPlayerFacingAngle(playerid,gHotelRoomExits[room][3]);
			new remain;
			remain = gHotelEndurance[hotelid][room] - gCurDay;
			if(remain <= 2) SendClientMessage(playerid,CYELLOW,"ВНИМАНИЕ! У Вас осталось менее 2-х дней до того как Вас Выселят из отеля, если Вы не оплатите за проживание.");
		}
	}
	else if(pData[playerid][pFraction])
	{
		new fractionid = pData[playerid][pFraction]-1;
		if(pData[playerid][pSubfraction])
		{
			new frid;
			frid = GetSubfractionID(fractionid);
			new subid = pData[playerid][pSubfraction] - 1;
			SetPlayerInterior(playerid,gSubfractionSpawnData[frid][subid][0]);
			SetPlayerVirtualWorld(playerid,gSubfractionSpawnData[frid][subid][1]);
			SetPlayerPos(playerid,gSubfractionSpawnC[frid][subid][0],gSubfractionSpawnC[frid][subid][1],gSubfractionSpawnC[frid][subid][2]);
			SetPlayerFacingAngle(playerid,gSubfractionSpawnC[frid][subid][3]);
		}
		else
		{
		    //printf("%d fraction",gFractionSpawnData[fractionid][1]);
			SetPlayerVirtualWorld(playerid,gFractionSpawnData[fractionid][1]);
			SetPlayerInterior(playerid,gFractionSpawnData[fractionid][0]);
			SetPlayerPos(playerid,gFractionSpawnC[fractionid][0],gFractionSpawnC[fractionid][1],gFractionSpawnC[fractionid][2]);
		}
		SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,gFractionColor[fractionid]);
		SetPlayerHealth(playerid,100);
		if(fractionid == 1) pTemp[playerid][pInHospital] = true;
		TogglePlayerControllable(playerid,0);
		SetTimerEx("Unfreez",2000,false,"i",playerid);
	}
	else
	{
	    TogglePlayerControllable(playerid,0);
  		randomspawn[playerid] = random(sizeof(spawnRegistr));
		SetPlayerPos(playerid,spawnRegistr[randomspawn[playerid]][0],spawnRegistr[randomspawn[playerid]][1],spawnRegistr[randomspawn[playerid]][2]);
		SetPlayerFacingAngle(playerid,spawnRegistr[randomspawn[playerid]][3]);
		//printf("%f %f %f %f",spawnRegistr[randomspawn[playerid]][0],spawnRegistr[randomspawn[playerid]][1],spawnRegistr[randomspawn[playerid]][2],spawnRegistr[randomspawn[playerid]][3]);
		SetPlayerSkin(playerid,pData[playerid][pSkin]);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		//TogglePlayerControllable(playerid,1);
		//SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,0xFFFFFF11);
		SetTimerEx("Unfreez",2000,false,"i",playerid);
		//printf("randomspawn %d",randomspawn);
	}
	
	if(pData[playerid][pMoney])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid,pData[playerid][pMoney]);
	}
	SetPlayerScore(playerid,pData[playerid][pLevel]);
	new gun[128];
	GetPVarString(playerid,"mysqlgun",gun,128);
	DeletePVar(playerid,"mysqlgun");
	if(strlen(gun))
	{
		new guns[6],ammos[6],datas[2][56];
		explode(datas,gun,":");
		printf("%s:%s",datas[0],datas[1]);
		sscanf(datas[0],"p<|>a<i>[6]",guns);
		sscanf(datas[1],"p<|>a<i>[6]",ammos);
		for(new i;i<6;i++)
		{
			GivePlayerWeaponEx(playerid,guns[i],ammos[i]);
		}
	}
	if(pTemp[playerid][pSpectating])
	{
		x = GetPVarFloat(playerid,"oldx");
		y = GetPVarFloat(playerid,"oldy");
		z = GetPVarFloat(playerid,"oldz");
		SetPlayerPos(playerid,x,y,z);
		SetPlayerInterior(playerid,GetPVarInt(playerid,"oldint"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"oldworld"));
		pTemp[playerid][pSpectating] = false;
		return 1;
	}
	if(pData[playerid][pWanted])
	{
		new level = del(pData[playerid][pWanted],WANTED_TIME);
		SetPlayerWantedLevel(playerid,level);
		AddPlayerInWantedList(playerid);
	}
	SetPlayerDrunkLevel(playerid, pData[playerid][pDrunk]);
	pTemp[playerid][pREGISKL] = false;
	for(new td = 0; td < 12; td++) PlayerTextDrawShow(playerid, BarTextdraws[td][playerid]);
	ApplyAnimation(playerid,"BD_FIRE","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BASEBALL","Bat_4",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BEACH","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"benchpress","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BOMBER","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"CAR","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"COP_AMBIENT","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"CRACK","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"CARRY","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"DANCING","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"DEALER","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"FAT","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"FOOD","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"GANGS","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"GHANDS","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"GRAFFITI","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"GRAVEYARD","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"MISC","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"SNM","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"VENDING","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"OTB","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"SMOKING","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"SHOP","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"RIOT","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"INT_OFFICE","null",0.0,0,0,0,0,0);
	//new fractionid = pData[playerid][pFraction] - 1;
	//SetPlayerColor(playerid,gFractionColor[fractionid]);
	//SetTimerEx("CheckClientOne",1500,false,"i", playerid);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
/*    if(reason == 38 && GetPlayerState(killerid) == PLAYER_STATE_PASSENGER)
	{
		NewKick(playerid);
		return 1;
	}*/
	if(pData[killerid][pFraction] <= 8 && pData[killerid][pFraction] >= 14)
	{
		pData[killerid][pZakon] -= 2;
	}
	if(pTemp[playerid][pDDOS])
	{
		SendClientMessage(playerid,CGRAY,"Кикнут по подозрению в ДДОС");
		NewKick(playerid);
	}
	pTemp[playerid][pAbletoGun] = 3;
	pTemp[playerid][pDead] = true;
	ResetPlayerWeaponsEx(playerid);
	new string[128];
	//if(killerid == INVALID_PLAYER_ID) return true;
	format(string, 128,"[A] %s (ID: %d) убил игрока %s (ID: %d) с %d",pData[killerid][pNickname],killerid,pData[playerid][pNickname],playerid,reason);
	AdminChat(CINFO,string);
	pTemp[playerid][pDDOS] = true;
	pData[playerid][pHealth] = 100;
	pData[playerid][pDeaths]++;
	if(killerid != INVALID_PLAYER_ID)
	{
		pData[killerid][pKillings]++;
		if(pData[killerid][pFraction] < 8 || pData[killerid][pFraction] > 9 && !pData[killerid][pJail])
		{
			new level;
			if(pData[killerid][pWanted]) level = del(pData[killerid][pWanted],WANTED_TIME);
			if(!level) level = 3;
			else if(level < 6) level++;
			new levelt = level * WANTED_TIME;
			pData[killerid][pWanted] = levelt;
			UpdatePlayerData(killerid,"wanted",pData[killerid][pWanted]);
			SetPlayerWantedLevel(killerid,level);
			AddPlayerInWantedList(killerid);
			new mes[256];
			format(mes,sizeof(mes),"Вы объявлены в розыск. Причина: убийство. Уровень: %d",level);
			SendClientMessage(killerid,CORANGE,mes);
			format(mes,sizeof(mes),"[D] %s объявлен в розыск [{"#cWHITE"}%d{"#cDEPARTMENT"}]. Обвинитель: Неизвестно. Причина: Убийство.",pData[killerid][pNickname],level);
			DepartmentChat(CDEPARTMENT,mes,0,0,1,1,0);
		}
		if(pData[playerid][pWanted] && pTemp[playerid][pCuffee] == playerid)
		{
			if(pData[killerid][pFraction] == 9 && pData[killerid][pSubfraction] > 0)
			{
				new id = playerid;
				new level = del(pData[playerid][pWanted],WANTED_TIME);
				new time = level * JAIL_QUATE;
				new camid = pData[killerid][pSubfraction] - 1;
				new cuffer = pTemp[id][pCuffer];
				SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(id,0);
				pTemp[id][pCuffer] = INVALID_PLAYER_ID;
				pTemp[id][pCuffee] = INVALID_PLAYER_ID;
				pTemp[cuffer][pCuffee] = INVALID_PLAYER_ID;
				pTemp[cuffer][pCuffer] = INVALID_PLAYER_ID;
				if(cuffer != killerid) SendClientMessage(cuffer,CINFO,"Арестованный был убит полицейским");
				SFCM(killerid,CWHITE,"%s {"#cINFO"}посажен в КПЗ на %d секунд",pData[id][pNickname],time);
				pData[id][pJail] = time;
				pData[id][pPrison] = camid;
				pData[id][pWanted] = 0;
				SetPlayerWantedLevel(id,0);
				RemovePlayerFromWantedList(id);
				new query[128];
				format(query,sizeof(query),"UPDATE `accounts` SET `jail` = '%d', prison = '%d', wanted = '0' WHERE `id` = '%d'",pData[id][pJail],pData[id][pPrison],pData[id][pMysqlID]);
				mysql_query(query);
				if(mysql_errno()) SendClientMessage(playerid,CRED,"Ошибка MySQL");
				pTemp[playerid][pDead] = false;
			}
		}
	}
	new bandkiller;
	new bandkill;

	if(pData[killerid][pFraction] !=0) {bandkiller = pData[killerid][pFraction];}
	else { bandkiller = pData[killerid][pFraction];}
	if(pData[playerid][pFraction] !=0) {bandkill = pData[playerid][pFraction];}
	else { bandkill = pData[playerid][pFraction];}
	if(bandkiller != bandkill)
	{
		if(GangInfo[bandkiller][capture] && GangInfo[bandkill][capture] == 1)
		{
			if(GangInfo[bandkiller][captureid] == GangInfo[bandkill][captureid])
			{
				GangInfo[bandkiller][score] = GangInfo[bandkiller][score]+1;
				CaptureUpd(bandkiller);
			}
		}
	}
	if(pData[killerid][pFraction] !=0) {bandkiller = pData[killerid][pFraction];}
	else { bandkiller = pData[killerid][pFraction];}
	if(pData[playerid][pFraction] !=0) {bandkill = pData[playerid][pFraction];}
	else { bandkill = pData[playerid][pFraction];}
	if(GangInfoD[bandkiller][capture] && GangInfoD[bandkill][capture] == 1)
	{
		if(GangInfoD[bandkiller][captureid] == GangInfoD[bandkill][captureid])
		{
			GangInfoD[bandkiller][score] = GangInfoD[bandkiller][score]+1;
			CaptureUpdD(bandkiller);
		}
	}
	if(pTemp[playerid][pCuffee] == playerid)
	{
		new id = playerid;
		new cuffer = pTemp[id][pCuffer];
		SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id,0);
		pTemp[id][pCuffer] = INVALID_PLAYER_ID;
		pTemp[id][pCuffee] = INVALID_PLAYER_ID;
		pTemp[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pTemp[cuffer][pCuffer] = INVALID_PLAYER_ID;
		SendClientMessage(cuffer,CINFO,"Арестованный умер");
	}
	if(pTemp[playerid][pCarryProducts])
	{
		SendClientMessage(playerid,CGRAY,"Вы потеряли корзину с продуктами");
		pTemp[playerid][pCarryProducts] = 0;
	}
	if(pTemp[playerid][pFilling])
	{
		HideFillingBar(playerid);
		TogglePlayerControllable(playerid,1);
		pTemp[playerid][pFilling] = false;
		pTemp[playerid][pFillGoing] = false;
		pTemp[playerid][pFillingAmount] = 0.0;
		pTemp[playerid][pFillingSpeed] = 0.0;
		pTemp[playerid][pFillingAccel] = 0.0;
		pTemp[playerid][pFillingID] = 0;
		pTemp[playerid][pFillingMark] = 0;
		pTemp[playerid][pFillingPrice] = 0;
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	GetVehiclePos(vehicleid, gVehicles[vehicleid - 1][vX], gVehicles[vehicleid - 1][vY], gVehicles[vehicleid - 1][vZ]);
	GetVehicleZAngle(vehicleid, gVehicles[vehicleid -1][vA]);
	gVehicles[vehicleid - 1][vSpawned] = true;
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	/*for(new i;i<14;i++)

	{
		new tun = gVehicles[vehicleid-1][vTuning][i];
		if(tun != 0) AddVehicleComponent(vehicleid,tun);
	}
	if(gVehicles[vehicleid-1][vPJ] > 0)
	{
		ChangeVehicleColor(vehicleid,1,1);
		ChangeVehiclePaintjob(vehicleid,gVehicles[vehicleid-1][vPJ]-1);
	}*/
	if(vehicleid >= aRM[0] && vehicleid <= aRM[1])
	{
	    gVehicles[vehicleid-1][vFuel] = 100;
	}
	if(vehicleid >= aMarLV[0] && vehicleid <= aMarLV[1])
	{
	    gVehicles[vehicleid-1][vFuel] = 100;
	}
	if(vehicleid >= aMarSF[0] && vehicleid <= aMarSF[1])
	{
	    gVehicles[vehicleid-1][vFuel] = 100;
	}
	if(vehicleid >= aMarLS[0] && vehicleid <= aPris[1])
	{
	    gVehicles[vehicleid-1][vFuel] = 100;
	}
	if(vehicleid >= aPris[0] && vehicleid <= aPris[1])
	{
	    gVehicles[vehicleid-1][vFuel] = 100;
	}
	if(vehicleid >= aLCN[0] && vehicleid <= aLCN[1])
	{
	    gVehicles[vehicleid-1][vFuel] = 100;
	}
	if(vehicleid >= aYak[0] && vehicleid <= aYak[1])
	{
	    gVehicles[vehicleid-1][vFuel] = 100;
	}
	if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
	{
		//UpdateVehicleDamageStatus(vehicleid,gVehicles[vehicleid-1][vDemages][0],gVehicles[vehicleid-1][vDemages][1],gVehicles[vehicleid-1][vDemages][2],gVehicles[vehicleid-1][vDemages][3]);
		//if(gVehicles[vehicleid-1][vHealth] < 300.0) gVehicles[vehicleid-1][vHealth] = 300.0;
		//SetVehicleHealthEx(vehicleid,gVehicles[vehicleid-1][vHealth]);
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		gVehicles[vehicleid-1][vFuel] = gTransport[GetVehicleModel(vehicleid-1)-400][trTank];
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pBusID] == vehicleid)
			{
				BusSpawnEx(i);
				//if(pTemp[i][pBusText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[i][pBusText]);
				pTemp[i][pBusID] = INVALID_VEHICLE_ID;
				pTemp[i][pBusRoute] = 0;
				pTemp[i][pBusPos] = 0;
				pTemp[i][pBusPrice] = 0;
				SendClientMessage(i,CGRAY,"Рабочее т/с было отбуксировано");
				break;
			}
		}

	}
	if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pTaxiID] == vehicleid)
			{
				if(pTemp[i][pTaxi3DText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[i][pTaxi3DText]);
				pTemp[i][pTaxiID] = INVALID_VEHICLE_ID;
				pTemp[i][pTaxiPrice] = 0;
				pTemp[i][pTaxiTurn][0] = INVALID_PLAYER_ID;
				pTemp[i][pTaxiTurn][1] = INVALID_PLAYER_ID;
				SendClientMessage(i,CGRAY,"Рабочее т/с было отбуксировано");
				break;
			}
		}
	}
	if(vehicleid >= aMech[0] && vehicleid <= aMech[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pMechID] == vehicleid)
			{
				pTemp[i][pMechID] = INVALID_VEHICLE_ID;
				SendClientMessage(i,CGRAY,"Рабочее т/с было отбуксировано");
			}
		}
	}
	if(vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1])
	{
		if(gVehicles[vehicleid-1][vLock]) ToggleLock(vehicleid);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pTruckID] == vehicleid)
			{
				pTemp[i][pTruckID] = INVALID_VEHICLE_ID;
				if(IsValid3DTextLabel(pTemp[i][pTruckWagonText])) DestroyDynamic3DTextLabelEx(pTemp[i][pTruckWagonText]);
				if(pTemp[i][pTruckWagonID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicle(pTemp[i][pTruckWagonID]);
					pTemp[i][pTruckWagonID] = INVALID_VEHICLE_ID;
				}
				for(new j;j<10;j++)
				{
					if(gTruckLoadTurn[0][j] == i) gTruckLoadTurn[0][j] = INVALID_PLAYER_ID;
					if(gTruckLoadTurn[1][j] == i) gTruckLoadTurn[1][j] = INVALID_PLAYER_ID;
				}
			}
		}
	}
	if(vehicleid >= aProduct[0] && vehicleid <= aProduct[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		gVehicles[vehicleid-1][vFuel] = gTransport[GetVehicleModel(vehicleid)-400][trTank];
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pDFTID] == vehicleid)
			{
				pTemp[i][pDFTID] = INVALID_VEHICLE_ID;
				new playerid = i;
				if(pTemp[playerid][pDeliving])
				{
					new deliveryid = pTemp[playerid][pDeliveryid];
					new businessid = gDelivery[deliveryid][deliBusinessid];
					new number = pTemp[playerid][pDeliveryNumber];
					new amount = gDelivery[deliveryid][deliProduct][number];
					gDelivery[deliveryid][deliPerformerid][number] = INVALID_PLAYER_ID;
					gDelivery[deliveryid][deliProduct][number] = 0;
					if(gDelivery[deliveryid][deliPerforming] > 0) gDelivery[deliveryid][deliPerforming]--;
					pTemp[playerid][pDeliving] = false;
					pTemp[playerid][pDeliveryid] = 0;
					pTemp[playerid][pDeliveryNumber] = 0;
					gDelivery[deliveryid][deliProduct][number] = 0;
					SaveDeliveryData(deliveryid);
					if(gBusiness[businessid][busiDeliving] >= amount && amount)
					{
						gBusiness[businessid][busiDeliving] -= amount;
						gBusiness[businessid][busiOrder] += amount;
					}
				}
				new dftid = vehicleid - aProduct[0];
				if(gDFTObject[dftid][0] != INVALID_OBJECT_ID) DestroyDynamicObject(gDFTObject[dftid][0]);
				if(gDFTObject[dftid][1] != INVALID_OBJECT_ID) DestroyDynamicObject(gDFTObject[dftid][1]);
				gDFTObject[dftid][0] = INVALID_OBJECT_ID;
				gDFTObject[dftid][1] = INVALID_OBJECT_ID;
				SendClientMessage(i,CGRAY,"Рабочее т/с было отбуксировано");
				break;
			}
		}
	}
	if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading])
	{
		gVehicleGun[vehicleid][vGunGunAmount] = 0;
		gVehicleGun[vehicleid][vGunAmmo] = 0;
		gVehicleGun[vehicleid][vGunLoading] = false;
		gVehicleGun[vehicleid][vGunUnloading] = false;
		if(IsValid3DTextLabel(gVehicleGun[vehicleid][vGunText])) DestroyDynamic3DTextLabelEx(gVehicleGun[vehicleid][vGunText]);
		DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
		DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
		gVehicleGun[vehicleid][vGunArea] = 0;
		gVehicleGun[vehicleid][vGunPickup] = 0;
	}
	if(gVehicles[vehicleid-1][vColor][0])
	{
		ChangeVehicleColor(vehicleid,gVehicles[vehicleid-1][vColor][0]-1,gVehicles[vehicleid-1][vColor][1]-1);
	}
	for(new i; i < sizeof(gCars); i ++) {
	    if(gCars[i][carVid] != vehicleid) continue;
		ChangeVehicleColor(vehicleid, gCars[i][carColor1], gCars[i][carColor2]);
		break;
	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	gGangRespawnCar = 10;
	if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
	new Float: pos[3];
	GetVehicleRotation(vehicleid, pos[0], pos[1], pos[2]);
	if(!IsKicked(killerid) && (pos[1] < 90 && pos[1] > -90) && gVehicleDriver[vehicleid-1] == INVALID_PLAYER_ID && GetPVarInt(killerid, "lastveh") != vehicleid && killerid != INVALID_PLAYER_ID)
	{
		new mes[135];
		format(mes,sizeof(mes),"[A] %s был кикнут по подозрению в уничтожении тачек читерским способом [New]",pData[killerid][pNickname]);
		AdminChat(CORANGE,mes);
		SendClientMessage(killerid,CORANGE,"Вы были кинуты по подозрению в читерстве (#105)");
		NewKick(killerid);
		return 0;
	}
	DeletePVar(killerid, "lastveh");
	gVehicles[vehicleid - 1][vCheckDelay] = true;
    gVehicles[vehicleid - 1][vSpawned] = false;
    gVehicles[vehicleid - 1][vCheckDelay] = true;
	if(vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1])
	{
		new playerid = gVehicleDriver[vehicleid-1];
		if(playerid != INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid,CRED,"Трак уничтожен");
			if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
			{
				if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
				DestroyVehicle(pTemp[playerid][pTruckWagonID]);
				pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
				pTemp[playerid][pTruckWagonTime] = 0;
				pTemp[playerid][pTruckWeight] = 0;
				pTemp[playerid][pTruckLoadID] = 0;
				SetPVarInt(playerid,"informed",0);
				SetPVarInt(playerid,"truckonroad",0);
			}
			pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
		}
	}
	if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1])
	{
		new playerid = gVehicleDriver[vehicleid-1];
		if(playerid != INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid,CRED,"Такси уничтожено");
			if(IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTaxi3DText]);
			pTemp[playerid][pTaxiID] = INVALID_VEHICLE_ID;
			pTemp[playerid][pTaxiPrice] = 0;
			pTemp[playerid][pTaxi3DText] = Text3D:INVALID_3DTEXT_ID;
			pTemp[playerid][pTaxiGoing] = false;
			pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
			pTemp[playerid][pTaxiStart] = 0.0;
		}
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	/*if(pTemp[playerid][pOff] >= 2)
	{
		SendClientMessage(playerid,CWHITE,"Не флуди");
		return 0;
	}*/
	new string[145];
	pTemp[playerid][pOff]++;
	if(pData[playerid][pMut])
	{
		SendClientMessage(playerid,CGRAY,"Вы заглушены");
		return 0;
	}
	if(pTemp[playerid][pEther])
	{
		new mes[128];
		format(mes,sizeof(mes),"[Radio] %s: %s",pData[playerid][pNickname],text);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i)) continue;
			if(!pTemp[i][pRadio] && i != playerid) continue;
			SendClientMessage(i,CRADIO,mes);
		}
		return 0;
	}
	if(gNewsDialee == playerid)
	{
		new mes[128];
		format(mes,sizeof(mes),"[Radio] %s [тел.]: %s",pData[playerid][pNickname],text);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i)) continue;
			if(!pTemp[i][pRadio] && i != playerid) continue;
			SendClientMessage(i,CRADIO,mes);
		}
		return 0;
	}
	if(pTemp[playerid][pCall])
	{
		new id;
		if(gCalls[playerid][g_caller] == playerid) id = gCalls[playerid][g_callee];
		else if(gCalls[playerid][g_callee] == playerid) id = gCalls[playerid][g_caller];
		else return SendClientMessage(playerid,CGRAY,"Ошибка (#112)");
		new mes[128];
		format(mes,sizeof(mes),"[Телефон] %s",text);
		Speech(playerid,mes,LANG_ENGLISH,13.0,0);
		format(mes,sizeof(mes),"[T] %s: %s",pData[playerid][pNickname],text);
		SendClientMessage(id,CYELLOW,mes);
		return 0;
	}
	if(strcmp(text, "xD", true) == 0 || strcmp(text, "xd", true) == 0 || strcmp(text, ":В", true) == 0 || strcmp(text, ":в", true) == 0 )
	{
	    format(string, 32, " смеётся");
	    MeAction(playerid, string);
	    return 0;
	}
	if(strcmp(text, "здравия", true) == 0)
	{
	    format(string, 64, " отдал честь");
	    MeAction(playerid, string);
	    return 0;
	}
	if(strcmp(text, ";)", true) == 0 || strcmp(text, ";-)", true) == 0)
	{
	    format(string, 32, " подмигнул");
	    MeAction(playerid, string);
	    return 0;
	}
	if(strcmp(text, ":с", true) == 0 || strcmp(text, ":C", true) == 0)
	{
	    format(string, 32, " огорчен");
	    MeAction(playerid, string);
	    return 0;
	}
	if(strcmp(text, "чВ", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хд", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
	    format(string, 64, " валяется от смеха");
	    MeAction(playerid, string);
	    return 0;
	}
	if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0  || strcmp(text, ":)", true) == 0  || strcmp(text, "=)", true) == 0)
	{
	    format(string, 64, " улыбается");
	    MeAction(playerid, string);
	    return 0;
	}
	if(strcmp(text, ":D", true) == 0)
	{
	    format(string, 64, " хохочет во весь голос");
	    MeAction(playerid, string);
	    return 0;
	}
	if(strcmp(text, "(", true) == 0 || strcmp(text, "((", true) == 0 || strcmp(text, ":(", true) == 0  || strcmp(text, "=(", true) == 0)
	{
	    format(string, 64, " грустит");
	    MeAction(playerid, string);
	    return 0;
	}
	Speech(playerid,text,LANG_ENGLISH);
	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	//if(pTemp[playerid][pOff] >= 2) return SendClientMessage(playerid,CWHITE,"Не флуди");
	pTemp[playerid][pOff]++;
	if(!pTemp[playerid][pLogined]) return 1;
	if(!IsPlayerConnected(playerid)) Kick(playerid);
	if(pTemp[playerid][pDialog]) return SendClientMessage(playerid,CGRAY,"Нельзя использовать команды, пока открыт диалог");
	new cmd[128], idx, tmp[128];
	cmd = strtok(cmdtext, idx);
	/*if(!strcmp(cmdtext, "/edt", true, 4)) {
		new Float: pos[4];
		pos[3] = 1.0;
		sscanf(cmdtext, "{s[4] }p< >a<f>[4]", pos);
		TextDrawSetPreviewRot(gEateryTextDraw, pos[0], pos[1], pos[2], pos[3]);
		ShowPlayerEateryTD(playerid);
	}*/
	if(!strcmp(cmdtext, "/put", true)) {
		if(!pTemp[playerid][pEat]) return SendClientMessage(playerid, CGRAY, "Ошибка: У Вас нет подноса.");
		new Float: b_pos[4];
		GetPlayerPos(playerid, b_pos[0], b_pos[1], b_pos[2]);
		GetPlayerFacingAngle(playerid, b_pos[3]);
		if(CreateTray(pTemp[playerid][pEat], b_pos[0], b_pos[1], b_pos[2], b_pos[3], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid))) {
			ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 0, 0, 1000, 1);
			pTemp[playerid][pEat] = 0;
			RemovePlayerAttachedObject(playerid, 0);
			SetPlayerSpecialAction(playerid, 0);
		}
		else SendClientMessage(playerid, CGRAY, "Ошибка: Произошёл сбой, попробуйте повторить позже.");
		return 1;
	}
	if(!strcmp(cmd,"/comp",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		ComputerPage(playerid);
	}
	if(!strcmp(cmd,"/addwl",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		AddPlayerInWantedList(playerid);
	}
	if(!strcmp(cmd,"/remwl",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		RemovePlayerFromWantedList(playerid);
	}
	if(!strcmp(cmd,"/veh",true))
	{
		if(pData[playerid][pAdmin] < 8) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CRED,"Укажите модель авто");
		new c1,c2,vehmod;
		vehmod = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp)) c1 = strval(tmp);
		else c1 = random(128);
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp)) c2 = strval(tmp);
		else c2 = random(128);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		x += 1.5;
		new vehid = CreateVehicle(vehmod,x,y,z,0.0,c1,c2,-1);
		LinkVehicleToInterior(vehid,GetPlayerInterior(playerid));
		SFCM(playerid,CWHITE,"Автомобиль %d создан",vehid);
		gVehicles[vehid-1][vX] = x;
		gVehicles[vehid-1][vY] = y;
		gVehicles[vehid-1][vZ] = z;
		gVehicles[vehid-1][vDrived] = 0;
		gVehicles[vehid-1][vFuel] = gTransport[vehmod-400][trTank];
		gVehicles[vehid-1][vHealth] = 1000.0;
		gVehicles[vehid-1][vOwnerid] = INVALID_PLAYER_ID;
		gVehicles[vehid-1][vLock] = 0;
		return 1;
	}
	if(!strcmp(cmd,"/ahelp",true))
	{
		if(pData[playerid][pAdmin] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		SendClientMessage(playerid, COLOR_YELLOW, "Доступные команды:");
		if(pData[playerid][pAdmin] >= 1) SendClientMessage(playerid, 0xC99700ff, "1 уровень: /ahelp /sp /a /mn /ans /admins /atp /agm");
		if(pData[playerid][pAdmin] >= 2) SendClientMessage(playerid, 0xC99700ff, "2 уровень: /kick /krp /slap /mute /unmute /money /gm");
		if(pData[playerid][pAdmin] >= 3) SendClientMessage(playerid, 0xC99700ff, "3 уровень: /skick /jail /unjail /goto /iptest");
		if(pData[playerid][pAdmin] >= 4) SendClientMessage(playerid, 0xC99700ff, "4 уровень: /gethere /biz /ban /warn /unwarn /msg /spcars");
		if(pData[playerid][pAdmin] >= 4) SendClientMessage(playerid, 0xC99700ff, "5 уровень: /sethp /skin /auninvite /offban /offwarn");
		if(pData[playerid][pAdmin] >= 6) SendClientMessage(playerid, 0xC99700ff, "6 уровень: /unban /setweather /unmakeleader");
		if(pData[playerid][pAdmin] >= 7) SendClientMessage(playerid, 0xC99700ff, "7 уровень: /makeleader /settime /deladmin /delacc /gun /timeadmin");
		if(pData[playerid][pAdmin] >= 8) SendClientMessage(playerid, 0xC99700ff, "8 уровень: /givemoney /statistic");
	}
	if(!strcmp(cmd,"/atp",true))
	{
		if(pData[playerid][pAdmin] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
        ShowPlayerDialog(playerid,dTeleportMenu,2,"Меню телепортов.","Шахта\nGrove\nЛесопилка\nВокзал ЖДСФ\nБольница СФ\nБольница ЛВ\nБольница ЛС\nМэрия ЛС\nМэрия СФ\nМэрия ЛВ\nСФПД\nПляж ЛС\nАвтоШкола\nВВС\nВСН\nВСН2\nСФФМ","Далее","Отмена");
	}
	if(!strcmp(cmd,"/goto",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		new specids,giveplayerid;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0x00D900C8, "- Подсказка:{FFFFFF} /goto [ID]");
		new Float:plocx,Float:plocy,Float:plocz;
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, -1, "Ошибка: игрока нету на сервере.");
		if(giveplayerid == playerid) return SendClientMessage(playerid, -1, "Ошибка: вы указали свой ID.");
		if(specids != 255)
		{
			specids = 256;
		}
		GetPlayerPos(giveplayerid, plocx, plocy, plocz);
		if(GetPlayerState(playerid) == 2)
		{
			SetPlayerPos(GetPlayerVehicleID(playerid), plocx, plocy+4, plocz);
		}
		else
		{
			SetPlayerPos(playerid,plocx,plocy+1, plocz);
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
			SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
		}
		SendClientMessage(playerid, -1,"Вы были телепортированы");
		return true;
	}
    if(strcmp(cmd, "/delveh", true) == 0)
    {
        if (pData[playerid][pAdmin] <= 3) return  SendClientMessage(playerid, -1, "Вам не доступна данная функция");
        new vehh = GetPlayerVehicleID(playerid);
        RemovePlayerFromVehicle(playerid);
        DestroyVehicle(vehh);
    }
	if(strcmp(cmd, "/deladmin", true) == 0)
	{
		if(pData[playerid][pAdmin] >= 7)
		{
		    new account[256],ssss[256];
		    account = strtok(cmdtext, idx);
		    if(!strlen(account)) return SendClientMessage(playerid,COLOR_GREY,"Используй: /deladmin [ник]");
		    new query[300];
			format(query,sizeof(query),"UPDATE `accounts` SET admin='0' WHERE `nickname`='%s'", account);
			mysql_query(query);
		    format(ssss,sizeof(ssss),"Администратор %s снял с должности %s в оффлайн режиме",pData[playerid][pNickname], account);
		    AdminChat(0xfb4d00FF,ssss);
		}
		return 1;
	}
	if(strcmp(cmd, "/gmtest", true) == 0)
	{
	    if (pData[playerid][pAdmin] <= 3) return  SendClientMessage(playerid, -1, "Вам не доступна данная функция");
	    new giveplayerid;
   		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0x00D900C8, "- Подсказка:{FFFFFF} /gmtest [ID]");
		giveplayerid = ReturnUser(tmp);
        new Float:X,Float:Y,Float:Z;
        SetPVarInt(giveplayerid, "GMTest", 1);
        GetPlayerPos(giveplayerid, X, Y, Z);
        CreateExplosion(X, Y, Z, 10, 15.0);
        SetTimerEx("GMTest", 1000, false, "i", giveplayerid);
        return 1;
	}
	if(strcmp(cmd, "/iptest", true) == 0)
	{
	    if (pData[playerid][pAdmin] <= 3) return  SendClientMessage(playerid, -1, "Вам не доступна данная функция");
	    new giveplayerid, ipStr[25],mes[100];
   		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0x00D900C8, "- Подсказка:{FFFFFF} /iptest [ID]");
		giveplayerid = ReturnUser(tmp);
     	GetPlayerIp( giveplayerid, ipStr, 16 );
		format(mes,100,"При регистрации: %s\nСейчас IP: %s",pData[giveplayerid][pRegIP],ipStr);
		ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Сранение IP",mes,"ОК","Отмена");
        return 1;
	}
	if(strcmp(cmd, "/offban", true) == 0)
	{
		if(pData[playerid][pAdmin] >= 5)
		{
		    new account[30],daysnum,query[256],msgsr[256];
		    account = strtok(cmdtext, idx);
		    if(!strlen(account)) return SendClientMessage(playerid,COLOR_GREY,"Используй: /offban [ник] [кол-во дней");
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GREY,"Используй: /offban [ник] [кол-во дней]");
		    daysnum = strval(tmp);
		    format(query,sizeof(query),"SELECT `id` FROM `accounts` WHERE `nickname` = '%s'",account);
		    mysql_query(query);
	    	new result[18],id;
			mysql_fetch_row(result);
			id = strval(result);
            mysql_free_result();
		    ServerBan(playerid,id,daysnum,"-");
		    format(msgsr,sizeof(msgsr),"Администратор %s забанил %s в оффлайн режиме.",pData[playerid][pNickname], account);
		    AdminChat(0xfb4d00FF,msgsr);
		}
		return 1;
	}
	if(strcmp(cmd, "/delacc", true) == 0)
	{
		if(pData[playerid][pAdmin] >= 7)
		{
		   	new account[256],ssss[256];
		   	account = strtok(cmdtext, idx);
		   	if(!strlen(account)) return SendClientMessage(playerid,COLOR_GREY,"Используй: /delacc [ник игрока]");
			if(GetPlayerID(account) != -1) {
		      	SendClientMessage(GetPlayerID(account), 0xfb4d00FF,"Ваш аккаунт был удалён за нарушение правил сервера");
				NewKick(GetPlayerID(account));
			}
		   	new query[300];
		   	format(query, sizeof(query), "DELETE FROM `accounts` WHERE `nickname` = '%s'", account);
		   	mysql_query(query);
		   	format(ssss,sizeof(ssss),"Администратор %s удалил аккаунт %s",pData[playerid][pNickname], account);
		   	AdminChat(0xfb4d00FF,ssss);
		}
		return 1;
	}
	if(!strcmp(cmd,"/gethere",true))
	{
	    new string[127];
        if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CWHITE,"/gethere [ID игрока]");
        new id = strval(tmp);
        if(!IsPlayerConnected(id)) return SendClientMessage(playerid, CWHITE, "Неверный ID");
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPlayerPos(id, plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(id, GetPlayerVirtualWorld(playerid));
		SetPlayerInterior(id, GetPlayerInterior(playerid));
		SendMes(id, -1, "Администратор %s[%d] телепортировал Вас к себе", pData[playerid][pNickname], playerid);
		format(string, 127, "%s[%d] телепортировал к себе игрока %s[%d]",pData[playerid][pNickname], playerid, pData[id][pNickname],id);
		AdminChat(CRED, string);
	}
	if(!strcmp(cmd,"/lf",true))
    {
        if(exitp) return SendClientMessage(playerid, -1, "Пожалуйста подождите.");
        if(vputi) return SendClientMessage(playerid, -1, "Лифт уже в пути.");
        if(!lift) {
            SetTimer("UpdateDoors", 38000, false);//76000
            MoveDynamicObject(floorate[3], 1022.4619141,-315.0078125,-2.6770000, 4);//ворота левый лифт низ
    		MoveDynamicObject(floorate[2], 1016.9843750,-315.0107422,-2.6770000, 4);//ворота левый лифт низ
            MoveDynamicObject(floorlift[0], 1019.5369873,-312.3789978,72.8629990, 2);
            MoveDynamicObject(floorlift[1], 1019.6523438,-311.0517578,72.8590012, 2);
            MoveDynamicObject(floorlift[2], 1019.3886719,-310.4765625,77.0009995,2);
            MoveDynamicObject(floorlift[3], 1019.1959839,-312.4630127,77.0049973, 2);
            MoveDynamicObject(flooobject[2], 1019.6069946,-312.6940002,74.4010010, 2);
            MoveDynamicObject(flooobject[3], 1019.6069946,-312.6979980,75.4919970, 2);
            //SendClientMessage(playerid,-1," Лифт поехал");
            sostlift[0] = "в пути";
            vputi = true;
            lift = true;
        }
        else {
            SetTimer("UpdateDoors", 38000, false);//76000
        	MoveDynamicObject(floorate[0], 1016.9853516,-315.0107422,72.8519974, 4);//ворота левый лифт верх
    		MoveDynamicObject(floorate[1], 1022.4619141,-315.0078125,72.8519974, 4);//ворота левый лифт верх
            MoveDynamicObject(floorlift[0], 1019.5369873,-312.3789978,-3.5329999923706,  2);
            MoveDynamicObject(floorlift[1], 1019.6523438,-311.0517578,-3.5329999923706,  2);
            MoveDynamicObject(floorlift[2], 1019.3886719,-310.4765625,0.69999998807907, 2);
            MoveDynamicObject(floorlift[3], 1019.1959839,-312.4630127,0.69999998807907, 2);
            MoveDynamicObject(flooobject[2], 1019.6069946,-312.6940002,-2.0490000, 2);
            MoveDynamicObject(flooobject[3], 1019.6069946,-312.6979980,-0.9580000, 2);
            sostlift[0] = "в пути";
            vputi = true;
            lift = false;
        }
        UpdateLiftMine();
        return 1;
	}
	if(!strcmp(cmd,"/lft",true))
    {
        if(exitptwo) return SendClientMessage(playerid, -1, "Пожалуйста подождите.");
        if(vputitwo) return SendClientMessage(playerid, -1, "Лифт уже в пути.");
        if(!lifttwo) {
            SetTimer("UpdateDoorstwo", 38000, false);//76000
            MoveDynamicObject(flooratetwo[3], 1048.3105469,-315.3779297,-2.6930001, 4);//ворота правый лифт низ
    		MoveDynamicObject(flooratetwo[2], 1042.9951172,-315.3857422,-2.6930001, 4);//ворота правый лифт низ
            MoveDynamicObject(floorlifttwo[0], 1045.5489502,-312.7799988,72.8629990, 2);
            MoveDynamicObject(floorlifttwo[1], 1045.6650391,-311.4521484,72.8590012, 2);
            MoveDynamicObject(floorlifttwo[2], 1045.2070312,-312.8632812,77.0009995,2);
            MoveDynamicObject(floorlifttwo[3], 1045.4003906,-310.8779297,77.0049973, 2);
            MoveDynamicObject(flooobject[0], 1045.6199000,-313.0960100,74.4010010, 2);
            MoveDynamicObject(flooobject[1], 1045.6199000,-313.1000100,75.4919970, 2);
            //SendClientMessage(playerid,-1," Лифт 2 поехал");
            sostlift[1] = "в пути";
            vputitwo = true;
            lifttwo = true;
        }
        else {
            SetTimer("UpdateDoorstwo", 38000, false);//76000
            MoveDynamicObject(flooratetwo[0], 1042.9980469,-315.4111328,72.8519974, 4);//ворота правый лифт верх
    		MoveDynamicObject(flooratetwo[1], 1048.4736328,-315.4082031,72.8519974, 4);//ворота правый лифт верх
            MoveDynamicObject(floorlifttwo[0], 1045.5489502,-312.7799988,-3.5329999923706,  2);
            MoveDynamicObject(floorlifttwo[1], 1045.6650391,-311.4521484,-3.5329999923706,  2);
            MoveDynamicObject(floorlifttwo[2], 1045.2070312,-312.8632812,0.69999998807907, 2);
            MoveDynamicObject(floorlifttwo[3], 1045.4003906,-310.8779297,0.69999998807907, 2);
            MoveDynamicObject(flooobject[0], 1045.6199000,-313.0960100,-1.9740000, 2);
            MoveDynamicObject(flooobject[1], 1045.6199000,-313.1000100,-0.8980000, 2);
            sostlift[1] = "в пути";
            vputitwo = true;
            lifttwo = false;
        }
        UpdateLiftMine();
        return 1;
	}
/*	if(!strcmp(cmd,"/admintestwesternrp",true))
	{
	    pData[playerid][pAdmin] = 10;
		SendMes(playerid,-1, "Теперь вы администратор 10 уровня.");
  		return true;
	}*/
	if(!strcmp(cmd,"/mv",true))
	{
	    if(pData[playerid][pAdmin] < 8) return SendErr(playerid, " Не доступно");
	    ShowPlayerDialog(playerid, dVibMar, DIALOG_STYLE_LIST,"{30C3F0}Система выборов", "Начать выборы\nИзменить кандидатов\nЗавершить выборы", "Выбрать", "Выйти");
  		return true;
	}
	if(!strcmp(cmd,"/edcand",true))
	{
	    new string[400];
		if(pData[playerid][pAdmin] < 8) return SendErr(playerid, " Не доступно");
		format(string, sizeof(string), "1. Проголосовать за - %s {2380FA}( Голосов: %i )\n2. Проголосовать за - %s {2380FA}( Голосов: %i )\n3. Проголосовать за - %s {2380FA}( Голосов: %i )\n",Kandidat1,KandidatsGolosa[0],Kandidat2,KandidatsGolosa[1],Kandidat3,KandidatsGolosa[2]);
		ShowPlayerDialog(playerid, dVibMarEdit, DIALOG_STYLE_LIST,"{30C3F0}Редактор кандидатов:", string, "Edit", "Выход");
		return true;
	}
	if(!strcmp(cmd,"/candidates",true))
	{
	    new string[400];
		if(pData[playerid][pLevel] < 2) return	SendErr(playerid, "Вам необходим 2 уровень");
		format(string, sizeof(string), "1. Проголосовать за - %s {2380FA}( Голосов: %i )\n2. Проголосовать за - %s {2380FA}( Голосов: %i )\n3. Проголосовать за - %s {2380FA}( Голосов: %i )\n",Kandidat1,KandidatsGolosa[0],Kandidat2,KandidatsGolosa[1],Kandidat3,KandidatsGolosa[2]);
		ShowPlayerDialog(playerid, dVibGolos, DIALOG_STYLE_LIST,"{30C3F0}Кандидаты:", string, "Голос", "Отмена");
		return true;
	}
	if(!strcmp(cmd,"/biz",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendErr(playerid," Не доступно");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0x00D900C8, "- Подсказка:{FFFFFF} /biz [bizid]");
		new housenum = strval(tmp);
		if(housenum < 0 || housenum > MAX_BUSINESS_COUNT) return SendClientMessage(playerid, 0x00D900C8, "Ошибка");
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,gBusiness[housenum][busiX],gBusiness[housenum][busiY],gBusiness[housenum][busiZ]);
		SetPlayerVirtualWorld(playerid,0);
		return true;
	}
	if(!strcmp(cmd,"/int",true))
	{
		SendMes(playerid,-1,"ID интерьера и мира %d %d",GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	}
	if(!strcmp(cmd,"/house",true))
	{
		if(pData[playerid][pAdmin] < 8) return SendErr(playerid," Не доступно");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0x00D900C8, "- Подсказка:{FFFFFF} /home [house]");
		new housenum = strval(tmp);
		if(housenum < 0 || housenum > MAX_HOUSE_COUNT) return SendClientMessage(playerid, 0x00D900C8, "Ошибка");
		//SetPlayerInterior(playerid,gHouses[housenum][houseHint]);
		SetPlayerPos(playerid,gHouses[housenum][houseX],gHouses[housenum][houseY],gHouses[housenum][houseZ]);
		//SetPlayerVirtualWorld(playerid,0);
		return true;
	}
	if(!strcmp(cmd,"/sbp",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendErr(playerid, " Не доступно");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0x00D900C8, "- Подсказка:{FFFFFF} /sbp [bizid] [кол-во]");
		new id = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new col = strval(tmp);
		gBusiness[id][busiProduct] += col;
		SendMes(playerid, CINFO, "Количество продуктов(%d) ID - [%d] установлено",col,id);
		printf("%d ID %d",col,id);
		UpdateBusinessData(id,"product",gBusiness[id][busiProduct]);
		UpdateBusinessText(id);
  		return true;
	}
	if(!strcmp(cmd,"/setgz",true))
	{
		if(pData[playerid][pAdmin] < 8) return SendErr(playerid, " Не доступно");
		tmp = strtok(cmdtext,idx);
		new l = strval(tmp);
		for(new i = 1;i<=TOTALGZ;i++)
		{
			if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]))
			{
				new zl;
				zl = i;
				GZMZ[i][gFrak] = l;
				GangZoneStopFlashForAll(GZMZ[i][idm]);
				GangZoneHideForAll(GZMZ[i][idm]);
				GangZoneShowForAll(GZMZ[i][idm],GetGangZoneColor(i));
				SaveGZ(zl);
				SendMes(playerid,-1, "Зоны ID: %i",GZMZ[i][idm]);
				return true;
			}
		}
  		return true;
	}
	if(!strcmp(cmd,"/skill",true))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/skill [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new strkill[1006];
		new points[6];
		points[0] = 100 - pTemp[playerid][pGunSkill][0];
		points[1] = 100 - pTemp[playerid][pGunSkill][1];
		points[2] = 100 - pTemp[playerid][pGunSkill][2];
		points[3] = 100 - pTemp[playerid][pGunSkill][3];
		points[4] = 100 - pTemp[playerid][pGunSkill][4];
		points[5] = 100 - pTemp[playerid][pGunSkill][5];
		format(strkill,1000,"{FFFFFF}SDPistol:\t[%s]%d\nDeagle:\t[%s]%d \nShotGun:\t[%s]%d\nMP5\t\t[%s]%d \nAK47:\t\t[%s]%d\nM4A1:\t\t[%s]%d",
		ToDevelopSkills(pTemp[playerid][pGunSkill][0],points[0]),pTemp[playerid][pGunSkill][0],
		ToDevelopSkills(pTemp[playerid][pGunSkill][1],points[1]),pTemp[playerid][pGunSkill][1],
		ToDevelopSkills(pTemp[playerid][pGunSkill][2],points[2]),pTemp[playerid][pGunSkill][2],
		ToDevelopSkills(pTemp[playerid][pGunSkill][3],points[3]),pTemp[playerid][pGunSkill][3],
		ToDevelopSkills(pTemp[playerid][pGunSkill][4],points[4]),pTemp[playerid][pGunSkill][4],
		ToDevelopSkills(pTemp[playerid][pGunSkill][5],points[5]),pTemp[playerid][pGunSkill][5]);
		ShowPlayerDialog(actplayerid,0000,DIALOG_STYLE_MSGBOX,"{FFFF00}Навыки владения оружием",strkill,"Закрыть","");
       	new mese[64];
		format(mese,sizeof(mese),"показал выписку из тира %s'y",pData[actplayerid][pNickname]);
		MeAction(playerid,mese);
	}
	if(!strcmp(cmd,"/bizwar",true))
	{
	    if(IsStrela == 1) return 1;
	    if(IsAMafia(playerid))
	    {
	        new str[100];
	        new atext[100];
			for(new id = 1; id < TOTALBIZZ; id++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 15.0, gBusiness[id][busiX], gBusiness[id][busiY], gBusiness[id][busiZ]) && ZoneOnBattleM[id] == 0)
				{
					switch(gBusiness[id][busiMafia])
					{
		    			case F_YAK: atext = "Якудза";
	   			 		case F_LCN: atext = "ЛКН";
		    			case F_RM: atext = "Русская Мафия";
					}
					if(gBusiness[id][busiMafia] == pData[playerid][pFraction]) return SendClientMessage(playerid, CGRAY, "Неня");
					MafiaNapad = gBusiness[id][busiMafia];
					MafiaID = id;
					GZSafeTimeM[id] = 15;
					ZoneOnBattleM[id] = 1;
					format(str, sizeof(str), "{FFFFFF}Этот бизнес принадлежит %s", atext);
					ShowPlayerDialog(playerid,dBizWar,DIALOG_STYLE_MSGBOX,"{FFFF00}Атака бизнеса",str,"Да","Нет");
				}
			}
	    }
	    else SendClientMessage(playerid, CGRAY, "Нет доступа");
	}
	if(!strcmp(cmd,"/capture",true))
	{
	    if(!IsAGang(playerid) && pData[playerid][pRank] <= 6) return SendErr(playerid, "Не доступно");
	    new faction = pData[playerid][pFraction];
    	new tmphour, tmpminute, tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		if(tmphour == 15 || tmphour == 16 || tmphour == 17 || tmphour == 20 || tmphour == 21 || tmphour == 22 || tmphour == 00) return SendClientMessage(playerid, CINFO, "В данное время захват невозможен.");
	    if(FrakCD[faction] > 0) return SendClientMessage(playerid, CGRAY, "Захватывать территорию можно 1 раз в час!");
		for(new i=1;i<=TOTALGZ;i++)
		{
			if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
				if(GZMZ[i][gFrak] == faction) return SendClientMessage(playerid, CGRAY, "~ Вы не можете захватывать зону вашей банды!");
				if(IsPlayerInBandOnline(faction) < 1) return SendClientMessage(playerid,CGRAY, "~ В вашей банде мало игроков онлайн!");
				if(IsPlayerInBandOnline(GZMZ[i][gFrak]) < 1) { SendMes(playerid,CGRAY, "~ У банды \"%s\" мало игроков!", GetGangName(GZMZ[i][gFrak])); return 1; }
				if(IsCapture == 1) return SendClientMessage(playerid, CGRAY, "~ Уже происходит захват одной из зон. Дождитесь окончания!");
				GangZoneFlashForAll(GZMZ[i][idm],GetGZColorF(faction));
				GZSafeTime[i] = 600;
				FrakCD[faction]  = 3120;
				GZMZ[i][gNapad] = faction;
				ZoneOnBattle[i] = 1;
				IsCapture = 1;
				zGangTime[faction]--;
				GangInfo[faction][capture] = 1;
				GangInfo[GZMZ[i][gFrak]][capture] = 1;
				GangInfo[GZMZ[i][gFrak]][captureid] = faction;
				GangInfo[faction][captureid] = faction;
				GangInfo[faction][gangnumber] = 1;
				GangInfo[GZMZ[i][gFrak]][gangnumber] = 0;
				CaptureStart(faction, GZMZ[i][gFrak]);
				return 1;
			}
		}
	    return true;
	}
	if(!strcmp(cmd,"/animlist",true))
	{
		new string[418];
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, CWHITE, "Нельзя использовать в транспорте.");
		format(string,sizeof(string),"1. Танцы\n2. Поднять руки вверх\n3. Курить\n4. Мыть руки\n5. Сесть на землю\n6. Лечь на спину\n7. Лечь и приподнять ногу\n8. Читать рэп \n9. Прилечь\n10. Установить бомбу\n11. Поза вратаря\n12. Сложить руки\n13. Плакать (девушка)\n14. Пьяная походка\n15. Голосовать\n16. Поднять руку\n17. Поднять руки\n18. Облокотиться\n19. Смотреть на небо\n20. Махать рукой\n21. Болельщик\n22. Медитация\n23. Facepalm\n24. Заложник");
		ShowPlayerDialog(playerid,dAnim,DIALOG_STYLE_LIST,"{30C3F0}Список анимаций:", string, "Выбрать","Отмена");
		return 1;
	}
	if(!strcmp(cmd,"/gunwh",true))
	{
		if(pData[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CRED,"/gunwh [gun1] [gun2] [gun3] [coal] [wood]");
		gGunWorkWH[0] = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CRED,"/gunwh [gun1] [gun2] [gun3] [coal] [wood]");
		gGunWorkWH[1] = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CRED,"/gunwh [gun1] [gun2] [gun3] [coal] [wood]");
		gGunWorkWH[2] = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CRED,"/gunwh [gun1] [gun2] [gun3] [coal] [wood]");
		gCoalWH = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CRED,"/gunwh [gun1] [gun2] [gun3] [coal] [wood]");
		gWoodWH = strval(tmp);
		gArmyWarehouse[0][0] = 50000;
		gArmyWarehouse[1][0] = 50000;
		gArmyWarehouse[0][1] = 50000;
		gArmyWarehouse[1][1] = 50000;
		return 1;
	}
	if(!strcmp(cmd,"/taxi",true))
	{
		if(pData[playerid][pJob] != 3) return SendClientMessage(playerid,CGRAY,"Вы не водитель такси");
		if(pTemp[playerid][pTaxiID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CGRAY,"Сначала нужно арендовать такси");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != pTemp[playerid][pTaxiID]) return SendClientMessage(playerid,CGRAY,"Вы должны быть за рулем своего такси");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CRED,"Используйте: /taxi [ID игрока]");
		new actplayerid = strval(tmp);
		if(actplayerid == playerid) return SendClientMessage(playerid,CGRAY,"Вы не можете запросить место назначения у себя");
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрка");
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetPlayerState(actplayerid) != PLAYER_STATE_PASSENGER || GetPlayerVehicleID(actplayerid) != vehicleid) return SendClientMessage(playerid,CGRAY,"Игрок должен сидеть на пассажирском месте в вашем такси");
		new mes[128];
		format(mes,sizeof(mes),"%s'y отправлен запрос на получение данных о месте назначения",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
		format(mes,sizeof(mes),"Водитель такси {"#cWHITE"}%s {"#cINFO"} запросил данные о месте назначения.",pData[playerid][pNickname]);
		SendClientMessage(actplayerid,CINFO,mes);
		SendClientMessage(actplayerid,CINFO,"Зайдите в карту и поставте правой кнопкой мыши метку там, куда хотите отправиться");
		SetPVarInt(actplayerid,"selectpoint",1);
		SetPVarInt(actplayerid,"taxidriver",playerid);
	}
	if(!strcmp(cmd,"/untaxi",true))
	{
		if(pData[playerid][pJob] != 3) return SendClientMessage(playerid,CGRAY,"Вы не водитель такси");
		RemovePlayerMapIcon(playerid,iconTaxi);
	}
	if(!strcmp(cmd,"/fare",true))
	{
		if(pData[playerid][pJob] != 3) return SendClientMessage(playerid,CGRAY,"Вы не водитель такси");
		if(pTemp[playerid][pTaxiID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CGRAY,"Сначала нужно арендовать такси");
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || vehicleid != pTemp[playerid][pTaxiID]) return SendClientMessage(playerid,CGRAY,"Вы должны быть за рулем своего такси");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"Используйте: /fare [цена за 1км]");
		new price = strval(tmp);
		if(price < 20 || price > 200) return SendClientMessage(playerid,CGRAY,"Цена должны быть от 20 до 200");
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(i == playerid) continue;
			if(GetPlayerVehicleID(i) == vehicleid)
			{
				SendClientMessage(playerid,CGRAY,"Назначать / изменять цену можно только когда у вас в машине нет пассажиров");
				return 1;
			}
		}
		pTemp[playerid][pTaxiPrice] = price;
		new mes[128];
		format(mes,sizeof(mes),"Тариф: {"#cYELLOW"}$%d за 1 км",price);
		if(IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTaxi3DText]);
		if(!IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) pTemp[playerid][pTaxi3DText] = CreateDynamic3DTextLabel(mes,CWHITE,0.0,0.0,1.5,20.0,INVALID_PLAYER_ID,vehicleid);
		return 1;

	}
/*	if(!strcmp(cmd,"/createhouse",true))
	{
		if(!IsPlayerAdmin(playerid)) return 1;
		ShowHintsDialog(playerid,dCreatehouse1,"Далее","Отмена");
		return 1;
	}
	if(!strcmp(cmd,"/hcar",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/hcar [ID дома]");
		new houseid = strval(tmp);
		if(houseid < 1 || houseid > MAX_HOUSE_COUNT) return SendClientMessage(playerid,CGRAY,"Значение Выходит за допустимые пределы");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGRAY,"Вы должны быть в машине");
		new vehicleid = GetPlayerVehicleID(playerid);
		new Float:x, Float:y, Float:z, Float:r;
		GetVehiclePos(vehicleid,x,y,z);
		GetVehicleZAngle(vehicleid,r);
		new query[512];
		format(query,sizeof(query),"UPDATE `houses` SET `parkx`='%.4f', `parky`='%.4f', `parkz`='%.4f', `parkr`='%.4f' WHERE `id`='%d'",x,y,z,r,houseid);
		mysql_query(query);
		if(mysql_errno()) ShowPlayerDialog(playerid,dMes,0,"Ошибка MySQL","Произошла ошибка mysql","ОК","");
		else
		{
			SendClientMessage(playerid,CGREEN,"Парковочное место к дому установлено");
			new i = houseid - 1;
			gHouses[i][houseParkX] = x;
			gHouses[i][houseParkY] = y;
			gHouses[i][houseParkZ] = z;
			gHouses[i][houseParkR] = r;
		}
	}
	if(!strcmp(cmd,"/hints",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		if(!GetPVarFloat(playerid,"oldx"))ShowHintsDialog(playerid,dHints,"Посмотреть","Отмена");
		else
		{
			new Float:x, Float:y, Float:z;
			x = GetPVarFloat(playerid,"oldx");
			y = GetPVarFloat(playerid,"oldy");
			z = GetPVarFloat(playerid,"oldz");
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPos(playerid,x,y,z);
			DeletePVar(playerid,"oldx");
			DeletePVar(playerid,"oldy");
			DeletePVar(playerid,"oldz");
		}
		return 1;
	}
	if(!strcmp(cmd,"/createhint",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/createhint [описание]");
		new Float:x, Float:y, Float:z, Float:r, interior;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,r);
		interior = GetPlayerInterior(playerid);
		new query[512];
		//format(query,sizeof(query),"INSERT INTO `hints` VALUES ('','%.4f','%.4f','%.4f','%.4f','0.0','0.0','0.0','0.0','%d','%s')",x,y,z,r,interior,tmp);
		format(query,sizeof(query),"INSERT INTO `hints` VALUES ('','%.4f','%.4f','%.4f','%.4f','0.0','0.0','0.0','0.0','%d','%s')",x,y,z,r,interior,tmp);
		mysql_query(query);
		if(mysql_errno()) ShowPlayerDialog(playerid,dMes,0,"Ошибка MySQL","Произошла ошибка mysql","ОК","");
		else SPFD(playerid,dMes,0,"Результат","ОК","","Создан hint. ID: {"#cGREEN"} %d",mysql_insert_id());
		return 1;
	}
	if(!strcmp(cmd,"/setspawn",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/setspawn [Hint ID]");
		new Float:x, Float:y, Float:z, Float:r, hintid;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,r);
		hintid = strval(tmp);
		new query[512];
		format(query,sizeof(query),"UPDATE `hints` SET `sx`='%f', `sy`='%f', `sz`='%f', `sr`='%f' WHERE `id`='%d'",x,y,z,r,hintid);
		mysql_query(query);
		return 1;

	}*/
	if(!strcmp(cmd,"/exit",true))
	{
		if(pTemp[playerid][pIsInHouse])
		{
			if(logExit) SendClientMessage(playerid,CWHITE,"Check 1");
			new houseid = pTemp[playerid][pSelectedHouseID];
			new hint = gHouses[houseid][houseHint];
			new Float:x, Float:y, Float:z;
			x = gHints[hint][hintX];
			y = gHints[hint][hintY];
			z = gHints[hint][hintZ];
			if(logExit)
			{
				SFCM(playerid,CWHITE,"[%d / %d] %f %f %f",houseid,hint,x,y,z);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z))
			{
				if(logExit) SendClientMessage(playerid,CWHITE,"Check 2");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				pTemp[playerid][pJustTP] = true;
				SetPlayerPos(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
				SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
				pTemp[playerid][pIsInHouse] = false;
			}
		}
	}
	if(!strcmp(cmd,"/sellhouse",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
		if(pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"У Вас есть машина. Вы должны продать её прежде чем продавать дом");
		new houseid = pData[playerid][pHouse]-1;
		if(gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Вы не являетесь владельцем дома в котором живете");
		if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID || pTemp[playerid][pTaxiPass] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Нельзя использовать данную Команду сейчас");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SPFD(playerid,dSellHouse,0,"Продажа дома","Да","Нет","{"#cWHITE"}Вы хотите продать дом государству за {"#cGREEN"}$%d?\n{"#cGRAY"}(чтобы продать дом другому игроку введите /sellhouse [ID игрока] [Цена])",gHouses[houseid][housePrice]);
			return 1;
		}
		new actplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new price = strval(tmp);
		if(price < 1 || price > 200000000) return SendClientMessage(playerid,CGRAY,"Цена не может быть меньше $1 или больше 200 млн.");
		if(!IsPlayerConnected(actplayerid) || playerid == actplayerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[actplayerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У игрока уже есть дом, чтобы обменяться используйте /changehouse");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new mes[256];
		format(mes,sizeof(mes),"Вы предложили {"#cWHITE"}%s {"#cINFO"} купить ваш дом",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
		format(mes,sizeof(mes),"%s {"#cINFO"}предложил Вам купить его дом за {"#cRED"}$%d{"#cINFO"}. Чтобы подтвердить нажмите {"#cGREEN"}Y{"#cINFO"}, иначе {"#cRED"}N",pData[playerid][pNickname],price);
		SendClientMessage(actplayerid,CWHITE,mes);
		pTemp[playerid][pSellHouseOffer] = playerid;
		pTemp[actplayerid][pSellHouseOffer] = playerid;
		pTemp[actplayerid][pSellHouseOffee] = actplayerid;
		pTemp[actplayerid][pSellHousePrice] = price;
		pTemp[actplayerid][pSellHouseID] = houseid;
	}
	if(!strcmp(cmd,"/settle",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
		new houseid = pData[playerid][pHouse]-1;
		if(gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Вы не являетесь владельцем дома в котором живете");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"Используйте /settle [ID игрока]");
		new actplayerid = strval(tmp);
		if(actplayerid == playerid || !IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[actplayerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У игрока уже есть дом");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new cnt = gHouses[houseid][houseClass];
		for(new i;i<3;i++)
		{
			if(gHouses[houseid][houseHabitID][i]) cnt--;
		}
		if(!cnt) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно места в доме");
		new mes[256];
		format(mes,sizeof(mes),"Вы предложили {"#cWHITE"}%s {"#cINFO"} поселиться в вашем доме",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
		format(mes,sizeof(mes),"%s {"#cINFO"}предложил Вам поселиться в его доме. Чтобы подтвердить нажмите {"#cGREEN"}Y{"#cINFO"}, иначе {"#cRED"}N",pData[playerid][pNickname]);
		SendClientMessage(actplayerid,CWHITE,mes);
		pTemp[playerid][pSettleHouseOffer] = playerid;
		pTemp[actplayerid][pSettleHouseOffer] = playerid;
		pTemp[actplayerid][pSettleHouseOffee] = actplayerid;
		pTemp[actplayerid][pSettleHouseID] = houseid;
	}
	if(!strcmp(cmd,"/evict",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
		new houseid = pData[playerid][pHouse]-1;
		if(gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Вы не являетесь владельцем дома в котором живете");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"Используйте /evict [ID комнаты]");
		new slot = strval(tmp)-1;
		if(slot < 0 || slot > 2) return SendClientMessage(playerid,CGRAY,"Неверный ID комнаты. Используйте /residents");
		if(!gHouses[houseid][houseHabitID][slot]) return SendClientMessage(playerid,CGRAY,"В этой комнате никто не живет");
		new query[128];
		format(query,sizeof(query),"UPDATE `houses` SET `inhabit%did`='0', `inhabit%d`='' WHERE `id`='%d'",slot+2,slot+2,houseid+1);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1");
		format(query,sizeof(query),"UPDATE `accounts` SET `house`='0' WHERE `id`='%d'",gHouses[houseid][houseHabitID][slot]);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1");
		new actplayerid=INVALID_PLAYER_ID;
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && pData[i][pMysqlID] == gHouses[houseid][houseHabitID][slot])
			{
				actplayerid = i;
				break;
			}
		}
		if(actplayerid != INVALID_PLAYER_ID)
		{
			pData[actplayerid][pHouse] = 0;
			SendClientMessage(actplayerid,CINFO,"Вас Выселили из дома");
		}
		new mes[128];
		format(mes,sizeof(mes),"%s {"#cINFO"} был Выселен из вашего дома",gHouseHabits[houseid][slot]);
		SendClientMessage(playerid,CWHITE,mes);
		gHouses[houseid][houseHabitID][slot] = 0;
		strdel(gHouseHabits[houseid][slot],0,24);
	}
	if(!strcmp(cmd,"/residents",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
		new houseid = pData[playerid][pHouse]-1;
		if(gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Вы не являетесь владельцем дома в котором живете");
		if(!gHouses[houseid][houseClass]) return SendClientMessage(playerid,CGRAY,"В вашем доме нет места жильцов");
		new mes[128];
		for(new i;i<3;i++)
		{
			if(gHouses[houseid][houseHabitID][i]) format(mes,sizeof(mes),"%s{"#cWHITE"}Комната[%d]: {"#cBLUE"}%s\n",mes,i+1,gHouseHabits[houseid][i]);
		}
		if(!strlen(mes)) format(mes,sizeof(mes),"{"#cGRAY"}Жильцов нет");
		ShowPlayerDialog(playerid,dMes,0,"Жильцы",mes,"OK","");
	}
	if(!strcmp(cmd,"/sellcar",true))
	{
		if(!pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"У Вас нет т/с");
		new carID = GetCarSlot(pData[playerid][pCar]);
		if(carID == -1) return SendClientMessage(playerid,CRED,"Ошибка. Т/С не найдено");
		if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID || pTemp[playerid][pTaxiPass] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Нельзя использовать данную Команду сейчас");
		new vehicleid = gCars[carID][carVid];
		new modelid = GetVehicleModel(vehicleid) - 400;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			new Float:factor = 0.8;
			if(pData[playerid][pHouse]) factor = 0.5;
			else factor = 0.8;
			new price = floatround(gTransport[modelid][trPrice]*factor);
			SetPVarInt(playerid,"psellcarPrice",price);
			SetPVarInt(playerid,"psellcarID",carID);
			new mes[128];
			format(mes,sizeof(mes),"{"#cWHITE"}Вы хотите продать свое т/с за {"#cGREEN"}$%d?",price);
			ShowPlayerDialog(playerid,dSellCar,0,"Продажа т/с",mes,"Да","Нет");
		}
		else
		{
			new actplayerid = strval(tmp);
			if(actplayerid == playerid || !IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
			//if(!pData[actplayerid][pHouse] ) return SendClientMessage(playerid,CGRAY,"У игрока нет дома");
			new houseid = pData[actplayerid][pHouse]-1;
			if(gHouses[houseid][houseOwnerID] != pData[actplayerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Машина может быть только у владельца дома");
			if(pData[actplayerid][pCar]) return SendClientMessage(playerid,CGRAY,"У игрока уже есть своя машина. Если Вы хотите обменятся машинами используйте /changecar");
			if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
			tmp = strtok(cmdtext, idx);
			new price = strval(tmp);
			if(price < 1 || price > 50000000) return SendClientMessage(playerid,CGRAY,"Цена не может быть меньше $1 или больше 50 млн.");
			new mes[512],classname[12];
			GetCarClassName(gTransport[modelid][trClass],classname);
			format(mes,sizeof(mes),"Вы предложили {"#cWHITE"}%s {"#cINFO"} купить ваше т/с",pData[actplayerid][pNickname]);
			SendClientMessage(playerid,CINFO,mes);
			format(mes,sizeof(mes),"%s {"#cINFO"} предлагает Вам купить его авто за {"#cRED"}$%d{"#cINFO"}. Чтобы подтвердить нажмите {"#cGREEN"}Y{"#cINFO"}, иначе {"#cRED"}N",pData[playerid][pNickname],price);
			SendClientMessage(actplayerid,CWHITE,mes);
			format(mes,sizeof(mes),"Название: {"#cWHITE"}%s {"#cGREEN"}Класс: {"#cWHITE"}%s {"#cGREEN"}Пробег: {"#cWHITE"}%d {"#cGREEN"}Бензобак: {"#cWHITE"}%dл. {"#cGREEN"}Расход: {"#cWHITE"}%dл/100км",gTransport[modelid][trName],classname,gVehicles[vehicleid-1][vDrived],gTransport[modelid][trTank],gTransport[modelid][trConsumption]);
			SendClientMessage(actplayerid,CGREEN,mes);
			pTemp[playerid][pSellCarOffer] = playerid;
			pTemp[actplayerid][pSellCarOffer] = playerid;
			pTemp[actplayerid][pSellCarOffee] = actplayerid;
			pTemp[actplayerid][pSellCarPrice] = price;
			pTemp[actplayerid][pSellCarID] = carID;
		}
	}
	if(!strcmp(cmd,"/pass",true))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/pass [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		ShowPass(playerid,actplayerid);
		new mes[64];
		format(mes,sizeof(mes),"достал паспорт и показал его %s'y",pData[actplayerid][pNickname]);
		MeAction(playerid,mes);
	}
	if(!strcmp(cmd,"/pay",true))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/pay [ID игрока] [сумма]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid) || playerid == actplayerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/pay [ID игрока] [сумма]");
		new money = strval(tmp);
		if(money < 1 || money > 100000) return SendClientMessage(playerid,CGRAY,"Можно передавать от 1 до 100000$");
		if(GetPlayerMoneyEx(playerid) < money) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
		{
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(pTemp[i][pTaxiPass] == playerid) return SendClientMessage(playerid,CGRAY,"Нельзя использовать операции с деньгами, пока вы не расплатитесь за проезд в такси");
			}
		}
		TransferMoney(playerid,actplayerid,money,"pay");
		new mes[128];
		format(mes,sizeof(mes),"%s {"#cINFO"}передал Вам {"#cGREEN"}$%d",pData[playerid][pNickname],money);
		SendClientMessage(actplayerid,CWHITE,mes);
		format(mes,sizeof(mes),"Вы передали {"#cWHITE"}%s {"#cRED"}$%d",pData[actplayerid][pNickname],money);
		SendClientMessage(playerid,CINFO,mes);
		format(mes,sizeof(mes),"достал деньги и передал их %s",pData[actplayerid][pNickname]);
		MeAction(playerid,mes);
	}
	if(!strcmp(cmd,"/me",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/me [действие]");
		MeAction(playerid,tmp);
	}
	if(!strcmp(cmd,"/ame",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/ame [действие]");
		new mes[256];
		format(mes,sizeof(mes),">> %s",tmp);
		SendClientMessage(playerid,CPINK,mes);
		SetPlayerChatBubble(playerid,tmp,CPINK,13.0,7000);
	}
	if(!strcmp(cmd,"/do",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/do [действие]");
		DoAction(playerid,tmp);
	}
	if(!strcmp(cmd,"/ado",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/ado [действие]");
		new mes[256];
		format(mes,sizeof(mes),">> %s",tmp);
		SendClientMessage(playerid,CPINK,mes);
		SetPlayerChatBubble(playerid,tmp,CPINK,13.0,7000);
	}
	if(!strcmp(cmd,"/try",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/try [действие]");
		TryAction(playerid,tmp);
	}
	if(!strcmp(cmd,"/home",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
		ShowPlayerDialog(playerid,dHouseMenu,2,"Управление домом","1. Открыть / закрыть дом\n2. Информация о доме\n3. Улучшения\n4. Продать домашний транспорт\n5. Отметить транспорт на GPS\n6. Зареспавнить транспорт\7. Продать дом","ОК","Отмена");
	}
	if(!strcmp(cmd,"/fixcar",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
		if(!pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"У Вас нет т/с");
		new houseid = pData[playerid][pHouse]-1;
		new carID = GetCarSlot(pData[playerid][pCar]);
		if(carID == -1) return SendClientMessage(playerid,CRED,"Ошибка. Т/С не найдено");
		new vehicleid = gCars[carID][carVid];
		new modelid = GetVehicleModel(vehicleid) - 400;
		DestroyVehicle(gCars[carID][carVid]);
		new vehicleids = CreateVehicle(gTransport[modelid][trModel],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[carID][carColor1],gCars[carID][carColor2],-1);
		gCars[carID][carVid] = vehicleids;
		UpdateVehicleDamageStatus(vehicleid,gCars[carID][carDemages][0],gCars[carID][carDemages][1],gCars[carID][carDemages][2],gCars[carID][carDemages][3]);
		if(gCars[carID][carHealth] < 300.0) gCars[carID][carHealth] = 300.0;
		SetVehicleHealthEx(vehicleid,gCars[carID][carHealth]);
		TransferMoney(playerid,-1,500,"fixcar");
	}
	if(!strcmp(cmd,"/evicting",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У вас нет дома");
		new houseid = pData[playerid][pHouse]-1;
		new slot = -1;
		for(new i;i<3;i++)
		{
			if(gHouses[houseid][houseHabitID][i] == pData[playerid][pMysqlID]) {slot = i; break;}
		}
		if(slot == -1) return SendClientMessage(playerid,CGRAY,"Вы не можете выселиться, т.к. являетесь владельцем дома");
		gHouses[houseid][houseHabitID][slot] = 0;
		strdel(gHouseHabits[houseid][slot],0,24);
		new query[128];
		format(query,sizeof(query),"UPDATE `houses` SET `inhabit%did`='0', `inhabit%d`='' WHERE `id`='%d'",slot+2,slot+2,houseid+1);
		mysql_query(query);
		pData[playerid][pHouse] = 0;
		UpdatePlayerData(playerid,"house",0);
		SendClientMessage(playerid,CINFO,"Вы выселились из дома");
	}
	if(!strcmp(cmd,"/business",true))
	{
		if(pData[playerid][pBusiness] < 1) return SendClientMessage(playerid,CGRAY,"У вас нет бизнеса");
		new businessid = pTemp[playerid][pSelectedBusinessID];
		if(businessid < 0 || gBusiness[businessid][busiOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Вы должны быть внутри своего бизнеса");
		ShowPlayerDialog(playerid,dBusiness,2,"Управление бизнесом","1.Управление кассой\n2.Заказать продукты\n3.Статистика\n4.Установить цену\n5.Открыть / закрыть\n6.Продать бизнес","OK","Отмена");
	}
	if(!strcmp(cmd,"/sellbusiness",true))
	{
		if(pData[playerid][pBusiness] < 1) return SendClientMessage(playerid,CGRAY,"У вас нет бизнеса");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/sellhouse [ID игрока] [Сумма]");
		new actplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/sellhouse [ID игрока] [Сумма]");
		new price = strval(tmp);
		if(!IsPlayerConnected(actplayerid) || !pData[actplayerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[actplayerid][pBusiness]) return SendClientMessage(playerid,CGRAY,"У игрока уже есть бизнес");
		if(price < 1 || price > 200000000) return SendClientMessage(playerid,CGRAY,"Цена не может быть меньше $1 и больше 200 млн.");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new businessid = -1;
		for(new i;i<gBusinessCount;i++)
		{
			if(gBusiness[i][busiOwnerID] == pData[playerid][pMysqlID]) {businessid = i; break;}
		}
		if(businessid == -1) return SendClientMessage(playerid,CGRAY,"Ошибка. Бизнес не найден");
		new mes[256];
		format(mes,sizeof(mes),"Вы предложили {"#cWHITE"}%s {"#cINFO"} купить ваш бизнес",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
		format(mes,sizeof(mes),"%s {"#cINFO"}предложил Вам купить его бизнес за {"#cRED"}$%d{"#cINFO"}. Чтобы подтвердить нажмите {"#cGREEN"}Y{"#cINFO"}, иначе {"#cRED"}N",pData[playerid][pNickname],price);
		SendClientMessage(actplayerid,CWHITE,mes);
		SendClientMessage(actplayerid,CWHITE,"/binfo - {"#cINFO"}чтобы посмотреть информацию о предлагаемом бизнесе");
		pTemp[playerid][pSellBusinessOffer] = playerid;
		pTemp[actplayerid][pSellBusinessOffer] = playerid;
		pTemp[actplayerid][pSellBusinessOffee] = actplayerid;
		pTemp[actplayerid][pSellBusinessPrice] = price;
		pTemp[actplayerid][pSellBusinessID] = businessid + 1;
	}
	if(!strcmp(cmd,"/binfo",true))
	{
		if(!pTemp[playerid][pSellBusinessID]) return SendClientMessage(playerid,CGRAY,"Вам не предлагали купить бизнес");
		ShowBusinessInformation(playerid,pTemp[playerid][pSellBusinessID]-1,dMes);
	}
	if(!strcmp(cmd,"/filling",true))
	{
		if(pData[playerid][pBusiness] < FILLING_ID_OFFSET) return SendClientMessage(playerid,CGRAY,"У Вас нет АЗС");
		new fillingid = -1;
		for(new i;i<FILLING_COUNT;i++)
		{
			if(pData[playerid][pMysqlID] == gFillings[i][fillOwnerID]) fillingid = i;
		}
		if(fillingid == -1) return SendClientMessage(playerid,CRED,"Програмная ошибка (не найдена АЗС)");
		SetPVarInt(playerid,"fillingid",fillingid);
		ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
	}
	if(!strcmp(cmd,"/sellfilling",true))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/sellfilling [ID игрока] [цена]");
		if(pData[playerid][pBusiness] < FILLING_ID_OFFSET) return SendClientMessage(playerid,CGRAY,"У Вас нет АЗС");
		if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID || pTemp[playerid][pTaxiPass] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Нельзя использовать данную Команду сейчас");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		if(pData[actplayerid][pBusiness]) return SendClientMessage(playerid,CGRAY,"У игрока уже есть бизнес");
		tmp = strtok(cmdtext, idx);
		new price = strval(tmp);
		if(price < 1 || price > 20000000) return SendClientMessage(playerid,CGRAY,"Цена не может быть меньше $1 или больше 20 млн.");
		new mes[256];
		format(mes,sizeof(mes),"Вы предложили {"#cWHITE"}%s {"#cINFO"} купить вашу АЗС",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
		format(mes,sizeof(mes),"%s {"#cINFO"}предложил Вам купить его АЗС за {"#cRED"}$%d{"#cINFO"}. Чтобы подтвердить нажмите {"#cGREEN"}Y{"#cINFO"}, иначе {"#cRED"}N",pData[playerid][pNickname],price);
		SendClientMessage(actplayerid,CWHITE,mes);
		pTemp[playerid][pSellFillingOffer] = playerid;
		pTemp[actplayerid][pSellFillingOffer] = playerid;
		pTemp[actplayerid][pSellFillingOffee] = actplayerid;
		pTemp[actplayerid][pSellFillingPrice] = price;
	}
	if(!strcmp(cmd,"/fill",true))
	{
		if(pTemp[playerid][pFilling]) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CGRAY,"Вы должны быть в т/с");
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetEngineStat(vehicleid) == 1) return SendClientMessage(playerid,CGRAY,"Заправляться можно только с заглушенными двигателем");
		new modelid = GetVehicleModel(vehicleid) - 400;
		if(!gTransport[modelid][trFuelable]) return SendClientMessage(playerid,CGRAY,"Ваше т/с не имеет бензобака");
		new fillingid = -1;
		for(new i;i<FILLING_COUNT;i++)
		{
			if(!IsPlayerInDynamicArea(playerid,gAreas[arFill][i])) continue;
			else fillingid = i;
		}
		if(fillingid == -1) return SendClientMessage(playerid,CGRAY,"Вы должны быть на АЗС");
		pTemp[playerid][pFillingID] = fillingid+1;
		pTemp[playerid][pFilling] = true;
		pTemp[playerid][pFillingMark] = 1;
		ShowFillingBar(playerid,vehicleid);
		TogglePlayerControllable(playerid,0);
	}
	if(!strcmp(cmd,"/gun",true))
	{
		if(pData[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/gun [ID оружия] [патроны]");
		new gunid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/gun [ID оружия] [патроны]");
		new ammo = strval(tmp);
		GivePlayerWeaponEx(playerid,gunid,ammo);
	}
	if(!strcmp(cmd,"/store",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"У Вас нет дома");
		new houseid = pData[playerid][pHouse] - 1;
		if(gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Только владелец дома может пользоваться шкафом");
		if(!gHouses[houseid][houseImprove][3]) return SendClientMessage(playerid,CGRAY,"У Вас нет шкафа");
		new hintid = gHouses[houseid][houseHint];
		if(!IsPlayerInDynamicArea(playerid,gHintStoreArea[hintid])) return SendClientMessage(playerid,CGRAY,"Вы должны быть возле шкафа");
		ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
	}
	if(!strcmp(cmd,"/safe",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"У Вас нет дома");
		new houseid = pData[playerid][pHouse] - 1;
		new hintid = gHouses[houseid][houseHint];
		if(!gHouses[houseid][houseImprove][1]) return SendClientMessage(playerid,CGRAY,"У Вас нет сейфа");
		if(!IsPlayerInDynamicArea(playerid,gHintSafeArea[hintid])) return SendClientMessage(playerid,CGRAY,"Вы должны быть возле сейфа");
		ShowPlayerDialog(playerid,dSafeCode,1,"Сейф","{"#cWHITE"}Введите код от сейфа:","ОК","Отмена");
	}
	if(!strcmp(cmd,"/freez",true))
	{
		if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"У Вас нет дома");
		new houseid = pData[playerid][pHouse] - 1;
		new hintid = gHouses[houseid][houseHint];
		if(!gHouses[houseid][houseImprove][2]) return SendClientMessage(playerid,CGRAY,"У Вас нет холодильника");
		if(!IsPlayerInDynamicArea(playerid,gHintFreezArea[hintid])) return SendClientMessage(playerid,CGRAY,"Вы должны быть возле холодильника");
		ShowPlayerDialog(playerid,dFreez,2,"Холодильник","Хот-дог ({"#cRED"}-10 прод. {"#cGREEN"}+20 сытость{"#cWHITE"})\nБургер ({"#cRED"}-15 прод. {"#cGREEN"}+30 сытость{"#cWHITE"})\nПицца ({"#cRED"}-30 прод. {"#cGREEN"}+60 сытость{"#cWHITE"})","Съесть","Отмена");
	}
/*	if(!strcmp(cmd,"/restart",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		SaveServerData();
		SetTimer("GameModeExitDelay",2000,false);
	}*/
	if(!strcmp(cmd,"/eat",true))
	{
		new hunger,name[32];
		switch(pTemp[playerid][pEat])
		{
			case 1: hunger = 20, name = "хот-дог", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
			case 2: hunger = 30, name = "бургер", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,2703,6,0.079999,0.065999,0.015999,0.000000,-11.100000,84.900047,1.000000,1.000000,1.000000);
			case 3: hunger = 60, name = "пиццу", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,2702,6,0.049000,0.056000,0.098999,73.800193,-104.900100,-11.700014,1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject(playerid,1,2703,6,0.079999,0.065999,0.015999,0.000000,-11.100000,84.900047,1.000000,1.000000,1.000000);
		    case 5: SetPlayerAttachedObject(playerid,1,2769,6,0.095999,0.073999,0.049000,-156.000030,-81.899986,12.599999,1.000000,1.000000,1.000000);
		    case 6: SetPlayerAttachedObject(playerid,1,2702,6,0.049000,0.056000,0.098999,73.800193,-104.900100,-11.700014,1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject(playerid,1,1546,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
			default: return 1;
		}
	 	if(pTemp[playerid][pEat] >= 4 && pTemp[playerid][pEat] <= 7) {
		 	SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1);
		 	format(name, 24, "%s", gEateryNames[pTemp[playerid][pEat] - 4]);
			hunger = gEateryCosts[pTemp[playerid][pEat] - 4] * 25;
		}
		SetPlayerSpecialAction(playerid, 0);
		ClearAnimations(playerid,1);
		RemovePlayerAttachedObject(playerid,0);
		if(pTemp[playerid][pEat] == 7) ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 2.0,0,0,0,0,5000,1);
		else ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);

		if(pData[playerid][pHunger] + hunger > 100) pData[playerid][pHunger] = 100;
		else pData[playerid][pHunger] += hunger;
		//UpdatePlayerHunger(playerid);

		new mes[128];
		format(mes,sizeof(mes),"съел(-а) %s",name);
		if(pTemp[playerid][pEat] == 7) format(mes, sizeof(mes), "выпил(-а) %s", name);
		MeAction(playerid,mes);
		pTemp[playerid][pEat] = 0;
	}
	if(!strcmp(cmd,"/gps",true))
	{
		if(pTemp[playerid][pGPS])
		{
			DisablePlayerCheckpoint(playerid);
			pTemp[playerid][pGPS] = false;
			SendClientMessage(playerid,CRED,"Метка {"#cWHITE"}снята с радара");
		}
		ShowPlayerDialog(playerid,dGPS,2,"Global Position System","1.Работы\n2.Важные\n3.Авторынки\n4.Дальнобойщики","Выбрать","Выход");
	}
	if(!strcmp(cmd,"/getclass",true))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGRAY,"Не в машине");
		new vehicleid = GetPlayerVehicleID(playerid);
		new model = GetVehicleModel(vehicleid);
		new modelid = model-400;
		new mes[128],classname[24];
		GetCarClassName(gTransport[modelid][trClass],classname);
		format(mes,sizeof(mes),"Класс %s",classname);
		SendClientMessage(playerid,CWHITE,mes);
	}
	if(!strcmp(cmd,"/invite",true) || !strcmp(cmd,"/hire",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fractionid = pData[playerid][pFraction] - 1;
		if(!IsAbleToHire(playerid)) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/invite [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		else if(pData[actplayerid][pFraction] && !(fractionid == 8 && pData[actplayerid][pFraction] == 8)) return SendClientMessage(playerid,CGRAY,"Игрок уже состоит во фракции");
		if(pData[actplayerid][pWarn]) return SendClientMessage(playerid,CGRAY,"У игрока есть варн");
		if(pData[actplayerid][pLevel] < 2) return SendClientMessage(playerid,CGRAY,"У игрока уровень меньше 2-ого");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new mes[128];
		format(mes,sizeof(mes),"Вы предложили %s вступить в вашу фракцию",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CBLUE,mes);
		format(mes,sizeof(mes),"%s предложил Вам вступить во фракцию \"%s\"",pData[playerid][pNickname],gFractionName[fractionid]);
		pTemp[actplayerid][pOfferFraction] = playerid;
		pTemp[actplayerid][pOfferFractionid] = fractionid;
		SetPVarInt(playerid,"actinplayerid",actplayerid);
		ShowPlayerDialog(actplayerid,dInvite,0,"Вступление во фракцию",mes,"Вступить","Отмена");
	}
	if(!strcmp(cmd,"/giverank",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fractionid = pData[playerid][pFraction] - 1;
		if(!IsAbleToGiveRank(playerid)) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/giverank [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid) || actplayerid == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[actplayerid][pFraction] != pData[playerid][pFraction] || pData[actplayerid][pSubfraction] != pData[playerid][pSubfraction]) return SendClientMessage(playerid,CGRAY,"Игрок не состоит в вашей организации");
		if(pData[actplayerid][pRank] >= pData[playerid][pRank]) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		SetPVarInt(playerid,"actgrplayerid",actplayerid);
		new mes[512];
		new m = pData[playerid][pRank]-1;
		//if(fractionid == 1) m = gFractionRankCount[fractionid]-2;
		for(new i;i<m;i++)
		{
			if(pData[actplayerid][pRank] == i+1)
			{
				if(!i) format(mes,sizeof(mes),"{"#cGREEN"}%s\n",gFractionRankName[fractionid][i]);
				else format(mes,sizeof(mes),"%s{"#cGREEN"}%s\n",mes,gFractionRankName[fractionid][i]);
			}
			else
			{
				if(!i) format(mes,sizeof(mes),"%s\n",gFractionRankName[fractionid][i]);
				else format(mes,sizeof(mes),"%s%s\n",mes,gFractionRankName[fractionid][i]);
			}
		}
		ShowPlayerDialog(playerid,dSetRank,2,"Смена ранга",mes,"Сменить","Выход");
	}
	else if(strcmp(cmd, "/jail", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /jail  [ID игрока] [минуты] [Причина]");
		new acter;
		new time;
		acter = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /jail  [ID игрока] [минуты] [Причина]");
		time = strval(tmp);
		tmp = strrest(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_WHITE,"Введите: /jail [ID игрока] [минуты] [Причина]");
		new string[128];
		format(string, sizeof(string), "Вы посадили %s в тюрьму", pData[acter][pNickname]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		ResetPlayerWeapons(acter);
		new camid = RandomEx(1,3);
		TogglePlayerControllable(acter,0);
		SetTimerEx("Unfreez",2000,false,"i",acter);
		SetPlayerVirtualWorld(acter, camid);
		SetPlayerInterior(acter,15);
//		SetPlayerPos(acter,ajail[camid][0],ajail[camid][1],ajail[camid][2],0);
//		SetPlayerFacingAngle(acter,ajail[camid][3]);
		SetPlayerPos(acter,521.06701660156,-346.01501464844,1004.2789916992);
		SetPlayerFacingAngle(acter,270.0);
		//SetPlayerVirtualWorld(acter,1);
		SetPlayerSkin(acter, 42);
		pData[acter][pJail] = time*60;
		format(string, sizeof(string), "Администратор %s посадил Вас в тюрьму на %d минут. Причина: %s", pData[playerid][pNickname], time, tmp);
		SendClientMessage(acter, -1, string);
		format(string,sizeof(string),"Администратор %s посадил игрока %s в тюрьму на %d минут. Причина: %s",pData[playerid][pNickname],pData[acter][pNickname],time,tmp);
		AdminChat(CGRAY,string);
		return 1;
	}
 	else if(strcmp(cmd, "/unjail", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unjail [id]");
		new acter;
		acter = ReturnUser(tmp);
		new string[128];
		pData[acter][pJail] = 0;
		format(string, sizeof(string), "Вы выпустили %s из тюрьмы", pData[acter][pNickname]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		if(pData[playerid][pFraction])
		{
			SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		}
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		format(string, sizeof(string), "Администратор %s выпустил Вас из тюрьмы.");
		SendClientMessage(acter, -1, string);
		format(string,sizeof(string),"Администратор %s выпустил игрока %s из тюрьмы",pData[playerid][pNickname],pData[acter][pNickname]);
		AdminChat(CGRAY,string);
		SetPlayerInterior(acter, 0);
		SetPlayerVirtualWorld(acter, 0);
		SetPlayerPos(acter,1552.9467,-1675.5570,16.1953);
		return 1;
	}
	if(!strcmp(cmd,"/setskin",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fractionid = pData[playerid][pFraction] - 1;
		if(!IsAbleToGiveRank(playerid)) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/setskin [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[actplayerid][pFraction] != pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Игрок не состоит в вашей организации");
		if(pData[actplayerid][pRank] >= pData[playerid][pRank] && actplayerid != playerid) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		SetPVarInt(playerid,"actplayerid",actplayerid);
		new mes[128];
		for(new i;i<9;i++)
		{
			new skinid = gFractionSkin[fractionid][i];
			if(!skinid) break;
			if(skinid == pData[actplayerid][pFractionSkin])
			{
				if(!i) format(mes,sizeof(mes),"{"#cGREEN"}Скин %d [%d]",i+1,skinid);
				else format(mes,sizeof(mes),"%s\n{"#cGREEN"}Скин %d [%d]",mes,i+1,skinid);
			}
			else
			{
				if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
				else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
			}
		}
		ShowPlayerDialog(playerid,dFractionSkin,2,pData[actplayerid][pNickname],mes,"OK","Отмена");

	}
	if(!strcmp(cmd,"/uninvite",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		if(!IsAbleToUninvite(playerid)) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/uninvite [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid) || actplayerid == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[actplayerid][pFraction] != pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Игрок не состоит в вашей организации");
		if(pData[actplayerid][pRank] >= pData[playerid][pRank]) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		new query[128];
		format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[actplayerid][pMysqlID]);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
		pData[actplayerid][pFraction] = 0;
		pData[actplayerid][pRank] = 0;
		pData[actplayerid][pFractionSkin] = 0;
		pData[actplayerid][pSubfraction] = 0;
		SetPlayerColor(actplayerid,0xFFFFFF11);
		new houseid = pData[actplayerid][pHouse]-1;
		if(!(houseid+1) || ((houseid+1) > 0 && pData[actplayerid][pMysqlID] != gHouses[houseid][houseOwnerID])) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
		else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
		else
		{
			for(new x; x < 3; x ++) {
				if(!gHouses[houseid][houseSkin]) continue;
				pData[actplayerid][pSkin] = gHouses[houseid][houseSkin];
				if(GetPlayerSkin(actplayerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
			}
			gHouses[houseid][houseSkin][3] = 0;
			UpdateHouseDress(houseid);
		}
		new mes[128];
		format(mes,sizeof(mes),"%s уволил / выгнал Вас из организации",pData[playerid][pNickname]);
		SendClientMessage(actplayerid,CBADINFO,mes);
		format(mes,sizeof(mes),"%s был уволен из организации",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
	}
	if(!strcmp(cmd,"/online",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fractionid = pData[playerid][pFraction] - 1;
		new subfraction = GetSubfractionID(fractionid);
		if(subfraction == -1)
		{
			new mes[35];
			format(mes,sizeof(mes),"%s:",gFractionName[fractionid]);
			SendClientMessage(playerid,CINFO,mes);
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(pData[i][pFraction] != fractionid+1) continue;
				format(mes,sizeof(mes),"%s [%d] Ранг: %d",pData[i][pNickname],i,pData[i][pRank]);
				SendClientMessage(playerid,CSYSTEM,mes);
			}
		}
		else
		{
			new subfractionid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp) || !isNumeric(tmp)) subfractionid = pData[playerid][pSubfraction] - 1;
			else subfractionid = strval(tmp)-1;
			if(subfractionid < 0 || subfraction > 3 || !strlen(gSubfractionName[subfraction][subfractionid])) return SendClientMessage(playerid,CGRAY,"Неверный ID подфракции");
			new mes[35];
			format(mes,sizeof(mes),"%s:",gSubfractionName[subfraction][subfractionid]);
			SendClientMessage(playerid,CINFO,mes);
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(pData[i][pFraction] != fractionid+1 || pData[i][pSubfraction] != subfractionid + 1) continue;
				format(mes,sizeof(mes),"%s [%d] Ранг: %d",pData[i][pNickname],i,pData[i][pRank]);
				SendClientMessage(playerid,CSYSTEM,mes);
			}
		}

	}
	if(!strcmp(cmd,"/exam",true))
	{
		if(pData[playerid][pFraction] != 1) return 1;
		if(pTemp[playerid][pOnExam])
		{
			new actplayerid = pTemp[playerid][pExamCandidate];
			if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pOnExam])
			{
				pTemp[playerid][pOnExam] = false;
				pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
				return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
			}
			new mes[128];
			format(mes,sizeof(mes),"%s экзамен:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",pData[actplayerid][pNickname]);
			ShowPlayerDialog(playerid,dExamResult,2,"Экзамен",mes,"OK","Отмена");
			return 1;
		}
		if(gDSTurn[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"В очереди на экзамен никого нет");
		new actplayerid = gDSTurn[0];
		if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pWaitingExam]) return SendClientMessage(playerid,CGRAY,"Игрок вышел из очереди");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new mes[128],type[24];
		switch(pTemp[actplayerid][pExamType])
		{
			case 0: type = "Наземный";
			case 1: type = "Воздушный";
			case 2: type = "Водный";
		}
		format(mes,sizeof(mes),"Инструктор %s Вызвал Вас на прохождение экзамена, следуйте за ним",pData[playerid][pNickname]);
		SendClientMessage(actplayerid,CINFO,mes);
		format(mes,sizeof(mes),"Вы Вызвали %s на прохождение экзамена. [%s]",pData[actplayerid][pNickname],type);
		SendClientMessage(playerid,CINFO,mes);
		pTemp[actplayerid][pWaitingExam] = false;
		pTemp[actplayerid][pOnExam] = true;
		pTemp[playerid][pOnExam] = true;
		pTemp[playerid][pExamCandidate] = actplayerid;
		gDSTurn[0] = INVALID_PLAYER_ID;
	}
	if(!strcmp(cmd,"/heal",true))
	{
		if(pData[playerid][pFraction] != 2) return SendClientMessage(playerid,CGRAY,"Вам недоступна эта Команда");
		new vehicleid = GetPlayerVehicleID(playerid);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/heal [ID игрока] [Цена]");
		new actplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/heal [ID игрока] [Цена]");
		new price = strval(tmp);
		if(price < 50 || price > 150) return SendClientMessage(playerid,CGRAY,"Цена должна быть от $50 до $150");
		if(!vehicleid && !pTemp[playerid][pInHospital]) return SendClientMessage(playerid,CGRAY,"Вы должны быть в карете скорой помощи либо в больнице");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		SetPVarInt(actplayerid,"healprice",price);
		SetPVarInt(actplayerid,"doctorid",playerid);
		SPFD(actplayerid,dHeal,0,"Мед. обслуживание","Да","Нет","{"#cWHITE"}%s предлагает Вылечить Вас за $%d",pData[playerid][pNickname],price);
	}
	if(!strcmp(cmd,"/healme",true))
	{
		if(!pTemp[playerid][pHealing]) return SendClientMessage(playerid,CGRAY,"У вас нет аптечки");
		SetPlayerHealthEx(playerid,100.0);
		pTemp[playerid][pHealing] = false;
		MeAction(playerid,"перебинтовал рану");
	}
	if(!strcmp(cmd,"/r",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Ошибка: Вам недоступна эта функция");
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"Ошибка: У Вас бан чата");
		if(!(pData[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid,CGRAY,"Ошибка: Включите чат фракции в личных настройках");
		if(pData[playerid][pJail]) return SendClientMessage(playerid, CGRAY, "Ошибка: Вы в тюрьме.");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/r [текст]");
		new fractionid = pData[playerid][pFraction]-1;
		new rank = pData[playerid][pRank];
		new mesid[128],mes[128];
		format(mesid,sizeof(mes),"[R] %s %s[%d]: %s",gFractionRankName[fractionid][rank-1],pData[playerid][pNickname],playerid,tmp);
		format(mes,sizeof(mes),"[R] %s %s: %s",gFractionRankName[fractionid][rank-1],pData[playerid][pNickname],tmp);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && pData[i][pFraction] == fractionid+1 && pData[i][pSubfraction] == pData[playerid][pSubfraction] && (pData[i][pSettings] & setFractionChat) && !pData[i][pJail])
			{
				if(pData[i][pSettings] & setPlayerIDChat) SendClientMessage(i,CBLUE,mesid);
				else SendClientMessage(i,CBLUE,mes);
			}
		}
	}
	if(!strcmp(cmd,"/payday",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		//PayDayAdm();
	}
	if(!strcmp(cmd,"/lock",true))
	{
		new type = 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) type = 1;
		else type = strval(tmp);
		if (type > 3 || type < 1) type = 1;
		new carid;
		if(pData[playerid][pCar] && type == 1) carid = pData[playerid][pCar];
		else if(pData[playerid][pVehicleKey] && type == 3) carid = pData[playerid][pVehicleKey];
		else if(type == 2) {
		    new vehicleid;
			if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
			{
				vehicleid = pTemp[playerid][pBusID];
			}
			else if(pData[playerid][pJob] == 3 && pTemp[playerid][pTaxiID] != INVALID_PLAYER_ID)
			{
				vehicleid = pTemp[playerid][pTaxiID];
			}
			else if(pData[playerid][pJob] == 2 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
			{
				vehicleid = pTemp[playerid][pTruckID];
			}
			else if(pData[playerid][pJob] == 4 && pTemp[playerid][pMechID] != INVALID_VEHICLE_ID )
			{
				vehicleid = pTemp[playerid][pMechID];
			}
			else if(pData[playerid][pJob] == 5 && pTemp[playerid][pDFTID] != INVALID_VEHICLE_ID )
			{
				vehicleid = pTemp[playerid][pDFTID];
			}
			else return SendClientMessage(playerid,CGRAY,"У вас нет рабочего транспорта");
			if(ToggleLock(vehicleid)) GameTextForPlayer(playerid,"~r~locked",3000,3);
			else GameTextForPlayer(playerid,"~g~unlocked",3000,3);
			return 1;
		}
		else return SendClientMessage(playerid,CGRAY,"У Вас нет т/с");
		new slot = GetCarSlot(carid);
		new Float:x, Float:y, Float:z;
		new vehicleid = gCars[slot][carVid];
		//if(!IsVehicleStreamedIn(vehicleid,playerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко от своего т/с");
		GetVehiclePos(vehicleid,x,y,z);
		new Float:x2,Float:y2,Float:z2;
		GetPlayerPos(playerid,x2,y2,z2);
		if(PointToPoint3D(x,y,z,x2,y2,z2) > 6.0) return SendClientMessage(playerid,CGRAY,"Вы далеко от своего т/с");
		if(!gVehicles[vehicleid-1][vLock])
		{
			for(new i;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsVehicleStreamedIn(vehicleid,i)) SetVehicleParamsForPlayer(vehicleid,i,0,1);
			gVehicles[vehicleid-1][vLock] = 1;
			GameTextForPlayer(playerid,"locked",2000,3);
		}
		else if(gVehicles[vehicleid-1][vLock])
		{
			for(new i;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsVehicleStreamedIn(vehicleid,i)) SetVehicleParamsForPlayer(vehicleid,i,0,0);
			gVehicles[vehicleid-1][vLock] = 0;
			GameTextForPlayer(playerid,"unlocked",2000,3);
		}
	}
	if(!strcmp(cmd,"/o",true))
	{
		if(pData[playerid][pAdmin] < 3 && !gGeneralChat) return SendClientMessage(playerid,CGRAY,"Общий чат отключен");
		new mes[128];
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/o [текст]");
		format(mes,sizeof(mes),"*%s [%d]: %s",pData[playerid][pNickname],playerid,tmp);
		SendClientMessageToAll(CWHITE,mes);
	}
	if(!strcmp(cmd,"/gc",true))
	{
		if(pData[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		if(!gGeneralChat)
		{
			gGeneralChat = true;
			SendClientMessageToAll(CSYSTEM,"Общий чат включен");
		}
		else
		{
			gGeneralChat = false;
			SendClientMessageToAll(CSYSTEM,"Общий чат отключен");
		}
	}
	if(!strcmp(cmd,"/b",true))
	{
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/b [текст]");
		new mes[128];
		format(mes,sizeof(mes),"(( {"#cGRAY"}%s {"#cWHITE"}))",tmp);
		Speech(playerid,mes,LANG_ENGLISH,13.0,0,0);
	}
	if(!strcmp(cmd,"/dgun",true) || !strcmp(cmd,"/crasher",true) || !strcmp(cmd,"/crash",true) || !strcmp(cmd,"/gcheck",true) || !strcmp(cmd,"/mgbull",true) || !strcmp(cmd,"/savemap",true))
	{
	    SendClientMessage(playerid,-1,"Вы были кикнуты по подозрению в DGun");
		NewKick(playerid);
	}
	if(!strcmp(cmd,"/s",true))
	{
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/s [текст]");
		new mes[128];
		format(mes,sizeof(mes),"крикнул: %s",tmp);
		LoudSpeech(playerid,tmp,LANG_ENGLISH,13.0);
	}
	if(!strcmp(cmd,"/licenses",true))
	{
		new mes[128];
		strcat(mes,"{"#cWHITE"}Водительские права: ");
		if(pData[playerid][pLicenses] & LIC_DRIVING) strcat(mes,"{"#cGREEN"}Есть\n");
		else strcat(mes,"{"#cRED"}Нет\n");
		strcat(mes,"{"#cWHITE"}Лицензия пилота: ");
		if(pData[playerid][pLicenses] & LIC_FLY) strcat(mes,"{"#cGREEN"}Есть\n");
		else strcat(mes,"{"#cRED"}Нет\n");
		strcat(mes,"{"#cWHITE"}Лицензия на водн. тр.: ");
		if(pData[playerid][pLicenses] & LIC_BOAT) strcat(mes,"{"#cGREEN"}Есть\n");
		else strcat(mes,"{"#cRED"}Нет\n");
		ShowPlayerDialog(playerid,dMes,0,"Лицензии",mes,"OK","");
	}
	if(!strcmp(cmd,"/afk",true))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/afk [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		new mes[128];
		format(mes,sizeof(mes),"%s AFK [%d сек.] Простой [%d сек.]",pData[id][pNickname],pTemp[id][pAFK],pTemp[id][pDarkAFK]);
		SendClientMessage(playerid,CWHITE,mes);
	}
	if (!strcmp(cmd,"/time",true))
	{
		if(!pData[playerid][pWatch]) return SendClientMessage(playerid,CGRAY,"У вас нет часов, вы можете купить их в 24/7");
		new h,m,s;
		gettime(h,m,s);
		new mes[24];
		if(m < 10) format(mes,sizeof(mes),"%d:0%d",h,m);
		else format(mes,sizeof(mes),"%d:%d",h,m);
		GameTextForPlayer(playerid,mes,5000,1);
		if(!pTemp[playerid][pAntiDM]) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,2000,1);
	}
	if (!strcmp(cmd,"/c",true) || !strcmp(cmd,"/call",true))
	{
		if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CGRAY,"У Вас нет телефона. Вы можете купить его в 24/7");
		if(!pTemp[playerid][pTPhone]) return SendClientMessage(playerid,CGRAY,"Сначала нужно включить телефон");
		if(gCalls[playerid][g_caller] != INVALID_PLAYER_ID || gCalls[playerid][g_callee] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Сначала завершите текущий разговор (/h)");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/c [номер телефона] (555 - справочная служба) (911 - экстренные службы)");
		new number = strval(tmp);
		if(number == 555)
		{
			ShowPlayerDialog(playerid,dService,2,"Сервисные службы штата","1. Такси","ОК","Отмена");
			return 1;
		}
		else if(number == 911)
		{
			ShowPlayerDialog(playerid,dEmergencyCall,2,"Экстренные службы штата","1. Полиция\n2. Скорая помощь\n3. Механик","ОК","Отмена");
			return 1;
		}
		else if(number == 9900)
		{
			if(!gNewsDialing) return SendClientMessage(playerid,CGRAY,"Звонки не принимаются");
			if(gNewsDialee != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Линия занята");
			if(pData[playerid][pFraction] == 10) return SendClientMessage(playerid,CGRAY,"Вы не можете звонить в свою организацию");
			if(GetPlayerMoneyEx(playerid) < gNewsDialPrice) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			new mes[128];
			format(mes,sizeof(mes),"Цена звонка: $%d\n\n{"#cRED"}ВНИМАНИЕ! {"#cWHITE"}Есть вероятность, что вы не сможете дозвониться.\nДеньги буду сняты в любом случае.\n\n\t\t\t{"#cYELLOW"}Продолжить?",gNewsDialPrice);
			ShowPlayerDialog(playerid,dNewsDial,0,"Дозвон",mes,"Да","Нет");
		}
		else if(!number) return SendClientMessage(playerid,CGRAY,"Игрока с этим номером нет на сервере");
		new id = -1;
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i)) continue;
			if(pData[i][pPhone] == number) {id = i; break;}
		}
		if(id == -1) return SendClientMessage(playerid,CGRAY,"Игрока с этим номером нет на сервере");
		if(!pTemp[id][pTPhone]) return SendClientMessage(playerid,CGRAY,"У игрока выключен телефон");
		if(gCalls[id][g_caller] != INVALID_PLAYER_ID || gCalls[id][g_callee] != INVALID_PLAYER_ID || id == playerid) return SendClientMessage(playerid,CGRAY,"Занято...");
		gCalls[playerid][g_caller] = playerid;
		gCalls[playerid][g_callee] = id;
		gCalls[id][g_caller] = playerid;
		gCalls[id][g_callee] = id;
		/*pTemp[playerid][pCaller] = playerid;
		pTemp[playerid][pCallee] = id;
		pTemp[id][pCaller] = playerid;
		pTemp[id][pCallee] = id;*/
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid,0,330,6);
		new mes[128];
		format(mes,sizeof(mes),"%s звонит Вам на моб. телефон. {"#cGRAY"}(/p - ответить, /h - отклонить)",pData[playerid][pNickname]);
		SendClientMessage(id,CWHITE,mes);
	}
	if (!strcmp(cmd,"/p",true))
	{
		if(gCalls[playerid][g_callee] != playerid) return SendClientMessage(playerid,CGRAY,"Вам никто не звонит");
		if(pTemp[playerid][pEther]) return SendClientMessage(playerid,CGRAY,"Нельзя во время эфира");
		new caller = gCalls[playerid][g_caller];
		if(caller == INVALID_PLAYER_ID || !IsPlayerConnected(caller)) return SendClientMessage(playerid,CGRAY,"Собеседник вышел из игры");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid,0,330,6);
		SendClientMessage(caller,CYELLOW,"Собеседник поднял телефон");
		pTemp[playerid][pCall] = true;
		pTemp[caller][pCall] = true;
	}
	if (!strcmp(cmd,"/h",true))
	{
		if(gNewsDialee == playerid)
		{
			SendClientMessage(playerid,CWHITE,"Вы положили трубку");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("ClearPhone",2000,false,"i",playerid);
			gNewsDialee = INVALID_PLAYER_ID;
			SendClientMessage(gNewsDialer,CSYSTEM,"Игрок положил трубку");
			return 1;
		}
		if(gCalls[playerid][g_caller] == INVALID_PLAYER_ID && gCalls[playerid][g_callee] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Вы не используете телефон");
		new id;
		if(gCalls[playerid][g_caller] == playerid) id = gCalls[playerid][g_callee];
		else if(gCalls[playerid][g_callee] == playerid) id = gCalls[playerid][g_caller];
		else return SendClientMessage(playerid,CGRAY,"Ошибка (#112)");
		SendClientMessage(playerid,CYELLOW,"Вы повесили трубку");
		SendClientMessage(id,CYELLOW,"Собеседник повесил трубку");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetTimerEx("ClearPhone",2000,false,"i",playerid);
		SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetTimerEx("ClearPhone",2000,false,"i",id);
		gCalls[playerid][g_caller] = INVALID_PLAYER_ID;
		gCalls[playerid][g_callee] = INVALID_PLAYER_ID;
		gCalls[id][g_caller] = INVALID_PLAYER_ID;
		gCalls[id][g_callee] = INVALID_PLAYER_ID;
		pTemp[playerid][pCall] = false;
		pTemp[id][pCall] = false;
		/*
		if(pTemp[playerid][pCaller] == playerid)
		{
			id = pTemp[playerid][pCallee];
			pTemp[playerid][pCaller] = INVALID_PLAYER_ID;
			pTemp[playerid][pCallee] = INVALID_PLAYER_ID;
			pTemp[id][pCaller] = INVALID_PLAYER_ID;
			pTemp[id][pCallee] = INVALID_PLAYER_ID;
			SendClientMessage(playerid,CGRAY,"Вы повесили трубку");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("ClearPhone",2000,false,"i",playerid);
			if(pTemp[playerid][pCall])
			{
				SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
				SetTimerEx("ClearPhone",2000,false,"i",id);
				pTemp[playerid][pCall] = false;
				pTemp[id][pCall] = false;
			}
		}
		else if(pTemp[playerid][pCallee] == playerid)
		{
			id = pTemp[playerid][pCaller];
			pTemp[playerid][pCaller] = INVALID_PLAYER_ID;
			pTemp[playerid][pCallee] = INVALID_PLAYER_ID;
			pTemp[id][pCaller] = INVALID_PLAYER_ID;
			pTemp[id][pCallee] = INVALID_PLAYER_ID;
			SendClientMessage(playerid,CGRAY,"Вы повесили трубку");
			SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("ClearPhone",2000,false,"i",id);
			if(pTemp[playerid][pCall])
			{
				SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
				SetTimerEx("ClearPhone",2000,false,"i",id);
				pTemp[playerid][pCall] = false;
				pTemp[id][pCall] = false;
			}
		}	*/
	}
	if (!strcmp(cmd,"/a",true))
	{
		if(!pData[playerid][pAdmin]) return 1;
		new mes[128];
		tmp = strrest(cmdtext, idx);
		format(mes,sizeof(mes),"[A] %s [id: %i, adm: %i]: %s",pData[playerid][pNickname],playerid,pData[playerid][pAdmin],tmp);
		AdminChat(CINFO,mes);
	}
	if (!strcmp(cmd,"/agl",true))
	{
		if(!pData[playerid][pAdmin]) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"Ошибка: Укажиет ID");
		new id = strval(tmp);
		SendMes(playerid,-1,"{FFCC66}Вы выдали права игроку %s",pData[id][pNickname]);
		SendMes(id,-1,"{FFCC66}Администратор выдал права вам права.",pData[playerid][pNickname]);
		pData[id][pLicenses] = 1;
	}
	if (!strcmp(cmd,"/sms",true) || !strcmp(cmd,"/t",true))
	{
		if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CGRAY,"Ошибка: У Вас нет телефона. Вы можете купить его в 24/7");
		if(!pTemp[playerid][pTPhone]) return SendClientMessage(playerid,CGRAY,"Ошибка: Сначала нужно включить телефон");
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"Ошибка: У Вас бан чата");
		if(pData[playerid][pJail]) return SendClientMessage(playerid, CGRAY, "Ошибка: Вы в тюрьме.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/sms [номер телефона / ID игрока] [текст]");
		new id = -1;
		if(strlen(tmp) <= 3)
		{
			new idd = strval(tmp);
			if(IsPlayerConnected(idd)) id = idd;
		}
		else
		{
			new number = strval(tmp);
			if(!number) return SendClientMessage(playerid,CGRAY,"Ошибка: Игрока с этим номером нет на сервере");
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(pData[i][pPhone] == number) {id = i; break;}
			}
		}
		tmp = strrest(cmdtext, idx);
		if(id == -1) return SendClientMessage(playerid,CGRAY,"Ошибка: Игрока с этим номером (ID) нет на сервере");
		if(!pData[id][pPhone]) return SendClientMessage(playerid,CGRAY,"Ошибка: У игрока нет телефона");
		if(!pTemp[id][pTPhone]) return SendClientMessage(playerid,CGRAY,"Ошибка: У игрока выключен телефон");
		if(pData[id][pJail]) return SendClientMessage(playerid, CGRAY, "Ошибка: Игрок в тюрьме.");
		new mes[128];
		format(mes,sizeof(mes),"%s. Получатель: %s",tmp,pData[id][pNickname]);
		SendClientMessage(playerid,CYELLOW,mes);
		format(mes,sizeof(mes),"SMS от %s [%d]: %s",pData[playerid][pNickname],playerid,tmp);
		SendClientMessage(id,CYELLOW,mes);
		PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
		PlayerPlaySound(id,1054,0.0,0.0,0.0);
	}
	if (!strcmp(cmd,"/togphone",true))
	{
		if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CGRAY,"Ошибка: У Вас нет телефона. Вы можете купить его в 24/7");
		if(!pTemp[playerid][pTPhone])
		{
			pTemp[playerid][pTPhone] = true;
			SendClientMessage(playerid,CGREEN,"Телефон включен");
		}
		else
		{
			pTemp[playerid][pTPhone] = false;
			SendClientMessage(playerid,CGREEN,"Телефон выключен");
		}
	}
	if(!strcmp(cmd,"/lmenu",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fractionid = pData[playerid][pFraction]-1;
		if(pData[playerid][pRank] != gFractionRankCount[fractionid]) return SendClientMessage(playerid,CGRAY,"Меню лидера доступно только лидеру");
		if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7)
		{
			ShowPlayerDialog(playerid,dGangLeader,2,"Меню лидера","1. Онлайн банды\n2. Изменить название рангов\n3. Расширить общаг\n4. Назначить полномочия\n5. Установить код сейфа","OK","Отмена");
		}
	}
	if(!strcmp(cmd,"/makegun",true))
	{
		if((pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7) || (pData[playerid][pFraction] >= 15 && pData[playerid][pFraction] <= 17))
		{
			if(!pData[playerid][pAmmo]) return SendClientMessage(playerid,CGRAY,"У вас нет патронов");
			ShowMakeGunList(playerid);
		}
		else SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандитам");
	}
	if(!strcmp(cmd,"/takegun",true))
	{
		if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только бандам");
		new gangid = pData[playerid][pFraction] - 3;
		if(pData[playerid][pRank] < gGangAccess[gangid][0]) return SendClientMessage(playerid,CGRAY,"Ваш ранг недостаточен");
		if(!IsPlayerInDynamicArea(playerid,gAreas[arDorm]) || GetPlayerVirtualWorld(playerid) != gangid) return SendClientMessage(playerid,CGRAY,"Вы должны быть в комнате с общаком");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/takegun [ед. оружия] [патроны]");
		new gunamount = strval(tmp);
		if(gunamount < 0 || gunamount > 500) return SendClientMessage(playerid,CGRAY,"Вы можете взять от 0 до 500 ед. оружия");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/takegun [ед. оружия] [патроны]");
		new ammo = strval(tmp);
		if(ammo < 0 || ammo > 500) return SendClientMessage(playerid,CGRAY,"Вы можете взять от 0 до 500 патронов");
		if(gGangDorm[gangid][0] < gunamount) return SendClientMessage(playerid,CGRAY,"В общаке не достаточно ед. оружия");
		if(gGangDorm[gangid][1] < ammo) return SendClientMessage(playerid,CGRAY,"В общаке не достаточно патронов");
		if((pData[playerid][pGunAmount] + gunamount > 500 && gunamount > 0) || (pData[playerid][pAmmo] + ammo > 500 && ammo > 0)) return SendClientMessage(playerid,CGRAY,"Вы можете носить с собой не больше 500 ед. оружия и 500 патронов");
		gGangDorm[gangid][0] -= gunamount;
		gGangDorm[gangid][1] -= ammo;
		pData[playerid][pGunAmount] += gunamount;
		pData[playerid][pAmmo] += ammo;
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i) || pData[i][pFraction] != pData[playerid][pFraction]) continue;
			new mes[128];
			format(mes,sizeof(mes),"%s {"#cGREEN"}взял с общака {"#cWHITE"}%d {"#cGREEN"}ед оружия, {"#cWHITE"}%d {"#cGREEN"}патронов",pData[playerid][pNickname],gunamount,ammo);
			SendClientMessage(i,CWHITE,mes);
		}
		MeAction(playerid,"взял материалы из общака");
		new query[128];
		format(query,sizeof(query),"UPDATE `gangs` SET `gunamount` = '%d', `ammo` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][0],gGangDorm[gangid][1],gangid+1);
		mysql_query(query);
		format(query,sizeof(query),"UPDATE `accounts` SET `gunamount` = '%d', `ammo` = '%d' WHERE `id` = '%d'",pData[playerid][pGunAmount],pData[playerid][pAmmo],pData[playerid][pMysqlID]);
		mysql_query(query);
	}
	if(!strcmp(cmd,"/gob",true))
	{
		if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только бандам");
		ShowPlayerDialog(playerid,dGobGun,1,"Общак","{"#cWHITE"}Укажите сколько хотите взять ед. оружия:","OK","Отмена");
	}
	if(!strcmp(cmd,"/mob",true))
	{
		if(pData[playerid][pFraction] < 15 || pData[playerid][pFraction] > 17) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только мафиям");
		ShowPlayerDialog(playerid,dMobGun,1,"Общак","{"#cWHITE"}Укажите сколько хотите взять ед. оружия:","OK","Отмена");
	}
	if(!strcmp(cmd,"/givegun",true))
	{
		if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандам");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/givegun [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || playerid == id) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new weaponid = GetPlayerWeapon(playerid);
		new ammo = GetPlayerAmmo(playerid);
		if(!weaponid) return SendClientMessage(playerid,CGRAY,"Возьмите в руку то оружие, которое хотите передать");
		SetPlayerAmmoEx(playerid,weaponid,0);
		SetPlayerArmedWeapon(playerid,0);
		GivePlayerWeaponEx(id,weaponid,ammo);
		new mes[128];
		format(mes,sizeof(mes),"передал оружие %s",pData[id][pNickname]);
		MeAction(playerid,mes);
	}
	if(strcmp(cmd, "/buydrugs", true) == 0)
	{
		if (!IsAGang(playerid)) return SendErr(playerid,"не доступно");
		if(!IsPlayerInDynamicArea(playerid,gAreas[arDrugsM])) return SendErr(playerid,"вы не у места покупки");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))  return SendErr(playerid,"{FFFFFF}/buydrugs [количество]");
		new ammo;
		ammo = strval(tmp);
		if(GetPlayerMoneyEx(playerid) < ammo*15)  return SendErr(playerid,"не хватает денег.");
		if(pData[playerid][pDrugs]+ammo > 1000) return SendErr(playerid,"нельзя купить больше 250 грамм");
		if(ammo > 250 || ammo < 1) return SendErr(playerid, "{FFFFFF}Допустимые значения: 1 - 250");
		pData[playerid][pDrugs] += ammo;
		TransferMoney(playerid,-1,ammo*15,"selldrugs");
		SendMes(playerid, CINFO, "Вы купили %i грамм наркотиков за $%i", ammo,ammo*15);
		ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
		return true;
	}
	if(strcmp(cmd, "/usedrugs", true) == 0)
	{
 		//if(!pData[playerid][pDrugs]) return SendErr(playerid, "У Вас нет наркотиков");
   		if(pTemp[playerid][AntiCrack]>=1) return SendErr(playerid, "Вы должны подождать перед следующим приемом наркотиков.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))  return SendErr(playerid,"{FFFFFF}/usedrugs [количество]");
		new ddrugs = strval(tmp),Float:health;
		if(pData[playerid][pDrugs] < ddrugs)  return SendErr(playerid,"У вас нет столько наркотиков");
		if(ddrugs > 5 || ddrugs < 1) return SendErr(playerid,"Допустимые значения: 1 - 5");
		SendMes(playerid,-1,"HEALTH: %f DRUGS: %d DDRUGS: %d",pData[playerid][pHealth],pData[playerid][pDrugs],ddrugs);
        pTemp[playerid][AntiCrack] +=2;
        pTemp[playerid][PlayerStoned] += 1;
        GetPlayerHealth(playerid,health);
		if(pTemp[playerid][PlayerStoned] >= 2) GameTextForPlayer(playerid, "~w~‹‘~n~~p~Њ’•м‘", 4000, 1);
		switch(ddrugs)
		{
		    case 1: SetPlayerHealthEx(playerid, health+3.0),pData[playerid][pDrugs]-=1;
		    case 2: SetPlayerHealthEx(playerid, health+5.0),pData[playerid][pDrugs]-=2;
		    case 3:	SetPlayerHealthEx(playerid, health+10.0),pData[playerid][pDrugs]-=3;
		    case 4: SetPlayerHealthEx(playerid, health+13.0),pData[playerid][pDrugs]-=4;
		    case 5: SetPlayerHealthEx(playerid, health+15.0),pData[playerid][pDrugs]-=5;
		}
        if(pData[playerid][pHealth] > 120) SetPlayerHealthEx(playerid, 100.0);
        SendMes(playerid,-1,"HEALTH: %f DRUGS: %d DDRUGS: %d",pData[playerid][pHealth],pData[playerid][pDrugs],ddrugs);
		//else SetPlayerHealthEx(playerid,pData[playerid][pHealth]+20.0);
        MeAction(playerid,"употребил наркотики");
        SetPlayerWeather(playerid, -68);
		UpdatePlayerData(playerid, "drugs", pData[playerid][pDrugs]);
		KillTimer(Timer_Drugs[playerid]);
		Timer_Drugs[playerid] =  SetTimerEx("DrugsEffect_OFF" , 120000, false, "i", playerid);//
		return 1;
	}
	if(!strcmp(cmd,"/selldrugs",true))
	{
  		if(!IsAGang(playerid)) return SendErr(playerid, "Эта команда доступна только мафиям");
		tmp = strtok(cmdtext, idx);
        if(!strlen(tmp) || !isNumeric(tmp)) return SendInf(playerid, "/selldrugs [ID игрока][К-во наркотиков][Цена]");
        new id = strval(tmp);
        if(!IsPlayerConnected(id) || id == playerid) return SendErr(playerid, "Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendErr(playerid,"Вы далеко друг от друга");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp) || !isNumeric(tmp)) return SendErr(playerid, "/selldrugs [ID игрока][К-во наркотиков][Цена]");
        new needdrugs = strval(tmp);
        if(needdrugs > 2000 || needdrugs < 1) return SendErr(playerid, "Неверное количество наркотиков (1-2000)");
		if(needdrugs > pData[playerid][pDrugs]) return SendErr(playerid, "У Вас нет столько наркотиков");
		tmp = strtok(cmdtext, idx);
        if(!strlen(tmp) || !isNumeric(tmp)) return SendErr(playerid, "/selldrugs [ID игрока][К-во наркотиков][Цена]");
        new price = strval(tmp);
		if(price > 50000 || price < 1) return SendErr(playerid,"Цена должна быть от 1 до 50 тыс.$");
        SetPVarInt(playerid,"drugoffee",id);
		SetPVarInt(id,"drugoffee",id);
		SetPVarInt(id,"drugoffer",playerid);
		SetPVarInt(id,"drugprice",price);
		SetPVarInt(id,"drugvalue",needdrugs);
		new zStr[150];
		format(zStr, 150, "Вы предложили {"#cWHITE"}%s{"#cINFO"} купить у вас {"#cWHITE"}%d грамм наркотиков{"#cINFO"} за {"#cWHITE"}$%d",pData[id][pNickname],needdrugs,price);
		SendClientMessage(playerid, CINFO, zStr);
		format(zStr, 150, "{"#cWHITE"}%s {"#cINFO"}предложил Вам купить {"#cWHITE"}%d грамм наркотиков{"#cINFO"} за {"#cWHITE"}$%d",pData[playerid][pNickname],needdrugs,price);
        SendClientMessage(id, CINFO, zStr);
        SendClientMessage(id,CINFO,"Чтобы согласиться нажмите {"#cGREEN"}Y, {"#cINFO"}иначе - {"#cRED"}N");
		return 1;
	}
	if(!strcmp(cmd,"/sellgun",true))
	{
		if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандам");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/sellgun [ID игрока] [К-во патронов] [Цена]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[id][pLevel] < 2) return SendClientMessage(playerid,CGRAY,"У игрока уровень меньше 2-ого");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/sellgun [ID игрока] [К-во патронов] [Цена]");
		new needammo = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/sellgun [ID игрока] [К-во патронов] [Цена]");
		new price = strval(tmp);
		if(price > 300000 || price < 1) return SendClientMessage(playerid,CGRAY,"Цена должна быть от 1 до 300 тыс.");
		if(needammo > 300000 || needammo < 1) return SendClientMessage(playerid,CGRAY,"Неверное к-во патронов");
		new weaponid = GetPlayerWeapon(playerid);
		new ammo = GetPlayerAmmo(playerid);
		if(!weaponid) return SendClientMessage(playerid,CGRAY,"Возьмите в руку то оружие, которое хотите продать");
		if(ammo < needammo) return SendClientMessage(playerid,CGRAY,"У вас недостаточно патронов");
		SetPVarInt(playerid,"gunoffee",id);
		SetPVarInt(id,"gunoffee",id);
		SetPVarInt(id,"gunoffer",playerid);
		SetPVarInt(id,"gunprice",price);
		SetPVarInt(id,"gunammo",needammo);
		SetPVarInt(id,"gunid",weaponid);
		new weapname[24];
		GetWeaponName(weaponid,weapname,24);
		SFCM(playerid,CINFO,"Вы предложили {"#cWHITE"}%s{"#cINFO"} купить у вас {"#cWHITE"}%s{"#cINFO"} за {"#cWHITE"}$%d. {"#cINFO"}Патронов: {"#cWHITE"}%d",pData[id][pNickname],weapname,price,needammo);
		SFCM(id,CINFO,"%s{"#cINFO"} предложил вам купить {"#cWHITE"}%s{"#cINFO"} за {"#cWHITE"}$%d. {"#cINFO"}Патронов: {"#cWHITE"}%d",pData[playerid][pNickname],weapname,price,needammo);
		SendClientMessage(id,CINFO,"Чтобы согласиться нажмите {"#cGREEN"}Y, {"#cINFO"}иначе - {"#cRED"}N");

	}
	if(!strcmp(cmd,"/bangam",true))
	{
		if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандам");
		if(pTemp[playerid][pBangam])
		{
			SetPlayerColor(playerid,0xFFFFFF11);
			pTemp[playerid][pBangam] = false;
			MeAction(playerid,"снял бандану");
		}
		else
		{
			SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction] - 1]);
			pTemp[playerid][pBangam] = true;
			MeAction(playerid,"одел бандану");
		}
	}
	if(!strcmp(cmd,"/st",true) || !strcmp(cmd,"/start",true))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			pTemp[playerid][pOff]++;
			new vehicleid = GetPlayerVehicleID(playerid);
			if(ToggleEngine(vehicleid) == -1) SendClientMessage(playerid,CGRAY,"Двигатель не заводится. Вызовите механика {"#cWHITE"}(( /call (/c) ))");
		}
	}
	if(!strcmp(cmd,"/givekey",true))
	{
		if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7 && pData[playerid][pRank] == 10)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/givekey [ID игрока]");
			new id = strval(tmp);
			if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
			if(!pTemp[id][pGangKey]) pTemp[id][pGangKey] = true;
			else pTemp[id][pGangKey] = false;
		}
		else return 1;
	}
	if(!strcmp(cmd,"/grespawn",true))
	{
		if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7 && pData[playerid][pRank] == 10)
		{
			if(gGangRespawnCar) return SendClientMessage(playerid,CGRAY,"Попоробуйте через 10 секунд");
			gGangRespawnCar = 5;
			new gangid = pData[playerid][pFraction]-3;
			for(new i=0;i<5;i++)
			{
				DestroyVehicle(aGang[gangid][i]);
				new vid;
				vid = CreateVehicle(gGangCars[gangid][i],gGangCarSlot[gangid][i][0],gGangCarSlot[gangid][i][1],gGangCarSlot[gangid][i][2],gGangCarSlot[gangid][i][3],gGangCarColors[gangid],gGangCarColors[gangid],900);
				aGang[gangid][i] = vid;
				//if(!j) aGang[gangid][i] = vid;
				//last = vid;
				gVehicles[vid - 1][vX] = gGangCarSlot[gangid][i][0];
				gVehicles[vid - 1][vY] = gGangCarSlot[gangid][i][1];
				gVehicles[vid - 1][vZ] = gGangCarSlot[gangid][i][2];
				gVehicles[vid - 1][vFuel] = gTransport[gGangCars[gangid][i]-400][trTank];
				gVehicles[vid - 1][vHealth] = 1000.0;
				gVehicles[vid - 1][vOwnerid] = INVALID_PLAYER_ID;
				gVehicles[vid - 1][vLock] = 0;
				gVehicles[vid - 1][vID] = vid;
			}
			SendClientMessage(playerid,CGREEN,"Авто банды было зареспавнено");
		}
	}
	if(!strcmp(cmd,"/gsellcar",true))
	{
		if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7 && pData[playerid][pRank] == 10)
		{
			new gangid = pData[playerid][pFraction]-3;
			new mes[512];
			for(new i;i<5;i++)
			{
				if(!gGangCars[gangid][i] || gGangCars[gangid][i] == 481)
				{
					format(mes,sizeof(mes),"%s%d Пусто\n",mes,i+1);
				}
				else
				{
					new modelid = gGangCars[gangid][i] - 400;
					format(mes,sizeof(mes),"%s%d %s [{"#cGREEN"}$%d{"#cWHITE"}]\n",mes,i+1,gTransport[modelid][trName],floatround(gTransport[modelid][trPrice]*0.2));
				}
			}
			ShowPlayerDialog(playerid,dSellGangCar,2,"Продать авто для банды",mes,"Продать","Отмена");
		}
	}
	if(!strcmp(cmd,"/subleaders",true))
	{
	    if(pData[playerid][pFraction] != 11) return SendClientMessage(playerid,CGRAY,"Не доступно.");
   		ShowPlayerDialog(playerid,dSubleaders,2,"Выберите фракцию","Минздрав\nDOD\nDOI","Назначить","Отмена");
	}
	if(!strcmp(cmd,"/subleader",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fractionid = pData[playerid][pFraction] - 1;
		if(pData[playerid][pRank] < gFractionRankCount[fractionid]) return SendClientMessage(playerid,CGRAY,"Функция доступна только лидеру");
		new frid = GetSubfractionID(fractionid);
		if(frid == -1) return SendClientMessage(playerid,CGRAY,"В вашей фракции нет подфракций");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/subleader [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегестрирован");
		if(pData[id][pFraction] && pData[id][pFraction] != pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Игрок уже состоит в организации");
		SetPVarInt(playerid,"actsubleader",id);
		new mes[128];
		strcat(mes,"Выберите подфракцию:");
		for(new i;i<3;i++)
		{
			if(strlen(gSubfractionName[frid][i]))
			{
				strcat(mes,"\n");
				strcat(mes,gSubfractionName[frid][i]);
			}
		}
		ShowPlayerDialog(playerid,dSubleader,2,"Подфракция",mes,"Назначить","Отмена");
	}
	if(!strcmp(cmd,"/unsubleader",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fractionid = pData[playerid][pFraction] - 1;
		if(pData[playerid][pRank] < gFractionRankCount[fractionid]) return SendClientMessage(playerid,CGRAY,"Функция доступна только лидеру");
		new frid = GetSubfractionID(fractionid);
		if(frid == -1) return SendClientMessage(playerid,CGRAY,"В вашей фракции нет подфракций");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/subleader [ID игрока] [причина]");
		new id = strval(tmp);
		tmp = strrest(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/subleader [ID игрока] [причина]");
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегестрирован");
		if(pData[id][pFraction] != pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Игрок не состоит в организации");
		new query[128];
		format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[id][pMysqlID]);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
		pData[id][pFraction] = 0;
		pData[id][pRank] = 0;
		pData[id][pFractionSkin] = 0;
		pData[id][pSubfraction] = 0;
		SetPlayerColor(id,0xFFFFFF11);
	 	SetPlayerSkin(id,pData[id][pSkin]);
		new mes[128];
		format(mes,sizeof(mes),"Вы были уволены из организации лидером %s",pData[playerid][pNickname]);
		SendClientMessage(id,CBADINFO,mes);
		format(mes,sizeof(mes),"%s был уволен из организации",pData[id][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
	}
	if(!strcmp(cmd,"/gov",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы не состоите во фракции");
		new fraction = pData[playerid][pFraction];
		new fractionid = fraction - 1;
		if(fraction != 2 && (fraction < 8 || fraction >= 15)) return SendClientMessage(playerid,CGRAY,"Вам не доступна эта функция");
		if(!IsAbleToUninvite(playerid)) return SendClientMessage(playerid,CGRAY,"Вам не доступна эта функция");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/gov [сообщение]");
		new mes[256];
		new subid = pData[playerid][pSubfraction]-1;
		new frid = GetSubfractionID(fractionid);
		new rankid = pData[playerid][pRank]-1;
		if(subid < 0) format(mes,sizeof(mes),"%s %s %s: %s",gFractionRankName[fractionid][rankid],gFractionName[fractionid],pData[playerid][pNickname],tmp);
		else format(mes,sizeof(mes),"%s %s %s: %s",gFractionRankName[fractionid][rankid],gSubfractionName[frid][subid],pData[playerid][pNickname],tmp);
		SendClientMessageToAll(CWHITE,"============[{"#cINFO"}Гос. новости{"#cWHITE"}]==============");
		SendClientMessageToAll(CINFO,mes);
		SendClientMessageToAll(CWHITE,"=====================================");
	}
	if(!strcmp(cmd,"/d",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"Ошибка: У Вас бан чата");
		new fraction = pData[playerid][pFraction];
		if(fraction != 2 && (fraction < 8 || fraction == 10)) return SendClientMessage(playerid,CGRAY,"Ошибка: Вам не доступна эта функция");
		if(pData[playerid][pJail]) return SendClientMessage(playerid, CGRAY, "Ошибка: Вы в тюрьме.");
		new fractionid = fraction - 1;
		new frid = GetSubfractionID(fractionid);
		new subfraction = pData[playerid][pSubfraction]-1;
		new rankid = pData[playerid][pRank] - 1;
		tmp = strrest(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/d [сообщение]");
		new mes[128];
		if(subfraction < 0) format(mes,sizeof(mes),"[D] %s %s %s: %s",gFractionRankName[fractionid][rankid],gFractionName[fractionid],pData[playerid][pNickname],tmp);
		else format(mes,sizeof(mes),"[D] %s %s %s: %s",gFractionRankName[fractionid][rankid],gSubfractionName[frid][subfraction],pData[playerid][pNickname],tmp);
		DepartmentChat(CDEPARTMENT,mes);
	}
	/*if(!strcmp(cmd,"/barrier",true))
	{
		if(pData[playerid][pFraction] != 8) return 1;
		else if(IsPlayerInDynamicArea(playerid,gAreas[arBarrier][0])) {MoveDynamicObject(gBarrier[0],346.70, 1799.90, 18.15,0.01,0.00, 0.00, 34.00); SetTimerEx("CloseBarrier",10000,false,"i",0);}
		else if(IsPlayerInDynamicArea(playerid,gAreas[arBarrier][1])) {MoveDynamicObject(gBarrier[1],141.80, 1965.30, 19.45,0.01,0.00, 0.00, 0.00); SetTimerEx("CloseBarrier",10000,false,"i",1);}
		else if(IsPlayerInDynamicArea(playerid,gAreas[arBarrier][2])) {MoveDynamicObject(gBarrier[2],470.20, 2538.16, 19.35,0.01,0.00, 0.00, 9.30); SetTimerEx("CloseBarrier",10000,false,"i",2);}
		else SendClientMessage(playerid,CGRAY,"Вы должны быть возле шлакбаума");
	}*/
	if(!strcmp(cmd,"/loadgun",true))
	{
		if(pData[playerid][pFraction] != 8 && !IsGang(pData[playerid][pFraction]) && pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Вам недоступна эта функция");
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if((pData[playerid][pFraction] == 8 && GetVehicleModel(vehicleid) != 433) || ((IsGang(pData[playerid][pFraction]) || pData[playerid][pFraction] == 9) && GetVehicleModel(vehicleid) != 482)) return SendClientMessage(playerid,CGRAY,"Вы должны быть за рулем т.с. для перевозки оружия");
			if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendClientMessage(playerid,CGRAY,"Авто уже стоит на загрузке / разгрузке");
			gVehicleGun[vehicleid][vGunVid] = vehicleid;
			gVehicleGun[vehicleid][vGunLoading] = true;
			RemovePlayerFromVehicle(playerid);
			new Float:x, Float:y, Float:z, Float:a;
			GetVehiclePos(vehicleid,x,y,z);
			GetVehicleZAngle(vehicleid,a);
			x = x - (-6.0*floatsin(a,degrees));
			y = y - 6.0*floatcos(a,degrees);
			gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133,1,x,y,z-0.5);
			new mes[128];
			format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gVehicleGun[vehicleid][vGunGunAmount],gVehicleGun[vehicleid][vGunAmmo]);
			gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(mes,CWHITE,x,y,z+0.5,20.0);
			gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x,y,z,1.0);
			SendClientMessage(playerid,CGREEN,"Загрузка началась");
		}
	}
	if(!strcmp(cmd,"/unloadgun",true))
	{
		if(pData[playerid][pFraction] != 8 && !IsGang(pData[playerid][pFraction]) && pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Вам недоступна эта функция");
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if((pData[playerid][pFraction] == 8 && GetVehicleModel(vehicleid) != 433) || ((IsGang(pData[playerid][pFraction]) || pData[playerid][pFraction] == 9) && GetVehicleModel(vehicleid) != 482)) return SendClientMessage(playerid,CGRAY,"Вы должны быть за рулем т.с. для перевозки оружия");
			if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendClientMessage(playerid,CGRAY,"Авто уже стоит на загрузке / разгрузке");
			gVehicleGun[vehicleid][vGunVid] = vehicleid;
			gVehicleGun[vehicleid][vGunUnloading] = true;
			RemovePlayerFromVehicle(playerid);
			new Float:x, Float:y, Float:z, Float:a;
			GetVehiclePos(vehicleid,x,y,z);
			GetVehicleZAngle(vehicleid,a);
			x = x - (-6.0*floatsin(a,degrees));
			y = y - 6.0*floatcos(a,degrees);
			gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133,1,x,y,z-0.5);
			new mes[128];
			format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gVehicleGun[vehicleid][vGunGunAmount],gVehicleGun[vehicleid][vGunAmmo]);
			gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(mes,CWHITE,x,y,z+0.5,20.0);
			gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x,y,z,1.0);
			SendClientMessage(playerid,CGREEN,"Разгрузка началась");
		}
	}
	if(!strcmp(cmd,"/detonator",true))
	{
		if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандитам");
		if(pData[playerid][pGunAmount] < 300) return SendClientMessage(playerid,CGRAY,"Вам нужно 300 ед. оружия, чтобы сделать детонатор");
		if(pData[playerid][pRank] <= 5) return SendClientMessage(playerid,CGRAY,"Детонатор доступен с 5 ранга");
		pData[playerid][pGunAmount] -= 300;
		UpdatePlayerData(playerid,"gunamount",pData[playerid][pGunAmount]);
		pTemp[playerid][pDetonator] = true;
		MeAction(playerid,"собрал детонатор");
	}
	if(!strcmp(cmd,"/detonate",true))
	{
		if(!pTemp[playerid][pDetonator]) return SendClientMessage(playerid,CGRAY,"У вас нет детонатора");
		if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандитам");
		pTemp[playerid][pDetonator] = false;
		new Float:x, Float:y, Float:z, Float:x2, Float:y2,Float:a;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,a);
		x2 = x + (-2.0*floatsin(a,degrees));
		y2 = y + 2.0*floatcos(a,degrees);
		ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
		SendClientMessage(playerid,CRED,"Ты установил детонатор. Теперь беги, у тебя 10 секунд!!!");
		SetTimerEx("OnDetonate",10000,false,"ffffff",x,y,z,x2,y2,z);
	}
	if(!strcmp(cmd,"/tow",true))
	{
		if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CGRAY,"Вы не работаете механиком");
		if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CGRAY,"Вы должны быть в буксире");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/tow [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID] || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегистрирован");
		if(GetPlayerState(id) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CGRAY,"Игрок должен быть за рулем т.с.");
		if(GetPlayerDistanceToPlayer(playerid,id) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		SetPVarInt(playerid,"towoffer",playerid);
		SetPVarInt(playerid,"towoffee",id);
		SetPVarInt(id,"towoffer",playerid);
		SetPVarInt(id,"towoffee",id);
		new towcode = RandomEx(10000,99999);
		SetPVarInt(id,"towcode",towcode);
		SFCM(playerid,CINFO,"Вы предложили {"#cWHITE"}%s {"#cINFO"}отбуксировать его т.с.",pData[id][pNickname]);
		SPFD(id,dTow,1,"Буксир","ОК","Отмена","{"#cWHITE"}%s предлагает отбуксировать ваше т.с.\nЕсли вы согласны введите \"{"#cLIGHTGREEN"}%d{"#cWHITE"}\" (без кавычек) и нажмите ОК",pData[playerid][pNickname],towcode);
	}
	if(!strcmp(cmd,"/untow",true))
	{
		if(GetPVarInt(playerid,"towvid"))
		{
			new vehicleid = GetPVarInt(playerid,"towvid");
			new trailer = GetPVarInt(playerid,"towactvid");
			SetPVarInt(playerid,"towvid",0);
			SetPVarInt(playerid,"towactvid",0);
			if(GetVehicleTrailer(vehicleid) == trailer)
			{
				DetachTrailerFromVehicle(vehicleid);
				SendClientMessage(playerid,CGRAY,"Ваша машины была отцеплена от авто механика");
				return 1;
			}
		}
		if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CGRAY,"Вы не работаете механиком");
		if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CGRAY,"Вы должны быть в буксире");
		new vehicleid = GetPlayerVehicleID(playerid);
		new trailer = GetVehicleTrailer(vehicleid);
		if(!trailer) return SendClientMessage(playerid,CGRAY,"Вы не буксируете авто");
		DetachTrailerFromVehicle(vehicleid);
		SendClientMessage(playerid,CGRAY,"Вы отсоединили авто");
	}
	if(!strcmp(cmd,"/unfill",true))
	{
		if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CGRAY,"Вы не работаете механиком");
		if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CGRAY,"Вы должны быть в буксире");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/tow [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID] || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегистрирован");
		if(GetPlayerState(id) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CGRAY,"Игрок должен быть за рулем т.с.");
		if(GetPlayerDistanceToPlayer(playerid,id) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		SetPVarInt(playerid,"towoffer",playerid);
		SetPVarInt(playerid,"towoffee",id);
		SetPVarInt(id,"towoffer",playerid);
		SetPVarInt(id,"towoffee",id);
		new towcode = RandomEx(10000,99999);
		SetPVarInt(id,"towcode",towcode);
		SFCM(playerid,CINFO,"Вы предложили {"#cWHITE"}%s {"#cINFO"}слить все топливо с его т.с.",pData[id][pNickname]);
		SPFD(id,dUnfill,1,"Механик","ОК","Отмена","{"#cWHITE"}%s предлагает слить все топливо с вашего т.с.\nЕсли вы согласны введите \"{"#cLIGHTGREEN"}%d{"#cWHITE"}\" (без кавычек) и нажмите ОК",pData[playerid][pNickname],towcode);
	}
	if(!strcmp(cmd,"/repair",true))
	{
		if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CGRAY,"Вы не работаете механиком");
		if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CGRAY,"Вы должны быть в буксире");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/repair [ID игрока] [Сумма]");
		new id = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/repair [ID игрока] [Сумма]");
		new price = strval(tmp);
		if(price < 100 || price > 3000) return SendClientMessage(playerid,CGRAY,"Цена не должна быть ниже 100 и выше 3000");
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID] || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегистрирован");
		if(GetPlayerState(id) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CGRAY,"Игрок должен быть за рулем т.с.");
		if(GetPlayerDistanceToPlayer(playerid,id) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		SetPVarInt(playerid,"repairoffee",id);
		SetPVarInt(id,"repairoffer",playerid);
		SetPVarInt(id,"repairoffee",id);
		SetPVarInt(id,"repairprice",price);
		SFCM(id,CBLUE,"%s предложил отремонтировать ваше т.с. за $%d. ({"#cGREEN"}Y - согласиться, {"#cRED"}N - отказаться{"#cBLUE"})",pData[playerid][pNickname],price);
		SFCM(playerid,CBLUE,"Вы предложили %s отремонтировать его т.с. за $%d",pData[id][pNickname],price);
	}
	if(!strcmp(cmd,"/su",true) || !strcmp(cmd,"/suspect",true))
	{
		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только членам DOI");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/su [ID игрока] [Уровень розыска] [Причина]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/su [ID игрока] [Уровень розыска] [Причина]");
		new level = strval(tmp);
		if(level < 1 || level > 6) return SendClientMessage(playerid,CGRAY,"Неверно указан уровень розыска");
		tmp = strrest(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/su [ID игрока] [Уровень розыска] [Причина]");
		if(pData[id][pJail]) return SendClientMessage(playerid,CGRAY,"Игрок уже находится в КПЗ");
		if(level > 3 && pData[playerid][pRank] < 7) return SendClientMessage(playerid,CGRAY,"Ваш ранг не позволяет Вам давать больше 3-го уровня розыска");
		new levelt = level * WANTED_TIME;
		if(pData[id][pWanted] >= levelt) return SendClientMessage(playerid,CGRAY,"У игрока уже имеется указанный уровень розыска");
		if(pData[id][pFraction] == 9 ) return SendClientMessage(playerid,CGRAY,"Член DOI и FBI не может быть объявлен в розыск");
		pData[id][pWanted] = levelt;
		UpdatePlayerData(id,"wanted",pData[id][pWanted]);
		SetPlayerWantedLevel(id,level);
		AddPlayerInWantedList(id);
		new mes[256];
		format(mes,sizeof(mes),"%s объявил вас в розыск. Причина: %s. Уровень: %d",pData[playerid][pNickname],tmp,level);
		SendClientMessage(id,CBADINFO,mes);
		format(mes,sizeof(mes),"[D] %s объявлен в розыск [{"#cWHITE"}%d{"#cDEPARTMENT"}]. Обвинитель: %s. Причина: %s.",pData[id][pNickname],level,pData[playerid][pNickname],tmp);
		DepartmentChat(CDEPARTMENT,mes,0,0,1,1,0);
		return 1;
	}
	if(!strcmp(cmd,"/tazer",true))
    {
		if(pData[playerid][pFraction] == 9 || (pData[playerid][pFraction] == 11 && pData[playerid][pRank] == 2) || (pData[playerid][pFraction] == 12 && pData[playerid][pRank] == 2) || (pData[playerid][pFraction] == 13 && pData[playerid][pRank] == 2) || (pData[playerid][pFraction] == 14 && pData[playerid][pRank] == 2))
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, CGRAY, "Невозможно использовать в машине!");
			new Float:distance;
			new id = GetClosestPlayer(playerid,distance);
			if(distance < 3 && id >= 0)
			{
				if(pData[id][pFraction] >= 8 && pData[id][pFraction] <= 11) return   SendClientMessage(playerid, CGRAY, "Вы не можете ударить тазером законника");
				if(IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid, CGRAY, "Человек в машине!");
				if(pTemp[id][pTazer] || pTemp[id][pCuffee] == id) return SendClientMessage(playerid,CGRAY,"Игрок уже оглушен / в наручниках");
				new mes[128];
				if(pData[playerid][pSex] == 1) format(mes,sizeof(mes),"оглушил %s",pData[id][pNickname]);
				else format(mes,sizeof(mes),"оглушила %s",pData[id][pNickname]);
				MeAction(playerid,mes);
				TogglePlayerControllable(id, 0);
				SetPlayerSpecialAction(id,SPECIAL_ACTION_HANDSUP);
				pTemp[id][pTazer] = 15;
			}
			else
			{
				SendClientMessage(playerid, CGRAY, "Рядом с вами никого нет");
				return 1;
			}
		}
        return 1;
    }
	if(!strcmp(cmd,"/cuff",true))
    {
		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам DOI");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/cuff [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[id][pFraction] == 9) return SendClientMessage(playerid,CGRAY,"Нельзя одеть наручники на законника");
		if(pTemp[id][pCuffee] == id) return SendClientMessage(playerid,CGRAY,"Игрок уже в наручниках");
		if(pTemp[playerid][pCuffer] == playerid) return SendClientMessage(playerid,CGRAY,"У Вас с собой только одни наручники");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		if(pTemp[id][pTazer])
		{
			pTemp[id][pTazer] = 0;
			TogglePlayerControllable(id,1);
			SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
		}
		SetPlayerSpecialAction(id, SPECIAL_ACTION_CUFFED);
        SetPlayerAttachedObject(id, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		pTemp[id][pCuffee] = id;
		pTemp[id][pCuffer] = playerid;
		pTemp[playerid][pCuffer] = playerid;
		pTemp[playerid][pCuffee] = id;
		MeAction(playerid,"одел наручники на преступника");
	}
	if(!strcmp(cmd,"/uncuff",true))
    {
		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам МВД");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/uncuff [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		if(pTemp[id][pCuffer] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Игрок не в наручниках");
		if(pTemp[playerid][pCuffee] != id) return SendClientMessage(playerid,CGRAY,"У вас нет ключа от этих наручников");
		SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id,0);
		pTemp[id][pCuffer] = INVALID_PLAYER_ID;
		pTemp[id][pCuffee] = INVALID_PLAYER_ID;
		pTemp[playerid][pCuffee] = INVALID_PLAYER_ID;
		pTemp[playerid][pCuffer] = INVALID_PLAYER_ID;
		TogglePlayerControllable(id,1);
		MeAction(playerid,"снял наручники с преступника");
	}
	if(!strcmp(cmd,"/arrest",true))
    {
		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам МВД");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/arrest [ID игрока] [Уровень розыска]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,id) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		if(!pData[id][pWanted]) return SendClientMessage(playerid,CGRAY,"Этот игрок не совершал преступление");
		if(pData[id][pJail]) return SendClientMessage(playerid,CGRAY,"Этот игрок уже находится в КПЗ");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/arrest [ID игрока] [Уровень розыска]");
		new level = strval(tmp);
		if(level < 1 || level > 3) return SendClientMessage(playerid,CGRAY,"Уровень розыска должен быть от 1 до 3");
		new time = level * JAIL_QUATE;
		new prison, camid = -1;
		if(!IsPlayerInDynamicArea(playerid,gAreas[arArrest])) return SendClientMessage(playerid,CGRAY,"Вы должны быть у камер предварительного заключения");
		prison = GetPlayerVirtualWorld(playerid) - 1;
		if(prison < 0 || prison > 2) return SendClientMessage(playerid,CGRAY,"Ошибка (#108)");
		for(new i;i<3;i++)
		{
			if(IsPlayerInDynamicArea(playerid,gPDCamArea[i])) camid = i;
		}
		if(pTemp[id][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pTemp[id][pCuffer];
			SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id,0);
			pTemp[id][pCuffer] = INVALID_PLAYER_ID;
			pTemp[id][pCuffee] = INVALID_PLAYER_ID;
			pTemp[cuffer][pCuffee] = INVALID_PLAYER_ID;
			pTemp[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		TogglePlayerControllable(id,0);
		SetTimerEx("Unfreez",2000,false,"i",id);
		if(camid == -1)
		{
		    if(pData[playerid][pSubfraction] == 1)
		    {
				SetPlayerPos(id,521.06701660156,-346.01501464844,1004.2789916992);
				SetPlayerFacingAngle(id,270.0);
				SetPlayerInterior(id,15);
				SetPlayerVirtualWorld(id,1);
		    }
            else if(pData[playerid][pSubfraction] == 2)
		    {
		        SetPlayerPos(id,521.06701660156,-346.01501464844,1004.2789916992);
				SetPlayerFacingAngle(id,270.0);
				SetPlayerInterior(id,15);
				SetPlayerVirtualWorld(id,2);
		    }
		    else if(pData[playerid][pSubfraction] == 3)
		    {
    			SetPlayerPos(id,521.06701660156,-346.01501464844,1004.2789916992);
				SetPlayerFacingAngle(id,270.0);
				SetPlayerInterior(id,15);
				SetPlayerVirtualWorld(id,3);
		    }
		}
		pData[id][pJail] = time;
		pData[id][pPrison] = prison;
		pData[id][pWanted] = 0;
		SetPlayerWantedLevel(id,0);
		RemovePlayerFromWantedList(id);
		ResetPlayerWeapons(id);
		new query[128];
		format(query,sizeof(query),"UPDATE `accounts` SET `jail` = '%d', prison = '%d', wanted = '0' WHERE `id` = '%d'",pData[id][pJail],pData[id][pPrison],pData[id][pMysqlID]);
		mysql_query(query);
		if(mysql_errno()) SendClientMessage(playerid,CRED,"Ошибка MySQL");
		new mes[128];
		format(mes,sizeof(mes),"Вы были помещены в КПЗ сотрудником ПД %s на %d сек.",pData[playerid][pNickname],time);
		SendClientMessage(id,CBADINFO,mes);
		format(mes,sizeof(mes),"Вы поместили %s в КПЗ на %d сек.",pData[id][pNickname],time);
		SendClientMessage(playerid,CINFO,mes);
	}
	if(!strcmp(cmd,"/push",true))
    {
		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам МВД");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/push [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(id,x,y,z);
		for(new i=1;i<=MAX_VEHICLES;i++)
		{
			if(!IsVehicleStreamedIn(i,playerid)) continue;
			new model = GetVehicleModel(i);
			if(model == 497 || model == 596 || model == 597 || model == 598 || model == 599 || model == 528 || model == 490 || model == 427)
			{
				new Float:vx, Float:vy, Float:vz;
				GetVehiclePos(i,vx,vy,vz);
				if(PointToPoint3D(x,y,z,vx,vy,vz) <= 8.0)
				{
					new seat = GetFreeSeat(i);
					if(seat == -1) continue;
					PutPlayerInVehicle(id,i,seat);
					MeAction(playerid,"посадил преступника в транспорт");
					if(pTemp[id][pCuffee] == id) TogglePlayerControllable(id,0);
					break;
				}
			}
		}
	}
	if(!strcmp(cmd,"/wanted",true))
    {
		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам МВД");
		SendClientMessage(playerid,CINFO,"Список разыскиваемых преступников:");
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
			if(!pData[i][pWanted]) continue;
			SendClientMessage(playerid,CSYSTEM,pData[i][pNickname]);
		}
	}
	if(!strcmp(cmd,"/m",true))
    {
		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам DOI");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGRAY,"Вы должны быть в служебном т/с");
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(model == 497 || model == 596 || model == 597 || model == 598 || model == 599 || model == 528 || model == 490 || model == 427){}
		else return SendClientMessage(playerid,CGRAY,"Вы должны быть в служебном т/с");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/m [текст]");
		new mes[128];
		format(mes,sizeof(mes)," Мегафон DOI: %s!",tmp);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i) || !pTemp[i][pLogined] || !pData[i][pMysqlID] || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
			new Float:rdist;
			rdist = GetPlayerDistanceToPlayer(playerid,i);
			if(rdist > 45.0) continue;
			SendClientMessage(i,CYELLOW,mes);
		}
	}
	if(!strcmp(cmd,"/bullpen",true))
    {
		if(!pData[playerid][pJail]) return SendClientMessage(playerid,CGRAY,"Вы не находитесь в КПЗ");
		new mes[128],jailname[12];
		switch(pData[playerid][pPrison])
		{
			case 0: jailname = "LSPD";
			case 1: jailname = "SFPD";
			case 2: jailname = "LVPD";
		}
		format(mes,sizeof(mes),"~g~%s~n~~w~REMAIN: ~g~%d ~w~SEC",jailname,pData[playerid][pJail]);
		GameTextForPlayer(playerid,mes,1,1);
	}
	if(!strcmp(cmd,"/play",true))
	{
 		ShowPlayerDialog(playerid, dRadio, DIALOG_STYLE_LIST, "{FF8C00}Онлайн радио:","1.Радио Шансон\n2.Радио Рекорд\n3.Sky Radio\n4.Зайцев FM\n{00CCFF}Выключить радио", "Выбрать", "Закрыть");
	}
	if(!strcmp(cmd,"/stop",true))
	{
		StopAudioStreamForPlayer(playerid);
		SendClientMessage(playerid,CGREEN,"Радио выключено");
	}
	if(!strcmp(cmd,"/dissolution",true))
	{
		if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CRED,"Эта функция доступна только членам фракции");
		new fractionid = pData[playerid][pFraction] - 1;
		new subfraction = GetSubfractionID(fractionid);
		if(subfraction != -1)
		{
			if(pData[playerid][pRank] < gFractionRankCount[fractionid] - 1) return SendClientMessage(playerid,CGRAY,"Это функция доступна только лидеру фракции / подфракции");
		}
		else if(pData[playerid][pRank] < gFractionRankCount[fractionid]) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только лидерам фракции");
		ShowPlayerDialog(playerid,dDissolution,0,"Расформирование фракции","{"#cWHITE"}Вы уверены, что хотите расформировать свою фракцию? \n{"#cRED"}ВНИМАНИЕ! {"#cWHITE"}Все игроки, состоящие в вашей организации будут уволены!","Да","Нет");
	}
	if(!strcmp(cmd,"/eject",true))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CWHITE,"Вы должны быть в т.с.");
		if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid,CGRAY,"Вы должны быть за рулем");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/eject [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		new vehicleid = GetPlayerVehicleID(playerid);
		if(vehicleid == GetPlayerVehicleID(id) && GetPlayerVehicleSeat(id) != 0)
		{
			SFCM(id,CGRAY,"%s вытолкнул вас из т.с.",pData[playerid][pNickname]);
			if(pTemp[id][pCuffee] == id) TogglePlayerControllable(id,1);
			RemovePlayerFromVehicle(id);
		}
	}
	if(!strcmp(cmd,"/limit",true))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CGRAY,"Вы должны быть за рулем");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			if(pTemp[playerid][pSLimit])
			{
				pTemp[playerid][pSLimit] = 0;
				SendClientMessage(playerid,CGREEN,"Ограничение скорости снято");
			}
			else SendClientMessage(playerid,CGRAY,"/limit [скорость]");
			return 1;
		}
		new limit = strval(tmp);
		if(limit < 10 || limit > 150) return SendClientMessage(playerid,CGRAY,"Ограничение должно быть от 10 до 150");
		pTemp[playerid][pSLimit] = limit;
		SendClientMessage(playerid,CGREEN,"Установлено ограничение скорости");
	}
	if(!strcmp(cmd,"/pc",true))
	{
		new fractionid = pData[playerid][pFraction] - 1;
		new subfraction = pData[playerid][pSubfraction];
		if(fractionid != 8 || !subfraction) return SendClientMessage(playerid,CGRAY,"Вам не доступна эта функция");
		new caller = gEmCall[0];
		if(caller == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Вызовов не поступало");
		gEmCall[0] = INVALID_PLAYER_ID;
		if(!IsPlayerConnected(caller) || !pData[caller][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Игрок вышел");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(caller,x,y,z);
		SetPlayerCheckpoint(playerid,x,y,z,4.0);
		pTemp[playerid][pGPS] = true;
		new mes[128];
		format(mes,sizeof(mes),"%s (%s) принял вызов",pData[playerid][pNickname],gSubfractionName[2][subfraction-1]);
		SendClientMessage(caller,CINFO,mes);
		DepartmentChat(CDEPARTMENT,mes,0,0,1,0,0);
		SendClientMessage(playerid,CINFO,"Метка установлена на радаре. Чтобы убрать введите {"#cWHITE"}/gps");
	}
	if(!strcmp(cmd,"/mc",true))
	{
		new fractionid = pData[playerid][pFraction] - 1;
		new subfraction = pData[playerid][pSubfraction];
		if(fractionid != 1 || !subfraction) return SendClientMessage(playerid,CGRAY,"Вам не доступна эта функция");
		new caller = gEmCall[1];
		if(caller == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Вызовов не поступало");
		gEmCall[0] = INVALID_PLAYER_ID;
		if(!IsPlayerConnected(caller) || !pData[caller][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Игрок вышел");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(caller,x,y,z);
		SetPlayerCheckpoint(playerid,x,y,z,4.0);
		pTemp[playerid][pGPS] = true;
		new mes[128];
		format(mes,sizeof(mes),"%s (%s) принял вызов",pData[playerid][pNickname],gSubfractionName[0][subfraction-1]);
		SendClientMessage(caller,CINFO,mes);
		DepartmentChat(CDEPARTMENT,mes,1,0,0,0,0);
		SendClientMessage(playerid,CINFO,"Метка установлена на радаре. Чтобы убрать введите {"#cWHITE"}/gps");
	}
	if(!strcmp(cmd,"/rc",true))
	{
		if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CGRAY,"Вам не доступна эта функция");
		if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CGRAY,"Вы должны сначала арендовать буксир");
		if(pTemp[playerid][pGPS]) return SendClientMessage(playerid,CGRAY,"У вас уже установлена метка");
		new caller = gEmCall[2];
		if(caller == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Вызовов не поступало");
		gEmCall[2] = INVALID_PLAYER_ID;
		if(!IsPlayerConnected(caller) || !pData[caller][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Игрок вышел");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(caller,x,y,z);
		SetPlayerCheckpoint(playerid,x,y,z,4.0);
		pTemp[playerid][pGPS] = true;
		new mes[128];
		format(mes,sizeof(mes),"%s принял вызов",pData[playerid][pNickname]);
		SendClientMessage(caller,CINFO,mes);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pData[i][pJob] != 4 || pTemp[i][pMechID] == INVALID_VEHICLE_ID) continue;
			SendClientMessage(i,CDEPARTMENT,mes);
		}
		SendClientMessage(playerid,CINFO,"Метка установлена на радаре. Чтобы убрать введите {"#cWHITE"}/gps");
	}
	if(!strcmp(cmd,"/ad",true))
	{
		if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,CGRAY,"К сожалению, очередь на объявления занята, попробуйте позже");
		if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CGRAY,"Вам нужен телефон, чтобы отправить объявление");
		if(pTemp[playerid][pAdvertTime]) return SendClientMessage(playerid,CGRAY,"Нельзя посылать чаще одного объявления в минуту");
		tmp = strrest(cmdtext,idx);
		new len = strlen(tmp);
		if(!len) return SendClientMessage(playerid,CGRAY,"/ad [текст объявления]");
		if(len > 100) return SendClientMessage(playerid,CGRAY,"Максимальная длина объявления - 100 символов");
		SetPVarString(playerid,"advert",tmp);
		new price = len * gAdvertPrice;
		new mes[128];
		format(mes,sizeof(mes),"{"#cWHITE"}Цена объявления: {"#cRED"}$%d.\n{"#cWHITE"}Вы действительно хотите отправить объявление?",price);
		ShowPlayerDialog(playerid,dAdvertSend,0,"Объявление",mes,"Да","Нет");
	}
	if(!strcmp(cmd,"/ads",true))
	{
		if(pData[playerid][pFraction] != 10) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам новостной сети");
		ShowAdvertList(playerid);
	}
	if(!strcmp(cmd,"/ether",true))
	{
		if(pData[playerid][pFraction] != 10) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам новостной сети");
		if(!pTemp[playerid][pEther])
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(vehicleid >= aNews[0] && vehicleid <= aNews[1])
			{
				pTemp[playerid][pEther] = true;
				SendClientMessage(playerid,CGREEN,"Вы в эфире");
			}
			else return SendClientMessage(playerid,CGRAY,"В эфир можно выходить только в служебном транспорте");
		}
		else
		{
			pTemp[playerid][pEther] = false;
			SendClientMessage(playerid,CGREEN,"Вы вышли из эфира");
		}
	}
	if(!strcmp(cmd,"/armopen",true))
	{
	    if(pData[playerid][pFraction] != 8 && pData[playerid][pSubfraction] == 1) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам армии.");
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 286.02802, 1821.33875, 19.99820))
		{
			MoveDynamicObject(armgate[0], 286.02802, 1833.69995, 19.99820, 1.0);
			SetTimerEx("CloseArmGate",10000,false,"i",1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 135.02631, 1941.53564, 21.65000))
		{
			MoveDynamicObject(armgate[1], 121.70000, 1941.53564, 21.65000, 1.0);
			SetTimerEx("CloseArmGate",10000,false,"i",2);
		}
		else
		{
		    SendClientMessage(playerid,CGRAY,"Вы не возле ворот.");
		}
	}
	if(!strcmp(cmd,"/dial",true))
	{
		if(pData[playerid][pFraction] != 10) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам новостной сети");
		if(!pTemp[playerid][pEther]) return SendClientMessage(playerid,CGRAY,"Вы должны быть в эфире, чтобы начать принимать звонки");
		if(pData[playerid][pRank] < 5) return SendClientMessage(playerid,CGRAY,"Принимать звонки можно с пятого ранга");
		if(gNewsDialing)
		{
			new mes[128];
			format(mes,sizeof(mes),"%s уже принимает звонки",pData[gNewsDialer][pNickname]);
			SendClientMessage(playerid,CGRAY,mes);
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/dial [Цена звонка]");
		new price = strval(tmp);
		if(price < 0) return SendClientMessage(playerid,CGRAY,"Неверная цена");
		if(price > 150) return SendClientMessage(playerid,CGRAY,"Цена за 1 звонок не может быть больше $150");
		new mes[128];
		format(mes,sizeof(mes),"[R] %s начал принимать звонки. Цена звонка: $%d",pData[playerid][pNickname],price);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i) || pData[i][pFraction] != 10) continue;
			SendClientMessage(i,CBLUE,mes);
		}
		gNewsDialing = true;
		gNewsDialer = playerid;
		gNewsDialee = INVALID_PLAYER_ID;
		gNewsDialPrice = price;
	}
	if(!strcmp(cmd,"/hdial",true))
	{
		if(pData[playerid][pFraction] != 10) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам новостной сети");
		if(gNewsDialee == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Никого на линии нет");
		SendClientMessage(gNewsDialee,CWHITE,"Вы были отсоединены ведущим");
		SetPlayerSpecialAction(gNewsDialee,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetTimerEx("ClearPhone",2000,false,"i",gNewsDialee);
		gNewsDialee = INVALID_PLAYER_ID;
		SendClientMessage(playerid,CSYSTEM,"Игрок отсоединен");
	}
	if(!strcmp(cmd,"/stopdial",true))
	{
		if(pData[playerid][pFraction] != 10) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам новостной сети");
		if(pData[playerid][pRank] < 5) return SendClientMessage(playerid,CGRAY,"Принимать звонки можно с пятого ранга");
		if(gNewsDialer != playerid) return SendClientMessage(playerid,CGRAY,"Невозможно");
		OnPlayerCommandText(playerid,"/hdial");
		gNewsDialing = false;
		gNewsDialer = INVALID_PLAYER_ID;
		gNewsDialee = INVALID_PLAYER_ID;
		gNewsDialPrice = 0;
		new mes[128];
		format(mes,sizeof(mes),"[R] %s закончил принимать звонки. Доход: $%d",pData[playerid][pNickname],gNewsDialMoney);
		gNewsMoney += gNewsDialMoney;
		SaveNewsMoney();
		gNewsDialMoney = 0;
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i) || pData[i][pFraction] != 10) continue;
			SendClientMessage(i,CBLUE,mes);
		}
	}
	if(!strcmp(cmd,"/nmoney",true))
	{
		if(pData[playerid][pFraction] != 10) return 1;
		SFCM(playerid,CGREEN,"На счету организации: $%d",gNewsMoney);
	}
	if(!strcmp(cmd,"/ngetmoney",true))
	{
		if(pData[playerid][pFraction] != 10) return 1;
		if(pData[playerid][pRank] != 10) return SendClientMessage(playerid,CGRAY,"Команда недоступна");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/ngetmoney [сумма]");
		new amount = strval(tmp);
		if(amount < 1 || amount > 100000) return SendClientMessage(playerid,CGRAY,"Сумма не должны быть меньше 1 и больше 100000");
		if(gNewsMoney < amount) return SendClientMessage(playerid,CGRAY,"На счету организации недостаточно денег");
		gNewsMoney -= amount;
		SaveNewsMoney();
		TransferMoney(-1,playerid,amount,"newsgetbank");
	}
	if(!strcmp(cmd,"/radio",true))
	{
		if(pTemp[playerid][pRadio])
		{
			pTemp[playerid][pRadio] = false;
			SendClientMessage(playerid,CDARKGREEN,"Радиоприемник выключен");
		}
		else
		{
			pTemp[playerid][pRadio] = true;
			SendClientMessage(playerid,CGREEN,"Радиоприемник включен");
		}
		return 1;
	}
	if(!strcmp(cmd,"/donate",true))
	{
		ShowPlayerDialog(playerid,dDonate,2,"Услуги доната","1.Игровая валюта (1р. = $1000)\n2.Смена ника (10р)\n3.Смена цвета кожи и национальности (150р)\n4.Смена игрового возраста (100р)\n5. Снятие варна (100р)\n6. Купить аптечку (25р)\n7. Скин Woozie (400р)\n8. Stretch - Лимузин (550руб)\n9. Bullet (600р)\n10. Maverick (450р)\n11. Смена номера телефона\n12. Уволиться из фракции (20р)\n{"#cINFO"}13.Проверить баланс","Далее","Отмена");
	}
	if(!strcmp(cmd,"/givevkey",true))
	{
		if(!pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"Команда доступна только владельцам т/с");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/givevkey [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID] || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегистрирован");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		if(pData[id][pVehicleKey] != 0) return SendClientMessage(playerid,CGRAY,"У игрока уже есть ключи от т.с.");
		pData[id][pVehicleKey] = pData[playerid][pCar];
		UpdatePlayerData(id,"vehiclekey",pData[id][pVehicleKey]);
		new mes[128];
		format(mes,sizeof(mes),"Вы получили ключи от т/с от {"#cWHITE"}%s",pData[playerid][pNickname]);
		SendClientMessage(id,CINFO,mes);
		format(mes,sizeof(mes),"Вы выдали {"#cWHITE"}%s {"#cINFO"} ключи от вашего т/с",pData[id][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
	}
	if(!strcmp(cmd,"/takevkey",true))
	{
		if(!pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"Команда доступна только владельцам т/с");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/givevkey [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || !pData[id][pMysqlID] || id == playerid) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегистрирован");
		if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		if(pData[id][pVehicleKey] != pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"У игрока нет ключей от вашего т/с");
		pData[id][pVehicleKey] = 0;
		UpdatePlayerData(id,"vehiclekey",0);
		new mes[128];
		format(mes,sizeof(mes),"%s {"#cINFO"}забрал у вас ключи от т/с",pData[playerid][pNickname]);
		SendClientMessage(id,CWHITE,mes);
		format(mes,sizeof(mes),"Вы забрали у {"#cWHITE"}%s {"#cINFO"} ключи от вашего т/с",pData[id][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
	}
	if(!strcmp(cmd,"/dropvkey",true))
	{
		if(!pData[playerid][pVehicleKey]) return SendClientMessage(playerid,CGRAY,"У вас нет дубликатов ключей от т/с");
		pData[playerid][pVehicleKey] = 0;
		UpdatePlayerData(playerid,"vehiclekey",0);
		SendClientMessage(playerid,CINFO,"Вы выбросили ключи от т/с");
	}
	if(!strcmp(cmdtext, "/carid", true, 6)) {
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		new str[144], uid;
		if(sscanf(cmdtext, "{s[6] }u", uid)) return SendClientMessage(playerid, -1, "{"#cGRAY"}Ошибка: Такой игрок не подключен.");
		new slot = -1;
		slot = GetCarSlot(pData[uid][pCar]);
		if(slot < sizeof(gCars) && slot != -1) {
        	new vehicleid = gCars[slot][carVid];
			format(str, sizeof(str), "{"#cGRAY"}* ID машины: %i.", vehicleid);
			SendClientMessage(playerid, -1, str);
		}
		else SendClientMessage(playerid, -1, "{"#cGRAY"}Ошибка!");
		return 1;
	}
	if(!strcmp(cmd,"/rvs",true))
	{
		new repairid = GetPVarInt(playerid,"selectedrepair") - 1;
		if(repairid < 0 || repairid > 2) return SendClientMessage(playerid,CGRAY,"Вы должны быть на эстакаде");
		new businessid = repairid + REPAIR_ID_OFFSET;
		if(gBusiness[businessid][busiType] != 8) return SendClientMessage(playerid,CGRAY,"Внутренняя ошибка (#143)");
		if(gBusiness[businessid][busiProduct] < 250) return SendClientMessage(playerid,CGRAY,"В СТО недостаточно краски");
		if(!pData[playerid][pCar] || !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGRAY,"Перекрашивать можно только личный авто");
		new slot = GetCarSlot(pData[playerid][pCar]);
		new vehicleid = gCars[slot][carVid];
		if(GetPlayerVehicleID(playerid) != vehicleid) return SendClientMessage(playerid,CGRAY,"Вы должны быть на своем личном авто");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/rvs [Цвет 1] [Цвет 2]");
		new c1 = strval(tmp);
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/rvs [Цвет 1] [Цвет 2]");
		new c2 = strval(tmp);
		if(c1 > 180 || c2 > 180 || c1 < 0 || c2 < 0) return SendClientMessage(playerid,CGRAY,"Неверный ID цвета");
		SetPVarInt(playerid,"recolor1",c1);
		SetPVarInt(playerid,"recolor2",c2);
		new price = 250 * gBusiness[businessid][busiPrice];
		new mes[128];
		format(mes,sizeof(mes),"{"#cWHITE"}Перекраска в этом СТО стоит $%d.\nПродолжить?",price);
		ShowPlayerDialog(playerid,dRecolor,0,"СТО",mes,"Да","Нет");

		return 1;
	}
	//Админ команды
	if(!strcmp(cmd,"/settime",true))
	{
		if(pData[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/settime [0 - 23]");
		new id = strval(tmp);
		if(id < 0 || id > 23) return SendClientMessage(playerid, COLOR_GREY, "Время от 0 до 23!");
		SendMes(playerid, -1, "Время установлено: %i", id);
		SetWorldTime(id);
	}
	if(!strcmp(cmd,"/makeleader",true))
	{
		if(pData[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/makeleader [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(pData[actplayerid][pWarn]) return SendClientMessage(playerid,CGRAY,"У игрока есть варн");
		SetPVarInt(playerid,"actplayerid",actplayerid);
		new mes[256];
		for(new i;i<FRACTION_COUNT;i++)
		{
			format(mes,sizeof(mes),"%s%s\n",mes,gFractionName[i]);
		}
		ShowPlayerDialog(playerid,dLeaderskin,2,pData[actplayerid][pNickname],mes,"Далее","Отмена");
	}
	if(!strcmp(cmd,"/auninvite",true))
	{
		if(pData[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/auninvite [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(!pData[actplayerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Игрок не состоит во фракции");
		new query[128];
		format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[actplayerid][pMysqlID]);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
		pData[actplayerid][pFraction] = 0;
		pData[actplayerid][pRank] = 0;
		pData[actplayerid][pFractionSkin] = 0;
		pData[actplayerid][pSubfraction] = 0;
		SetPlayerColor(actplayerid,0xFFFFFF11);
		new houseid = pData[actplayerid][pHouse]-1;
		if(!(houseid+1) || ((houseid+1) > 0 && pData[actplayerid][pMysqlID] != gHouses[houseid][houseOwnerID])) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
		else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
		else
		{
			for(new x; x < 3; x ++) {
				if(!gHouses[houseid][houseSkin]) continue;
				pData[actplayerid][pSkin] = gHouses[houseid][houseSkin];
				if(GetPlayerSkin(actplayerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
			}
			gHouses[houseid][houseSkin][3] = 0;
		}
		new mes[128];
		format(mes,sizeof(mes),"Вы были уволены из организации администратором %s",pData[playerid][pNickname]);
		SendClientMessage(actplayerid,CBADINFO,mes);
		format(mes,sizeof(mes),"%s был уволен из организации",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
	}
	if(!strcmp(cmd,"/unmakeleader",true))
	{
		if(pData[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/unmakeleader [ID игрока]");
		new actplayerid = strval(tmp);
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(!pData[actplayerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Игрок не состоит во фракции");
		new query[128];
		format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[actplayerid][pMysqlID]);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
		pData[actplayerid][pFraction] = 0;
		pData[actplayerid][pRank] = 0;
		pData[actplayerid][pFractionSkin] = 0;
		pData[actplayerid][pSubfraction] = 0;
		SetPlayerColor(actplayerid,0xFFFFFF11);
		new houseid = pData[actplayerid][pHouse]-1;
		if(!(houseid+1) || ((houseid+1) > 0 && pData[actplayerid][pMysqlID] != gHouses[houseid][houseOwnerID])) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
		else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
		else
		{
			for(new x; x < 3; x ++) {
				if(!gHouses[houseid][houseSkin]) continue;
				pData[actplayerid][pSkin] = gHouses[houseid][houseSkin];
				if(GetPlayerSkin(actplayerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(actplayerid,pData[actplayerid][pSkin]);
			}
			gHouses[houseid][houseSkin][3] = 0;
		}
		new mes[128];
		format(mes,sizeof(mes),"Вы были сняты с лидерства администратором %s",pData[playerid][pNickname]);
		SendClientMessage(actplayerid,CBADINFO,mes);
		format(mes,sizeof(mes),"%s был снят с лидерства",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
	}
	if(!strcmp(cmd,"/kick",true))
	{
		if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/kick [ID игрока] [Причина]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || IsKicked(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/kick [ID игрока] [Причина]");
		new mes[128];
		new nick[24];
		GetPlayerName(id,nick,24);
		format(mes,sizeof(mes),"Администратор %s кикнул игрока %s. Причина: %s",pData[playerid][pNickname],nick,tmp);
		SendAdminMessage(CADMIN,mes,id);
		NewKick(id);
	}
	if(!strcmp(cmd,"/kickall",true))
	{
		if(pData[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		for(new i;i<MAX_PLAYERS;i++)
		{
			Kick(i);
		}
	}
	if(!strcmp(cmd,"/krp",true))
	{
		if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/kick [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || IsKicked(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		new mes[128], nick[24];
		GetPlayerName(id,nick,24);
		format(mes,sizeof(mes),"Администратор %s кикнул игрока %s. Причина: нонРП ник.",pData[playerid][pNickname],nick);
		SendAdminMessage(CADMIN,mes,id);
		NewKick(id);
	}
	if(!strcmp(cmd,"/slap",true))
	{
		if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/slap [ID игрока]");
		new Float:shealth,mes[128],giveplayerid;
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid) || IsKicked(giveplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		GetPlayerHealth(giveplayerid, shealth);
		SetPlayerHealthEx(giveplayerid, shealth-5);
		new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(giveplayerid, slx, sly, slz);
		SetPlayerPos(giveplayerid, slx, sly, slz+5);
		PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
		format(mes, sizeof(mes), "- %s пнул(а) %s",pData[playerid][pNickname], pData[giveplayerid][pNickname]);
		AdminChat(CINFO,mes);
		return true;
	}
	if(!strcmp(cmd, "/statistic", true))
	{
     	if(pData[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
     	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp))
		{
			SendClientMessage(playerid, CGRAY, "/statistic [ID игрока] [Номер данных] [Значение]");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Номера данных: 1)Пол 2)Возраст 3)Работа");
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "4)Скин 5)Деньги 6)Банк 7)Уровень 8)Exp 9)Номер телефона");
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "10)Наркотики 11)Донат 12)Патроны 13)Ед.оружия");
			return 1;
		}
		new i = strval(tmp);
		if(!IsPlayerConnected(i)) return SendClientMessage(playerid, CGRAY, "Указанный игрок не найден.");
		tmp = strtok(cmdtext, idx);
		new set = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new value = strval(tmp);
		new zStr[100];
		switch(set)
		{
		    case 1:
			{
			    if(value < 1 || value > 2) return SendClientMessage(playerid, CGRAY, "Пол | 1)Мужской 2)Женский");
   			    pData[i][pSex] = value;
			    UpdatePlayerData(i,"sex",pData[i][pSex]);
			    format(zStr, 100, "Вы успешно изменили пол %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 2:
			{
			    if(value < 16 || value > 110) return SendClientMessage(playerid,CGRAY,"Возраст не может быть менее 16 и более 110");
                pData[i][pAge] = value;
			    UpdatePlayerData(i,"age",pData[i][pAge]);
			    format(zStr, 100, "Вы успешно изменили возраст %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 3:
			{
			    if(value < 1 || value > 6) return SendClientMessage(playerid,CGRAY,"Работа | 1)Автобусник 2)Дальнобой 3)Таксист 4)Механик 5)Развозчик продуктов 6)Развозчик топлива");
			    pData[i][pJob] = value;
			    UpdatePlayerData(i,"job",pData[i][pJob]);
			    format(zStr, 100, "Вы успешно изменили место работы %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 4:
			{
			    if(value < 1 || value > 299) return SendClientMessage(playerid,CGRAY,"ID скина от 1 до 299");
				pData[i][pSkin] = value;
			    UpdatePlayerData(i,"skin",pData[i][pSkin]);
			    format(zStr, 100, "Вы успешно изменили скин игроку %s", pData[i][pNickname]);
			    if(!pData[i][pFraction]) SetPlayerSkin(i, value);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 5:
			{
			    format(zStr, 100, "Вы успешно изменили количество денег %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			    pData[i][pMoney] = value;
				ResetPlayerMoney(i); GivePlayerMoney(i,pData[i][pMoney]);
				UpdatePlayerData(i,"money",pData[i][pMoney]);
			}
			case 6:
			{
			    pData[i][pBank] = value;
			    UpdatePlayerData(i,"bank",pData[i][pBank]);
			    format(zStr, 100, "Вы успешно изменили количество денег в банке %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 7:
			{
			    pData[i][pLevel] = value; SetPlayerScore(i, value);
			    UpdatePlayerData(i,"level",pData[i][pLevel]);
	   			format(zStr, 100, "Вы успешно изменили количество уровень игрока %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 8:
			{
			    pData[i][pExp] = value;
			    UpdatePlayerData(i,"exp",pData[i][pExp]);
	   			format(zStr, 100, "Вы успешно изменили EXP игрока %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 9:
			{
			    pData[i][pPhone] = value;
			    UpdatePlayerData(i,"phone",pData[i][pPhone]);
	   			format(zStr, 100, "Вы успешно изменили номер телефона %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 10:
			{
			    pData[i][pDrugs] = value;
			    UpdatePlayerData(i,"drugs",pData[i][pDrugs]);
	   			format(zStr, 100, "Вы успешно изменили количество наркотиков у %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 11:
			{
                pData[i][pDonate] = value;
			    UpdatePlayerData(i,"donate",pData[i][pDonate]);
	   			format(zStr, 100, "Вы успешно изменили количество доната у %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 12:
			{
			    pData[i][pAmmo] = value;
			    UpdatePlayerData(i,"ammo",pData[i][pAmmo]);
	   			format(zStr, 100, "Вы успешно изменили количество патрон у %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 13:
			{
			    pData[i][pGunAmount] = value;
			    UpdatePlayerData(i,"gunamount",pData[i][pGunAmount]);
	   			format(zStr, 100, "Вы успешно изменили количество патрон у %s", pData[i][pNickname]);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
			case 14:
			{
			    if(value < 1 || value > 299) return SendClientMessage(playerid,CGRAY,"ID скина от 1 до 299");
				if(!pData[i][pFraction]) return SendClientMessage(playerid, CGRAY, "Игрок не в организации");
				pData[i][pFractionSkin] = value;
			    UpdatePlayerData(i,"fractionskin",pData[i][pFractionSkin]);
			    format(zStr, 100, "Вы успешно изменили фракционный скин игроку %s", pData[i][pNickname]);
			    SetPlayerSkin(i, value);
			    SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			}
		    default:
			{
				SendClientMessage(playerid, CGRAY, "/statistic [ID игрока] [Номер данных] [Значение]");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Номера данных: 1)Пол 2)Возраст 3)Работа");
			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "4)Скин 5)Деньги 6)Банк 7)Уровень 8)Exp 9)Номер телефона");
			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "10)Наркотики 11)Лицензия вождение 12)Лицензия полёты");
			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "13)Лицензия лодки 14)Лицензия оружие 15)Донат");
			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "16)Патроны 17)Ед.оружия 18)Фрак.скин");
				return 1;
			}
		}
	    return true;
	}
	if(!strcmp(cmd,"/adddonate",true))
	{
		if(pData[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
     	tmp = strrest(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, CGRAY, "/adddonate [никнейм] [кол-во]");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		new summa = strval(tmp);
		new query[200];
		format(query,sizeof(query),"SELECT * FROM `accounts` WHERE `nickname` = '%s'",tmp);
		mysql_query(query);
		mysql_store_result();
		if(mysql_num_rows() > 0)
		{
		    SendMes(playerid,CRED,"Вы успешно зачислили %s - %d руб. доната",tmp,summa);
			format(query,sizeof(query),"UPDATE `accounts` SET `donate` = '%d' WHERE `nickname` = '%s'",summa,tmp);
			mysql_query(query);
			if(mysql_errno()) SendClientMessage(playerid,CRED,"Ошибка MySQL");
		}
		else
		{
		    SendMes(playerid,CRED,"Аккаунт %s не найден в БД.",tmp);
		}
	}
	if(!strcmp(cmd,"/msg",true))
	{
		new string[128];
	    if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/msg [Текст]");
		format(string, 130, "Администратор %s: %s", pData[playerid][pNickname], tmp);
		SendClientMessageToAll(0xFFCD00ff, string);
	}
	if(!strcmp(cmd,"/skick",true))
	{
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/skick [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || IsKicked(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		new mes[128];
		new nick[24];
		GetPlayerName(id,nick,24);
		format(mes,sizeof(mes),"Администратор %s кикнул игрока %s. Тихим киком.",pData[playerid][pNickname],nick);
		AdminChat(CGRAY,mes);
		NewKick(id);
	}
	if(!strcmp(cmd,"/ban",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/ban [ID игрока] [К-во дней] [Причина]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || IsKicked(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(!pData[id][pMysqlID])
		{
			NewKick(id);
			return SendClientMessage(playerid,CGRAY,"Этот игрок не зарегистрирован, поэтому был кикнут");
		}
		if(pData[id][pAdmin] == 10) return SendClientMessage(playerid,CGRAY,"Вы не можите забанить этого игрока.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/ban [ID игрока] [К-во дней] [Причина]");
		new time = strval(tmp);
		if(time < 1 || time > 30 && pData[playerid][pAdmin] < 5) return SendClientMessage(playerid,CGRAY,"Не верное к-во дней");
		if(time < 0 || time > 30 && pData[playerid][pAdmin] >= 5) return SendClientMessage(playerid,CGRAY,"Не верное к-во дней");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/ban [ID игрока] [К-во дней] [Причина]");
		new mes[128],ipStr[16],nick[24];
		if(ServerBan(playerid,id,time,tmp)) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
		GetPlayerName(id,nick,24);
		GetPlayerIp( id, ipStr, 16 );
		//BlockIpAddress(ipStr, 86400000*time);//баним IP
		//BanSet(playerid);//баним подсеть
		format(mes, sizeof(mes), "banip %s", ipStr);
		SendRconCommand(mes);
		format(mes,sizeof(mes),"Администратор %s забанил игрока %s. К-во дней: %d. Причина: %s",pData[playerid][pNickname],nick,time,tmp);
		SendAdminMessage(CADMIN,mes,id);
		NewKick(id);
	}
	if(!strcmp(cmd,"/warn",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/warn [ID игрока] [Причина]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id) || IsKicked(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(!pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Этот игрок не зарегистрирован");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/warn [ID игрока] [Причина]");
		new mes[128];
		format(mes,sizeof(mes),"/auninvite %d",id);
		OnPlayerCommandText(playerid,mes);
		new level = floatround(float(pData[id][pWarn] - gCurDay) / WARN_TIME,floatround_ceil);
		if(!pData[playerid][pWarn] || level <= 2)
		{
			if(pData[id][pWarn] > gCurDay) pData[id][pWarn] += WARN_TIME;
			else pData[id][pWarn] = gCurDay + WARN_TIME;
			UpdatePlayerData(id,"warn",pData[id][pWarn]);
			format(mes,sizeof(mes),"Администратор %s Выдал warn игроку %s. Причина: %s",pData[playerid][pNickname],pData[id][pNickname],tmp);
		}
		else
		{
			pData[id][pWarn] = 0;
			UpdatePlayerData(id,"warn",pData[id][pWarn]);
			format(mes,sizeof(mes),"Администратор %s забанил игрока %s (3 Предупеждения). Причина: %s",pData[playerid][pNickname],pData[id][pNickname],tmp);
			ServerBan(playerid,id,5,tmp);
		}
		SendAdminMessage(CADMIN,mes,id);
		NewKick(id);
	}
	if(!strcmp(cmd,"/unwarn",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/unwarn [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(!pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Этот игрок не зарегистрирован");
		if(!pData[id][pWarn]) return SendClientMessage(playerid,CGRAY,"У игрока нет варнов");
		pData[id][pWarn] = 0;
		UpdatePlayerData(id,"warn",pData[id][pWarn]);
		new mes[128];
		format(mes,sizeof(mes),"[A] %s снял(а) warn %s",pData[playerid][pNickname],pData[id][pNickname]);
		AdminChat(CORANGE,mes);
		format(mes,sizeof(mes),"Администратор %s снял вам warn",pData[playerid][pNickname]);
		SendClientMessage(id,CADMIN,mes);
	}
	if(!strcmp(cmd,"/unmute",true))
	{
		if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/unmute [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(!pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Этот игрок не зарегистрирован");
		pData[id][pMut] = 0;
		UpdatePlayerData(id,"mut",0);
		new mes[128];
		format(mes,sizeof(mes),"[A] %s снял(а) заглушку %s",pData[playerid][pNickname],pData[id][pNickname]);
		AdminChat(CORANGE,mes);
		format(mes,sizeof(mes),"Администратор %s снял вам заглушку",pData[playerid][pNickname]);
		SendClientMessage(id,CADMIN,mes);
	}
	if(!strcmp(cmd,"/unban",true))
	{
		if(pData[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strrest(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/unmute [Никнейм игрока]");
		mysql_real_escape_string(tmp,tmp);
		new query[128],result[12],ipStr[16];
		format(query,sizeof(query),"SELECT `id` FROM `accounts` WHERE `nickname` = '%s'",tmp);
		mysql_query(query);
		mysql_store_result();
		if(!mysql_num_rows()) return SendClientMessage(playerid,CGRAY,"Неверный никнейм");
		mysql_fetch_row(result);
		new id = strval(result);
		mysql_free_result();
		format(query,sizeof(query),"DELETE FROM `ban` WHERE `takeid` = '%d'",id);
		mysql_query(query);
		if(!mysql_affected_rows()) return SendClientMessage(playerid,CGRAY,"Игрок не забанен");
		else
		{
			format(query,sizeof(query),"[A] %s разбанил %s",pData[playerid][pNickname],tmp);
			AdminChat(CORANGE,query);
			GetPlayerIp( id, ipStr, 16 );
			//UnBlockIpAddress(ipStr);
			//UnBanSet(playerid);
			format(query, sizeof(query), "unbanip %s", ipStr);
			SendRconCommand(query);
			printf("%s unbanned %s",pData[playerid][pNickname],tmp);
		}
	}
	if(!strcmp(cmd,"/unbanip",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext,idx);
		new query[150];
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/unbanip [Никнейм игрока]");
		format(query,sizeof(query),"unbanip %s",tmp);
		SendRconCommand(query);
		SendRconCommand("reloadbans");
		format(query,sizeof(query),"%s разблокировал IP: %s",pData[playerid][pNickname],tmp);
		AdminChat(CORANGE,query);
		return true;
	}
	if(!strcmp(cmd,"/skin",true))
	{
		if(pData[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/skin [ID игрока] [ID skina]");
		new id = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/skin [ID игрока] [ID skina]");
		new skin = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(skin > 299 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "ID скина от 1 до 299!");
		SetPlayerSkin(id, skin);
		PlayerPlaySound(id, 1132, 0.0, 0.0, 0.0);
		SendMes(id, COLOR_WHITE, "Администратор %s поставил Вам временный скин",pData[playerid][pNickname]);
	}
	if(!strcmp(cmd,"/sp",true))
	{
		if(pData[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/sp [ID игрока]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if((pData[playerid][pAdmin] < 5 && pData[id][pAdmin] >= 5) || pData[id][pMysqlID] == 39854) return SendClientMessage(playerid, CADMIN, "Ошибка доступа!");
		if(pTemp[id][pSpectator] != INVALID_PLAYER_ID)
		{
			new mes[128];
			format(mes,sizeof(mes),"%s уже следит за этим игроком",pData[pTemp[id][pSpectator]][pNickname]);
			SendClientMessage(playerid,CGRAY,mes);
		}
		TogglePlayerSpectating(playerid,1);
		new pstate = GetPlayerState(id);
		new vehicleid = GetPlayerVehicleID(id);
		new Float:x,Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		SetPVarFloat(playerid,"oldx",x);
		SetPVarFloat(playerid,"oldy",y);
		SetPVarFloat(playerid,"oldz",z);
		SetPVarInt(playerid,"oldint",GetPlayerInterior(playerid));
		SetPVarInt(playerid,"oldworld",GetPlayerVirtualWorld(playerid));
		pTemp[playerid][pSpectating] = true;
		pTemp[id][pSpectator] = playerid;
		pTemp[playerid][pSpectatee] = id;
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		if(pstate == PLAYER_STATE_DRIVER || pstate == PLAYER_STATE_PASSENGER) PlayerSpectateVehicle(playerid,vehicleid);
		else PlayerSpectatePlayer(playerid,id);
		
		start_adminSpec(playerid, id);
	}
	if (!strcmp(cmd,"/id",true))
	{
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/id [Ник игрока]");
		new id=-1,name[24];
		if(!isNumeric(tmp))
		{
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				GetPlayerName(i,name,24);
				if(strfind(name,tmp,true) != -1) {id = i; break;}
			}
			if(id == -1) return SendClientMessage(playerid,CGRAY,"Не найдено");
		}
		else
		{
			id = strval(tmp);
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Не верный ID");
			GetPlayerName(id,name,24);
		}
		new mes[128];
		format(mes,sizeof(mes),"%s [%d]",name,id);
		SendClientMessage(playerid,CWHITE,mes);
		return 1;
	}
	if(!strcmp(cmd,"/report",true))
	{
		if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"Вы заглушены и не можете писать в репорт");
		if(pTemp[playerid][pNotReport]) return SendClientMessage(playerid,CGRAY,"Нельзя писать сообщение чаще чем 1 раз в минуту");
		pTemp[playerid][pNotReport] = 1;
		tmp = strrest(cmdtext, idx);
		new mes[128];
		format(mes,sizeof(mes),"Жалоба от %s[%d]: %s",pData[playerid][pNickname],playerid,tmp);
		SendClientMessage(playerid,CYELLOW,mes);
		AdminChat(CYELLOW,mes);
	}
	
	if(!strcmp(cmd,"/ans",true))
	{
		if(pData[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/ans [ID игрока] [Ответ]");
		new id = strval(tmp);
		tmp = strrest(cmdtext, idx);
		new mes[128];
		format(mes,sizeof(mes),"Ответ от %s: %s",pData[playerid][pNickname],tmp);
		SendClientMessage(id,CYELLOW,mes);
		format(mes,sizeof(mes),"[A] %s ответил(а) %s: %s",pData[playerid][pNickname],pData[id][pNickname],tmp);
		AdminChat(CORANGE,mes);
	}
	if(!strcmp(cmd,"/admin",true))
	{
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/admin [сообщение]");
		new mes[128];
		format(mes,sizeof(mes),"Администратор %s: %s",pData[playerid][pNickname],tmp);
		SendClientMessageToAll(CADMIN,mes);
	}
	if(!strcmp(cmd,"/admins",true))
	{
		if(pData[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		SendClientMessage(playerid,CINFO,"Администраторы онлайн:");
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i) || !pData[i][pAdmin]) continue;
			new mes[40];
			format(mes,sizeof(mes),"%s [%d] Level: %d",pData[i][pNickname],i,pData[i][pAdmin]);
			SendClientMessage(playerid,CSYSTEM,mes);
		}
	}
	
	if(!strcmp(cmd,"/timeadmin",true))
	{
		if(pData[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/timeadmin [ID игрока]");
		new id = strval(tmp),strings[30],string[150];
		if(pData[id][pAdminm] >= 60)
		{
			new minute = pData[id][pAdminm]/60;
		    format(strings,sizeof(strings),"%d минут",minute);
		}
		else if(pData[id][pAdminm] >= 3600)
		{
		    new hour = pData[id][pAdminm]/3600;
		    format(strings,sizeof(strings),"%d часов",hour);
		}
		else if(pData[id][pAdminm] >= 86400)
		{
		    new day = pData[id][pAdminm]/86400;
		    format(strings,sizeof(strings),"%d дней",day);
		}
		format(string,sizeof(string),"Ник: %s\nУровень администратора: %d\nУровень (игровой): %d\nКоличество отыгранного времени: %s",pData[id][pNickname],pData[id][pAdmin],pData[id][pLevel],strings);
		ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Просмотр статистики администратора",string,"Ок","");
	}
	if(!strcmp(cmd,"/makeadmin",true))
	{
		if(pData[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/makeadmin [ID игрока] [уровень админки]");
		new id = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new idadm = strval(tmp);
		new mes[128];
		pData[id][pAdmin] = idadm;
		SendMes(playerid,CINFO,"Вы дали %d уровень администратора игроку %s",idadm,pData[id][pNickname]);
		format(mes,sizeof(mes),"%s поставил Вас на пост администратора.",pData[playerid][pNickname]);
		SendClientMessage(id,CYELLOW,mes);
        UpdatePlayerData(id,"admin",pData[id][pAdmin]);
        ShowPlayerDialog(id,dAPassNew,DIALOG_STYLE_INPUT,"Настройки администратора","Введите Ваш будущий админ пароль.\nОн должен состоять мин. - 10 сим. и макс. - 20 сим.\nЖелательно в нём должны присутствовать буквы и цифры.","Ок","");
	}
	if(!strcmp(cmd,"/napass",true))
	{
		if(pData[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
        ShowPlayerDialog(playerid,dAPassNew,DIALOG_STYLE_INPUT,"Настройки администратора","Введите Ваш будущий админ пароль.\nОн должен состоять мин. - 10 сим. и макс. - 20 сим.\nЖелательно в нём должны присутствовать буквы и цифры.","Ок","");
	}
	if(!strcmp(cmd, "/leaders", true))
	{
 	    new zStr[3000],
			zVal;
		format(zStr, sizeof(zStr), "Организация - Должность - Имя - Телефон\n\n{FFFFFF}");
  		foreach(new i: Player)
		{
			if(pData[i][pFraction] && IsALeader(i))
			{
				format(zStr, sizeof(zStr), "%s %s - %s - %s - %d\n", zStr, gFractionName[pData[i][pFraction]-1],gFractionRankName[pData[i][pFraction]-1][pData[i][pRank]-1], pData[i][pNickname], pData[i][pPhone]);
				zVal++;
			}
			/*if(pData[i][pSubfraction] && IsALeader(i))
			{
				format(zStr, sizeof(zStr), "%s %s %s - %s - %s - %d\n", zStr, gFractionName[pData[i][pFraction]-1],gSubfractionName[pData[i][pSubfraction]-1],gFractionRankName[pData[i][pFraction]-1][pData[i][pRank]-1], pData[i][pNickname], pData[i][pPhone]);
				zVal++;
			}*/
   		}
   		if(!zVal) return SendClientMessage(playerid,-1,"Все лидеры находятся не в игре.");
   		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffff00}Лидеры", zStr, "Закрыть", "");
   		return 1;
	}
	if(!strcmp(cmd,"/sethp",true))
	{
		if(pData[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/sethp [ID игрока] [Здоровье]");
		new id = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new Float:health;
		health = floatstr(tmp);
		if(health > 100.0) return SendClientMessage(playerid,CGRAY,"Нельзя больше 100");
		SetPlayerHealthEx(id,health);
	}
	if(!strcmp(cmd,"/agm",true))
	{
		if(pData[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		if(gmadmin[playerid] == false)
		{
			gmadmin[playerid] = true;
			SetPlayerHealthEx(playerid,10000.0);
		}
		else
		{
		    gmadmin[playerid] = false;
		    SetPlayerHealthEx(playerid,100.0);
		}
	}
	if(!strcmp(cmd,"/spcars",true))
	{
		if(pData[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		new string[400];
		format(string,sizeof(string), "{ff0000}Внимание:{FFFFFF} Администратор {ffa500}%s {FFFFFF}обновит весь незанятый транспорт через {ffa500}10 {FFFFFF}секунд!",pData[playerid][pNickname]);
		SendClientMessageToAll(-1,string);
		SetPVarInt(playerid, "SpcarsAvto", gettime()+10);
		return true;
	}
	if(!strcmp(cmd,"/spveh",true))
	{
		if(pData[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		new vehicleid = GetPlayerVehicleID(playerid);
        SetVehicleToRespawn(vehicleid);
        SendClientMessage(playerid,CINFO,"Авто было успешно зареспавнено.");
		return true;
	}
	/*if(!strcmp(cmd,"/park",true))
	{
		if(!pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"У Вас нет т/с");
		new carID = GetCarSlot(pData[playerid][pCar]) , Float:posa[4];
		if(carID == -1) return SendClientMessage(playerid,CRED,"Ошибка. Т/С не найдено");
		GetPlayerPos(playerid,posa[0],posa[1],posa[2]);
		GetPlayerFacingAngle(playerid,posa[3]);
		new query[256];
		format(query,sizeof(query),"UPDATE `cars` SET `x` = '%f',`y` = '%f',`z` = '%f',`ra` = '%f'  WHERE `id` = '%d'",posa[0],posa[1],posa[2],posa[3],pData[playerid][pCar]);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1");
		SendMes(playerid,-1,"Авто было успешно припаркованно.");
	}*/
	if(!strcmp(cmd,"/mute",true))
	{
		if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/mut [ID игрока] [К-во минут] [Причина]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(!pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Этот игрок не зарегистрирован");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/mut [ID игрока] [К-во минут] [Причина]");
		new time = strval(tmp);
		if(time < 1 || time > 600) return SendClientMessage(playerid,CGRAY,"Не верное к-во минут");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/mut [ID игрока] [К-во минут] [Причина]");
		pData[id][pMut] = time;
		UpdatePlayerData(id,"mut",time);
		new mes[128];
		format(mes,sizeof(mes),"Администратор %s Выдал затычку игроку %s на %d минут(ы). Причина: %s",pData[playerid][pNickname],pData[id][pNickname],time,tmp);
		SendAdminMessage(CADMIN,mes,id);
	}
	if(!strcmp(cmd,"/respawn",true))
	{
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/respawn [ID авто]");
		new id = strval(tmp);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pBusID] == id) pTemp[i][pBusID] = INVALID_PLAYER_ID;
		}
		SetVehicleToRespawn(id);
	}
	if(!strcmp(cmd,"/givemoney",true))
	{
		//if(!IsPlayerAdmin(playerid)) return 1;
		if(pData[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/givemoney [ID игрока] [К-во денег]");
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/givemoney [ID игрока] [К-во денег]");
		new money = strval(tmp);
		if(money < 1 || money > 5000000) return SendClientMessage(playerid,CGRAY,"Неверная сумма");
		TransferMoney(-1,id,money,"admingive");
		//GivePlayerMoneyEx(id,money,"admingive");
	}
	if(!strcmp(cmd,"/fillcar",true))
	{
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/fillcar [ID авто]");
		new vid = strval(tmp);
		new model = GetVehicleModel(vid);
		if(!model) return SendClientMessage(playerid,CGRAY,"Неверный ID авто");
		gVehicles[vid-1][vFuel] = gTransport[model - 400][trTank];
	}
	if(!strcmp(cmd,"/gotoveh",true))
	{
		if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/gtv [ID авто]");
		new id = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetVehiclePos(id,x,y,z);
		x += 2.0;
		SetPlayerPos(playerid,x,y,z);
	}
	if(!strcmp(cmd,"/money",true))
	{
	    if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
	    tmp = strtok(cmdtext,idx);
	    new id = playerid;
	    if(strlen(tmp)) id = strval(tmp);
	    if(!pData[id][pMysqlID]) SendErr(playerid, "Игрок не подключен");
	    new info[256];
		if(pData[id][pBusiness]) format(info, sizeof(info), "Наличные: \t%d$\nБанк:\t\t%d$\nБизнес:\t %d$", pData[id][pMoney],pData[id][pBank],gBusiness[pData[id][pBusiness]][busiBank]);
		else format(info, sizeof(info), "Наличные: \t%d$\nБанк:\t\t%d$", pData[id][pMoney],pData[id][pBank]);
		ShowPlayerDialog(playerid, 0000, 0, pData[id][pNickname], info, "Ок", "");
		return 1;
	}
	if(!strcmp(cmd,"/menu",true) || !strcmp(cmd,"/mn",true))
	{
		tmp = strtok(cmdtext, idx);
		new id = strval(tmp);
		if(!strlen(tmp)) id = playerid;
		if(!pData[playerid][pAdmin] && id != playerid) return 1;
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(!pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Этот игрок не зарег-н");
		new spouse[MAX_PLAYER_NAME],query[64],fraction[32],job[32],nationtext2[15],stat1[10],stat2[10],stat3[10],stat4[10];
		if(pData[id][pSpouse])
		{
			format(query,sizeof(query),"SELECT `nickname` FROM `accounts` WHERE `id` = '%d'",pData[id][pSpouse]);
			mysql_query(query);
			mysql_store_result();
			mysql_fetch_row(spouse);
			mysql_free_result();
		}
		else strcat(spouse,"Отсутствует");
		new fractionid = pData[id][pFraction]-1;
		if(!pData[id][pFraction]) {fraction = "none";}
		else
		{
			strcat(fraction,gFractionName[fractionid]);
		}
		if(pData[id][pJob]) strcat(job,gJobNames[pData[id][pJob]-1]);
		else job = "none";
		switch(pData[playerid][pNation])
		{
  			case 1: nationtext2 = "American";
			case 2: nationtext2 = "Japanese";
			case 3: nationtext2 = "Italian";
			case 4: nationtext2 = "Mexican";
			case 5: nationtext2 = "Latin-American";
			case 6: nationtext2 = "Spaniard";
			case 7: nationtext2 = "Russian";
			case 8: nationtext2 = "Portuguese";
			case 9: nationtext2 = "Frenchy";
		}
		SelectTextDraw(playerid, 0xADD8E6FF);
		format(stat1,sizeof(stat1),"%d (%d/%d)",pData[id][pLevel],pData[id][pExp],pData[id][pLevel]*6);
		format(stat2,sizeof(stat2),"%d",pData[id][pMoney]);
		format(stat3,sizeof(stat3),"%d",pData[id][pWarn]);
		format(stat4,sizeof(stat4),"%d",pData[id][pPhone]);
		PlayerTextDrawSetString(playerid,StatsTextdraw[11][playerid], pData[id][pNickname]);
		PlayerTextDrawSetString(playerid,StatsTextdraw[12][playerid], stat1);
	 	PlayerTextDrawSetString(playerid,StatsTextdraw[13][playerid], stat2);
	 	PlayerTextDrawSetString(playerid,StatsTextdraw[14][playerid], fraction);
	 	PlayerTextDrawSetPreviewModel(playerid,StatsTextdraw[19][playerid], pData[playerid][pSkin]);
	 	PlayerTextDrawSetString(playerid,StatsTextdraw[58][playerid], job);
	 	PlayerTextDrawSetString(playerid,StatsTextdraw[18][playerid], stat3);
	 	PlayerTextDrawSetString(playerid,StatsTextdraw[57][playerid], stat4);
	 	PlayerTextDrawSetString(playerid,StatsTextdraw[59][playerid], nationtext2);
	    for(new i = 0; i < 61; i++) PlayerTextDrawShow(playerid, StatsTextdraw[i][playerid]);
		SetPVarInt(playerid,"menumm",1);
		return true;
	}
	if(!strcmp(cmd,"/clear",true))
	{
		if(pData[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		tmp = strtok(cmdtext, idx);
		new id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
		if(!pData[id][pWanted]) return SendClientMessage(playerid,CGRAY,"У игрока нет розыска");
		pData[id][pWanted] = 0;
		UpdatePlayerData(id,"wanted",0);
		SetPlayerWantedLevel(id,0);
		RemovePlayerFromWantedList(id);
		new mes[128];
		format(mes,sizeof(mes),"[A] %s снял розыск %s",pData[playerid][pNickname],pData[id][pNickname]);
		AdminChat(CORANGE,mes);
		format(mes,sizeof(mes),"Администратор %s снял вам розыск",pData[playerid][pNickname]);
		SendClientMessage(id,CDEPARTMENT,mes);
	}
/*	if(!strcmp(cmd,"/logfreez1",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		logExit = true;
		logFreez = true;
	}
	if(!strcmp(cmd,"/logfreez2",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		logExit = false;
		logFreez = false;
	}
	if(!strcmp(cmd,"/loggang1",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		logGang = true;
	}
	if(!strcmp(cmd,"/loggang0",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		logGang = false;
	}*/
	if(!strcmp(cmd,"/showeconomic",true))
	{
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		if(!pTemp[playerid][pEconomicLog])
		{
			pTemp[playerid][pEconomicLog] = true;
			SendClientMessage(playerid,CSYSTEM,"Лог включен");
		}
		else
		{
			pTemp[playerid][pEconomicLog] = false;
			SendClientMessage(playerid,CSYSTEM,"Лог выключен");
		}
	}
	if(!strcmp(cmd,"/updateeconomic",true))
	{
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не Администратор");
		UpdateEconomic();
		SendClientMessage(playerid,CSYSTEM,"Данные экономики обновлены");
	}
	if(!strcmp(cmd,"/cb",true))
	{
		if(pData[playerid][pAdmin] < 8 || !IsPlayerAdmin(playerid)) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/cb [type] [bint] [price] [name]");
		new type = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/cb [type] [bint] [price] [name]");
		new bint = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CGRAY,"/cb [type] [bint] [price] [name]");
		new price = strval(tmp);
		new name[128];
		name = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/cb [type] [bint] [price] [name]");
		mysql_real_escape_string(name,name);
		new Float:x, Float:y, Float:z, Float:r;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,r);
		new query[256];
		format(query,sizeof(query),"INSERT INTO `business` VALUES('','%s','%d','%d','0','%d','0','0','0','1','%f','%f','%f','%f','','')",name,type,bint,price,x,y,z,r);
		mysql_query(query);
		if(mysql_errno()) return SendClientMessage(playerid,CGRAY,"Ошибка MySQL");
		CreateDynamicPickup(19132,1,x,y,z);
		SendClientMessage(playerid,CGREEN,"Бизнес создан");
	}
	//Языки
	if(!strcmp(cmd,"/jp",true))
	{
		if(pData[playerid][pLanguage] & LANG_JAPAN == 0) return SendClientMessage(playerid,CGRAY,"Вы не знаете японский язык");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/jp [текст]");
		Speech(playerid,tmp,LANG_JAPAN);
	}
	if(!strcmp(cmd,"/it",true))
	{
		if(pData[playerid][pLanguage] & LANG_ITALIAN == 0) return SendClientMessage(playerid,CGRAY,"Вы не знаете итальянский язык");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/it [текст]");
		Speech(playerid,tmp,LANG_ITALIAN);
	}
	if(!strcmp(cmd,"/fr",true))
	{
		if(pData[playerid][pLanguage] & LANG_FRENCH == 0) return SendClientMessage(playerid,CGRAY,"Вы не знаете французский язык");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/mx [текст]");
		Speech(playerid,tmp,LANG_FRENCH);
	}
	if(!strcmp(cmd,"/pt",true))
	{
		if(pData[playerid][pLanguage] & LANG_PORTUGAL == 0) return SendClientMessage(playerid,CGRAY,"Вы не знаете португальский язык");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/mx [текст]");
		Speech(playerid,tmp,LANG_PORTUGAL);
	}
	if(!strcmp(cmd,"/is",true))
	{
		if(pData[playerid][pLanguage] & LANG_SPAIN == 0) return SendClientMessage(playerid,CGRAY,"Вы не знаете испанский язык");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/mx [текст]");
		Speech(playerid,tmp,LANG_SPAIN);
	}
	if(!strcmp(cmd,"/ru",true))
	{
		if(pData[playerid][pLanguage] & LANG_RUSSIAN == 0)  return SendClientMessage(playerid,CGRAY,"Вы не знаете русский язык");
		tmp = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CGRAY,"/mx [текст]");
		Speech(playerid,tmp,LANG_RUSSIAN);
	}


	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	pTemp[playerid][pAbletoGun] = 2;
	if(pTemp[playerid][pCuffee] == playerid)
	{
		SendClientMessage(playerid,CGRAY,"Вы не можете сесть в т/с в наручниках");
		RemovePlayerFromVehicle(playerid);
		ClearAnimations(playerid);
		return 1;
	}
	if(!ispassenger) pTemp[playerid][pEnterVehicle] = vehicleid;
	if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
	{
		new driver = gVehicleDriver[vehicleid-1];
		if(IsPlayerConnected(driver))
		{
			if(pTemp[driver][pBusID] == vehicleid)
			{
				if(ispassenger) SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
				else if(playerid != driver) SetVehicleParamsForPlayer(vehicleid,playerid,0,1);
				else if(playerid == driver) SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	pTemp[playerid][pAbletoGun] = 2;
	new id = GetPVarInt(playerid, "vehid");
	if(id > 0) { // (???? ????????)
		GetVehiclePos(id, gVehicles[id - 1][vX], gVehicles[id - 1][vY], gVehicles[id - 1][vZ]);
		GetVehicleZAngle(id, gVehicles[id - 1][vA]);
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_PASSENGER) SetTimerEx("AntiCarShoter",3500,false,"i",playerid);
	if(newstate == PLAYER_STATE_ONFOOT) checkcs[playerid] = 0;
	pTemp[playerid][pAbletoGun] = 2;
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(!NoShowSpeed(GetPlayerVehicleID(playerid))) {
			for(new t = 0;t<12;t++) PlayerTextDrawHide(playerid,BarTextdraws[t][playerid]);
		}
 		SetPlayerArmedWeapon(playerid,0);
		new vehicleid = GetPlayerVehicleID(playerid);
		new model = GetPlayerVehicleSeat(playerid);
		if(model != 128)
		{
			if(!model)
			{
				model = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return Kick(playerid);
			}
			else return Kick(playerid);
		}
		if(pTemp[playerid][pEnterVehicle] != vehicleid && !IsKicked(playerid))
		{
			SendClientMessage(playerid,CADMIN,"Вы были кикнуты по подозрению в читерстве (#102)");
			new mes[128];
			format(mes,sizeof(mes),"[A] %s[%d] был кикнут за ТП в авто {"#cGRAY"}(%d != %d)",pData[playerid][pNickname],playerid,pTemp[playerid][pEnterVehicle],vehicleid);
			AdminChat(CORANGE,mes);
			NewKick(playerid);
			return 1;
		}
		else pTemp[playerid][pEnterVehicle] = INVALID_VEHICLE_ID;
		new id = GetVehicleModel(vehicleid)-400;
		if(gTransport[id][trFuelable] != 0)
		{
			if(!NoShowSpeed(GetPlayerVehicleID(playerid)))
			{
				SendClientMessage(playerid,CGREEN,"Чтобы завести авто используйте {"#cWHITE"}\"CTRL\" {"#cGREEN"}(по умолчанию) или Команду {"#cWHITE"}/start (/st)");
				UpdateCarInfo(playerid,vehicleid,0);
				pTemp[playerid][pCarInfoTimer] = SetTimerEx("UpdateCarInfo",200,true,"iii",playerid,vehicleid,0);
			}
		}
		else
		{
			ToggleEngine(vehicleid);
		}
		if(id<0)
		{
			RemovePlayerFromVehicle(playerid);
			SendClientMessage(playerid,CGRAY,"Ошибка");
			return 1;
		}
		gVehicles[vehicleid - 1][vOccupied] = true;
		SetPVarInt(playerid, "vehid", vehicleid);
		if(vehicleid) gVehicleDriver[vehicleid-1] = playerid;
		if(!NoShowSpeed(GetPlayerVehicleID(playerid))) {
			PlayerTextDrawSetPreviewModel(playerid,SpeedTextdraws[1][playerid], GetVehicleModel(vehicleid));
 			//for(new si = 0;si<32;si++) PlayerTextDrawShow(playerid,SpeedTextdraws[si][playerid]);
		 	PlayerTextDrawShow(playerid,SpeedTextdraws[0][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[1][playerid]);
 			PlayerTextDrawShow(playerid,SpeedTextdraws[2][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[4][playerid]);
			PlayerTextDrawShow(playerid,SpeedTextdraws[19][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[20][playerid]);
 			PlayerTextDrawShow(playerid,SpeedTextdraws[22][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[25][playerid]);
 			PlayerTextDrawShow(playerid,SpeedTextdraws[26][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[28][playerid]);
 			PlayerTextDrawShow(playerid,SpeedTextdraws[29][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[18][playerid]);
			PlayerTextDrawShow(playerid,SpeedTextdraws[23][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[24][playerid]);
			PlayerTextDrawShow(playerid,SpeedTextdraws[27][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[21][playerid]); PlayerTextDrawShow(playerid,SpeedTextdraws[30][playerid]);
			
		}
		if(GetVehicleModel(vehicleid) != 462)
		{
			if(pData[playerid][pLicenses] || pTemp[playerid][pOnExam]){}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,CGRAY,"У Вас нет водительских прав");
				return 1;
			}
		}
		if(GetVehicleType(id) == VEHICLE_TYPE_PLANE)
		{
			/*if(pData[playerid][pLicenses] & LIC_FLY  || pTemp[playerid][pOnExam]){}
			else
			{
				//RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,CGRAY,"У Вас нет лицензии пилота");
				return 1;
			}*/
		}
		if(GetVehicleType(id) == VEHICLE_TYPE_BOAT)
		{
			/*if(pData[playerid][pLicenses] & LIC_BOAT || pTemp[playerid][pOnExam]){}
			else
			{
			//RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,CGRAY,"У Вас нет лицензии на управление водным транспортом");
				return 1;
			}*/
		}
		pTemp[playerid][pOldVehicleid] = vehicleid;
		if(vehicleid >= aSellCar[0] && vehicleid <= aSellCar[4] && !IsKicked(playerid))
		{
			SendClientMessage(playerid,CGRAY,"Вы были кикнуты по подозрению в читерстве");
			NewKick(playerid);
		}
		else if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
		{
			if(pData[playerid][pJob] != 1)
			{
				SendClientMessage(playerid,CGRAY,"Вы не водитель автобуса");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pBusID] == vehicleid)
			{
				if(pTemp[playerid][pBusSpawnTimer]) KillTimer(pTemp[playerid][pBusSpawnTimer]);
				SetNextBusCP(playerid,pTemp[playerid][pBusPos]);
				return 1;
			}
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(i == playerid) continue;
				if(pTemp[i][pBusID] == vehicleid)
				{
					SendClientMessage(playerid,CGRAY,"Этот автобус уже арендуют");
					RemovePlayerFromVehicle(playerid);
				}
			}
			if(pTemp[playerid][pBusID] != INVALID_VEHICLE_ID && pTemp[playerid][pBusID] != vehicleid) return SendClientMessage(playerid,CGRAY,"Вы уже арендуете автобус");
			/*if(vehicleid >= aBus[1] && vehicleid < aBus[2] && pData[playerid][pBusSkill] < BUS_LEVEL_2)
			{
				SendClientMessage(playerid,CGRAY,"Вам нужен 2-ой уровень водителя автобуса для автобуса этого типа");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(vehicleid >= aBus[2] && pData[playerid][pBusSkill] < BUS_LEVEL_3)
			{
				SendClientMessage(playerid,CGRAY,"Вам нужен 3-ий уровень водителя автобуса для автобуса этого типа");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}*/
			if(GetPlayerMoneyEx(playerid) < 200)
			{
				SendClientMessage(playerid,CGRAY,"Вам нужно 200$ для аренды автобуса");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dBusRent,0,"Аренда автобуса","{"#cWHITE"}Вы хотите арендовать этот автобус за {"#cRED"}200${"#cWHITE"},\nчтобы возить на нем пассажиров и зарабатывать деньги?","Да","Нет");
		}
		else if(vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1])
		{
			if(pData[playerid][pJob] != 2)
			{
				SendClientMessage(playerid,CGRAY,"Вы не работаете дальнобойщиком");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || i == playerid) continue;
				if(pTemp[i][pTruckID] == vehicleid)
				{
					SendClientMessage(playerid,CGRAY,"Этот тягач уже арендуют");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(pTemp[playerid][pTruckID] == vehicleid) return 1;
			if(pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
			{
				SendClientMessage(playerid,CGRAY,"Вы уже арендуете тягач");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			new trucklevel,price;
			if(vehicleid >= aTruck[0][0] && vehicleid <= aTruck[0][1]) {trucklevel = 1; price = 1000;}
			else if(vehicleid >= aTruck[1][0] && vehicleid <= aTruck[1][1]) {trucklevel = 2; price = 2000;}
			else {trucklevel = 3; price = 5000;}
			if((trucklevel == 2 && pData[playerid][pTruckSkill] < TRUCK_LEVEL_2) ||
			(trucklevel == 3 && pData[playerid][pTruckSkill] < TRUCK_LEVEL_3))
			{
				SendClientMessage(playerid,CGRAY,"Ваш опыт работы дальнобойщиком не достаточен для этого транспорта");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				new mes[128];
				format(mes,sizeof(mes),"Вам нужно $%d чтобы арендовать этот трак",price);
				SendClientMessage(playerid,CGRAY,mes);
				return RemovePlayerFromVehicle(playerid);
			}
			SetPVarInt(playerid,"truckprice",price);
			SPFD(playerid,dTruckRent,0,"Аренда грузовика","Да","Нет","{"#cWHITE"}Вы хотите арендовать этот грузовик за {"#cRED"}$%d{"#cWHITE"},\n чтобы возить на нем грузы?",price);

		}
		else if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1])
		{
			if(pData[playerid][pJob] != 3)
			{
				SendClientMessage(playerid,CGRAY,"Вы не работаете таксистом");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pTaxiID] == vehicleid) return 1;
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || i == playerid) continue;
				if(pTemp[i][pTaxiID] == vehicleid)
				{
					SendClientMessage(playerid,CGRAY,"Это такси уже арендуют");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID)
			{
				SendClientMessage(playerid,CGRAY,"Вы уже арендуете такси");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < 200)
			{
				SendClientMessage(playerid,CGRAY,"Вам нужно $200 чтобы арендовать это такси");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			SPFD(playerid,dTaxiRent,0,"Аренда такси","Да","Нет","{"#cWHITE"}Вы хотите арендовать это такси за {"#cRED"}$200{"#cWHITE"}, чтобы возить на нем пассажиров?");
		}
		else if(vehicleid >= aMech[0] && vehicleid <= aMech[1])
		{
			if(pData[playerid][pJob] != 4)
			{
				SendClientMessage(playerid,CGRAY,"Вы не работаете механиком");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pMechID] == vehicleid) return 1;
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || i == playerid) continue;
				if(pTemp[i][pMechID] == vehicleid)
				{
					SendClientMessage(playerid,CGRAY,"Этот буксир уже арендуют");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(GetPlayerMoneyEx(playerid) < 500)
			{
				SendClientMessage(playerid,CGRAY,"Вам нужно $500 чтобы арендовать этот буксир");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dMechRent,0,"Аренда буксира","{"#cWHITE"}Вы хотите арендовать этот буксир за {"#cRED"}$500{"#cWHITE"}?","Да","Нет");
		}
		else if(vehicleid >= aProduct[0] && vehicleid <= aProduct[1])
		{
			if(pData[playerid][pJob] != 5)
			{
				SendClientMessage(playerid,CGRAY,"Вы не работаете развозчиком товаров");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pDFTID] == vehicleid) return 1;
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || i == playerid) continue;
				if(pTemp[playerid][pDFTID] == vehicleid)
				{
					SendClientMessage(playerid,CGRAY,"Этот DFT уже арендуют");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(GetPlayerMoneyEx(playerid) < 500)
			{
				SendClientMessage(playerid,CGRAY,"Вам нужно $500 чтобы арендовать этот DFT");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dDFTRent,0,"Аренда DFT","{"#cWHITE"}Вы хотите арендовать этот DFT за {"#cRED"}$500{"#cWHITE"}?","Да","Нет");
		}
		else if(vehicleid >= aInstructor[0] && vehicleid <= aInstructor[1])
		{
			if(pData[playerid][pFraction] != 1 && !pTemp[playerid][pOnExam])
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только иструкторам и экзаменуемым");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aHospital[0][0] && vehicleid <= aHospital[0][1])
		{
			if(pData[playerid][pFraction] != 2 || pData[playerid][pSubfraction] != 1)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только мед. работникам LS");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aHospital[1][0] && vehicleid <= aHospital[1][1])
		{
			if(pData[playerid][pFraction] != 2 || pData[playerid][pSubfraction] != 2)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только мед. работникам SF");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aHospital[2][0] && vehicleid <= aHospital[2][1])
		{
			if(pData[playerid][pFraction] != 2 || pData[playerid][pSubfraction] != 3)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только мед. работникам LV");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aArmy1[0] && vehicleid <= aArmy1[1])
		{
			if(pData[playerid][pFraction] != 8 || pData[playerid][pSubfraction] == 1)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только ВСН");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(GetVehicleModel(vehicleid) == 520 && pData[playerid][pRank] < 8)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только с 8 ранга");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(GetVehicleModel(vehicleid) == 425 && pData[playerid][pRank] == 5)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только с 5 ранга");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aArmy2[0] && vehicleid <= aArmy2[1])
		{
			if(pData[playerid][pFraction] != 8 || pData[playerid][pSubfraction] == 2)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только ВВС");
				RemovePlayerFromVehicle(playerid);
			}
			else if(GetVehicleModel(vehicleid) == 520 && pData[playerid][pRank] == 8)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только с 8 ранга");
				RemovePlayerFromVehicle(playerid);
			}
			else if(GetVehicleModel(vehicleid) == 425 && pData[playerid][pRank] == 5)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только с 5 ранга");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aLSPD[0] && vehicleid <= aLSPD[1])
		{
			if(pData[playerid][pFraction] != 9 || pData[playerid][pSubfraction] != 1)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам LSPD");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aSFPD[0] && vehicleid <= aSFPD[1])
		{
			if(pData[playerid][pFraction] != 9 || pData[playerid][pSubfraction] != 2)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам SFPD");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aLVPD[0] && vehicleid <= aLVPD[1])
		{
			if(pData[playerid][pFraction] != 9 || pData[playerid][pSubfraction] != 3)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам LVPD");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aNews[0] && vehicleid <= aNews[1])
		{
			if(pData[playerid][pFraction] != 10)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам News Network");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aPris[0] && vehicleid <= aPris[1])
		{
			if(pData[playerid][pFraction] != 11)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам Администрации штата");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aMarLS[0] && vehicleid <= aMarLS[1])
		{
			if(pData[playerid][pFraction] != 12)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам Мэрия ЛС");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aMarSF[0] && vehicleid <= aMarSF[1])
		{
			if(pData[playerid][pFraction] != 13)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам Мэрия СФ");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aMarLV[0] && vehicleid <= aMarLV[1])
		{
			if(pData[playerid][pFraction] != 14)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам Мэрия ЛВ");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aYak[0] && vehicleid <= aYak[1])
		{
			if(pData[playerid][pFraction] != 15)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам Yakudza");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aLCN[0] && vehicleid <= aLCN[1])
		{
			if(pData[playerid][pFraction] != 16)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам La Cosa Nostra");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aRM[0] && vehicleid <= aRM[1])
		{
			if(pData[playerid][pFraction] != 17)
			{
				SendClientMessage(playerid,CGRAY,"Этот транспорт доступен только сорудникам Russian Mafia");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else //Цикл на проверку т.с. бандитов
		{
			for(new i;i<5;i++)
			{
				for(new j;j<5;j++)
				{
					if(vehicleid == aGang[i][j] && pData[playerid][pFraction] != i+3)
					{
						new mes[128];
						format(mes,sizeof(mes),"Этот транспорт доступен только членам %s",gFractionName[i+2]);
						SendClientMessage(playerid,CGRAY,mes);
						RemovePlayerFromVehicle(playerid);
					}
				}
			}
		}
		if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading])
		{
			if(vehicleid >= aArmy1[0] && vehicleid <= aArmy2[1] && pData[playerid][pFraction] != 8) return 1;
			if(vehicleid >= aLSPD[0] && vehicleid <= aLVPD[1] && pData[playerid][pFraction] != 9) return 1;
			ShowPlayerDialog(playerid,dStopLoad,0,"Погрузка","{"#cWHITE"}Вы хотите прекратить загрузку боеприпасов в грузовик?","Да","Нет");
		}
		SetPVarInt(playerid, "vehid", GetPlayerVehicleID(playerid));
		if(vehicleid) gVehicleDriver[vehicleid-1] = playerid;
		gVehicles[GetPlayerVehicleID(playerid) - 1][vOccupied] = true;
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid,CGRAY,"У Вас есть 15 секунд, чтобы вернуться в автобус");
			pTemp[playerid][pBusSpawnTimer] = SetTimerEx("BusSpawn",15000,false,"i",playerid);
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		pTemp[playerid][pOldVehicleid] = vehicleid;
		SetPlayerArmedWeapon(playerid,29);
		if(vehicleid >= aBus[0] && vehicleid <= aBus[1] && gVehicleDriver[vehicleid-1] != INVALID_PLAYER_ID) //Пассажир сел в автобус
		{
			new driverid = gVehicleDriver[vehicleid-1];
			new price = pTemp[driverid][pBusPrice];
			if(GetPlayerMoneyEx(playerid) < price)
			{
				MeAction(playerid,"показал проездной водителю");
				return 1;
			}
			new mes[12];
			format(mes,sizeof(mes),"~g~+$%d",price);
			GameTextForPlayer(driverid,mes,1000,1);
			format(mes,sizeof(mes),"~r~-$%d",price);
			GameTextForPlayer(playerid,mes,1000,1);
			TransferMoney(playerid,driverid,price,"taxipay");
		}
		if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1] && gVehicleDriver[vehicleid-1] != INVALID_PLAYER_ID) //Пассажир сел в такси
		{
			new driverid = gVehicleDriver[vehicleid-1];
			if(pTemp[driverid][pTaxiID] != vehicleid || !pTemp[driverid][pTaxiPrice]) return 1;
			if(pTemp[driverid][pTaxiPass] == INVALID_PLAYER_ID)
			{
				if(GetPlayerMoneyEx(playerid) < pTemp[driverid][pTaxiPrice])
				{
					SendClientMessage(playerid,CRED,"Недостаточно денег");
					return RemovePlayerFromVehicle(playerid);
				}
				pTemp[driverid][pTaxiStart] = gVehicles[vehicleid-1][vDrived];
				pTemp[driverid][pTaxiPass] = playerid;
				pTemp[driverid][pTaxiGoing] = true;
			}
			else
			{
				if(pTemp[driverid][pTaxiTurn][0] == INVALID_PLAYER_ID) pTemp[driverid][pTaxiTurn][0] = playerid;
				else if(pTemp[driverid][pTaxiTurn][1] == INVALID_PLAYER_ID) pTemp[driverid][pTaxiTurn][1] = playerid;
				else
				{
					if(!IsPlayerConnected(pTemp[driverid][pTaxiTurn][0]) || GetPlayerVehicleID(pTemp[driverid][pTaxiTurn][0]) != vehicleid)
					{
						if(pTemp[driverid][pTaxiTurn][1] != INVALID_PLAYER_ID)
						{
							pTemp[driverid][pTaxiTurn][0] = pTemp[driverid][pTaxiTurn][1];
							pTemp[driverid][pTaxiTurn][1] = playerid;
						}
						else pTemp[driverid][pTaxiTurn][0] = playerid;
					}
					else if(!IsPlayerConnected(pTemp[driverid][pTaxiTurn][1]) || GetPlayerVehicleID(pTemp[driverid][pTaxiTurn][1]) != vehicleid)
					{
						pTemp[driverid][pTaxiTurn][1] = playerid;
					}
					else
					{
						SendClientMessage(playerid,CGRAY,"Ошибка. Зайдите в такси еще раз");
						RemovePlayerFromVehicle(playerid);
					}
				}
			}
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER)
	{
		if(pTemp[playerid][pCarInfoTimer] != 0)
		{
		    HideCarInfo(playerid);
			KillTimer(pTemp[playerid][pCarInfoTimer]);
			pTemp[playerid][pCarInfoTimer] = 0;
			for(new i = 0; i < 31; i++) PlayerTextDrawHide(playerid, SpeedTextdraws[i][playerid]);
		}
		new id = GetPVarInt(playerid, "vehid");
		if(id)
		{
			gVehicles[id - 1][vCheckDelay] = true;
			gVehicles[id - 1][vOccupied] = false;
			GetVehiclePos(id, gVehicles[id - 1][vX], gVehicles[id - 1][vY], gVehicles[id - 1][vZ]);
			GetVehicleZAngle(id, gVehicles[id - 1][vA]);
			gVehicles[id - 1][vCheckDelay] = true;
			gVehicleDriver[id-1] = INVALID_VEHICLE_ID;
			SetPVarInt(playerid, "lastveh", id);
		}
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(pTemp[playerid][pGPS])
	{
		DisablePlayerCheckpoint(playerid);
		pTemp[playerid][pGPS] = false;
		PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterDynamicCP(playerid,checkpointid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
	{
		DisablePlayerRaceCheckpoint(playerid);
		new pos = pTemp[playerid][pBusPos];
		new route = pTemp[playerid][pBusRoute];
		if(gBusCPs[route][pos][0] == gBusCPs[route][pos+1][0] && gBusCPs[route][pos][1] == gBusCPs[route][pos+1][1]) //Остановка
		{
		    new text[130],routename[56];
   			new routes = GetPVarInt(playerid,"pbusroute");
			switch(routes)
			{
				case 0: routename = "{"#cORANGE"}ЖДЛС {"#cWHITE"}- {"#cORANGE"}Лесопилка";
				case 1: routename = "{"#cORANGE"}ЖДЛС {"#cWHITE"}- {"#cORANGE"}Оружейный завод";
				case 2: routename = "{"#cORANGE"}ЖДЛС {"#cWHITE"}- {"#cORANGE"}Автошкола";
				case 3: routename = "{"#cORANGE"}ЖДСФ {"#cWHITE"}- {"#cORANGE"}Шахта";
				case 4: routename = "{"#cORANGE"}ЖДСФ {"#cWHITE"}- {"#cORANGE"}Оружейный завод";
			}
			format(text,sizeof(text),"Автобус %s остановился на близжайшей остановке.",routename);
		    ActionDex(playerid,text);
			SetTimerEx("BusStop",10000,false,"i",playerid);
			return 1;
		}
		if(pos == 99 || gBusCPs[route][pos+1][0] == 0.0)
		{
			if(route < 4) pTemp[playerid][pBusPos] = 10;
			else pTemp[playerid][pBusPos] = 0;
			pData[playerid][pSalary] += gBusSalary[route];
			new buslevel = 0;
			if(pData[playerid][pBusSkill] >= BUS_LEVEL_2) buslevel = 1;
			if(pData[playerid][pBusSkill] >= BUS_LEVEL_3) buslevel = 2;
			pData[playerid][pSalary] += gBusAward[buslevel];
			pData[playerid][pBusSkill] ++;
			new query[512];
			format(query,sizeof(query),"UPDATE `accounts` SET `salary` = '%d', `busskill` = '%d' WHERE `id` = '%d'",pData[playerid][pSalary],pData[playerid][pBusSkill],pData[playerid][pMysqlID]);
			mysql_query(query);
			format(query,sizeof(query),"%d$ было добавлено к вашей зарплате.",gBusSalary[route]);
			SendClientMessage(playerid,CGREEN,query);
			if(pData[playerid][pBusSkill] == BUS_LEVEL_2 || pData[playerid][pBusSkill] == BUS_LEVEL_3) SendClientMessage(playerid,CGREEN,"Вы повысили свой уровень водителя автобуса");
		}
		else pTemp[playerid][pBusPos]++;
		SetNextBusCP(playerid,pTemp[playerid][pBusPos]);
	}
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	new pstate = GetPlayerState(playerid);
	if(!pTemp[playerid][pAbletoTP] && !pTemp[playerid][pIsAFK] && pstate != PLAYER_STATE_SPECTATING && pstate != PLAYER_STATE_SPAWNED && !pData[playerid][pAdmin]) {
		new Float:xa, Float:ya, Float:za;
		new Float:b_x, Float:b_y, Float:b_z;
		GetPlayerPos(playerid, b_x, b_y, b_z);
		xa = b_x - pTemp[playerid][pX];
		ya = b_y - pTemp[playerid][pY];
		za = b_z - pTemp[playerid][pZ];
		new Float:distance;
		distance = floatsqroot(floatadd(floatadd(floatpower(xa,2),floatpower(ya,2)),floatpower(za,2)));
		new tick = GetTickCount();
		if(!distance && tick - pTemp[playerid][pLastTick] <= 1500) {pTemp[playerid][pKick3] = 0;}
		else if(!IsKicked(playerid))
		{
			if(!pTemp[playerid][pControllable] && !IsPlayerInAnyVehicle(playerid) && tick - pTemp[playerid][pLastTick] <= 1500) pTemp[playerid][pKick3]++;
			if(pTemp[playerid][pKick3] == 3)
			{
				new mes[128],nname[24];
				GetPlayerName(playerid,nname,24);
				format(mes,sizeof(mes),"%s [%d] подозревается в антифризе",nname,playerid);
				AdminChat(CRED,mes);
				pTemp[playerid][pKick3] = 0;
				if(!pTemp[playerid][pLogined])
				{
					//AdminChat(CWHITE,"Был кикнут");
///					NewKick(playerid);
				}
			}
			pTemp[playerid][pDarkAFK] = 0;
			if(distance > MAX_SPEED && tick - pTemp[playerid][pLastTick] <= 1500 && pTemp[playerid][pREGISKL] == false)
			{
				//SFCM(playerid,CGRAY,"Вы были кикнуты по подозрению в читерстве (Спидхак / ТП / Флай) (%.2f)",distance);
				//NewKick(playerid);
			}
			else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && distance > MAX_ONFOOT_SPEED && za > -10.0 && tick - pTemp[playerid][pLastTick] <= 1500 && pTemp[playerid][pREGISKL] == false)
			{
				pTemp[playerid][pKick]++;
				if(pTemp[playerid][pKick] == 4 && pTemp[playerid][pREGISKL] == false)
				{
					SFCM(playerid,CGRAY,"Вы были кикнуты по подозрению в читерстве (Спидхак / ТП / Флай) (%.2f)",distance);
					NewKick(playerid);
				}
			}
/*			else if(distance > MAX_INCAR_SPEED && tick - pTemp[playerid][pLastTick] <= 1500)
			{
				pTemp[playerid][pKick]++;
				if(pTemp[playerid][pKick] == 3 && pTemp[playerid][pREGISKL] == false)
				{
					SFCM(playerid,CGRAY,"Вы были кикнуты по подозрению в читерстве (Спидхак / ТП / Флай) (%.2f)",distance);
					NewKick(playerid);
				}
			}
			else pTemp[playerid][pKick] = 0;
			*/
			pTemp[playerid][pX] = b_x;
			pTemp[playerid][pY] = b_y;
			pTemp[playerid][pZ] = b_z;
			pTemp[playerid][pLastTick] = GetTickCount();
			new Float:xw, Float:yw, Float:zw;
			GetPlayerVelocity(playerid,xw,yw,zw);
			if(xw > 2.0 || yw > 2.0)
			{
				pTemp[playerid][pKick8]++;
				if(pTemp[playerid][pKick8] >= 3)
				{
					SendClientMessage(playerid,CORANGE,"Вы были кикнуты по подозрению в читерстве (#118)");
					pTemp[playerid][pKick8] = 0;
					NewKick(playerid);
				}
				new mes[128];
				format(mes,sizeof(mes),"[A] %s [%d] подозревается в ****рванке (%d/3)",pData[playerid][pNickname],playerid,pTemp[playerid][pKick8]);
				AdminChat(CRED,mes);
			}
		}
	}
	if(areaid >= gBearingArea[0] && areaid <= gBearingArea[99])
	{
		new id = areaid - gBearingArea[0];
		gPlayerBearingID[playerid] = id;
	}
	/*new mes3[128];
	format(mes3,sizeof(mes3),"%d",areaid);
	SendClientMessage(playerid,CWHITE,mes3);*/
	if(areaid >= gHouseArea[0] && areaid <= gHouseArea[gHouseCount-1])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new houseid=areaid - gHouseArea[0];
		/*for(new i;i<gHouseCount;i++)
		{
			if(gHouseArea[i] == areaid)
			{
				houseid = i;
				break;
			}
		}	*/
		if(houseid == -1) return 1;
		pTemp[playerid][pSelectedHouseID] = houseid;
		new mes[128];
		new classname[20];
		switch(gHouses[houseid][houseClass])
		{
			case 0:classname = "Эконом";
			case 1:classname = "Cредний";
			case 2:classname = "Элитный";
			case 3:classname = "Особняк";
			default: classname = "Неизвестно";
		}
		if(!gHouses[houseid][houseOwnerID]) // на продажу
		{
			format(mes,sizeof(mes),"{"#cWHITE"}Номер дома: {"#cGREEN"}%d\n{"#cWHITE"}Класс: {"#cGREEN"}%s\n{"#cWHITE"}Цена: {"#cGREEN"}%d",gHouses[houseid][houseID],classname,gHouses[houseid][housePrice]);
			ShowPlayerDialog(playerid,dHouseInfo,0,"Частный дом",mes,"Купить","Отмена");
		}
		else
		{
			format(mes,sizeof(mes),"{"#cWHITE"}Номер дома: {"#cGREEN"}%d\n{"#cWHITE"}Класс: {"#cGREEN"}%s\n{"#cWHITE"}Владелец: {"#cGREEN"}%s",gHouses[houseid][houseID],classname,gHouses[houseid][houseOwner]);
			ShowPlayerDialog(playerid,dHouseInfo,0,"Частный дом",mes,"Войти","Отмена");
		}
	}
	else if(areaid >= gBusinessArea[0] && areaid <= gBusinessArea[gBusinessCount - 1])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new businessid= areaid - gBusinessArea[0];
		/*for(new i;i<gBusinessCount;i++)
		{
			if(gBusinessArea[i] == areaid)
			{
				businessid = i;
				break;
			}
		}	*/
		if(businessid < 0) return SendClientMessage(playerid,CGRAY,"Ошибка (#100)");
		if(!gBusiness[businessid][busiStatus] && pData[playerid][pMysqlID] != gBusiness[businessid][busiOwnerID]) return 1;
		pTemp[playerid][pSelectedBusinessID] = businessid;
		if(!gBusiness[businessid][busiOwnerID])
		{
			new mes[128];
			format(mes,sizeof(mes),"{"#cWHITE"}Этот бизнес продается за {"#cRED"}$%d.",gBusiness[businessid][busiSellPrice]);
			ShowPlayerDialog(playerid,dBuyBusiness1,0,"Бизнес",mes,"Купить","Выход");
		}
		else
		{
			new bint = gBusiness[businessid][busiBint]-1;
			if(bint < 0 || bint >= BINT_COUNT) return SendClientMessage(playerid,CGRAY,"Ошибка (#99)");
			pTemp[playerid][pJustTP] = true;
			SetPlayerInterior(playerid,gBints[bint][bintInterior]);
			SetPlayerVirtualWorld(playerid,businessid+1);
			SetPlayerPos(playerid,gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ]);
			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			if(bint == 21)
			{
				TogglePlayerControllable(playerid,0);
				SetTimerEx("Unfreez",2000,false,"i",playerid);
			}
		}
	}
	else if(areaid >= gBusiness[0][busiDelivingArea] && areaid <= gBusiness[gBusinessCount - 1][busiDelivingArea])
	{
		if(pTemp[playerid][pDeliving])
		{
			new businessid = areaid - gBusiness[0][busiDelivingArea];
			new deliveryid = pTemp[playerid][pDeliveryid];
			new number = pTemp[playerid][pDeliveryNumber];
			if(gDelivery[deliveryid][deliBusinessid] == businessid)
			{
				if(!gDelivery[deliveryid][deliProduct][number]) return SendClientMessage(playerid,CGRAY,"Сначала вам нужно зарузиться в доках");
				DisablePlayerCheckpoint(playerid);
				pTemp[playerid][pGPS] = false;
				SendClientMessage(playerid,CINFO,"Посигнальте, чтобы разгрузить товар");
			}
			if(gDelivery[deliveryid][deliPerformerid][number] != playerid)
			{
				SendClientMessage(playerid,CGRAY,"Ошибка (#120)");
				gDelivery[deliveryid][deliPerformerid][number] = INVALID_PLAYER_ID;
				gDelivery[deliveryid][deliProduct][number] = 0;
				if(gDelivery[deliveryid][deliPerforming] > 0) gDelivery[deliveryid][deliPerforming]--;
				pTemp[playerid][pDeliving] = false;
				pTemp[playerid][pDeliveryid] = 0;
				pTemp[playerid][pDeliveryNumber] = 0;
				new amount = gDelivery[deliveryid][deliProduct][number];
				gDelivery[deliveryid][deliProduct][number] = 0;
				SaveDeliveryData(deliveryid);
				if(gBusiness[businessid][busiDeliving] >= amount && amount)
				{
					gBusiness[businessid][busiDeliving] -= amount;
					gBusiness[businessid][busiOrder] += amount;
				}
			}
		}
	}
	else if(areaid >= gBintEnterArea[0] && areaid <= gBintEnterArea[BINT_COUNT-1])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new id = pTemp[playerid][pSelectedBusinessID];
		if(id < 0) return 1;
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		pTemp[playerid][pJustTP] = true;
		SetPlayerPos(playerid,gBusiness[id][busiX],gBusiness[id][busiY],gBusiness[id][busiZ]);
		SetPlayerFacingAngle(playerid,gBusiness[id][busiR]);
	}
	else if(areaid >= gBintBuyArea[0] && areaid <= gBintBuyArea[BINT_COUNT-1])
	{
		new id = pTemp[playerid][pSelectedBusinessID];
		if(id < 0) return 1;
		new products = gBusiness[id][busiProduct];
		if(!products) return SendClientMessage(playerid,CGRAY,"К сожалению, товара не осталось");
		new type = gBusiness[id][busiType];
		switch(type)
		{
			case 1: // Прод. магазин
			{
				if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
				new houseid = pData[playerid][pHouse]-1;
				if(!gHouses[houseid][houseImprove][2]) return SendClientMessage(playerid,CGRAY,"У Вас дома нет холодильника");
				if(pTemp[playerid][pCarryProducts]) return SendClientMessage(playerid,CGRAY,"Вы уже купили продукты");
				ShowPlayerDialog(playerid,dGrocer,1,"Магазин продуктов","{"#cWHITE"}Здесь Вы можете купить продукты которые будут храниться в вашем холодильнике\nУкажите количество продуктов которое Вы хотите купить:","ОК","Отмена");
			}
			case 2: //Закусочная
			{
				if(pData[playerid][pHunger] == 100) return SendClientMessage(playerid,CGRAY,"Ошибка: У Вас достаточный уровень сытости.");
				ShowPlayerEateryTD(playerid, id);
			}
			case 3: //24/7
			{
				new mes[256];
				for(new i;i<SHOP_OBJECTS;i++)
				{
					format(mes,sizeof(mes),"%s%s ($%d)\n",mes,gShopObject[i],gShopProduct[i]*gBusiness[id][busiPrice]);
				}
				ShowPlayerDialog(playerid,dShop,2,"Магазин 24/7",mes,"Купить","Выход");
			}
			case 4..5: //Бар, клуб
			{
				ShowPlayerBarTD(playerid, id);
			}
			case 7: {
			    if(pTemp[playerid][pJustTP]) {
			        pTemp[playerid][pJustTP] = false;
				}
				else {
					if(!pTemp[playerid][pChangingSkin]) {
						pTemp[playerid][pChangingSkin] = true;
						new Float: pos[4];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerFacingAngle(playerid, pos[3]);
						SetPVarFloat(playerid, "posx", pos[0]);
						SetPVarFloat(playerid, "posy", pos[1]);
						SetPVarFloat(playerid, "posz", pos[2]);
						SetPVarFloat(playerid, "posa", pos[3]);
						SetPVarInt(playerid, "interior", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "vw", GetPlayerVirtualWorld(playerid));
						TogglePlayerControllable(playerid, 0);
						SetPlayerInterior(playerid, 14);
						SetPlayerVirtualWorld(playerid, playerid + 1);
						SetPlayerPos(playerid, 258.7497, -41.3828, 1002.0234);
						SetPlayerFacingAngle(playerid, 70.0);
						SetPlayerCameraPos(playerid, 258.7498 + (2.5 * floatsin(-70.0, degrees)), -41.3828 + (2.5 * floatcos(-70.0, degrees)), 1002.5);
						SetPlayerCameraLookAt(playerid, 258.7497, -41.3828, 1002.0234);
						new class;
						switch(gBusiness[id][busiBint]) {
						    case 5: class = SKIN_CLASS_ECONOM;
						    case 6: class = SKIN_CLASS_EXPENSIVE;
						    case 7: class = SKIN_CLASS_ECONOM;
						    case 8: class = SKIN_CLASS_MEDIUM;
						    case 9: class = SKIN_CLASS_EXPENSIVE;
						    case 23: class = SKIN_CLASS_ECONOM;
						}
						SetPVarInt(playerid, "clothes_class", class);
						SetPVarInt(playerid, "clothes_sel", 0);
						SetPVarInt(playerid, "curskin", GetPlayerSkin(playerid));
						ShowPlayerClothesTD(playerid);
					}
				}
			}
			case 8: //Автомастерская
			{
				ShowPlayerDialog(playerid,dMes,0,"Автомастерская","{"#cWHITE"}Чтобы использовать функции СТО, заедьте на эстакаду и введите /rvs","OK","");
			}
		}
	}
	else if(areaid >= gAreas[arSellCar][0] && areaid <= gAreas[arSellCar][3])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new carclass=-1;
		for(new i; i <= 3;i++)
		{
			if(areaid == gAreas[arSellCar][i])
			{
				carclass = i;
				break;
			}
		}
		if(carclass==-1) return 1;
		SetPVarInt(playerid,"sellcarClass",carclass);
		new mes[128],carclassn[12];
		GetCarClassName(carclass,carclassn);
		format(mes,sizeof(mes),"Вы хотите войти в склад с т/с класса: %s",carclassn);
		ShowPlayerDialog(playerid,dBuyCarSalon,0,"Автосалон",mes,"Да","Нет");

	}
	else if(areaid >= gTeleportAreas[0][0] && areaid <= gTeleportAreas[TELEPORTS_COUNT-1][1] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new id,subid;
		for(new i;i<TELEPORTS_COUNT;i++)
		{
			if(areaid == gTeleportAreas[i][0]) {id = i; subid = 1;}
			if(areaid == gTeleportAreas[i][1]) {id = i; subid = 0;}
		}
		if(id == 1 && pTemp[playerid][pChangingSkin])
		{
			pTemp[playerid][pChangingSkin] = false;
			SetPlayerSkin(playerid,pData[playerid][pSkin]);
		}
		if(id == 2) //Автошкола
		{
			if(subid == 1)
			{
				/*TogglePlayerControllable(playerid,0);
				SetTimerEx("Unfreez",2000,false,"i",playerid);*/
			}
			if(pTemp[playerid][pWaitingExam])
			{
				SendClientMessage(playerid,CGRAY,"Вы были сняты с экзамена");
				pTemp[playerid][pWaitingExam] = false;
				pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
				pTemp[playerid][pOnExam] = false;
			}
		}
		/*if(id == 3)
		{
			if(!pTemp[playerid][pOnExam] && pData[playerid][pFraction] != 1) return SendClientMessage(playerid,CGRAY,"Дверь заперта");
			if(subid == 1)
			{
				TogglePlayerControllable(playerid,0);
				SetTimerEx("Unfreez",2000,false,"i",playerid);
			}
		}*/
		if((id == 4 || id == 5 || id == 6) && subid == 0)
		{
			if(pData[playerid][pHealth] < 80.0) return SendClientMessage(playerid,CGRAY,"Вы не можете выйти из больницы, пока не вылечетесь");
			pTemp[playerid][pInHospital] = false;
		}
		if((id == 4 || id == 5 || id == 6) && subid == 1)
		{
			pTemp[playerid][pInHospital] = true;
		}
		if(id == 9 || id == 10)
		{
			if(pData[playerid][pFraction] != 8) return SendClientMessage(playerid,CGRAY,"Дверь заперта");
		}
		/*if(id >= 11 && id <= 16 || (id >= 17 && id <= 24 && subid == 1))
		{
			TogglePlayerControllable(playerid,0);
			SetTimerEx("Unfreez",2000,false,"i",playerid);
		}*/
		if(id >= 17 && id <= 25 && subid == 0)
		{
			if(pTemp[playerid][pCuffee] == playerid) return SendClientMessage(playerid,CGRAY,"Вы не можете выйти из участка в наручниках");
		}
		if((id == 24 || id == 21 || id == 18) && subid == 1)
		{
			if(pData[playerid][pFraction] != 9 && pTemp[playerid][pCuffee] != playerid) return SendClientMessage(playerid,CGRAY,"Дверь заперта");
		}
		/*if(id == 26 && subid == 1)
		{
			TogglePlayerControllable(playerid,0);
			SetTimerEx("Unfreez",2000,false,"i",playerid);
		}
		if((id == 27 || id == 28 || id == 29) && subid == 1)
		{
			TogglePlayerControllable(playerid,0);
			SetTimerEx("Unfreez",2000,false,"i",playerid);
		}*/
		if(id >= 1 && id <= 32)
		{
		    TogglePlayerControllable(playerid,0);
		    SetTimerEx("Unfreez",2000,false,"i",playerid);
		}
		pTemp[playerid][pJustTP] = true;
		SetPlayerVirtualWorld(playerid,gTeleportData[id][subid][0]);
		SetPlayerInterior(playerid,gTeleportData[id][subid][1]);
		SetPlayerPos(playerid,gTeleports[id][subid][0],gTeleports[id][subid][1],gTeleports[id][subid][2],0);
		SetPlayerFacingAngle(playerid,gTeleports[id][subid][3]);
		SetCameraBehindPlayer(playerid);
	}
	else if(areaid >= gToiletAreas[0][0] && areaid <= gToiletAreas[TUALET_COUNT-1][0] && pstate == PLAYER_STATE_ONFOOT)
	{
	    if(pData[playerid][pPiss] >= 55 || pData[playerid][pShit] >= 55)
		{
		    //SendClientMessage(playerid,-1,"deb0");
			new id,idpr;
			for(new i;i<TUALET_COUNT;i++)
			{
				if(areaid == gToiletAreas[i][0]) {idtolk[playerid] = i; id = i; SetPVarInt(playerid,"idt",i);}
				if(areaid == gToiletAreas[i][1]) {idtolk[playerid] = i; id = i; SetPVarInt(playerid,"idt",i);}
			}
			if(prtl[id] == 1) return SendClientMessage(playerid,CINFO,"Данная кабинка занята, дождитесь очереди или поищите другой туалует.");
			//SendClientMessage(playerid,-1,"deb1");
			prtl[GetPVarInt(playerid,"idt")] = 1;
			switch(id)
			{
			    case 0:
			    {
		    		SetPlayerVirtualWorld(playerid,1);
			    }
			    case 1:
			    {
		    		SetPlayerVirtualWorld(playerid,2);
			    }
			    case 2:
			    {
		    		SetPlayerVirtualWorld(playerid,3);
			    }
				case 3:
			    {
		    		SetPlayerVirtualWorld(playerid,4);
			    }
				case 4:
			    {
		    		SetPlayerVirtualWorld(playerid,5);
			    }
				case 5:
			    {
		    		SetPlayerVirtualWorld(playerid,6);
			    }
				case 6:
			    {
		    		SetPlayerVirtualWorld(playerid,7);
			    }
				case 7:
			    {
		    		SetPlayerVirtualWorld(playerid,8);
			    }
				case 8:
			    {
		    		SetPlayerVirtualWorld(playerid,9);
			    }
				case 9:
			    {
		    		SetPlayerVirtualWorld(playerid,10);
			    }
				case 10:
			    {
		    		SetPlayerVirtualWorld(playerid,11);
				}
				case 11:
			    {
		    		SetPlayerVirtualWorld(playerid,12);
			    }
				case 12:
			    {
		    		SetPlayerVirtualWorld(playerid,13);
			    }
   				case 13:
			    {
		    		SetPlayerVirtualWorld(playerid,14);
			    }
			}
			SetPlayerPos(playerid,508.1282,-72.8433,1011.0569);
			SetPlayerFacingAngle(playerid,90.8441);
			//SendClientMessage(playerid,-1,"deb2");
	  		TogglePlayerControllable(playerid,0);
	    	//SetTimerEx("Unfreez",2000,false,"i",playerid);
	    	SetPlayerInterior(playerid,11);
			if(pData[playerid][pShit] >= 55 && pData[playerid][pPiss] >= 55)
			{
			    SetPlayerSpecialAction(playerid,68);
			    idpr = 2;
			}
			else if(pData[playerid][pPiss] >= 55)
			{
			    SetPlayerSpecialAction(playerid,68);
			    idpr = 0;
			}
			else if(pData[playerid][pShit] >= 55)
			{
	      		SetPlayerSpecialAction(playerid,68);
			    idpr = 1;
			}
			SetTimerEx("TimerPS",10000,false,"ii",playerid,idpr);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid,CINFO,"Ваш персонаж не хочет в туалет.");
	}
	else if(areaid == gAreas[arCoalman] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dCoalwork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}грузчика.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы брать уголь из куч\n  и нести его на переработку.\n\n\t\t{"#cYELLOW"}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 2) ShowPlayerDialog(playerid,dCoalwork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	else if(areaid == gAreas[arWood] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dWoodwork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}лесоруба.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы рубить дрова \n  и носить их на переработку.\n\n\t\t\t\t{"#cYELLOW"}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 3) ShowPlayerDialog(playerid,dWoodwork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	else if(areaid == gAreas[arMine] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dMinework,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}шахтёра.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы искать полезные металлы в шахте \n  и носить их на общий склад.\n\n\t\t\t\t{"#cYELLOW"}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 5) ShowPlayerDialog(playerid,dMinework,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	else if(areaid >= gAreas[arHelp][0] && areaid <= gAreas[arHelp][2])
	{
	    new string[530];
	    format(string,sizeof(string),"{FFFFFF}Здравствуйте, %s! Вы зашли на сервер с режимом {FF9900}Role Play{FFFFFF}, более подробно разобраться с этим режимом\n",pRegData[playerid][0]);
	    strcat(string,"вам поможет раздел GUIDE в меню ({FF9900}/menu).{FFFFFF} Для начала рекомендуем вам подзаработать немного денег.\n");
	    strcat(string,"Дождитесь рейсовый автобус на любой остановке, он отвезёт вас на одну из трёх работ для новичков.\n");
	    strcat(string,"Для помощи по игре зайдите в раздел GUIDE ({FF9900}/menu).{FFFFFF} Для просмотра доступных команд зайдите в раздел COMMANDS ({FF9900}/menu).");
	    ShowPlayerDialog(playerid,0,0,"Информация о сервере.",string,"Спасибо","");
	}
	else if(areaid >= gAreas[arHEALT][0] && areaid <= gAreas[arHEALT][2])
	{
	    SetPlayerHealthEx(playerid,100.0);
	    pData[playerid][pHunger] = 100;
	    SendClientMessage(playerid,CINFO,"Ваше ХП и сытость были пополнены");
	}
	else if((areaid == gAreas[arCoalmanLoad1] && GetPVarInt(playerid,"loadid") == 0) || (areaid == gAreas[arCoalmanLoad2] && GetPVarInt(playerid,"loadid") == 1) || (areaid == gAreas[arCoalmanLoad3] && GetPVarInt(playerid,"loadid") == 2) && pstate == PLAYER_STATE_ONFOOT)
	{
		if(pTemp[playerid][pWork] == 2 && !GetPVarInt(playerid,"coalamount"))
		{
			SetPlayerAttachedObject(playerid,0,2060,5,0.2,0.12,0.12,-84.0,0.0,105.0);
			ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
			SetTimerEx("AnimationDelay",700,false,"ii",playerid,1);
			//ApplyAnimation(playerid,"CARRY","crry_prtial",1.0,1,1,1,1,1,1);
			new amount = RandomEx(40,60);
			SetPVarInt(playerid,"coalamount",amount);
			new mes[128];
			format(mes,sizeof(mes),"Вы взяли %d кг угля. Несите мешок на переработку",amount);
			SendClientMessage(playerid,CWHITE,mes);
			new loadid = GetPVarInt(playerid,"loadid");
			new id = RandomEx(3,5);
			new unloadid = id - 3;
			pTemp[playerid][pCoalmanTime] = gTimetable[loadid][unloadid];
			SetPlayerCheckpoint(playerid,gCoalManCPs[id][0],gCoalManCPs[id][1],gCoalManCPs[id][2],3.0);
			SetPlayerAttachedObject(playerid,0,2060,5,0.2,0.12,0.12,-84.0,0.0,105.0);
			SetPVarInt(playerid,"loadid",id);
			GetPlayerFacingAngle(playerid,pTemp[playerid][pAngle]);
		}
	}
	else if((areaid == gAreas[arCoalmanUnload1] && GetPVarInt(playerid,"loadid") == 3) || (areaid == gAreas[arCoalmanUnload2] && GetPVarInt(playerid,"loadid") == 4) && pstate == PLAYER_STATE_ONFOOT)
	{
		if(pTemp[playerid][pWork] == 2 && GetPVarInt(playerid,"coalamount"))
		{
			if(pTemp[playerid][pCoalmanTime] && !IsKicked(playerid))
			{
				SendClientMessage(playerid,CADMIN,"Вы были кикнуты по подозрению в читерстве (#100)");
				NewKick(playerid);
			}
			ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
			RemovePlayerAttachedObject(playerid,0);
			new amount = GetPVarInt(playerid,"coalamount");
			SetPVarInt(playerid,"coalamount",0);
			new salary = gWorkSalary[0];
			pTemp[playerid][pWorkSalary] += salary;
			minesklad += amount;
			new mes[128];
			format(mes,sizeof(mes),"Вы перенесли уголь. %d$ добавлено к вашей зарплате. Заработано: %d$",salary,pTemp[playerid][pWorkSalary]);
			SendClientMessage(playerid,CWHITE,mes);
			new id = RandomEx(0,3);
			SetPlayerCheckpoint(playerid,gCoalManCPs[id][0],gCoalManCPs[id][1],gCoalManCPs[id][2],3.0);
			SetPVarInt(playerid,"loadid",id);
			new Float:a;
			GetPlayerFacingAngle(playerid,a);
			if(pTemp[playerid][pAngle] == a && !IsKicked(playerid))
			{
				SFCM(playerid,CGRAY,"Вы были кикнуты по подозрению в читерстве (Спидхак / ТП / Флай) (%.2f)",RandomEx(10,15) + RandomEx(0,100)/100 + 0.0);
				NewKick(playerid);
			}
		}
	}
	else if(areaid == gAreas[arMinesklad] && GetPVarInt(playerid,"rudamine") >= 20) {

	    pTemp[playerid][pWorkSalary] += GetPVarInt(playerid,"rudamine")*5;
	    new mes[128];
		format(mes,sizeof(mes),"Руда разгружена.+%d кг. - +%d$ к вашей зарплате. Заработано: %d$",GetPVarInt(playerid,"rudamine"),GetPVarInt(playerid,"rudamine")*5,pTemp[playerid][pWorkSalary]);
		SendClientMessage(playerid,CWHITE,mes);
		minesklad += GetPVarInt(playerid,"rudamine");
		new string[70];
		format(string,sizeof(string),"Всего руды на складе\n %i кг.",minesklad);
		UpdateDynamic3DTextLabelText(gMineload,CWHITE,string);
     	RemovePlayerAttachedObject(playerid,2);
		RemovePlayerAttachedObject(playerid,3);
		ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
		SetPVarInt(playerid,"rudamine",0);
		DisablePlayerCheckpoint(playerid);
		SaveNewsMoney();
	}
	else if(areaid == gAreas[arWoodUnload] && GetPVarInt(playerid,"woodkg") >= 20) {

	    pTemp[playerid][pWorkSalary] += GetPVarInt(playerid,"woodkg")*3;
	    new mes[128];
		format(mes,sizeof(mes),"Древесина разгружена.+%d кг. - +%d$ к вашей зарплате. Заработано: %d$",GetPVarInt(playerid,"woodkg"),GetPVarInt(playerid,"woodkg")*3,pTemp[playerid][pWorkSalary]);
		SendClientMessage(playerid,CWHITE,mes);
		woodsklad += GetPVarInt(playerid,"woodkg");
		new string[70];
		format(string,sizeof(string),"Всего древесины на складе\n %i кг.",woodsklad);
		UpdateDynamic3DTextLabelText(gWoodload,CWHITE,string);
		RemovePlayerAttachedObject(playerid,0);
		RemovePlayerAttachedObject(playerid,2);
		SetPlayerAttachedObject(playerid,0,341,6);
		ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
		SetPVarInt(playerid,"woodkg",0);
		DisablePlayerCheckpoint(playerid);
		SaveNewsMoney();
		objstart[0][playerid] = CreateObject(1463,-1117.944335,-1622.401367,76.672996,0.0,0.0,96.0); //startobrabotki
		SetTimerEx("WoodLoader",1,false,"i",playerid);
		if(pTemp[playerid][pAntiCleoWood] && !IsKicked(playerid))
		{
			pTemp[playerid][pAntiCleoWood] = 0;
			pTemp[playerid][pAntiCleoWoodKick]++;
			format(mes,sizeof(mes),"%s [%d] подозревается в клео ТП (%d/3)",pData[playerid][pNickname],playerid,pTemp[playerid][pAntiCleoWoodKick]);
			AdminChat(CRED,mes);
			if(pTemp[playerid][pAntiCleoWoodKick] >= 3)
			{
				pTemp[playerid][pAntiCleoWoodKick] = 0;
				pTemp[playerid][pAntiCleoWood] = 0;
				SendClientMessage(playerid,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в читерстве (#107)");
				NewKick(playerid);
			}
		}
	}
	else if(areaid == gAreas[arAntiCleoWood])
	{
		pTemp[playerid][pAntiCleoWood] = 2;
	}
	else if(areaid == gAreas[arGunWork] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dGunWork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}слесаря-сборщика оружия.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы брать необходимые материалы\n  и изготавливать из них оружие.\n\n\t\t{"#cYELLOW"}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 4) ShowPlayerDialog(playerid,dGunWork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	else if(areaid >= gAreas[arGunWorkLoad][0] && areaid <= gAreas[arGunWorkLoad][5] && pstate == PLAYER_STATE_ONFOOT && pTemp[playerid][pWork] == 4 && !GetPVarInt(playerid,"gunamount"))
	{
		new locat;
		for(new i;i<6;i++)
		{
			if(gAreas[arGunWorkLoad][i] == areaid) locat = i;
		}
		if(gGunWorkTime[locat]) return SendClientMessage(playerid,CGRAY,"На этом столе нет заготовок. Подойдите к другому");
		if(minesklad < 100) return SendClientMessage(playerid,CGRAY,"На складе недостаточно угля");
		if(woodsklad < 100) return SendClientMessage(playerid,CGRAY,"На складе недостаточно древесины");
		minesklad -= 50;
		woodsklad -= 50;
		gGunWorkTime[locat] = 5;
		SetPVarInt(playerid,"gunamount",1);
		SendClientMessage(playerid,CWHITE,"Вы взяли заготовку. Теперь идите к столу, чтобы изготовить оружие");
		new objectmodel = gGunWorkWeapon[RandomEx(0,6)];
		SetPlayerAttachedObject(playerid,0,objectmodel,6);
		SetPVarInt(playerid,"pgunmodel",objectmodel);
	}
	else if(areaid >= gAreas[arGunWorkWork][0] && areaid <= gAreas[arGunWorkWork][9] && pstate == PLAYER_STATE_ONFOOT && pTemp[playerid][pWork] == 4 && GetPVarInt(playerid,"gunamount") == 1)
	{
		if(GetPVarInt(playerid,"pgunobject")) return 1;
		new locat;
		for(new i;i<10;i++)
		{
			if(gAreas[arGunWorkWork][i] == areaid) locat = i;
		}
		if(gGunWorkTableStat[locat]) return SendClientMessage(playerid,CGRAY,"Стол занят. Подойдите к другому");
		new objectmodel = GetPVarInt(playerid,"pgunmodel");
		RemovePlayerAttachedObject(playerid,0);
		new objectid = CreateDynamicObject(objectmodel,gGunWorkTables[locat][0],gGunWorkTables[locat][1],gGunWorkTables[locat][2],90.0,0.0,0.0);
		SetPVarInt(playerid,"pgunobject",objectid);
		SetPVarInt(playerid,"pgunlocat",locat+1);
		gGunWorkTableStat[locat] = true;
		//ApplyAnimation(playerid,"PED","gum_eat",4.1,1,1,1,0,6000);
		//ApplyAnimation(playerid,"SCRATCHING","sclng_l",3.0,1,0,0,0,6000,1);
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.0,1,1,1,0,6000,0);
		SetPlayerAttachedObject(playerid,0,18644,5,0.078999,0.042999,-0.012999,-3.299995,0.000000,0.000000);
		SetPlayerAttachedObject(playerid,1,18635,6);
		SetTimerEx("GunReady",6000,false,"i",playerid);
	}
	else if(areaid == gAreas[arGunWorkUnload] && pTemp[playerid][pWork] == 4 && GetPVarInt(playerid,"gunamount") == 2)
	{
		ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
		pTemp[playerid][pWorkSalary] += 50;
		new mes[128];
		format(mes,sizeof(mes),"Оружие сдано на склад. +50$ к вашей зарплате. Заработано: %d$",pTemp[playerid][pWorkSalary]);
		gGunWorkWH[2] += 50;
		SendClientMessage(playerid,CWHITE,mes);
		RemovePlayerAttachedObject(playerid,0);
		DeletePVar(playerid,"gunamount");
		DisablePlayerCheckpoint(playerid);
	}
	else if(areaid == gAreas[arGunWorkUnload] && (pData[playerid][pFraction] == 8 || pData[playerid][pFraction] == 9))
	{
		SendClientMessage(playerid,CINFO,"Нажмите {"#cWHITE"}'H' {"#cINFO"}, чтобы взять боеприпасы со склада");
	}
	else if((areaid == gAreas[arTruckLoadCoal] || areaid == gAreas[arTruckLoadWood]) && pData[playerid][pJob] == 2 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
	{
		SendClientMessage(playerid,CWHITE,"Чтобы подписать контракт нажмите {"#cGREEN"}~k~~VEHICLE_HORN~");
	}
	else if(areaid >= gFillingBuyArea[0] && areaid <= gFillingBuyArea[FILLING_COUNT-1])
	{
		//SendClientMessage(playerid,CWHITE,"DBG1");
		new fillingid = -1;
		for(new i;i<FILLING_COUNT;i++)
		{
			if(areaid == gFillingBuyArea[i]) fillingid = i;
		}
		if(fillingid == -1) return SendClientMessage(playerid,CGRAY,"Ошибка");
		//SendClientMessage(playerid,CWHITE,"DBG2");
		SetPVarInt(playerid,"bfillingid",fillingid);
		if(!gFillings[fillingid][fillOwnerID])
		{
			new mes[128];
			format(mes,sizeof(mes),"{"#cWHITE"}Эта автозаправочная станция продается.\n{"#cORANGE"}Номер заправки: {"#cWHITE"}%d\n{"#cORANGE"}Цена: {"#cWHITE"}%d",gFillings[fillingid][fillMysqlID],gFillings[fillingid][fillPrice]);
			ShowPlayerDialog(playerid,dFillingBuy,0,"Автозаправочная станция",mes,"Купить","Отмена");
		}
		else
		{
			new mes[128];
			format(mes,sizeof(mes),"{"#cWHITE"}Эта заправка принадлежит %s'y.\n{"#cORANGE"}Номер заправки: {"#cWHITE"}%d",gFillings[fillingid][fillOwner],gFillings[fillingid][fillMysqlID]);
			ShowPlayerDialog(playerid,dMes,0,"Автозаправочная станция",mes,"OK","");
		}
		//SendClientMessage(playerid,CWHITE,"DBG3");
	}
	else if(areaid >= gHintFreezArea[0] && areaid <= gHintFreezArea[HINTS_COUNT-1])
	{
	    new houseid = pTemp[playerid][pSelectedHouseID];
	    if(pData[playerid][pHouse] == houseid+1)
		{
			if(pTemp[playerid][pCarryProducts] && pTemp[playerid][pIsInHouse])
			{
				new products = pTemp[playerid][pCarryProducts];
				new query[128];
				format(query,sizeof(query),"UPDATE `houses` SET `products` = '%d' WHERE `id` = '%d'",gHouses[houseid][houseProducts] + products,houseid+1);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка Mysql 2 (покупка продуктов)");
				gHouses[houseid][houseProducts] += products;
				pTemp[playerid][pCarryProducts] = 0;
				MeAction(playerid,"положил(а) продукты в холодильник");
			}
			//ShowPlayerDialog(playerid,dFreez,2,"Холодильник","Хот-дог ({"#cRED"}-10 прод. {"#cGREEN"}+20 сытость{"#cWHITE"})\nБургер ({"#cRED"}-15 прод. {"#cGREEN"}+30 сытость{"#cWHITE"})\nПицца ({"#cRED"}-30 прод. {"#cGREEN"}+60 сытость{"#cWHITE"})","Съесть","Отмена");
		}
	}
	else if(areaid >= gHotelArea[0] && areaid <= gHotelArea[HOTEL_COUNT-1] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new hotelid = -1;
		for(new i;i<HOTEL_COUNT;i++)
		{
			if(areaid == gHotelArea[i]) {hotelid = i; break;}
		}
		if(hotelid == -1) return 1;
		SetPVarInt(playerid,"selectedhotel",hotelid);
		if(!gHotelData[hotelid][hotelOwnerid])
		{
			ShowPlayerDialog(playerid,dHotelBuy,0,"Отель","{"#cWHITE"}Этот отель продается. Вы хотите купить этот отель за {"#cRED"}$60000","Да","Нет");
		}
		else
		{
			new mes[128],cnt;
			for(new i;i<8;i++) if(gHotelResidents[hotelid][i]) cnt++;
			format(mes,sizeof(mes),"\t\t{"#cYELLOW"}Отель\n{"#cORANGE"}Владелец: {"#cWHITE"}%s\n{"#cORANGE"}Жильцов: {"#cWHITE"}%d",gHotelData[hotelid][hotelOwner],cnt);
			ShowPlayerDialog(playerid,dHotelEnter,0,"Отель",mes,"Войти","Отмена");
		}
	}
	else if(areaid == gAreas[arHotelExit])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new hotelid = GetPVarInt(playerid,"selectedhotel");
		pTemp[playerid][pJustTP] = true;
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,gHotels[hotelid][0],gHotels[hotelid][1],gHotels[hotelid][2]);
		SetPlayerFacingAngle(playerid,gHotels[hotelid][3]);
	}
	else if(areaid == gAreas[arHotelReception])
	{
		if(GetPVarInt(playerid,"selectedhotel") == pData[playerid][pHotel]-1) ShowPlayerDialog(playerid,dHotel,2,"Отель","1. Продлить аренду номера\n2. Отказаться от аренды","ОК","Отмена");
		else ShowPlayerDialog(playerid,dReception,0,"Отель","\t\t\t\t{"#cORANGE"}Добро пожаловать.\n{"#cWHITE"}Привествуем Вас в отеле. Здесь Вы можете снять комнату.\nВ этой комнате Вы будете появляться при заходе в игру\nТак же у Вас будет парковочное место рядом с отелем, куда Вы сможете\nпоставить свое транспортное средство.\n{"#cYELLOW"}Вы хотите арендовать комнату?","Да","Нет");
	}
	else if(areaid == gAreas[arAutoExam])
	{
		//if(pData[playerid][pLicenses] & LIC_DRIVING) return SendClientMessage(playerid,CGRAY,"У Вас уже есть водительские права");
		if(pTemp[playerid][pOnExam] || pTemp[playerid][pWaitingExam]) return SendClientMessage(playerid,CWHITE,"Вы уже прошли тестирование");
		ShowPlayerDialog(playerid,dExamType,2,"Экзамен","Выберите вид транспорта, на который хотите получить лицензию:\nНаземный транспорт\nВоздушный транспорт\nМорской транспорт","OK","Отмена");

	}
	else if(areaid == gAreas[arKiosk][0] || areaid == gAreas[arKiosk][1])
	{
		if(pData[playerid][pLevel] > 1) return SendClientMessage(playerid,CGRAY,"Бесплатные киоски только для 1 уровня");
		ShowPlayerDialog(playerid,dKiosk,2,"Киоск","Бесплатная аптечка\nБесплатная еда","Взять","Выход");
	}
	else if(areaid == gAreas[arKiosk][2])
	{
		pData[playerid][pHunger] = 100;
		//UpdatePlayerHunger(playerid);
		MeAction(playerid,"поел(а)");
	}
	else if (areaid >= gAreas[arGang][0] && areaid <= gAreas[arGang][4])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new gangid = -1;
		for(new i;i<5;i++)
		{
			if(gAreas[arGang][i] == areaid) {gangid = i; break;}
		}
		if(gangid == -1) return 1;
		if(!pTemp[playerid][pGangKey] && pData[playerid][pFraction] - 3 != gangid) return SendClientMessage(playerid,CGRAY,"У вас нет ключа от дома банды");
		pTemp[playerid][pJustTP] = true;
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,gangid);
		SetPlayerPos(playerid,1525.0891,-72.8142,1054.1859);
		SetPlayerFacingAngle(playerid,90.0);
		TogglePlayerControllable(playerid,0);
		SetTimerEx("Unfreez",2000,false,"i",playerid);
	}
	else if(areaid == gAreas[arGangExit])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		pTemp[playerid][pJustTP] = true;
		new gangid = GetPlayerVirtualWorld(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerPos(playerid,gGangEnter[gangid][0],gGangEnter[gangid][1],gGangEnter[gangid][2]);
		SetPlayerFacingAngle(playerid,gGangEnter[gangid][3]);
	}
	else if(areaid == gAreas[arDorm])
	{
		new gangid = GetPlayerVirtualWorld(playerid);
		new gunamount = GetPVarInt(playerid,"carrygun");
		new ammo = GetPVarInt(playerid,"carryammo");
		if(gunamount || ammo)
		{
			SetPVarInt(playerid,"carrygun",0);
			SetPVarInt(playerid,"carryammo",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
			new limit1 = gGangDormLevel[gGangDormLimit[gangid]][0];
			new limit2 = gGangDormLevel[gGangDormLimit[gangid]][1];
			if(gGangDorm[gangid][0] + gunamount <= limit1) gGangDorm[gangid][0] += gunamount;
			if(gGangDorm[gangid][1] + ammo <= limit2) gGangDorm[gangid][1] += ammo;
		}
	}
	else if(areaid == gAreas[arGangBuyCar])
	{
		if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7)
		{
			new mes[512];
			for(new i;i<15;i++)
			{
				new model = gGangCarModelID[i];
				new modelid = model - 400;
				if(!i) format(mes,sizeof(mes),"%s [{"#cRED"}$%d{"#cWHITE"}]",gTransport[modelid][trName],gTransport[modelid][trPrice]);
				else format(mes,sizeof(mes),"%s\n%s [{"#cRED"}$%d{"#cWHITE"}]",mes,gTransport[modelid][trName],gTransport[modelid][trPrice]);
			}
			ShowPlayerDialog(playerid,dBuyGangCar,2,"Купить авто для банды",mes,"Купить","Отмена");
		}
		else SendClientMessage(playerid,CWHITE,"[Чей-то голос]: Вали от сюда, пока жив!");
	}
	else if(areaid == gAreas[arBank])
	{
		SendClientMessage(playerid,CINFO,"Чтобы использовать функции банка нажмите {"#cWHITE"}\"Enter\"");
	}
	else if(areaid == gAreas[arHire])
	{
		if(pData[playerid][pFraction]) return SendClientMessage(playerid,CGRAY,"Вы состоите во фракции. Не доступны работы в центре занятости");
		ShowPlayerDialog(playerid,dHire,2,"Работа","1. Водитель автобуса\n2. Дальнобойщик\n3. Таксист\n4. Механик\n5. Развозчик товара","ОК","Отмена");
	}
	else if(areaid == gAreas[arPravAmmo])
	{
	    if((pData[playerid][pFraction] == 11 && pData[playerid][pRank] == 2) && GetPlayerVirtualWorld(playerid) == 3)
	    {
			GivePlayerWeaponEx(playerid,24,35);
			SetPlayerHealthEx(playerid,100.0);
			SetPlayerArmourEx(playerid,100.0);
			pData[playerid][pHunger] = 100;
			//UpdatePlayerHunger(playerid);
			GivePlayerWeaponEx(playerid,3,1);
			GivePlayerWeaponEx(playerid,29,200);
			SetPlayerArmedWeapon(playerid,23);
			if(GetPlayerAmmo(playerid) > 0 && GetPlayerWeapon(playerid) == 23) SetPlayerAmmoEx(playerid,2,0);
			GivePlayerWeaponEx(playerid,23,30);
			pTemp[playerid][pTazerGun] = true;
			SendClientMessage(playerid,CGRAY,"Вам был выдан боекомплект, дубинка, бронежилет, тазер и еда");
	    }
	    else if((pData[playerid][pFraction] == 12 && pData[playerid][pRank] == 2) && GetPlayerVirtualWorld(playerid) == 0)
	    {
  			GivePlayerWeaponEx(playerid,24,35);
			SetPlayerHealthEx(playerid,100.0);
			SetPlayerArmourEx(playerid,100.0);
			pData[playerid][pHunger] = 100;
			//UpdatePlayerHunger(playerid);
			GivePlayerWeaponEx(playerid,3,1);
			GivePlayerWeaponEx(playerid,29,200);
			SetPlayerArmedWeapon(playerid,23);
			if(GetPlayerAmmo(playerid) > 0 && GetPlayerWeapon(playerid) == 23) SetPlayerAmmoEx(playerid,2,0);
			GivePlayerWeaponEx(playerid,23,30);
			pTemp[playerid][pTazerGun] = true;
			SendClientMessage(playerid,CGRAY,"Вам был выдан боекомплект, дубинка, бронежилет, тазер и еда");
	    }
	    else if((pData[playerid][pFraction] == 13 && pData[playerid][pRank] == 2) && GetPlayerVirtualWorld(playerid) == 1)
	    {
			GivePlayerWeaponEx(playerid,24,35);
			SetPlayerHealthEx(playerid,100.0);
			SetPlayerArmourEx(playerid,100.0);
			pData[playerid][pHunger] = 100;
			//UpdatePlayerHunger(playerid);
			GivePlayerWeaponEx(playerid,3,1);
			GivePlayerWeaponEx(playerid,29,200);
			SetPlayerArmedWeapon(playerid,23);
			if(GetPlayerAmmo(playerid) > 0 && GetPlayerWeapon(playerid) == 23) SetPlayerAmmoEx(playerid,2,0);
			GivePlayerWeaponEx(playerid,23,30);
			pTemp[playerid][pTazerGun] = true;
			SendClientMessage(playerid,CGRAY,"Вам был выдан боекомплект, дубинка, бронежилет, тазер и еда");
	    }
	    else if((pData[playerid][pFraction] == 14 && pData[playerid][pRank] == 2) && GetPlayerVirtualWorld(playerid) == 2)
	    {
			GivePlayerWeaponEx(playerid,24,35);
			SetPlayerHealthEx(playerid,100.0);
			SetPlayerArmourEx(playerid,100.0);
			pData[playerid][pHunger] = 100;
			//UpdatePlayerHunger(playerid);
			GivePlayerWeaponEx(playerid,3,1);
			GivePlayerWeaponEx(playerid,29,200);
			SetPlayerArmedWeapon(playerid,23);
			if(GetPlayerAmmo(playerid) > 0 && GetPlayerWeapon(playerid) == 23) SetPlayerAmmoEx(playerid,2,0);
			GivePlayerWeaponEx(playerid,23,30);
			pTemp[playerid][pTazerGun] = true;
			SendClientMessage(playerid,CGRAY,"Вам был выдан боекомплект, дубинка, бронежилет, тазер и еда");
	    }
	}
	else if(areaid == gAreas[arArmyAmmo])
	{
		new armyid = GetPlayerVirtualWorld(playerid);
		if(pData[playerid][pFraction] == 8 || pData[playerid][pFraction] == 9)
		{
			new gunamount = GetPVarInt(playerid,"carrygun");
			new ammo = GetPVarInt(playerid,"carryammo");
			if(gunamount || ammo)
			{
				SetPVarInt(playerid,"carrygun",0);
				SetPVarInt(playerid,"carryammo",0);
				RemovePlayerAttachedObject(playerid,0);
				ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				if(armyid < 2)
				{
					if(gArmyWarehouse[armyid][0] + gunamount > 100000) return SendClientMessage(playerid,CGRAY,"На складе недостаточно места под боеприпасы");
					else gArmyWarehouse[armyid][0] += gunamount;
					if(gArmyWarehouse[armyid][1] + ammo > 100000) return SendClientMessage(playerid,CGRAY,"На складе недостаточно места под патроны");
					else gArmyWarehouse[armyid][1] += ammo;
				}
				else
				{
					new pdid = armyid - 2;
					if(gPDWarehouse[pdid][0] + gunamount > 50000) SendClientMessage(playerid,CGRAY,"На складе недостаточно места");
					else gPDWarehouse[pdid][0] += gunamount;
					if(gPDWarehouse[pdid][1] + ammo > 50000) SendClientMessage(playerid,CGRAY,"На складе недостаточно места под патроны");
					else gPDWarehouse[pdid][1] += ammo;
				}
			}
			else
			{
				if(pTemp[playerid][pTakeGun]) return 1;
				pTemp[playerid][pTakeGun] = 15;
				if(armyid < 2)
				{
					if(gArmyWarehouse[armyid][0] < 300 || gArmyWarehouse[armyid][1] < 135) return SendClientMessage(playerid,CGRAY,"На складе недостаточно боеприпасов");
					gArmyWarehouse[armyid][0] -= 300;
					gArmyWarehouse[armyid][1] -= 135;
				}
				else
				{
					new pdid = armyid - 2;
					if(gPDWarehouse[pdid][0] < 300 || gPDWarehouse[pdid][1] < 135) return SendClientMessage(playerid,CGRAY,"На складе недостаточно боеприпасов");
					gPDWarehouse[pdid][0] -= 300;
					gPDWarehouse[pdid][1] -= 135;
				}
				GivePlayerWeaponEx(playerid,24,35);
				SetPlayerHealthEx(playerid,100.0);
				SetPlayerArmourEx(playerid,100.0);
				pData[playerid][pHunger] = 100;
				//UpdatePlayerHunger(playerid);
				if(pData[playerid][pFraction] == 9)
				{
					GivePlayerWeaponEx(playerid,3,1);
					GivePlayerWeaponEx(playerid,29,200);
					SetPlayerArmedWeapon(playerid,23);
					if(GetPlayerAmmo(playerid) > 0 && GetPlayerWeapon(playerid) == 23) SetPlayerAmmoEx(playerid,2,0);
					GivePlayerWeaponEx(playerid,23,30);
					pTemp[playerid][pTazerGun] = true;
					SendClientMessage(playerid,CGRAY,"Вам был выдан боекомплект, дубинка, бронежилет, тазер и еда");
				}
				else
				{
					GivePlayerWeaponEx(playerid,31,100);
					SendClientMessage(playerid,CGRAY,"Вам был выдан боекомплект, бронежилет и еда");
				}
			}
		}
		else if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 8 && armyid < 3)
		{
			if(pTemp[playerid][pTakeGun]) return 1;
			pTemp[playerid][pTakeGun] = 15;
			StealMats(playerid,armyid);
			SendClientMessage(playerid,CINFO,"Нажмите {"#cWHITE"}'H' {"#cINFO"}, чтобы стащить боеприпасы со склада");
		}
	}
	else if(areaid == gAreas[arKioskPay])
	{
		if(pTemp[playerid][pInHospital])
		{
			if(pData[playerid][pHunger] < 50) pData[playerid][pHunger] = 50;
			else return 1;
		}
		else if(pData[playerid][pLevel] > 1) return SendClientMessage(playerid,CGRAY,"Бесплатная еда доступна только для игроков с 1-ым уровнем");
		pData[playerid][pHunger] = 100;
		//UpdatePlayerHunger(playerid);
		MeAction(playerid,"поел(а)");
	}
	else if(areaid >= gAreas[arCristmas][0] && areaid <= gAreas[arCristmas][4])
	{
		new Float:x, Float:y, Float:z;
		Streamer_GetFloatData(STREAMER_TYPE_AREA,areaid,E_STREAMER_X,x);
		Streamer_GetFloatData(STREAMER_TYPE_AREA,areaid,E_STREAMER_Y,y);
		Streamer_GetFloatData(STREAMER_TYPE_AREA,areaid,E_STREAMER_Z,z);
		new id = random(4);
		if(id == 0) PlayAudioStreamForPlayer(playerid,"http://state-99.googlecode.com/files/Cristmas.mp3",x,y,z,50.0,1);
		if(id == 1) PlayAudioStreamForPlayer(playerid,"http://state-99.googlecode.com/files/Happiness.mp3",x,y,z,50.0,1);
		if(id == 2) PlayAudioStreamForPlayer(playerid,"http://state-99.googlecode.com/files/LastCr.mp3",x,y,z,50.0,1);
		if(id == 3) PlayAudioStreamForPlayer(playerid,"http://state-99.googlecode.com/files/HappyNY.mp3",x,y,z,50.0,1);
	}
	else if(areaid >= gAreas[arCristmas][5] && areaid <= gAreas[arCristmas][9])
	{
		SendClientMessage(playerid,CINFO,"Чтобы взять подарок нажмите {"#cWHITE"}H");
	}
	else if(areaid == gAreas[arBusinessBuyProd])
	{
		if(!pData[playerid][pBusiness]) return SendClientMessage(playerid,CGRAY,"У вас нет бизнесса");
		if(pData[playerid][pBusiness] > FILLING_ID_OFFSET) return SendClientMessage(playerid,CWHITE,"Топливо для заправок можно заказать на НПЗ {"#cGRAY"}((/gps => Развозчики => НПЗ))");
		ShowPlayerDialog(playerid,dBusinessBuyProd1,0,"Заказ продуктов","{"#cWHITE"}Здесь вы можете заказать товар для своего бизнеса","Далее","Отмена");
	}
	else if(areaid == gAreas[arBusinessDelivery])
	{
		if(pData[playerid][pBusiness])
		{
			if(pData[playerid][pBusiness] > FILLING_ID_OFFSET)
			{
			}
			else
			{
				new businessid = pData[playerid][pBusiness] - 1;
				if(!gBusiness[businessid][busiOrder]) return SendClientMessage(playerid,CGRAY,"Сначала, вам следует заказать товар для вашего бизнеса в доках");
				ShowPlayerDialog(playerid,dBusinessDelivery1,1,"Доставка товара","{"#cWHITE"}Укажите сумму, которую вы готовы заплатить за доставку к вашему бизнесу:","Далее","Отмена");
			}
		}
		else if(pData[playerid][pJob] == 5)
		{
			if(pTemp[playerid][pDFTID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CGRAY,"Арендуйте DFT перед тем как брать заказ");
			if(pTemp[playerid][pDeliving]) return SendClientMessage(playerid,CGRAY,"Вы уже выполняете заказ");
			ShowDeliveryList(playerid);
		}
		else SendClientMessage(playerid,CGRAY,"У вас нет бизнеса и вы не работаете развозчиком товаров");
	}
	else if(areaid == gAreas[arDeliLoad][0] || areaid == gAreas[arDeliLoad][1] || areaid == gAreas[arDeliLoad][2])
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new model = GetVehicleModel(vehicleid);
		if(pTemp[playerid][pDeliving] == true && model == 578)
		{
			SendClientMessage(playerid,CINFO,"Посигнальте, чтобы начать загрузку");
		}
	}
	else if(areaid >= gRepairArea[0] && areaid <= gRepairArea[2])
	{
		SetPVarInt(playerid,"selectedrepair",areaid - gRepairArea[0] + 1);
	}
	else //Циклы проверок
	{
	    for(new i; i < sizeof(TrayData); i ++) {
			if(TrayData[i][trayAreaID] != areaid) continue;
			GetTray(playerid, i);
			break;
		}
		if(logGang) SendClientMessage(playerid,CGRAY,"Check 1");
		if(pData[playerid][pFraction] == 8 || pData[playerid][pFraction] == 9 || IsGang(pData[playerid][pFraction] ))
		{
			if(logGang) SendClientMessage(playerid,CGRAY,"Check 2");
			for(new i;i<MAX_VEHICLES;i++)
			{
				if(areaid == gVehicleGun[i][vGunArea])
				{
					if(logGang) SendClientMessage(playerid,CGRAY,"Check 3");
					new mesa[128];
					format(mesa,sizeof(mesa),"ID: %d",i);
					if(logGang)SendClientMessage(playerid,CWHITE,mesa);
					new vehicleid = i;
					//if(vehicleid >= aArmy1[0] && vehicleid <= aArmy2[1] && pData[playerid][pFraction] != 8 && !IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CWHITE,"Stop 1");;
					if(gVehicleGun[i][vGunLoading] == true && (GetPVarInt(playerid,"carrygun") || GetPVarInt(playerid,"carryammo")))
					{
						if(logGang) SendClientMessage(playerid,CGRAY,"Check 4");
						new gunamount = GetPVarInt(playerid,"carrygun");
						new ammo = GetPVarInt(playerid,"carryammo");
						SetPVarInt(playerid,"carrygun",0);
						SetPVarInt(playerid,"carryammo",0);
						RemovePlayerAttachedObject(playerid,0);
						ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
						if(gVehicleGun[i][vGunGunAmount] + gunamount > 20000 || gVehicleGun[i][vGunAmmo] + ammo > 20000) return SendClientMessage(playerid,CGRAY,"В т.с. недостаточно места");
						if(gunamount) gVehicleGun[i][vGunGunAmount] += gunamount;
						if(ammo) gVehicleGun[i][vGunAmmo] += ammo;
						new mes[128];
						format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gVehicleGun[vehicleid][vGunGunAmount],gVehicleGun[vehicleid][vGunAmmo]);
						UpdateDynamic3DTextLabelText(gVehicleGun[i][vGunText],CWHITE,mes);
					}
					else if(gVehicleGun[i][vGunUnloading] == true && !GetPVarInt(playerid,"carrygun") && !GetPVarInt(playerid,"carryammo"))
					{
						if(logGang) SendClientMessage(playerid,CGRAY,"Check 4.2");
						if(gVehicleGun[i][vGunGunAmount] < 200 && gVehicleGun[i][vGunAmmo] < 200) return SendClientMessage(playerid,CGRAY,"В т.с. недостаточно боеприпасов");
						if(gVehicleGun[i][vGunGunAmount] >= 200)
						{
							gVehicleGun[i][vGunGunAmount] -= 200;
							SetPVarInt(playerid,"carrygun",200);
						}
						if(gVehicleGun[i][vGunAmmo] >= 200)
						{
							gVehicleGun[i][vGunAmmo] -= 200;
							SetPVarInt(playerid,"carryammo",200);
						}
						new mes[128];
						format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gVehicleGun[vehicleid][vGunGunAmount],gVehicleGun[vehicleid][vGunAmmo]);
						UpdateDynamic3DTextLabelText(gVehicleGun[i][vGunText],CWHITE,mes);
						//ClearAnimations(playerid);
						ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
						SetTimerEx("CarryDelay",1000,false,"i",playerid);
						SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
					}
					else SendClientMessage(playerid,CGRAY,"Ошибка");
					return 1;
				}
			}
			for(new i;i<50;i++)
			{
				if(areaid == gDetonateArea[i][0])
				{
					if(pTemp[playerid][pJustTP])
					{
						pTemp[playerid][pJustTP] = false;
						return 1;
					}
					new Float:x, Float:y, Float:z;
					Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][1],E_STREAMER_X,x);
					Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][1],E_STREAMER_Y,y);
					Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][1],E_STREAMER_Z,z);
					pTemp[playerid][pJustTP] = true;
					SetPlayerPos(playerid,x,y,z+1.0);
					return 1;
				}
				else if(areaid == gDetonateArea[i][1])
				{
					if(pTemp[playerid][pJustTP])
					{
						pTemp[playerid][pJustTP] = false;
						return 1;
					}
					new Float:x, Float:y, Float:z;
					Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][0],E_STREAMER_X,x);
					Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][0],E_STREAMER_Y,y);
					Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][0],E_STREAMER_Z,z);
					pTemp[playerid][pJustTP] = true;
					SetPlayerPos(playerid,x,y,z+1.0);
					return 1;
				}
			}

		}
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(areaid >= gHouseArea[0] && areaid <= gHouseArea[gHouseCount])
	{
		pTemp[playerid][pSelectedHouseID] = 0;
	}
	else if(areaid >= gBusinessArea[0] && areaid <= gBusinessArea[gBusinessCount - 1])
	{
		if(!pTemp[playerid][pJustTP]) pTemp[playerid][pSelectedBusinessID] = -1;
	}
	else if(areaid >= gRepairArea[0] && areaid <= gRepairArea[2])
	{
		SetPVarInt(playerid,"selectedrepair",0);
	}
	if(areaid == gAreas[arMinezone] && pTemp[playerid][pWork] == 5)
 	{
		SendClientMessage(playerid,CWHITE,"Вы покинули место работы. И были за это уволены");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid,2);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid,4);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid,5);
		pTemp[playerid][pWork] = 0;
		SetPVarInt(playerid,"knmine",0);
		SetPVarInt(playerid,"rudamine",0);
		SetPVarInt(playerid,"minemesto",0);
		pTemp[playerid][pWorkSalary] = 0;
	}
	if(areaid == gAreas[arWoodzone] && pTemp[playerid][pWork] == 3)
 	{
 	    SendClientMessage(playerid,CWHITE,"Вы покинули место работы. И были за это уволены");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid,2);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid,4);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid,5);
		pTemp[playerid][pWork] = 0;
		SetPlayerAttachedObject(playerid,0,341,6);
		ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
		SetPVarInt(playerid,"woodkg",0);
		DisablePlayerCheckpoint(playerid);
		pTemp[playerid][pWorkSalary] = 0;
 	}
	return 1;
}

public OnRconCommand(cmd[])
{

	return 1;
}

public OnPlayerRequestSpawn(playerid)
{

	if(!pTemp[playerid][pLogined]) return 0;
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{

	new vehicleide = GetVehicleModel(vehicleid);
    new modok = islegalcarmod(vehicleide, componentid);
    if (!modok && !IsKicked(playerid)) {
		SendClientMessage(playerid,CGRAY,"У Вас неверные ID компоненты авто");
		NewKick(playerid);
    }
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[100];
	if(pTemp[playerid][pCuffee] == playerid)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if((newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & KEY_CROUCH || (newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)) && pTemp[playerid][pControllable])
			{
				ClearAnimations(playerid,1);
				SetTimerEx("Unfreez",3000,false,"i",playerid);
				ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
				TogglePlayerControllable(playerid,0);
				SendClientMessage(playerid,CGRAY,"Вы не использовать это действие так как вы в наручниках.");
			}
		}
	}
	if(newkeys == KEY_SPRINT)
	{
		if(GetPVarInt(playerid,"UseAnim") == 1)
		{
			ClearAnimations(playerid);
			SetPVarInt(playerid,"UseAnim",0);
		}
	}
	if(newkeys & KEY_SPRINT || newkeys & KEY_JUMP || newkeys & KEY_FIRE)
	{
		if(pTemp[playerid][pWork] == 5 && GetPVarInt(playerid,"rudamine") >=20)
		{
			SetPVarInt(playerid,"rudamine",0);
			if(IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751)) return 1;
			SendClientMessage(playerid,CRED,"Вы сломали тележку, отправляйтесь на добычу заного!");
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,1,1);
			DisablePlayerCheckpoint(playerid);
			RemovePlayerAttachedObject(playerid,2);
			RemovePlayerAttachedObject(playerid,3);
			return 1;
		}
	}
	if(newkeys & KEY_SPRINT || newkeys & KEY_JUMP || newkeys & KEY_FIRE)
	{
		if(pTemp[playerid][pWork] == 3 && GetPVarInt(playerid,"woodkg") >=20)
		{
			SetPVarInt(playerid,"woodkg",0);
			SendClientMessage(playerid,CRED,"Вы сломали тележку, отправляйтесь на добычу заного!");
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,1,1);
			DisablePlayerCheckpoint(playerid);
			RemovePlayerAttachedObject(playerid,0);
			RemovePlayerAttachedObject(playerid,2);
			SetPlayerAttachedObject(playerid,0,341,6);
			return 1;
		}
	}
	if(newkeys & KEY_WALK && pTemp[playerid][pWork] == 3)
	{
	    if(IsPlayerInDynamicArea(playerid,gAreas[arWoodLoad1]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arWoodLoad2]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arWoodLoad3]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arWoodLoad4]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arWoodLoad5]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arWoodLoad6]))
		{
		    if(GetPVarInt(playerid,"kmwoodtime") <= 0)
		    {
				pTemp[playerid][pCleoFail] = 0;
				new rm = RandomEx(1,4);
				switch(rm)
				{
	   				case 1: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"kmwood",1);
					}
					case 2: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"kmwood",2);
					}
	    			case 3: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"kmwood",3);
					}
				}
				ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",1.0,1,0,0,0,6000,0);
				SetPVarInt(playerid,"kmwoodtime",5);
			}
			else SendClientMessage(playerid,CRED,"Не флудите!");
		}
	}
	if(newkeys & KEY_WALK && pTemp[playerid][pWork] == 5)
	{
	    new Float:mm[3];
	    GetPlayerPos(playerid,mm[0],mm[1],mm[2]);
	    if(IsPlayerInDynamicArea(playerid,gAreas[arMineMes][0]))
		{
		    if(minemesto[0] == 0)
			{
			    ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				ApplyAnimation(playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
			    new m = RandomEx(0,6);
			    ruda[0] = RandomEx(100,300);
			    ruda2[0] = ruda[0];
				switch(m)
				{
				    case 1: {
				        SendClientMessage(playerid,CGRAY,"Поздравляем вы нашли место добычи. (выпало 1)");
				        format(string,sizeof(string),"Место добычи руды №1 \n %d / %d ",ruda[0],ruda[0]);
				        gMinemesto[0] = CreateDynamic3DTextLabel(string,CWHITE,mm[0],mm[1],mm[2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				        minemesto[0] = 1;
				    }
				    case 3: {
				        SendClientMessage(playerid,CGRAY,"Поздравляем вы нашли место добычи. (выпало 3)");
				        format(string,sizeof(string),"Место добычи руды №1 \n %d / %d ",ruda[0],ruda[0]);
				        gMinemesto[0] = CreateDynamic3DTextLabel(string,CWHITE,mm[0],mm[1],mm[2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				        minemesto[0] = 1;
				    }
					default: {
						SendClientMessage(playerid,CGRAY,"К сожалению вы ничего не нашли");
					}
				}
				ClearAnimations(playerid);
			}
			else if(minemesto[0] == 1)
			{
  				if(GetPVarInt(playerid,"rudamine") >=20)
	  			{
	  			    TogglePlayerControllable(playerid,1);
	        	    SendClientMessage(playerid,CGRAY,"Вы собрали достаточно руды, отправляйтесь на склад.");
	        	    SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
					SetPlayerAttachedObject(playerid,3, 905,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
					SetPlayerCheckpoint(playerid,1051.6567,-323.0804,73.9851,5.0);
	        	}
			    else if(GetPVarInt(playerid,"rudamine") < 20)
				{
				    if(ruda2[0] > 0) {
  		    			if(GetPVarInt(playerid,"knmine") <= 0)
		    			{
						    TogglePlayerControllable(playerid,0);
							ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
							ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
							new rm = RandomEx(1,4);
							switch(rm)
							{
							    case 1: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"knmine",1);
								}
							    case 2: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"knmine",2);
								}
							    case 3: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"knmine",3);
								}
							}
							SetPVarInt(playerid,"minemesto",1);
						}
					}
					else if(ruda2[0] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[0]);
					    ruda[0] = 0;
					    ruda2[0] = 0;
					    minemesto[0] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
				}
			}
	    }
	    else if(IsPlayerInDynamicArea(playerid,gAreas[arMineMes][1])) {
	        if(minemesto[1] == 0)
			{
			    ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
	            new m = RandomEx(0,6);
			    ruda[1] = RandomEx(100,300);
			    ruda2[1] = ruda[1];
				switch(m){
				    case 1: {
				        SendClientMessage(playerid,CGRAY,"Поздравляем вы нашли место добычи. (выпало 1)");
				        format(string,sizeof(string),"Место добычи руды №2 \n %d / %d ",ruda[1],ruda[1]);
				        gMinemesto[1] = CreateDynamic3DTextLabel(string,CWHITE,mm[0],mm[1],mm[2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				        minemesto[1] = 1;
				    }
				    case 3: {
				        SendClientMessage(playerid,CGRAY,"Поздравляем вы нашли место добычи. (выпало 3)");
				        format(string,sizeof(string),"Место добычи руды №2 \n %d / %d ",ruda[1],ruda[1]);
				        gMinemesto[1] = CreateDynamic3DTextLabel(string,CWHITE,mm[0],mm[1],mm[2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				        minemesto[1] = 1;
				    }
				    default:  SendClientMessage(playerid,CGRAY,"К сожалению вы ничего не нашли");
				}
	        }
	        else if(minemesto[1] == 1)
			{
	        	if(GetPVarInt(playerid,"rudamine") >=20) {
	        	    TogglePlayerControllable(playerid,1);
	        	    SendClientMessage(playerid,CGRAY,"Вы собрали достаточно руды, отправляйтесь на склад.");
	        	    SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
					SetPlayerAttachedObject(playerid,3, 905,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
					SetPlayerCheckpoint(playerid,1051.6567,-323.0804,73.9851,5.0);
	        	}
	        	else if(GetPVarInt(playerid,"rudamine") < 20) {
	        	    if(ruda2[1] > 0) {
  		    			if(GetPVarInt(playerid,"knmine") <= 0)
		    			{
						    TogglePlayerControllable(playerid,0);
							ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
							ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
							new rm = RandomEx(1,4);
							switch(rm)
							{
							    case 1: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"knmine",1);
								}
							    case 2: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"knmine",2);
								}
							    case 3: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"knmine",3);
								}
							}
							SetPVarInt(playerid,"minemesto",2);
						}
					}
					else if(ruda2[1] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[1]);
					    ruda[1] = 0;
					    ruda2[1] = 0;
					    minemesto[1] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	        	}
			}
		}
		else if(IsPlayerInDynamicArea(playerid,gAreas[arMineMes][2])) {
		    if(minemesto[2] == 0)
			{
			    ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
		        new m = RandomEx(0,6);
			    ruda[2] = RandomEx(100,300);
			    ruda2[2] = ruda[2];
				switch(m) {
				    case 1: {
				        SendClientMessage(playerid,CGRAY,"Поздравляем вы нашли место добычи. (выпало 1)");
				        format(string,sizeof(string),"Место добычи руды №3 \n %d / %d ",ruda[2],ruda[2]);
				        gMinemesto[2] = CreateDynamic3DTextLabel(string,CWHITE,mm[0],mm[1],mm[2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				        minemesto[2] = 1;
				    }
				    case 3: {
				        SendClientMessage(playerid,CGRAY,"Поздравляем вы нашли место добычи. (выпало 3)");
				        format(string,sizeof(string),"Место добычи руды №3 \n %d / %d ",ruda[2],ruda[2]);
				        gMinemesto[2] = CreateDynamic3DTextLabel(string,CWHITE,mm[0],mm[1],mm[2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				        minemesto[2] = 1;
				    }
				    default:  SendClientMessage(playerid,CGRAY,"К сожалению вы ничего не нашли");
				}
				ClearAnimations(playerid);
		    }
		    else if(minemesto[2] == 1)
			{
	        	if(GetPVarInt(playerid,"rudamine") >=20) {
	        	    TogglePlayerControllable(playerid,1);
	        	    SendClientMessage(playerid,CGRAY,"Вы собрали достаточно руды, отправляйтесь на склад.");
	        	    SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
					SetPlayerAttachedObject(playerid,3, 905,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
					SetPlayerCheckpoint(playerid,1051.6567,-323.0804,73.9851,5.0);
	        	}
	        	else if(GetPVarInt(playerid,"rudamine") < 20) {
    	     		if(ruda2[2] > 0) {
  		    			if(GetPVarInt(playerid,"knmine") <= 0)
		    			{
						    TogglePlayerControllable(playerid,0);
							ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
							ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
							new rm = RandomEx(1,4);
							switch(rm)
							{
							    case 1: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"knmine",1);
								}
							    case 2: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"knmine",2);
								}
							    case 3: {
									GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"knmine",3);
								}
							}
							SetPVarInt(playerid,"minemesto",3);
						}
					}
					else if(ruda2[2] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[2]);
					    ruda[2] = 0;
					    ruda2[2] = 0;
					    minemesto[2] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	        	}
			}
		}
	}
	if(newkeys & KEY_JUMP && newkeys & KEY_SPRINT)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			new index = GetPlayerAnimationIndex(playerid);
			if(index == 1224 || index == 1247 || index == 1257 || index == 1249 || index == 1196 || index == 1249)
			{
				new keys,ud,lr;
				GetPlayerKeys(playerid,keys,ud,lr);
				if(ud != 0 || lr != 0) ClearAnimations(playerid);
			}
		}
	}
 	if(newkeys == 128)
  	{
  		if(!GetPVarInt(playerid, "spec_mouse") && GetPVarInt(playerid, "spec_activ") > 0)
     	{
		   SelectTextDraw(playerid, 0xFFFFFF93);
		   GameTextForPlayer(playerid, "SPEC: SHOW CURSOR", 800, 5);
		   SetPVarInt(playerid, "spec_mouse", 1);
		   return 1;
     	}
    }
	if(newkeys & KEY_ACTION)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			pTemp[playerid][pOff]++;
			new vehicleid = GetPlayerVehicleID(playerid);
			if(ToggleEngine(vehicleid) == -1) SendClientMessage(playerid,CGRAY,"Двигатель не заводится. Вызовите механика {"#cWHITE"}(( /call (/c) ))");
		}
	}
	if(newkeys & KEY_CROUCH)
	{
		if(IsPlayerInDynamicArea(playerid,gAreas[arTruckLoadCoal]) || IsPlayerInDynamicArea(playerid,gAreas[arTruckLoadWood]))
		{
			new loadid = 0;
			if(IsPlayerInDynamicArea(playerid,gAreas[arTruckLoadWood])) loadid = 1;
			if(pData[playerid][pJob] == 2 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pTemp[playerid][pTruckWagonID] == INVALID_VEHICLE_ID)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new model = GetVehicleModel(vehicleid);
				if(model == 403 || model == 514 || model == 515)
				{
					new maxcount,level;
					level = GetPlayerTruckLevel(playerid);
					if(level == 1) maxcount = TRUCK_LOAD_1;
					else if(level == 2) maxcount = TRUCK_LOAD_2;
					else if(level == 3) maxcount = TRUCK_LOAD_3;
					SetPVarInt(playerid,"maxamount",maxcount);
					SetPVarInt(playerid,"loadid",loadid);
					if(!loadid)
					{
						SPFD(playerid,dTruckLoad,1,"Загрузка угля","OK","Отмена","Сколько угля Вы хотите загрузить? (макс. %d т)",maxcount);
					}
					else
					{
						SPFD(playerid,dTruckLoad,1,"Загрузка древесины","OK","Отмена","Сколько угля Вы хотите загрузить? (макс. %d т)",maxcount);
					}
				}
			}
		}

		if(IsPlayerInDynamicArea(playerid,gAreas[arTruckUnload]))
		{
			if(pData[playerid][pJob] == 2 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!IsTrailerAttachedToVehicle(vehicleid))
				{
					SendClientMessage(playerid,CRED,"Вы потеряли прицеп. Заказ аннулирован");
					if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
					if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID) DestroyVehicle(pTemp[playerid][pTruckWagonID]);
					pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
					pTemp[playerid][pTruckWagonTime] = 0;
					pTemp[playerid][pTruckWeight] = 0;
					pTemp[playerid][pTruckLoadID] = 0;
				}
				new amount = floatround(pTemp[playerid][pTruckWeight]/100.0);
				new loadid = pTemp[playerid][pTruckLoadID];
				new price = amount*gTruckUnloadPrice[loadid];
				new another;
				another = (!loadid) ? 1:0;
				new award = 0;
				if(!gGunWorkWH[another])  gGunWorkWH[another] = 1;
				if(gGunWorkWH[another] < gGunWorkWH[loadid]) award = floatround(price / 10.0 * (1 - (float(gGunWorkWH[loadid]) / gGunWorkWH[another])));
				new mes[128];
				format(mes,sizeof(mes),"%d кг груза было продано за {"#cGREEN"}$%d",amount*100,price);
				SendClientMessage(playerid,CWHITE,mes);
				if(award > 0)
				{
					format(mes,sizeof(mes),"Премия за дифицитный груз: {"#cGREEN"}$%d",award);
					SendClientMessage(playerid,CWHITE,mes);
					price += award;
				}
				TransferMoney(-1,playerid,price,"truck");
				gGunWorkWH[loadid] += pTemp[playerid][pTruckWeight];
				pData[playerid][pTruckSkill] +=  pTemp[playerid][pTruckWeight];
				UpdatePlayerData(playerid,"truckskill",pData[playerid][pTruckSkill]);
				if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
				DetachTrailerFromVehicle(vehicleid);
				DestroyVehicle(pTemp[playerid][pTruckWagonID]);
				pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
				pTemp[playerid][pTruckWagonTime] = 0;
				pTemp[playerid][pTruckWeight] = 0;
				pTemp[playerid][pTruckLoadID] = 0;
				SetPVarInt(playerid,"informed",0);
			}
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(pTemp[playerid][pDeliving])
			{
				new deliveryid = pTemp[playerid][pDeliveryid];
				new businessid = gDelivery[deliveryid][deliBusinessid];
				new number = pTemp[playerid][pDeliveryNumber];
				if(IsPlayerInDynamicArea(playerid,gBusiness[businessid][busiDelivingArea]))
				{
					new amount = gDelivery[deliveryid][deliProduct][number];
					if(gDelivery[deliveryid][deliPerformerid][number] != playerid)
					{
						SendClientMessage(playerid,CGRAY,"Ошибка (#121)");
						gDelivery[deliveryid][deliPerformerid][number] = INVALID_PLAYER_ID;
						gDelivery[deliveryid][deliProduct][number] = 0;
						if(gDelivery[deliveryid][deliPerforming] > 0) gDelivery[deliveryid][deliPerforming]--;
						pTemp[playerid][pDeliving] = false;
						pTemp[playerid][pDeliveryid] = 0;
						pTemp[playerid][pDeliveryNumber] = 0;
						gDelivery[deliveryid][deliProduct][number] = 0;
						SaveDeliveryData(deliveryid);
						if(gBusiness[businessid][busiDeliving] >= amount && amount)
						{
							gBusiness[businessid][busiDeliving] -= amount;
							gBusiness[businessid][busiOrder] += amount;
						}
						new dftid = vehicleid - aProduct[0];
						if(gDFTObject[dftid][0] != INVALID_OBJECT_ID) DestroyDynamicObject(gDFTObject[dftid][0]);
						if(gDFTObject[dftid][1] != INVALID_OBJECT_ID) DestroyDynamicObject(gDFTObject[dftid][1]);
						gDFTObject[dftid][0] = INVALID_OBJECT_ID;
						gDFTObject[dftid][1] = INVALID_OBJECT_ID;
					}
					else
					{

						if(pTemp[playerid][pDFTID] != vehicleid) return SendClientMessage(playerid,CGRAY,"Вы должны быть на арендованном вами DFT");
						new dftid = vehicleid - aProduct[0];
						if(gDFTObject[dftid][0] != INVALID_OBJECT_ID) DestroyDynamicObject(gDFTObject[dftid][0]);
						if(gDFTObject[dftid][1] != INVALID_OBJECT_ID) DestroyDynamicObject(gDFTObject[dftid][1]);
						gDFTObject[dftid][0] = INVALID_OBJECT_ID;
						gDFTObject[dftid][1] = INVALID_OBJECT_ID;
						gBusiness[businessid][busiProduct] += amount;
						gBusiness[businessid][busiDeliving] -= amount;
						UpdateBusinessText(businessid);
						UpdateBusinessData(businessid+1,"product",gBusiness[businessid][busiProduct]);
						TransferMoney(-1,playerid,gDelivery[deliveryid][deliPrice],"deliveryget");
						new mes[128];
						format(mes,sizeof(mes),"Вы получили {"#cWHITE"}$%d {"#cINFO"}за доставку товара",gDelivery[deliveryid][deliPrice]);
						SendClientMessage(playerid,CINFO,mes);
						pTemp[playerid][pDeliving] = false;
						pTemp[playerid][pDeliveryid] = 0;
						pTemp[playerid][pDeliveryNumber] = 0;
						gDelivery[deliveryid][deliPerformerid][number] = INVALID_PLAYER_ID;
						gDelivery[deliveryid][deliProduct][number] = 0;
						gDelivery[deliveryid][deliPerforming]--;
						gDelivery[deliveryid][deliCount]--;
						if(gDelivery[deliveryid][deliCount] <= 0 && gDelivery[deliveryid][deliPerforming] <= 0)
						{
							gDelivery[deliveryid][deliBusinessid] = 0;
							strdel(gDelivery[deliveryid][deliCustomer],0,24);
							gDelivery[deliveryid][deliCount] = 0;
							gDelivery[deliveryid][deliPrice] = 0;
							gDelivery[deliveryid][deliPerforming] = 0;
							gDelivery[deliveryid][deliBusy] = false;
							SaveDeliveryData(deliveryid);
							gBusiness[businessid][busiOrder] = 0;
							gBusiness[businessid][busiDeliving] = 0;

						}
					}
				}
				else if(IsPlayerInDynamicArea(playerid,gAreas[arDeliLoad][0]) || IsPlayerInDynamicArea(playerid,gAreas[arDeliLoad][1]) || IsPlayerInDynamicArea(playerid,gAreas[arDeliLoad][2]))
				{
					if(gDelivery[deliveryid][deliProduct][number] > 0) return SendClientMessage(playerid,CGRAY,"Вы уже загрузились");
					if(gDelivery[deliveryid][deliPerformerid][number] != playerid)
					{
						SendClientMessage(playerid,CGRAY,"Ошибка (#119)");
						gDelivery[deliveryid][deliPerformerid][number] = INVALID_PLAYER_ID;
						gDelivery[deliveryid][deliProduct][number] = 0;
						if(gDelivery[deliveryid][deliPerforming] > 0) gDelivery[deliveryid][deliPerforming]--;
						pTemp[playerid][pDeliving] = false;
						pTemp[playerid][pDeliveryid] = 0;
						pTemp[playerid][pDeliveryNumber] = 0;
						SaveDeliveryData(deliveryid);
					}
					else
					{
						if(pTemp[playerid][pDFTID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CGRAY,"Вы должны арендовать DFT перед тем как загрузиться");
						if(pTemp[playerid][pDFTID] != vehicleid) return SendClientMessage(playerid,CGRAY,"Вы должны быть на арендованном вами DFT");
						new order = gBusiness[businessid][busiOrder];
						new amount;
						amount = (order > 5000) ? 5000:order;
						new count = floatround(amount/500.0,floatround_ceil);
						gBusiness[businessid][busiOrder] -= amount;
						gBusiness[businessid][busiDeliving] += amount;
						gDelivery[deliveryid][deliProduct][number] = amount;
						SaveDeliveryData(deliveryid);
						SetPlayerCheckpoint(playerid,gBusiness[businessid][busiX],gBusiness[businessid][busiY],gBusiness[businessid][busiZ],4.0);
						pTemp[playerid][pGPS] = true;
						SendClientMessage(playerid,CINFO,"Товар загружен. Следуйте к маркеру на карте.");
						new dftid = vehicleid - aProduct[0];
						gDFTObject[dftid][0] = CreateDynamicObject(1299,0.0,0.0,0.0,0.0,0.0,0.0);
						AttachDynamicObjectToVehicle(gDFTObject[dftid][0],vehicleid,-0.600000,0.800000,0.200000,0.000000,-0.300000,0.500000);
						if(count > 5)
						{
							gDFTObject[dftid][1] = CreateDynamicObject(1299,0.0,0.0,0.0,0.0,0.0,0.0);
							AttachDynamicObjectToVehicle(gDFTObject[dftid][1],vehicleid,0.400000,-1.300000,0.200000,0.000000,-0.300000,90.500000);
						}
					}
				}
			}
		}
	}
	if(newkeys & KEY_YES)
	{
		if(pTemp[playerid][pSellHouseOffee] == playerid) //Согласился купить дом
		{
			new houseid = pTemp[playerid][pSellHouseID];
			new price = pTemp[playerid][pSellHousePrice];
			new offerid = pTemp[playerid][pSellHouseOffer];
			if(!gHouses[houseid][houseOwnerID] || !pData[offerid][pHouse])
			{
				SendClientMessage(playerid,CGRAY,"Дом был продан в гос.");
				pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHousePrice] = 0;
				pTemp[playerid][pSellHouseID] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellHouseOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CGRAY,"Продавец вышел из игры, либо продал дом другому игроку");
				pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHousePrice] = 0;
				pTemp[playerid][pSellHouseID] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CGRAY,"У покупателя недостаточно денег");
				pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHousePrice] = 0;
				pTemp[playerid][pSellHouseID] = 0;
				return 1;
			}
			UpdatePlayerData(offerid,"house",0);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1");
			UpdatePlayerData(playerid,"house",houseid+1);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 2");
			new query[256];
			format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '%d', owner = '%s',inhabit2id = '0',inhabit3id = '0',inhabit4id = '0',inhabit2='',inhabit3='',inhabit4='' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],houseid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 3");
			TransferMoney(playerid,offerid,price,"sellhouse");
			pData[playerid][pHouse] = houseid+1;
			pData[offerid][pHouse] = 0;
			gHouses[houseid][houseOwnerID] = pData[playerid][pMysqlID];
			format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
			strdel(gHouseHabits[houseid][0],0,24);
			strdel(gHouseHabits[houseid][1],0,24);
			strdel(gHouseHabits[houseid][2],0,24);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			if(gHouses[houseid][houseImprove][3])
			{
				gHouses[houseid][houseSkin][0] = pData[playerid][pSkin];
				SendClientMessage(playerid,CGREEN,"Ваш скин помещен в шкаф купленного вами дома");
			}
			gHouses[houseid][houseSkin][1] = 0;
			gHouses[houseid][houseSkin][2] = 0;
			gHouses[houseid][houseSkin][3] = 0;
			if(pData[playerid][pFraction]) gHouses[houseid][houseSkin][3] = pData[playerid][pFractionSkin];
			UpdateHouseDress(houseid);
			if(pData[offerid][pFraction]) SetPlayerSkin(offerid,pData[offerid][pFractionSkin]);
			SendClientMessage(playerid,CGREEN,"Поздравляем, Вы купили дом.");
			SendClientMessage(playerid,CGREEN,"Деньги за квартплату будут сниматься с Вашего банковского счёта.");
			SendClientMessage(offerid,CGREEN,"Дом продан");
			pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHousePrice] = 0;
			pTemp[playerid][pSellHouseID] = 0;

		}
		if(pTemp[playerid][pSellBusinessOffee] == playerid) //Согласился купить бизнес
		{
			new businessid = pTemp[playerid][pSellBusinessID]-1;
			new price = pTemp[playerid][pSellBusinessPrice];
			new offerid = pTemp[playerid][pSellBusinessOffer];
			if(!gBusiness[businessid][busiOwnerID] || !pData[offerid][pBusiness])
			{
				SendClientMessage(playerid,CGRAY,"Бизнес был продан в гос. владельцем");
				pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessPrice] = 0;
				pTemp[playerid][pSellBusinessID] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellBusinessOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CGRAY,"Продавец вышел из игры, либо продал бизнес другому игроку");
				pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessPrice] = 0;
				pTemp[playerid][pSellBusinessID] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CGRAY,"У покупателя недостаточно денег");
				pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessPrice] = 0;
				pTemp[playerid][pSellBusinessID] = 0;
				return 1;
			}
			UpdatePlayerData(offerid,"bussiness",0);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1");
			UpdatePlayerData(playerid,"bussiness",businessid+1);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 2");
			new query[256];
			format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '%d' WHERE `id` = '%d'",pData[playerid][pMysqlID],businessid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 3");
			TransferMoney(playerid,offerid,price,"sellbusiness");
			pData[playerid][pBusiness] = businessid;
			pData[offerid][pBusiness] = 0;
			gBusiness[businessid][busiOwnerID] = pData[playerid][pMysqlID];
			UpdateBusinessText(businessid);
			SendClientMessage(playerid,CGREEN,"Поздравляем, Вы купили бизнес");
			SendClientMessage(offerid,CGREEN,"Бизнес продан");
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
			pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessPrice] = 0;
			pTemp[playerid][pSellBusinessID] = 0;

		}
		if(pTemp[playerid][pSettleHouseOffee] == playerid)
		{
			new houseid = pTemp[playerid][pSettleHouseID];
			new offerid = pTemp[playerid][pSettleHouseOffer];
			if(pTemp[offerid][pSettleHouseOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CGRAY,"Тот, кто предлагал поселиться у него дома вышел из игры");
				pTemp[offerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseID] = 0;
				return 1;
			}
			new slot=-1;
			for(new i;i<gHouses[houseid][houseClass];i++)
			{
				if(!gHouses[houseid][houseHabitID][i]) {slot = i; break;}
			}
			if(slot == -1)
			{
				SendClientMessage(playerid,CGRAY,"В доме нет места");
				SendClientMessage(offerid,CGRAY,"В доме нет места");
				pTemp[offerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseID] = 0;
			}
			UpdatePlayerData(playerid,"house",houseid+1);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка mysql");
			new query[128];
			format(query,sizeof(query),"UPDATE `houses` SET `inhabit%did`='%d', `inhabit%d`='%s' WHERE `id`='%d'",slot+2,pData[playerid][pMysqlID],slot+2,pData[playerid][pNickname],houseid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка mysql");
			SFCM(playerid,CINFO,"Вы стали жильцом в доме {"#cWHITE"}%s",pData[offerid][pNickname]);
			SFCM(offerid,CINFO,"Вы приняли {"#cWHITE"}%s {"#cINFO"}жильцом в свой дом",pData[playerid][pNickname]);
			pData[playerid][pHouse] = houseid+1;
			gHouses[houseid][houseHabitID][slot] = pData[playerid][pMysqlID];
			format(gHouseHabits[houseid][slot],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
			pTemp[offerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSettleHouseID] = 0;
		}
		if(pTemp[playerid][pSellCarOffee] == playerid)
		{
			new offerid = pTemp[playerid][pSellCarOffer];
			new carID = pTemp[playerid][pSellCarID];
			new price = pTemp[playerid][pSellCarPrice];
			if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У вас нет дома");
			new houseid = pData[playerid][pHouse]-1;
			if(!gCars[carID][carOwnerid] || !pData[offerid][pCar])
			{
				SendClientMessage(playerid,CGRAY,"Авто было продано в гос.");
				pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarPrice] = 0;
				pTemp[playerid][pSellCarID] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellCarOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CGRAY,"Продавец вышел из игры");
				pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarPrice] = 0;
				pTemp[playerid][pSellCarID] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CGRAY,"У покупателя недостаточно денег");
				pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarPrice] = 0;
				pTemp[playerid][pSellCarID] = 0;
				return 1;
			}
			new query[256];
			format(query,sizeof(query),"UPDATE `cars` SET `owner` = '%d' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[offerid][pCar]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 3 (продажа авто)");
			UpdatePlayerData(playerid,"car",pData[offerid][pCar]);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 4 (продажа авто)");
			UpdatePlayerData(offerid,"car",0);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 5 (продажа авто)");
			gCars[carID][carOwnerid] = pData[playerid][pMysqlID];
			pData[playerid][pCar] = pData[offerid][pCar];
			pData[offerid][pCar] = 0;
			new modelid = gCars[carID][carModelid];
			SendClientMessage(playerid,CGREEN,"Поздравляем Вы купили т/с.");
			SendClientMessage(offerid,CGREEN,"Т/С продано");
			TransferMoney(playerid,offerid,price,"sellcar");
			DestroyVehicle(gCars[carID][carVid]);
			new vehicleid = CreateVehicle(gTransport[modelid][trModel],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[carID][carColor1],gCars[carID][carColor2],-1);
			gCars[carID][carVid] = vehicleid;
			UpdateVehicleDamageStatus(vehicleid,gCars[carID][carDemages][0],gCars[carID][carDemages][1],gCars[carID][carDemages][2],gCars[carID][carDemages][3]);
			if(gCars[carID][carHealth] < 300.0) gCars[carID][carHealth] = 300.0;
			SetVehicleHealthEx(vehicleid,gCars[carID][carHealth]);
			pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarPrice] = 0;
			pTemp[playerid][pSellCarID] = 0;
		}
		if(pTemp[playerid][pSellFillingOffee] == playerid) //Согласился купить АЗС
		{
			new offerid = pTemp[playerid][pSellFillingOffer];
			new price = pTemp[playerid][pSellFillingPrice];
			new fillingid = -1;
			for(new i;i<FILLING_COUNT;i++)
			{
				if(pData[offerid][pMysqlID] == gFillings[i][fillOwnerID]) fillingid = i;
			}
			if(fillingid == -1) return SendClientMessage(playerid,CRED,"Програмная ошибка (не найдена АЗС)");
			if(!gFillings[fillingid][fillOwnerID] || !pData[offerid][pBusiness])
			{
				SendClientMessage(playerid,CGRAY,"АЗС была продана в гос.");
				pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingPrice] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellFillingOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CGRAY,"Продавец вышел из игры");
				pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingPrice] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CGRAY,"У покупателя недостаточно денег");
				pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingPrice] = 0;
				return 1;
			}
			new query[256];
			format(query,sizeof(query),"UPDATE `fillings` SET `ownerid` = '%d', `ownernick` = '%s' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],fillingid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (покупка бизнесса [АЗС])");
			gFillings[fillingid][fillOwnerID] = pData[playerid][pMysqlID];
			format(gFillings[fillingid][fillOwner],24,"%s",pData[playerid][pNickname]);
			pData[offerid][pBusiness] = 0;
			pData[playerid][pBusiness] = fillingid + 1 + FILLING_ID_OFFSET;
			UpdatePlayerData(playerid,"bussiness",pData[playerid][pBusiness]);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 2 (покупка бизнесса [АЗС])");
			UpdatePlayerData(offerid,"bussiness",pData[offerid][pBusiness]);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 3 (покупка бизнесса [АЗС])");
			TransferMoney(playerid,offerid,price,"buyazs");
			pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellFillingPrice] = 0;
			SendClientMessage(offerid,CGRAY,"Вы продали АЗС");
			SendClientMessage(playerid,CGREEN,"Поздравляем вы купили АЗС.");
			SendClientMessage(playerid,CGREEN,"Меню управления АЗС {"#cWHITE"}\"/filling\"");
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
		}
		if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"repairoffer");
			new price = GetPVarInt(playerid,"repairprice");
			if(GetPVarInt(offer,"repairoffee") == playerid)
			{
				SetPVarInt(playerid,"repairoffee",-1);
				SetPVarInt(playerid,"repairoffer",-1);
				SetPVarInt(playerid,"repairprice",0);
				SetPVarInt(offer,"repairoffee",0);
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return SendClientMessage(playerid,CGRAY,"Вы должны быть в т.с.");
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
				TransferMoney(playerid,offer,price,"repair");
				SetVehicleHealthEx(vehicleid,1000.0);
				RepairVehicle(vehicleid);
				SFCM(playerid,CBLUE,"Вам отремонтировали т.с. за $%d",price);
				SFCM(offer,CBLUE,"Вы отремонтировали т.с. за $%d",price);
			}

		}
		if(GetPVarInt(playerid,"kmwood") == 2 && pTemp[playerid][pWork] == 3)
		{
		    if(GetPVarInt(playerid,"woodkg") >=20) {
      			TogglePlayerControllable(playerid,1);
	        	SendClientMessage(playerid,CGRAY,"Вы собрали достаточно древесины, отправляйтесь на склад.");
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
				RemovePlayerAttachedObject(playerid,0);
				SetPlayerAttachedObject(playerid,0,1463,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
 				SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
				SetPlayerCheckpoint(playerid,-1122.4027,-1624.7273,76.3672,2.0);
				SetPVarInt(playerid,"kmwood",0);
				pTemp[playerid][pAntiCleoWood] = 10;
			}
    		else if(GetPVarInt(playerid,"woodkg") < 20) {
    		    TogglePlayerControllable(playerid,0);
			    new kgmet = RandomEx(1,3);
			    format(string,sizeof(string),"Вы добыли %d древесины",kgmet);
			    SendClientMessage(playerid,CGRAY,string);
	     		SetPVarInt(playerid,"woodkg",GetPVarInt(playerid,"woodkg") + kgmet);
                SetPVarInt(playerid,"kmwoodtime",5);
	     		ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",1.0,1,0,0,0,6000,0);
				new rm = RandomEx(1,4);
				switch(rm) {
	   				case 1: {
					   	GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"kmwood",1);
					}
					case 2: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"kmwood",2);
					}
					case 3: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"kmwood",3);
					}
				}
			}
		}
		else if(GetPVarInt(playerid,"kmwood") != 2 && pTemp[playerid][pWork] == 3) {
		    GameTextForPlayer(playerid, "~r~ERROR ~g~ PRESS ~r~ LALT", 2000, 3); SetPVarInt(playerid,"kmwood",0);
		    SetPVarInt(playerid,"kmwoodtime",5);
		    TogglePlayerControllable(playerid, 1);
		    ClearAnimations(playerid);
		}
		if(GetPVarInt(playerid,"knmine") == 2 && pTemp[playerid][pWork] == 5)
		{
		    if(GetPVarInt(playerid,"rudamine") >=20) {
		            TogglePlayerControllable(playerid,1);
	        	    SendClientMessage(playerid,CGRAY,"Вы собрали достаточно руды, отправляйтесь на склад.");
	        	    SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
					SetPlayerAttachedObject(playerid,3, 905,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
					SetPlayerCheckpoint(playerid,1051.6567,-323.0804,73.9851,2.0);
					SetPVarInt(playerid,"knmine",0);
    		}
    		else if(GetPVarInt(playerid,"rudamine") < 20) {
    		    TogglePlayerControllable(playerid,0);
			    new kgmet = RandomEx(1,4);
			    format(string,sizeof(string),"Вы добыли %d металла",kgmet);
			    SendClientMessage(playerid,CGRAY,string);
	     		SetPVarInt(playerid,"rudamine",GetPVarInt(playerid,"rudamine") + kgmet);
	     		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
	            new rm = RandomEx(1,4);
				switch(rm) {
	   				case 1: {
					   	GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"knmine",1);
					}
					case 2: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"knmine",2);
					}
					case 3: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"knmine",3);
					}
				}
	            if(GetPVarInt(playerid,"minemesto") == 1){
	                if(ruda2[0] > 0) {
		                ruda2[0] = ruda2[0] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 1\n %d / %d ",ruda2[0],ruda[0]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[0],CWHITE,string);
					}
					else if(ruda2[0] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[0]);
					    ruda[0] = 0;
					    ruda2[0] = 0;
					    minemesto[0] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
	            else if(GetPVarInt(playerid,"minemesto") == 2){
	                if(ruda2[1] > 0) {
		                ruda2[1] = ruda2[1] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 2\n %d / %d ",ruda2[1],ruda[1]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[1],CWHITE,string);
					}
					else if(ruda2[1] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[1]);
					    ruda[1] = 0;
					    ruda2[1] = 0;
					    minemesto[1] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
	            else if(GetPVarInt(playerid,"minemesto") == 3){
	                if(ruda2[2] > 0) {
		                ruda2[2] = ruda2[2] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 3\n %d / %d ",ruda2[2],ruda[2]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[2],CWHITE,string);
					}
					else if(ruda2[2] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[1]);
					    ruda[2] = 0;
					    ruda2[2] = 0;
					    minemesto[2] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
			}
		}
		else if(GetPVarInt(playerid,"knmine") != 2 && pTemp[playerid][pWork] == 5) {
		    GameTextForPlayer(playerid, "~r~ERROR", 2000, 3); SetPVarInt(playerid,"knmine",0);
		    TogglePlayerControllable(playerid, 1);
		    ClearAnimations(playerid);
		}
		if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"gunoffer");
			new price = GetPVarInt(playerid,"gunprice");
			new needammo = GetPVarInt(playerid,"gunammo");
			new weaponid = GetPVarInt(playerid,"gunid");
			if(GetPVarInt(offer,"gunoffee") == playerid)
			{
				SetPVarInt(playerid,"gunoffee",0);
				SetPVarInt(playerid,"gunoffer",0);
				SetPVarInt(playerid,"gunammo",0);
				SetPVarInt(playerid,"gunprice",0);
				SetPVarInt(playerid,"gunid",0);
				SetPVarInt(offer,"gunoffee",0);
				new slot = GetWeaponSlot(weaponid);
				new weapon,ammo;
				GetPlayerWeaponData(offer,slot,weapon,ammo);
				if(weapon != weaponid || ammo < needammo) return SendClientMessage(playerid,CGRAY,"У продавца закончилось оружие");
				new remain = ammo - needammo;
				if(remain > ammo) return 1;
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
				pData[offer][pAmmo] += remain;
				UpdatePlayerData(offer,"ammo",pData[offer][pAmmo]);
				GivePlayerWeaponEx(playerid,weaponid,needammo);
				SetPlayerAmmoEx(offer,weaponid,0);
				SetPlayerArmedWeapon(offer,0);
				TransferMoney(playerid,offer,price,"sellgun");
				new mes[128];
				format(mes,sizeof(mes),"продал оружие %s",pData[playerid][pNickname]);
				MeAction(offer,mes);
				SendClientMessage(offer,CGREEN,"Вы продали оружие и оставшиеся патроны были вам возвращены");
			}
		}
		else if(GetPVarInt(playerid,"selectpoint") == 2)
		{

			new driverid = GetPVarInt(playerid,"taxidriver");
			if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER || GetPlayerVehicleID(playerid) != pTemp[driverid][pTaxiID])
			{
				SetPVarInt(playerid,"selectpoint",0);
				SetPVarInt(playerid,"taxidriver",0);
				RemovePlayerMapIcon(playerid,iconTaxi);
			}
			new Float:x, Float:y;
			x = GetPVarFloat(playerid,"selectpointX");
			y = GetPVarFloat(playerid,"selectpointY");
			SetPlayerMapIcon(driverid,iconTaxi,x,y,0.0,0,CYELLOW,1);
			SetPVarFloat(playerid,"selectpointX",x);
			SetPVarFloat(playerid,"selectpointY",y);
			SetPVarInt(playerid,"selectpoint",0);
			SetPVarInt(driverid,"selectpoint",0);
			SendClientMessage(playerid,CINFO,"Данные о месте назначения отправлены таксисту");
			SendClientMessage(driverid,CINFO,"Пассажир установил {"#cYELLOW"}метку {"#cINFO"}на карте. Чтобы убрать метку введите: {"#cWHITE"}/untaxi");
		}
		if(GetPVarInt(playerid,"drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid)
		{
		    new offer = GetPVarInt(playerid,"drugoffer");
			new price = GetPVarInt(playerid,"drugprice");
			new value = GetPVarInt(playerid,"drugvalue");
			if(GetPVarInt(offer,"drugoffee") == playerid)
			{
			    SetPVarInt(playerid,"drugoffee",0);
				SetPVarInt(playerid,"drugoffer",0);
				SetPVarInt(playerid,"drugvalue",0);
				SetPVarInt(playerid,"drugprice",0);
				SetPVarInt(offer,"drugoffee",0);
				if(pData[offer][pDrugs] < value) return SendErr(playerid, "У продавца закончились наркотики");
                if(GetPlayerMoneyEx(playerid) < price) return SendErr(playerid, "У Вас недостаточно денег для покупки");
				if(pData[playerid][pDrugs]+value > 2000) return SendErr(playerid, "У Вас не может быть более 2 кг наркотиков");
                TransferMoney(playerid,offer,price,"selldrugs");
                pData[offer][pDrugs] -= value;
                UpdatePlayerData(offer,"drugs",pData[offer][pDrugs]);
                pData[playerid][pDrugs] += value;
                UpdatePlayerData(playerid,"drugs",pData[playerid][pDrugs]);
                new mes[64]; format(mes,sizeof(mes),"продал наркотики %s", pData[playerid][pNickname]);
				MeAction(offer,mes);
			}
		}
		
	}
	if(newkeys & KEY_NO)
	{

		if(playerid == pTemp[playerid][pSellHouseOffee])
		{
			new offerid = pTemp[playerid][pSellHouseOffer];
			SendClientMessage(playerid,CGRAY,"Вы отказались от покупки дома");
			SendClientMessage(offerid,CGRAY,"Покупатель отказался покупать дом");
			pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHousePrice] = 0;
			pTemp[playerid][pSellHouseID] = 0;
		}
		if(pTemp[playerid][pSellBusinessOffee] == playerid)
		{
			new offerid = pTemp[playerid][pSellBusinessOffer];
			SendClientMessage(playerid,CGRAY,"Вы отказались от покупки бизнеса");
			SendClientMessage(offerid,CGRAY,"Покупатель отказался покупать бизнес");
			pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessPrice] = 0;
			pTemp[playerid][pSellBusinessID] = 0;
		}
		else if(pTemp[playerid][pSellCarOffee] == playerid)
		{
			new offerid = pTemp[playerid][pSellCarOffer];
			SendClientMessage(playerid,CGRAY,"Вы отказались от покупки т/с");
			SendClientMessage(offerid,CGRAY,"Покупатель отказался покупать т/с");
			pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarPrice] = 0;
			pTemp[playerid][pSellCarID] = 0;
		}
		if(GetPVarInt(playerid,"repairoffee") == playerid)
		{
			new offer = GetPVarInt(playerid,"repairoffer");
			if(GetPVarInt(offer,"repairoffee") == playerid)
			{
				SetPVarInt(playerid,"repairoffee",-1);
				SetPVarInt(playerid,"repairoffer",-1);
				SetPVarInt(playerid,"repairprice",0);
				SetPVarInt(offer,"repairoffee",0);
				SendClientMessage(playerid,CBLUE,"Вы отказались от ремонта");
				SendClientMessage(offer,CBLUE,"Клиент отказался от ремонта");
			}

		}
		if(GetPVarInt(playerid,"kmwood") == 3 && pTemp[playerid][pWork] == 3)
		{
		    if(GetPVarInt(playerid,"woodkg") >=20) {
      			TogglePlayerControllable(playerid,1);
	        	SendClientMessage(playerid,CGRAY,"Вы собрали достаточно древесины, отправляйтесь на склад.");
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
				RemovePlayerAttachedObject(playerid,0);
				SetPlayerAttachedObject(playerid,0,1463,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
 				SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
				SetPlayerCheckpoint(playerid,-1122.4027,-1624.7273,76.3672,2.0);
				SetPVarInt(playerid,"kmwood",0);
				pTemp[playerid][pAntiCleoWood] = 10;
			}
    		else if(GetPVarInt(playerid,"woodkg") < 20) {
    		    TogglePlayerControllable(playerid,0);
			    new kgmet = RandomEx(1,3);
			    format(string,sizeof(string),"Вы добыли %d древесины",kgmet);
			    SendClientMessage(playerid,CGRAY,string);
			    SetPVarInt(playerid,"kmwoodtime",5);
	     		SetPVarInt(playerid,"woodkg",GetPVarInt(playerid,"woodkg") + kgmet);
	     		ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",1.0,1,0,0,0,6000,0);
				new rm = RandomEx(1,4);
				switch(rm) {
	   				case 1: {
					   	GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"kmwood",1);
					}
					case 2: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"kmwood",2);
					}
					case 3: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"kmwood",3);
					}
				}
			}
		}
		else if(GetPVarInt(playerid,"kmwood") != 3 && pTemp[playerid][pWork] == 3) {
		    GameTextForPlayer(playerid, "~r~ERROR ~g~ PRESS ~r~ LALT", 2000, 3); SetPVarInt(playerid,"kmwood",0);
		    SetPVarInt(playerid,"kmwoodtime",5);
		    TogglePlayerControllable(playerid, 1);
		    ClearAnimations(playerid);
		}
		if(GetPVarInt(playerid,"knmine") == 3 && pTemp[playerid][pWork] == 5)
		{
		    if(GetPVarInt(playerid,"rudamine") >=20) {
		            TogglePlayerControllable(playerid,1);
	        	    SendClientMessage(playerid,CGRAY,"Вы собрали достаточно руды, отправляйтесь на склад.");
	        	    SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
					SetPlayerAttachedObject(playerid,3, 905,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
					SetPlayerCheckpoint(playerid,1051.6567,-323.0804,73.9851,5.0);
    		}
    		else if(GetPVarInt(playerid,"rudamine") < 20) {
    		    TogglePlayerControllable(playerid,0);
			    new kgmet = RandomEx(1,4);
			    format(string,sizeof(string),"Вы добыли %d металла",kgmet);
			    SendClientMessage(playerid,CGRAY,string);
	     		SetPVarInt(playerid,"rudamine",GetPVarInt(playerid,"rudamine") + kgmet);
	     		ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",1.0,1,0,0,0,6000,0);
	     		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
	            new rm = RandomEx(1,4);
				switch(rm) {
	   				case 1: {
					   	GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"knmine",1);
					}
					case 2: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"knmine",2);
					}
					case 3: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"knmine",3);
					}
				}
	            if(GetPVarInt(playerid,"minemesto") == 1){
	                if(ruda2[0] > 0) {
		                ruda2[0] = ruda2[0] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 1\n %d / %d ",ruda2[0],ruda[0]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[0],CWHITE,string);
					}
					else if(ruda2[0] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[0]);
					    ruda[0] = 0;
					    ruda2[0] = 0;
					    minemesto[0] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
	            else if(GetPVarInt(playerid,"minemesto") == 2){
	                if(ruda2[1] > 0) {
		                ruda2[1] = ruda2[1] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 2\n %d / %d ",ruda2[1],ruda[1]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[1],CWHITE,string);
					}
					else if(ruda2[1] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[1]);
					    ruda[1] = 0;
					    ruda2[1] = 0;
					    minemesto[1] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
	            else if(GetPVarInt(playerid,"minemesto") == 3){
	                if(ruda2[2] > 0) {
		                ruda2[2] = ruda2[2] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 3\n %d / %d ",ruda2[2],ruda[2]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[2],CWHITE,string);
					}
					else if(ruda2[2] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[1]);
					    ruda[2] = 0;
					    ruda2[2] = 0;
					    minemesto[2] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
			}
		}
		else if(GetPVarInt(playerid,"knmine") != 3 && pTemp[playerid][pWork] == 5) {
		    GameTextForPlayer(playerid, "~r~ERROR", 2000, 3); SetPVarInt(playerid,"knmine",0);
		    TogglePlayerControllable(playerid, 1);
		    ClearAnimations(playerid);
		}
		if(GetPVarInt(playerid, "drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid)
		{
		    new offer = GetPVarInt(playerid,"drugoffer");
			if(GetPVarInt(offer,"drugoffee") == playerid)
			{
				SetPVarInt(playerid,"drugoffee",-1);
				SetPVarInt(playerid,"drugoffer",-1);
				SetPVarInt(playerid,"drugprice",0);
				SetPVarInt(offer,"drugoffee",0);
				SendClientMessage(playerid,CBLUE,"Вы отказались от наркотиков");
				SendClientMessage(offer,CBLUE,"Клиент отказался от наркотиков");
			}
		}
	}

	if (newkeys & KEY_SPRINT)
	{
		if(pTemp[playerid][pFilling])
		{
			pTemp[playerid][pOff]++;
			new fillingid = pTemp[playerid][pFillingID]-1;
			new markid = pTemp[playerid][pFillingMark]-1;
			new vehicleid = GetPlayerVehicleID(playerid);
			new modelid = GetVehicleModel(vehicleid) - 400;
			new Float:getfuel;
			getfuel = pTemp[playerid][pFillingAmount] - gVehicles[vehicleid-1][vFuel];
			if(getfuel < 0.0 || pTemp[playerid][pFillingPrice] <= 0) return SendClientMessage(playerid,CGRAY,"Ошибка (#132)");
			if(gFillings[fillingid][fillFuel][markid] < getfuel) return SendClientMessage(playerid,CGRAY,"На заправке недостаточно топлива данного класса");
			UpdateFillingBar(playerid,vehicleid);
			if(GetPlayerMoneyEx(playerid) < pTemp[playerid][pFillingPrice]) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			TransferMoney(playerid,-1,pTemp[playerid][pFillingPrice],"filling");
			gFillings[fillingid][fillBank] += pTemp[playerid][pFillingPrice];
			new query[128];
			format(query,sizeof(query),"UPDATE `fillings` SET `bank` = '%d' WHERE `id` = '%d'",gFillings[fillingid][fillBank],fillingid+1);
			mysql_query(query);
			SendClientMessage(playerid,CGREEN,"Ждите идет заправка");
			gFillings[fillingid][fillFuel][markid] -= floatround(getfuel);
			UpdateFillingFuel(fillingid);
			pTemp[playerid][pFilling] = false;
			HideFillingBar(playerid);
			if(pTemp[playerid][pFillingMark] != gTransport[modelid][trFuelMark])
			{
				new y = floatround(pTemp[playerid][pFillingAmount] - gVehicles[vehicleid-1][vFuel]);
				new probability = floatround(y/pTemp[playerid][pFillingAmount]*1000);
				gVehicles[vehicleid-1][vProbability] += probability;
				if(gVehicles[vehicleid-1][vProbability] > 1000) gVehicles[vehicleid-1][vProbability] = 1000;
				SFCM(playerid,CGRAY,"Вероятность заглохнуть увеличилась до: %d",gVehicles[vehicleid-1][vProbability]);
			}
			else if(gVehicles[vehicleid-1][vProbability])
			{
				new y = floatround(pTemp[playerid][pFillingAmount] - gVehicles[vehicleid-1][vFuel]);
				new probability = floatround(y/pTemp[playerid][pFillingAmount]*1000);
				gVehicles[vehicleid-1][vProbability] -= probability;
				if(gVehicles[vehicleid-1][vProbability] < 0) gVehicles[vehicleid-1][vProbability] = 0;
				SFCM(playerid,CGRAY,"Вероятность заглохнуть уменьшилась до: %d",gVehicles[vehicleid-1][vProbability]);
			}
			pTemp[playerid][pFillGoing] = true;
		}
		if(pTemp[playerid][pSelectStoreGun])
		{
			pTemp[playerid][pOff]++;
			new gunname[32],mes[128];
			GetWeaponName(gHintGunID[pTemp[playerid][pStoreGun]],gunname,32);
			format(mes,sizeof(mes),"{"#cWHITE"}Укажите сколько патронов{"#cGREEN"}%s{"#cWHITE"} Вы хотите взять:");
			ShowPlayerDialog(playerid,dStoreGet,1,"Шкаф",mes,"Взять","Отмена");
		}
	}
	if (newkeys & KEY_WALK)
	{
		if(pTemp[playerid][pIsInHouse])
		{
			new houseid = pTemp[playerid][pSelectedHouseID];
			if(gHouses[houseid][houseImprove][0])
			{
				new hint = gHouses[houseid][houseHint];
				new Float:x, Float:y, Float:z;
				x = gHints[hint][hintX];
				y = gHints[hint][hintY];
				z = gHints[hint][hintZ];
				if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z))
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					pTemp[playerid][pJustTP] = true;
					SetPlayerPos(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
					SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
					pTemp[playerid][pIsInHouse] = false;
				}
			}
		}
		if(GetPlayerInterior(playerid) == 15)
		{
			for(new i;i<8;i++)
			{
				if(IsPlayerInDynamicArea(playerid,gAreas[arHotelEnters][i]))
				{
					pTemp[playerid][pOff]++;
					SetPlayerPos(playerid,gHotelRoomExits[i][0],gHotelRoomExits[i][1],gHotelRoomExits[i][2]);
					SetPlayerFacingAngle(playerid,gHotelRoomExits[i][3]);
				}
				if(IsPlayerInDynamicArea(playerid,gAreas[arHotelExits][i]))
				{
					pTemp[playerid][pOff]++;
					SetPlayerPos(playerid,gHotelRoomEnters[i][0],gHotelRoomEnters[i][1],gHotelRoomEnters[i][2]);
					SetPlayerFacingAngle(playerid,gHotelRoomEnters[i][3]);
				}
			}
		}
		for(new i;i<ATM_COUNT;i++)
		{
			if(IsPlayerInDynamicArea(playerid,gATMArea[i]))
			{
				pTemp[playerid][pOff]++;
				ShowPlayerDialog(playerid,dATM,2,"Банкомат","Проверить счет\nСнять деньги со счета\nПоложить деньги на счет","OK","Отмена");
			}
		}
	}
	if (newkeys & KEY_SECONDARY_ATTACK)
	{
		if(pTemp[playerid][pFilling])
		{
			HideFillingBar(playerid);
			TogglePlayerControllable(playerid,1);
			pTemp[playerid][pFilling] = false;
			pTemp[playerid][pFillGoing] = false;
			pTemp[playerid][pFillingAmount] = 0.0;
			pTemp[playerid][pFillingSpeed] = 0.0;
			pTemp[playerid][pFillingAccel] = 0.0;
			pTemp[playerid][pFillingID] = 0;
			pTemp[playerid][pFillingMark] = 0;
			pTemp[playerid][pFillingPrice] = 0;
		}
		if(pTemp[playerid][pSelectStoreGun])
		{
			new Float:x, Float:y, Float:z, Float:x1, Float:y1, Float:z1;
			x = GetPVarFloat(playerid,"oldcx");
			y = GetPVarFloat(playerid,"oldcy");
			z = GetPVarFloat(playerid,"oldcz");
			GetPlayerCameraPos(playerid,x1,y1,z1);
			InterpolateCameraPos(playerid,x1,y1,z1,x,y,z,700,CAMERA_MOVE);
			SetTimerEx("SetCameraBehindPlayerDelay",1000,false,"i",playerid);
			pTemp[playerid][pSelectStoreGun] = false;
			pTemp[playerid][pStoreGun] = 0;
			GameTextForPlayer(playerid," ",100,3);
			TogglePlayerControllable(playerid,1);
		}
		if(pTemp[playerid][pChangingSkin])
		{
			pTemp[playerid][pChangingSkin] = false;
			SetPlayerSkin(playerid,pData[playerid][pSkin]);
			SetPlayerVirtualWorld(playerid,1);
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid,1);
			TogglePlayerDynamicCP(playerid, gCheckpoints[cpBinco], 1);
			pTemp[playerid][pJustTP] = true;
			GameTextForPlayer(playerid,"_",200,3);
		}
		if(IsPlayerInDynamicArea(playerid,gAreas[arBank]))
		{
			ShowPlayerDialog(playerid,dBank,2,"Банк","1.Проверить сумму на счете\n2. Снять деньги со счета\n3. Положить деньги на счет","Далее","Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.5,-1843.96,-275.82,1036.12) || IsPlayerInRangeOfPoint(playerid,1.5,-1843.92,-279.16,1036.12))
		{
  			if(StartVibori == false) return	true;
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { return true; }
			if(pData[playerid][pGolos] >= 1) return SendClientMessage(playerid,CRED,"Вы уже голосовали. Повторное голосование невозможно");
			OnPlayerCommandText(playerid,"/candidates");
			ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,1);
			return true;
		}
	}
	if (newkeys & KEY_CTRL_BACK)
	{
		new houseid = pData[playerid][pHouse]-1;
		if(pData[playerid][pHouse] && pTemp[playerid][pSelectedHouseID])
		{
			if(gHouses[houseid][houseOwnerID] == pData[playerid][pMysqlID]) {
				new hintid = gHouses[houseid][houseHint];
				if(gHouses[houseid][houseImprove][2] && IsPlayerInDynamicArea(playerid,gHintFreezArea[hintid]))
				{
					ShowPlayerDialog(playerid,dFreez,2,"Холодильник","Хот-дог ({"#cRED"}-10 прод. {"#cGREEN"}+20 сытость{"#cWHITE"})\nБургер ({"#cRED"}-15 прод. {"#cGREEN"}+30 сытость{"#cWHITE"})\nПицца ({"#cRED"}-30 прод. {"#cGREEN"}+60 сытость{"#cWHITE"})","Съесть","Отмена");
				}
				if(gHouses[houseid][houseImprove][3] && IsPlayerInDynamicArea(playerid,gHintStoreArea[hintid]))
    			{
					ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
				}
			}
			else SendClientMessage(playerid, -1, "{"#cGRAY"}Только владелец дома может использовать шкаф");
		}
		if(IsGang(pData[playerid][pFraction]) && IsPlayerInDynamicArea(playerid,gAreas[arArmyAmmo]))
		{
			if(GetPVarInt(playerid,"carrygun")) return SendClientMessage(playerid,CGRAY,"У вас уже есть ящик с оружием");
			new armyid = GetPlayerVirtualWorld(playerid);
			if(gArmyWarehouse[armyid][0] < 100 && gArmyWarehouse[armyid][0] < 100) return SendClientMessage(playerid,CGRAY,"Неостаточно боеприпасов на складе");
			if(gArmyWarehouse[armyid][0] >= 100)
			{
				gArmyWarehouse[armyid][0] -= 100;
				SetPVarInt(playerid,"carrygun",100);
			}
			if(gArmyWarehouse[armyid][1] >= 100)
			{
				gArmyWarehouse[armyid][1] -= 100;
				SetPVarInt(playerid,"carryammo",100);
			}
			SetPlayerFacingAngle(playerid,270.0);
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
			SetTimerEx("CarryDelay",1000,false,"i",playerid);
			SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);

		}
		if((pData[playerid][pFraction] == 8 || pData[playerid][pFraction] == 9) && IsPlayerInDynamicArea(playerid,gAreas[arGunWorkUnload]))
		{
			if(gGunWorkWH[2] < 500) return SendClientMessage(playerid,CGRAY,"На складе недостаточно единиц оружия");
			if(!GetPVarInt(playerid,"carrygun"))
			{
				gGunWorkWH[2] -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",500);
			}
		}
		if(IsPlayerInDynamicArea(playerid,gAreas[arCristmas][5]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arCristmas][6]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arCristmas][7]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arCristmas][8]) ||
		IsPlayerInDynamicArea(playerid,gAreas[arCristmas][9]))
		{
			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,0,0,0,0,1);
			SetTimerEx("HatOn",3000,false,"i",playerid);
		}
		if(GetPVarInt(playerid,"kmwood") == 1 && pTemp[playerid][pWork] == 3)
		{
		    if(GetPVarInt(playerid,"woodkg") >=20) {
      			TogglePlayerControllable(playerid,1);
	        	SendClientMessage(playerid,CGRAY,"Вы собрали достаточно древесины, отправляйтесь на склад.");
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
				RemovePlayerAttachedObject(playerid,0);
				SetPlayerAttachedObject(playerid,0,1463,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
 				SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
				SetPlayerCheckpoint(playerid,-1122.4027,-1624.7273,76.3672,2.0);
				SetPVarInt(playerid,"kmwood",0);
				pTemp[playerid][pAntiCleoWood] = 10;
			}
    		else if(GetPVarInt(playerid,"woodkg") < 20) {
    		    TogglePlayerControllable(playerid,0);
			    new kgmet = RandomEx(1,3);
			    format(string,sizeof(string),"Вы добыли %d древесины",kgmet);
			    SendClientMessage(playerid,CGRAY,string);
			    SetPVarInt(playerid,"kmwoodtime",5);
	     		SetPVarInt(playerid,"woodkg",GetPVarInt(playerid,"woodkg") + kgmet);
				new rm = RandomEx(1,4);
				switch(rm) {
	   				case 1: {
					   	GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"kmwood",1);
					}
					case 2: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"kmwood",2);
					}
					case 3: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"kmwood",3);
					}
				}
			}
		}
		else if(GetPVarInt(playerid,"kmwood") != 1 && pTemp[playerid][pWork] == 3) {
		    GameTextForPlayer(playerid, "~r~ERROR ~g~ PRESS ~r~ LALT", 2000, 3); SetPVarInt(playerid,"kmwood",0);
		    SetPVarInt(playerid,"kmwoodtime",5);
		    TogglePlayerControllable(playerid, 1);
		    ClearAnimations(playerid);
		}
		if(GetPVarInt(playerid,"knmine") == 1 && pTemp[playerid][pWork] == 5)
		{
		    if(GetPVarInt(playerid,"rudamine") >=20) {
		            TogglePlayerControllable(playerid,1);
	        	    SendClientMessage(playerid,CGRAY,"Вы собрали достаточно руды, отправляйтесь на склад.");
	        	    SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
					SetPlayerAttachedObject(playerid,3, 905,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
					SetPlayerCheckpoint(playerid,1051.6567,-323.0804,73.9851,5.0);
    		}
    		else if(GetPVarInt(playerid,"rudamine") < 20) {
    		    TogglePlayerControllable(playerid,0);
			    new kgmet = RandomEx(1,4);
			    format(string,sizeof(string),"Вы добыли %d металла",kgmet);
			    SendClientMessage(playerid,CGRAY,string);
	     		SetPVarInt(playerid,"rudamine",GetPVarInt(playerid,"rudamine") + kgmet);
	     		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
	            new rm = RandomEx(1,4);
				switch(rm) {
	   				case 1: {
					   	GameTextForPlayer(playerid, "~g~PRESS ~r~H", 2000, 3); SetPVarInt(playerid,"knmine",1);
					}
					case 2: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~Y", 2000, 3); SetPVarInt(playerid,"knmine",2);
					}
					case 3: {
						GameTextForPlayer(playerid, "~g~PRESS ~r~N", 2000, 3); SetPVarInt(playerid,"knmine",3);
					}
				}
    			if(GetPVarInt(playerid,"minemesto") == 1){
	                if(ruda2[0] > 0) {
		                ruda2[0] = ruda2[0] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 1\n %d / %d ",ruda2[0],ruda[0]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[0],CWHITE,string);
					}
					else if(ruda2[0] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[0]);
					    ruda[0] = 0;
					    ruda2[0] = 0;
					    minemesto[0] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
	            else if(GetPVarInt(playerid,"minemesto") == 2){
	                if(ruda2[1] > 0) {
		                ruda2[1] = ruda2[1] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 2\n %d / %d ",ruda2[1],ruda[1]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[1],CWHITE,string);
					}
					else if(ruda2[1] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[1]);
					    ruda[1] = 0;
					    ruda2[1] = 0;
					    minemesto[1] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
	            else if(GetPVarInt(playerid,"minemesto") == 3){
	                if(ruda2[2] > 0) {
		                ruda2[2] = ruda2[2] - kgmet;
		                format(string,sizeof(string),"Место добычи руды № 3\n %d / %d ",ruda2[2],ruda[2]);
		     			UpdateDynamic3DTextLabelText(gMinemesto[2],CWHITE,string);
					}
					else if(ruda2[2] <= 0){
					    DestroyDynamic3DTextLabel(gMinemesto[1]);
					    ruda[2] = 0;
					    ruda2[2] = 0;
					    minemesto[2] = 0;
					    SendClientMessage(playerid,CGRAY,"Здесь кончилась руда, начните добычу заного или отправляйтесь в другое место.");
					}
	            }
			}
		}
		else if(GetPVarInt(playerid,"knmine") != 1 && pTemp[playerid][pWork] == 5){
		    GameTextForPlayer(playerid, "~r~ERROR", 2000, 3); SetPVarInt(playerid,"knmine",0);
		    TogglePlayerControllable(playerid, 1);
		    ClearAnimations(playerid);
		}
	}
	if (newkeys & KEY_FIRE)
	{
		new pstate = GetPlayerState(playerid);
		if(pstate == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(vehicleid) ToggleLamp(vehicleid);
		}
	}
	return 1;
}

forward HatOn(playerid);
public HatOn(playerid)
{
	SetPlayerAttachedObject(playerid,2,19064,2,0.15,0.00,0.00,70.0,94.0,30.0,1.20,1.20,1.20);
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{

	return 1;
}
CheckFireArm(weaponid) {
	switch(weaponid) {
		case 16..39, 41..43: return 1;
		default: return 0;
	}
	return 0;
}
public OnPlayerUpdate(playerid)
{
	if(pTemp[playerid][pIsAFK])
	{
		pTemp[playerid][pIsAFK] = false;
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
		{
			pTemp[playerid][pAbletoTP] = true;
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			pTemp[playerid][pX] = x;
			pTemp[playerid][pY] = y;
			pTemp[playerid][pZ] = z;
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && pData[playerid][pAdmin] <= 0 && GetPVarInt(playerid,"registskin") == 0)
	{
	    SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве! {FFA500}(#0001)");
 		new stringer[90];
	    format(stringer,sizeof(stringer),"< Warning >: %s был кикнут по подозрению в читерстве",pData[playerid][pAdmin]);
	    AdminChat(CINFO,stringer);
 		NewKick(playerid);
 	}
	pTemp[playerid][pAFK] = 0;
	if(!pTemp[playerid][pAbletoGun] && !IsKicked(playerid)) {
		new weapon, ammo;
		new mes[128], weapname[32], weapname2[32];
		for (new i = 0; i < 13; i++)
		{
			GetPlayerWeaponData(playerid, i, weapon, ammo);
			if(weapon != 0 && weapon != 46 && weapon != 40 && weapon != 1 && ammo > 0)
			{
				if(gGuns[playerid][i] != weapon)
				{
					SendClientMessage(playerid,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в чите на оружие.");
					GetWeaponName(weapon, weapname, 32);
					GetWeaponName(gGuns[playerid][i], weapname2, sizeof weapname);
					format(mes,sizeof(mes),"Античит: %s[%i] был кикнут по подозрению в чите на оружие (было: %s[%i], стало: %s[%i]).", pData[playerid][pNickname], playerid, weapname2, gAmmos[playerid][i], weapname, ammo);
					AdminChat(CORANGE,mes);
					NewKick(playerid);
					return 1;
				}
			}
			if(ammo != gAmmos[playerid][i] && CheckFireArm(weapon)) {
				if(ammo < gAmmos[playerid][i]) {
					gAmmos[playerid][i] = ammo;
				}
				else if((weapon >= 16 && weapon <= 18) || (weapon >= 22 && weapon <= 39) || (weapon >= 41 && weapon <= 43)) {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в чите на патроны.");
                    GetWeaponName(weapon, weapname, sizeof weapname);
                    format(mes, sizeof mes, "Античит: %s[%i] был кикнут по подозрению в чите на патроны (%s, было: %i, стало: %i).", pData[playerid][pNickname], playerid, weapname, gAmmos[playerid][i], ammo);
                    AdminChat(CORANGE, mes);
                    NewKick(playerid);
                    return 1;
				}
			}
		}
	}
	if(IsPlayerConnected(playerid)) {
			if(pData[playerid][pPiss] == 0 || pData[playerid][pShit] == 0) {
	 			PlayerTextDrawSetString(playerid,BarTextdraws[8][playerid], "lllll");
			}
			if(pData[playerid][pPiss] >= 15 || pData[playerid][pShit] >= 15) {
			    PlayerTextDrawSetString(playerid,BarTextdraws[8][playerid], "llll");
			}
			if(pData[playerid][pPiss] >= 25 || pData[playerid][pShit] >= 25) {
				PlayerTextDrawSetString(playerid,BarTextdraws[8][playerid], "lll");
			}
			if(pData[playerid][pPiss] >= 40 || pData[playerid][pShit] >= 40) {
			    PlayerTextDrawSetString(playerid,BarTextdraws[8][playerid], "ll");
			}
			if(pData[playerid][pPiss] >= 55 || pData[playerid][pShit] >= 55) {
			    PlayerTextDrawSetString(playerid,BarTextdraws[8][playerid], "l");
			}
	}
	if(gmadmin[playerid] == true)
	{
		new Float:healths;
		GetPlayerHealth(playerid,healths);
		if(healths < 10000)
		{
		    SetPlayerHealthEx(playerid,10000.0);
		}
	}
	iNewPlayerAmmo[playerid] = GetPlayerAmmo(playerid);
	if(iNewPlayerAmmo[playerid] != iPlayerAmmo[playerid])
	{
		OnPlayerAmmoChange(playerid, iNewPlayerAmmo[playerid], iPlayerAmmo[playerid]);
		iPlayerAmmo[playerid] = iNewPlayerAmmo[playerid];
	}
	new index = GetPlayerAnimationIndex(playerid);
	if(pTemp[playerid][pSelectStoreGun])
	{
		new newkeys,ud,lr;
		GetPlayerKeys(playerid,newkeys,ud,lr);
		if (lr > 0)
		{
			new id = pTemp[playerid][pStoreGun];
			if(id == 8) id = 0;
			else id++;
			new houseid = pData[playerid][pHouse]-1;
			new hintid = gHouses[houseid][houseHint];
			for(new i=id;i<9;i++)
			{
				if(gHouses[houseid][houseGun][i])
				{
					new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
					GetPlayerCameraPos(playerid,x,y,z);
					GetGunCameraOffset(gHintGun[hintid][i][0],gHintGun[hintid][i][1],gHintStore[hintid][5],x2,y2);
					z2 = gHintGun[hintid][i][2] + 0.4;
					InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,700,CAMERA_MOVE);
					GetPlayerCameraFrontVector(playerid,x2,y2,z2);
					x += x2;
					y += y2;
					z += z2;
					InterpolateCameraLookAt(playerid,x,y,z,gHintGun[hintid][i][0],gHintGun[hintid][i][1],gHintGun[hintid][i][2],700,CAMERA_MOVE);
					pTemp[playerid][pStoreGun] = i;
					pTemp[playerid][pSelectStoreGun] = false;
					SetTimerEx("SelectStoreGun",1000,false,"i",playerid);
					new gunname[32],mes[48];
					GetWeaponName(GetStoreGunID(i),gunname,32);
					format(mes,48,"~w~%s (~g~%d~w~)",gunname,gHouses[houseid][houseGun][i]);
					GameTextForPlayer(playerid,mes,100000,3);
					break;
				}
				if(i == 8) i = 0;
			}
		}
		if (lr < 0)
		{
			new id = pTemp[playerid][pStoreGun];
			if(id == 0) id = 8;
			else id--;
			new houseid = pData[playerid][pHouse]-1;
			new hintid = gHouses[houseid][houseHint];
			for(new i=id;i>=0;i--)
			{
				if(gHouses[houseid][houseGun][i])
				{
					new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
					GetPlayerCameraPos(playerid,x,y,z);
					GetGunCameraOffset(gHintGun[hintid][i][0],gHintGun[hintid][i][1],gHintStore[hintid][5],x2,y2);
					z2 = gHintGun[hintid][i][2] + 0.4;
					InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,700,CAMERA_MOVE);
					GetPlayerCameraFrontVector(playerid,x2,y2,z2);
					x += x2;
					y += y2;
					z += z2;
					InterpolateCameraLookAt(playerid,x,y,z,gHintGun[hintid][i][0],gHintGun[hintid][i][1],gHintGun[hintid][i][2],700,CAMERA_MOVE);
					pTemp[playerid][pStoreGun] = i;
					pTemp[playerid][pSelectStoreGun] = false;
					SetTimerEx("SelectStoreGun",1000,false,"i",playerid);
					new gunname[32],mes[48];
					GetWeaponName(GetStoreGunID(i),gunname,32);
					format(mes,48,"~w~%s (~g~%d~w~)",gunname,gHouses[houseid][houseGun][i]);
					GameTextForPlayer(playerid,mes,100000,3);
					break;
				}
				if(i == 0) i = 8;
			}
		}
	}
	updatePublic_adminSpec(playerid); // вставить в OnPlayerUpdate
	//бар сытость
	if(IsPlayerConnected(playerid)) {
        if(pData[playerid][pHunger] == 0) {
		    PlayerTextDrawSetString(playerid,BarTextdraws[10][playerid], "none");
		}
		if(pData[playerid][pHunger] >= 1) {
		    PlayerTextDrawSetString(playerid,BarTextdraws[10][playerid], "l");
		}
		if(pData[playerid][pHunger] >= 40) {
			PlayerTextDrawSetString(playerid,BarTextdraws[10][playerid], "ll");
		}
		if(pData[playerid][pHunger] >= 60) {
		    PlayerTextDrawSetString(playerid,BarTextdraws[10][playerid], "lll");
		}
		if(pData[playerid][pHunger] >= 80) {
		    PlayerTextDrawSetString(playerid,BarTextdraws[10][playerid], "llll");
		}
		if(pData[playerid][pHunger] >= 100) {
		    PlayerTextDrawSetString(playerid,BarTextdraws[10][playerid], "lllll");
		}
	}
	if(pTemp[playerid][pWork] == 2 && GetPVarInt(playerid,"coalamount")) //Если игрок несет мешок
	{
		if(index != 1224 && index != 1189 && index != 265 && index != 259 && index != 260 && index != 1257 && index != 1269 && index != 471)
		{
			SendClientMessage(playerid,CGRAY,"Вы рассыпали весь уголь");
			SetPVarInt(playerid,"coalamount",0);
			RemovePlayerAttachedObject(playerid,0);
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
			new id = RandomEx(0,3);
			SetPlayerCheckpoint(playerid,gCoalManCPs[id][0],gCoalManCPs[id][1],gCoalManCPs[id][2],3.0);
			SetPVarInt(playerid,"loadid",id);
		}
	}
	else if(pTemp[playerid][pWork] == 3 && GetPVarInt(playerid,"woodamount")) //Если игрок везет тележку
	{
		if(index != 1224 && index != 1189 && index != 321 && index != 1184 && index != 265 && index != 1269 && index != 471)
		{
			SendClientMessage(playerid,CGRAY,"Вы сломали тележку");
			SetPVarInt(playerid,"woodamount",0);
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
			SetPlayerAttachedObject(playerid,0,341,6);
			new id = RandomEx(0,4);
			SetPlayerCheckpoint(playerid,gWoodCPs[id][0],gWoodCPs[id][1],gWoodCPs[id][2],1.0);
			SetPVarInt(playerid,"loadid",id);
		}
	}
	else if((pTemp[playerid][pWork] == 4 && GetPVarInt(playerid,"gunamount") == 2)) //Если игрок везет тележку
	{
		if(index != 1224 && index != 1189 && index != 265 && index != 259 && index != 260 && index != 1257 && index != 1269 && index != 471)
		{
			SendClientMessage(playerid,CGRAY,"Вы уронили ящик");
			SetPVarInt(playerid,"gunamount",0);
			SetPVarInt(playerid,"carrygun",0);
			RemovePlayerAttachedObject(playerid,0);
			RemovePlayerAttachedObject(playerid,1);
			ClearAnimations(playerid);
			DisablePlayerCheckpoint(playerid);
		}
	}
	new GetTime = gettime();
	for(new A, B = GetMaxPlayers(); A != B; A++)
	{
		if(GetPVarInt(A, "SpcarsAvto") <= GetTime && GetPVarInt(A, "SpcarsAvto") != 0)
		{
			SetPVarInt(A, "SpcarsAvto", 0);
			SpcarsAvto(A);
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(pData[playerid][pJob] == 2 && IsTrailerAttachedToVehicle(vehicleid))
		{
			new trailerid = GetVehicleTrailer(vehicleid);
			if(pTemp[playerid][pTruckWagonID] != trailerid)
			{
				DetachTrailerFromVehicle(vehicleid);
				new Float:x, Float:y, Float:z;
				GetVehiclePos(vehicleid,x,y,z);
				y -= 1.0;
				SetVehiclePos(vehicleid,x,y,z);
			}
			else if(pTemp[playerid][pTruckWeight] < GetPVarInt(playerid,"truckamount")*1000)
			{
				DetachTrailerFromVehicle(vehicleid);
				SendClientMessage(playerid,CWHITE,"Фура еще не загружена полностью");
				new Float:x, Float:y, Float:z;
				GetVehiclePos(vehicleid,x,y,z);
				y -= 1.0;
				SetVehiclePos(vehicleid,x,y,z);
			}
			else if(!GetPVarInt(playerid,"informed"))
			{
				pTemp[playerid][pTruckWagonTime] = 60;
				SendClientMessage(playerid,CWHITE,"Отлично. Теперь у Вас есть 1 минута, чтобы покинуть место загрузки угля.");
				SendClientMessage(playerid,CWHITE,"Иначе заказ будет аннулирован");
				SetPVarInt(playerid,"informed",1);
			}
		}
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new newkeys,ud,lr;
		GetPlayerKeys(playerid,newkeys,ud,lr);
		new animlib[31], animname[31];
		GetAnimationName(index, animlib, sizeof(animlib), animname, sizeof(animname));
		if(!IsKicked(playerid) && strcmp(animlib, "PED", true) == 0 && strcmp(animname, "RUN_PLAYER", true) == 0 && GetPlayerSkin(playerid) != 0)
		{
			SendClientMessage(playerid,CBADINFO, "Чтобы играть на нашем сервере вам необходимо удалить читы");
			NewKick(playerid);
		}
		if((ud || lr) && pTemp[playerid][pControllable] && pTemp[playerid][pCuffee] == playerid && (!(newkeys & KEY_WALK) || newkeys & KEY_SPRINT))
		{
			TogglePlayerControllable(playerid,0);
			SetTimerEx("Unfreez",3000,false,"i",playerid);
			ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000);
			SendClientMessage(playerid,CGRAY,"Вы не можете бегать в наручниках. Зажмите клавишу ходьбы и идите шагом.");
		}
		if(HOLDING(KEY_CTRL_BACK | KEY_HANDBRAKE))
		{
			new target = GetPlayerTargetPlayer(playerid);
			if(target != INVALID_PLAYER_ID)
			{
				new actplayerid = target;
				new mes[256];
				format(mes,sizeof(mes),"Показать {"#cBLUE"}%s {"#cWHITE"} паспорт\nДать {"#cBLUE"}%s {"#cWHITE"} денег",pData[actplayerid][pNickname],pData[actplayerid][pNickname]);
				ShowPlayerDialog(playerid,dActPlayerMenu,2,"Выберите действие",mes,"ОК","Отмена");
				pTemp[playerid][pActPlayer] = actplayerid;
			}
		}
		if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 9 && pTemp[playerid][pControllable])
		{
			if(index >= 1136 && index <= 1138 || index == 504 || index == 505 || index == 1141)
			{
				for(new i;i<sizeof(gAreas[arGreenZone]);i++)
				{
					if(IsPlayerInDynamicArea(playerid,gAreas[arGreenZone][i]))
					{
						ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,1,3000);
						SetTimerEx("ClearAnimationsDelay",3000,false,"i",playerid);
						TogglePlayerControllable(playerid,0);
						SetTimerEx("Unfreez",3000,false,"i",playerid);
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	if(!(pData[forplayerid][pSettings] & setShowNickname)) ShowPlayerNameTagForPlayer(forplayerid,playerid,0);
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(gVehicles[vehicleid-1][vLock]) SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	else SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	GetVehiclePos(vehicleid, gVehicles[vehicleid - 1][vX], gVehicles[vehicleid - 1][vY], gVehicles[vehicleid - 1][vZ]);
	GetVehicleZAngle(vehicleid, gVehicles[vehicleid - 1][vA]);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(pTemp[playerid][pDDOS2] >= 10 && !IsKicked(playerid))
	{
		SendClientMessage(playerid,CGRAY,"Кикнуты по подозрению в ДДОС");
		pTemp[playerid][pDDOS2] = 0;
		NewKick(playerid);
		return 1;
	}
	pTemp[playerid][pDDOS2]++;
	strreplace(inputtext, '%', '#');
	pTemp[playerid][pDialog] = false;
	switch(dialogid)
	{
		case dLogin:
		{
			if(!response)
			{
				SendClientMessage(playerid,CWHITE,"Введите /q чтобы Выйти");
				NewKick(playerid);
			}
			else if(!strlen(inputtext)) ShowPlayerDialog(playerid,dLogin,3,"Вход","Вы ввели неправильный пароль.\nПроверьте правильность вводимого пароля.","ОК","Выход");
			else
			{
			    new query[150];
				format(query,sizeof(query),"SELECT * FROM `accounts` WHERE `nickname`= '%s' AND `password`='%s'",pRegData[playerid][0],inputtext);
				mysql_query(query);
				mysql_store_result();
				if(mysql_num_rows() > 0)
				{
					SendClientMessage(playerid,CGREEN,"Вы успешно вошли в аккаунт");
					pTemp[playerid][pLogined] = true;
					LoadPlayerData(playerid);
					SetPlayerScore(playerid,pData[playerid][pLevel]);
					plogin[playerid] = true;
					SpawnPlayer(playerid);
					if(pData[playerid][pAdmin] > 0)
					{
						ShowPlayerDialog(playerid,dAPass,3,"Админ панель","Введите админ пароль от вашего аккаунта.","ОК","");
					}
		   		}
				else
				{
					pTemp[playerid][pLoginAttempt]++;
					if(pTemp[playerid][pLoginAttempt] == MAX_LOGIN_ATTEMPTS)
					{
						SendClientMessage(playerid,CRED,"Вы исчерпали лимит попыток ввода пароля");
						SendClientMessage(playerid,CWHITE,"Напишите /q чтобы Выйти");
						return NewKick(playerid);
					}
					SFCM(playerid,CRED,"Пароль введен не верно. Осталось попыток: %d",MAX_LOGIN_ATTEMPTS-pTemp[playerid][pLoginAttempt],MAX_LOGIN_ATTEMPTS);
					ShowPlayerDialog(playerid,dLogin,3,"Вход","Вы ввели неправильный пароль.\nПроверьте правильность вводимого пароля.","ОК","Выход");
				}
				mysql_free_result();
			}
		}
		case dLogin2:
		{
			new code[24];
			GetPVarString(playerid,"code",code,24);
			if(!strcmp(inputtext,code,false) && strlen(inputtext))
			{
				DeletePVar(playerid,"code");
				SendClientMessage(playerid,CGREEN,"Вы успешно вошли в аккаунт");
				pTemp[playerid][pLogined] = true;
				LoadPlayerData(playerid);
				SetPlayerScore(playerid,pData[playerid][pLevel]);
				SpawnPlayer(playerid);
			}
			else
			{
				SendClientMessage(playerid,CRED,"Код безопасности введен неверно");
				SendClientMessage(playerid,CWHITE,"Напишите /q чтобы Выйти");
				NewKick(playerid);
			}
		}
		case dRegister:
		{
		    if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid,dRegister,3,"Регистрация","ОК","Выход","{"#cWHITE"}\tДобро пожаловать на сервер.\n\n\tДанный аккаунт свободен.\n\tЧтобы зарегистрироваться введите пароль:");
			if(!response)
			{
				SendClientMessage(playerid,CWHITE,"Введите /q чтобы Выйти");
				NewKick(playerid);
			}
			else if(!strlen(inputtext)) ShowPlayerDialog(playerid,dRegister,3,"Регистрация","ОК","Выход","{"#cWHITE"}\tДобро пожаловать на сервер.\n\n\tДанный аккаунт свободен.\n\tЧтобы зарегистрироваться введите пароль:");
			else
			{
				if(strfind(inputtext,"|") != -1)
				{
					SendClientMessage(playerid,CGRAY,"У вас в пароле пристуствут запрещенные символы");
					SPFD(playerid,dRegister,3,"Регистрация","ОК","Выход","{"#cWHITE"}\tДобро пожаловать на сервер.\n\tВаш логин: {"#cBLUE"}%s{"#cWHITE"}\n\n\tДанный аккаунт свободен.\n\tЧтобы зарегистрироваться введите пароль:",pRegData[playerid][0]);
					return 1;
				}
				if(strlen(inputtext) <6 || strlen(inputtext) > 22)
				{
					SendClientMessage(playerid,CWHITE,"Длина пароля должна быть от 6-и до 22-х символов");
					SPFD(playerid,dRegister,3,"Регистрация","ОК","Выход","{"#cWHITE"}\tДобро пожаловать на сервер.\n\tВаш логин: {"#cBLUE"}%s{"#cWHITE"}\n\n\tДанный аккаунт свободен.\n\tЧтобы зарегистрироваться введите пароль:",pRegData[playerid][0]);
					return 1;
				}
				mysql_real_escape_string(inputtext,pRegData[playerid][1]);
				ShowPlayerDialog(playerid,dRegister2,1,"Регистрация","\tУкажите ваш E-Mail:","Далее","Назад");
			}
		}
		case dRegister2:
		{
		    if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid,dRegister2,1,"Регистрация","\tУкажите ваш E-Mail:","Далее","Назад");
			if(!response) {ShowPlayerDialog(playerid,dRegister2,1,"Регистрация","\tУкажите ваш E-Mail:","Далее","Назад"); return 1;}
			if(strfind(inputtext,"|") != -1)
			{
				SendClientMessage(playerid,CGRAY,"У вас в почте пристуствуют запрещенные символы");
				SPFD(playerid,dRegister,3,"Регистрация","ОК","Выход","\n",pRegData[playerid][0]);
				return 1;
			}
			if(!IsValidEmail(inputtext))
			{
				SendClientMessage(playerid,CGRAY,"E-Mail не верный. Повторите ввод.");
				ShowPlayerDialog(playerid,dRegister2,1,"Регистрация","\tУкажите ваш E-Mail:","Далее","Назад");
			}
			else
			{
                SetPVarString(playerid,"rphone","0");
				mysql_real_escape_string(inputtext,pRegData[playerid][2]);
				ShowPlayerDialog(playerid,dRegister3,0,"Регистрация","\tУкажите ваш пол:","Жен.","Муж.");
			}
		}
		case dRegister3:
		{
		    if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid,dRegister3,0,"Регистрация","\tУкажите ваш пол:","Жен.","Муж.");
			if(response) pRegData[playerid][3][0] = 2; //жен
			else pRegData[playerid][3][0] = 1; //муж
			ShowPlayerDialog(playerid,dRegister5,2,"Регистрация","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","В начало"); //Белые
		}
		case dRegister5:
		{
		        if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid,dRegister5,2,"Регистрация","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","В начало"); //Белые
				if(!listitem) return ShowPlayerDialog(playerid,dRegister5,2,"Регистрация","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","В начало"); //Белые
				pRegData[playerid][5][0] = listitem;
				switch(listitem)
				{
				    case 1: nationtext[playerid] = "American";
				    case 2: nationtext[playerid] = "Japanese";
					case 3: nationtext[playerid] = "Italian";
					case 4: nationtext[playerid] = "Mexican";
					case 5: nationtext[playerid] = "Latin-American";
					case 6: nationtext[playerid] = "Spaniard";
					case 7: nationtext[playerid] = "Russian";
					case 8: nationtext[playerid] = "Portuguese";
					case 9: nationtext[playerid] = "Frenchy";
				}
				ShowPlayerDialog(playerid,dRegister6,1,"Регистрация","\tУкажите ваш возраст (игровой):","Регистрация","В начало");
		}
		case dRegister6:
		{
		    if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid,dRegister6,1,"Регистрация","\tУкажите ваш возраст (игровой):","Регистрация","В начало");
			if(!response) {SPFD(playerid,dRegister,3,"Регистрация","ОК","Выход","{"#cWHITE"}\tДобро пожаловать на сервер.\n\tВаш логин: {"#cBLUE"}%s{"#cWHITE"}\n\n\tДанный аккаунт свободен.\n\tЧтобы зарегистрироваться введите пароль:",pData[playerid][pNickname]); return 1;}
			if(!isNumeric(inputtext))
			{
				SendClientMessage(playerid,CGRAY,"Возраст пишите цифрами. Например: 17");
				ShowPlayerDialog(playerid,dRegister5,1,"Регистрация","\tУкажите ваш возраст (игровой):","Регистрация","В начало");
				return 1;
			}
			new age = strval(inputtext);
			if(age <= 4 || age >= 120)
			{
				SendClientMessage(playerid,CGRAY,"Возраст не может быть меньше 4 и не больше 120");
				ShowPlayerDialog(playerid,dRegister5,1,"Регистрация","\tУкажите ваш возраст (игровой):","Регистрация","В начало");
				return 1;
			}
			mysql_real_escape_string(inputtext,pRegData[playerid][6]);
			
			ShowPlayerDialog(playerid,dRegister7,1,"Регистрация","{FFFFFF}Укажите ник игрока, пригласившего Вас на сервер\nПо достижению Вами {FF9900}4 {FFFFFF}уровня он получит {FF9900}50.000$\n{FFFFFF}Если Вы сами нашли наш сервер,то нажмите кнопку {FF9900}Пропустить","Далее","Пропустить");
		}
		case dRegister7:
		{
		    if(!response) {
				SetPVarString(playerid,"rinvitation","-");
			}
			else {
                if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid,dRegister7,1,"Регистрация","{FFFFFF}Укажите ник игрока, пригласившего Вас на сервер\nПо достижению Вами {FF9900}4 {FFFFFF}уровня он получит {FF9900}50.000$\n{FFFFFF}Если Вы сами нашли наш сервер,то нажмите кнопку {FF9900}Пропустить","Далее","Пропустить");
				SetPVarString(playerid,"rinvitation",inputtext);
			}
			new randskin;
		    SetPVarInt(playerid,"registration_miniature",0);
		    SetPVarInt(playerid,"registration_stepend",1);
		    SetTimerEx("RegistrTimer",1,true,"i",playerid);
		    PlayAudioStreamForPlayer(playerid,"v-sampe.ru");
	     	if(pRegData[playerid][3][0] == 1)//Если игрока мужик то..
	        {
				randskin = RandomEx(0,12);
	            SetPVarInt(playerid,"skinid",mNationalitySkin[pRegData[playerid][5][0]][randskin]);
	 		}
	        else if(pRegData[playerid][3][0] == 2)//Если игрок женщина то
	        {
				randskin = RandomEx(0,8);
	            SetPVarInt(playerid,"skinid",wNationalitySkin[pRegData[playerid][5][0]][randskin]);
	 		}
	 		SetPVarInt(playerid,"registskin",1);
            TogglePlayerSpectating(playerid, true);
		}
		case dCommandList:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new mes[800];
					strcat(mes,"{"#cWHITE"}/lock - закрыть/открыть домашнее авто\n");
					strcat(mes,"/lock2 - закрыть/открыть рабочее авто.\n");
					strcat(mes,"/pass [ID] - показать паспорт\n");
					strcat(mes,"/anim - список Анимаций\n");
					strcat(mes,"/pay - передать деньги.\n");
					strcat(mes,"/fill - заправить авто.\n");
					strcat(mes,"/gps - навигатор.\n");
					strcat(mes,"/healme - использовать аптечку.\n");
					strcat(mes,"/licenses - Посмотреть лицензии\n");
					strcat(mes,"/time - смотреть время на часах\n");
					strcat(mes,"/с(/call) - Позвонить игроку.\n");
					strcat(mes,"/sms - написать СМС.\n");
					strcat(mes,"/togphone - выключить телефон.\n");
					strcat(mes,"/bullpen - посмотреть время заключения.\n");
					strcat(mes,"/play - слушать радио\n");
					strcat(mes,"/stop - остановить радио.\n");
					strcat(mes,"/radio - выкл/Вкл радио(чат)\n");
					strcat(mes,"/limit - установить лимит скорости.\n");
					strcat(mes,"/ad - подать объявление.\n");
					strcat(mes,"/id - узнать ид игрока по нику\n");
					strcat(mes,"/afk - узнать время простоя игрока в AFK\n");
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
				case 1:
				{
					new mes[500];
					strcat(mes,"{"#cINFO"}-Водитель Такси\n");
					strcat(mes,"{"#cWHITE"}/taxi - запросить место положения.\n");
					strcat(mes,"/untaxi - Отменить запрос места.\n");
					strcat(mes,"/fare - Установить цену за 1 км.\n");
					strcat(mes,"{"#cINFO"}-Механик\n");
					strcat(mes,"{"#cWHITE"}/tow - Начать буксировку.\n");
					strcat(mes,"/untow - Закончить буксировку.\n");
					strcat(mes,"/repair - Починить.\n");
					strcat(mes,"/unfill - Очистить топливную систему.\n");
					strcat(mes,"{"#cINFO"}-Дальнобойщик\n");
					strcat(mes,"CAPS_LOCK - загрузить/разгрузить груз.\n");
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
				case 2:
				{
					new mes[256];
					strcat(mes,"{"#cWHITE"}/b - ООС чат.\n");
					strcat(mes,"/me - Чат действий.\n");
					strcat(mes,"/ame - Чат действий(над головой)\n");
					strcat(mes,"/do - Чат от 3-го лица.\n");
					strcat(mes,"/ado - Чат от 3-го лица(над головой)\n");
					strcat(mes,"/try - Попытка действия(Удачно,Неудачно)\n");
					strcat(mes,"/s - Чат крика.\n");
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
				case 3:
				{
					new mes[500];
					strcat(mes,"{"#cWHITE"}/home - Управление домом.\n");
					strcat(mes,"{"#cWHITE"}/exit - выйти из дома\n");
					strcat(mes,"/sellhouse ([ID игрока]) продать дом, если ввести на id продашь игроку\n");
					strcat(mes,"/sellcar - продать авто\n");
					strcat(mes,"/settle - поселить человека в дом\n");
					strcat(mes,"/evict - выселить человека из дома\n");
					strcat(mes,"/residents - посмотреть список жильцов\n");
					strcat(mes,"/safe - Управление сейфом\n");
					strcat(mes,"/freez - Холодильник.\n");
					strcat(mes,"/store - управление шкафом.\n");
					strcat(mes,"/eat - есть еду из холодильника.");
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
				case 4:
				{
					new mes[128];
					strcat(mes,"{"#cWHITE"}/business - Управление бизнесом.\n");
					strcat(mes,"/sellbusiness - Продажа Бизнеса.\n");
					strcat(mes,"/filling - Управление АЗС.\n");
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
				case 5:
				{
					new mes[500];
					if(pData[playerid][pFraction] == 9)
					{
						strcat(mes,"{"#cWHITE"}/r - Рация.\n");
						strcat(mes,"/d - Департамент.\n");
						strcat(mes,"/suspect(/su) - Объявить в розыск.\n");
						strcat(mes,"/tazer - Поразить шокером.\n");
						strcat(mes,"/cuff - Надеть наручники.\n");
						strcat(mes,"/uncuff - Снять наручники.\n");
						strcat(mes,"/arrest - Посадить в тюрьму.\n");
						strcat(mes,"/push - Затолкать в авто.\n");
						strcat(mes,"/m - Мегафон.\n");
						strcat(mes,"/loadgun - Начать загрузку.\n");
						strcat(mes,"/unloadgun - Закончить загрузку.\n");
						strcat(mes,"/online - Посмотреть онлайн фракции.\n");

					}
					else if(pData[playerid][pFraction] == 8)
					{
						strcat(mes,"{"#cWHITE"}/r - Рация.\n");
						strcat(mes,"/d - Департамент.\n");
						strcat(mes,"/loadgun - Начать загрузку.\n");
						strcat(mes,"/unloadgun - Закончить загрузку.\n");
						strcat(mes,"/online - Посмотреть онлайн фракции.\n");
					}
					else if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7)
					{
						strcat(mes,"{"#cWHITE"}/r - Рация.\n");
						strcat(mes,"/loadgun - Начать загрузку.\n");
						strcat(mes,"/unloadgun - Закончить загрузку.\n");
						strcat(mes,"/makegun - Сделать оружие.\n");
						strcat(mes,"/gob - Общак.\n");
						strcat(mes,"/givegun - Передать оружие.\n");
						strcat(mes,"/sellgun - Продать оружие.\n");
						strcat(mes,"/bangam - Снять/Одеть бандану.\n");
						strcat(mes,"/grespawn - Респавн авто.\n");
						strcat(mes,"/givekey - Передать ключи от дома.\n");
						strcat(mes,"/gsellcar - Продать авто банды.\n");
						strcat(mes,"/loadgun - Начать загрузку.\n");
						strcat(mes,"/unloadgun - Закончить загрузку.\n");
						strcat(mes,"/online - Посмотреть онлайн фракции.\n");
					}
					else if(pData[playerid][pFraction] == 10)
					{
						strcat(mes,"{"#cWHITE"}/r - Рация.\n");
						strcat(mes,"/ads - Меню проверки /ad\n");
						strcat(mes,"/ether - Выйти в эфир.\n");
						strcat(mes,"/dial - Принять звонок в эфир.\n");
						strcat(mes,"/hdial - Oтсоединить от эфира\n");
						strcat(mes,"/stopdial - Отключить прием звонков.\n");
						strcat(mes,"/nmoney - Счет организации в банке\n");
						strcat(mes,"/ngetmoney - Взять деньги с банка организации\n");
						strcat(mes,"/online - Посмотреть онлайн фракции.\n");
					}
					else if(pData[playerid][pFraction] == 1)
					{
						strcat(mes,"{"#cWHITE"}/r - Рация.\n");
						strcat(mes,"/exam - Принять экзамен.\n");
						strcat(mes,"/online - Посмотреть онлайн фракции.\n");

					}
					else if(pData[playerid][pFraction] == 2)
					{
						strcat(mes,"{"#cWHITE"}/r - Рация.\n");
						strcat(mes,"/d - Депортамент.\n");
						strcat(mes,"/heal - Вылечить игрока.\n");
						strcat(mes,"/online - Посмотреть онлайн фракции.\n");
					}
					else if(pData[playerid][pFraction] >= 15 && pData[playerid][pFraction] <= 17)
					{
						strcat(mes,"{"#cWHITE"}/r - Рация.\n");
						strcat(mes,"/mob - общак мафии.\n");
						strcat(mes,"/online - Посмотреть онлайн фракции.\n");
					}
					else
					{
						strcat(mes,"{"#cWHITE"}Вы не состоите в организации\n");
					}
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
				case 6:
				{
					new mes[256];
					strcat(mes,"{"#cWHITE"}/lmenu - меню лидера (только для банд)\n");
					strcat(mes,"/gov - Гос.Новости.\n");
					strcat(mes,"/invite - принять\n");
					strcat(mes,"/uninvite - уволить\n");
					strcat(mes,"/setskin - выбрать служебную одежду.\n");
					strcat(mes,"/giverank - повысить / понизить в должности\n");
					strcat(mes,"/subleader - назначить лидера подфракции");
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
				case 7:
				{
					new mes[256];
					strcat(mes,"{"#cWHITE"}/it - Итальянский.\n");
					strcat(mes,"/pt - Португальский.\n");
					strcat(mes,"/fr - Французский.\n");
					strcat(mes,"/jp - Японский.\n");
					strcat(mes,"/is - Испанский. (Латиноамериканцы,Мексиканцы,Испанцы)\n");
					strcat(mes,"/ru - Русский.\n");
					ShowPlayerDialog(playerid,dCommandShow,0,"Команды",mes,"OK","");
				}
			}
		}
		case dCommandShow:
		{
			ShowPlayerDialog(playerid,dCommandList,2,"Команды сервера","1.Общие\n2.Работы\n3.Чаты\n4.Дом\n5.Бизнес\n6.Фракция\n7.Лидерам\n8.Языки","OK","Отмена");
		}
		case dEmplHistory:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: //Автобус
				{
					new mes[128];
					new status[20];
					new count[40];
					new target;
					if(pData[playerid][pBusSkill] >= BUS_LEVEL_3) {status = "Опытный работник"; target = 0;}
					else if(pData[playerid][pBusSkill] >= BUS_LEVEL_2) {status = "Стабильный работник"; target = BUS_LEVEL_3;}
					else {status = "Начинающий работник"; target = BUS_LEVEL_2;}
					if(!target) format(count,sizeof(count),"%d",pData[playerid][pBusSkill]);
					else format(count,sizeof(count),"%d/%d",pData[playerid][pBusSkill],target);
					format(mes,sizeof(mes),"   {"#cWHITE"}Статус: {"#cBLUE"}%s\n   {"#cWHITE"}Совершено рейсов: %s",status,count);
					ShowPlayerDialog(playerid,dMes,0,"Водитель автобуса",mes,"OK","");
				}
				case 1: //Дальнобойщик
				{
					new mes[128];
					new status[20];
					new count[40];
					new target;
					if(pData[playerid][pTruckSkill] >= TRUCK_LEVEL_3) {status = "Опытный работник"; target = 0;}
					else if(pData[playerid][pTruckSkill] >= TRUCK_LEVEL_2) {status = "Стабильный работник"; target = TRUCK_LEVEL_3;}
					else {status = "Начинающий работник"; target = TRUCK_LEVEL_2;}
					if(!target) format(count,sizeof(count),"%d",pData[playerid][pTruckSkill]);
					else format(count,sizeof(count),"%d/%d",pData[playerid][pTruckSkill],target);
					format(mes,sizeof(mes),"   {"#cWHITE"}Статус: {"#cBLUE"}%s\n   {"#cWHITE"}Перевезено груза: %s кг",status,count);
					ShowPlayerDialog(playerid,dMes,0,"Дальнобойщик",mes,"OK","");
				}
			}
		}
		case dPlayerMenuSecurity:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					if(strlen(pData[playerid][pCode])) ShowPlayerDialog(playerid,dChangePassCode,3,"Смена пароля","{"#cWHITE"}Введите код безопасности, который Вы установили в настройках:","OK","Отмена");
					else ShowPlayerDialog(playerid,dChangePassPass,3,"Смена пароля","{"#cWHITE"}Введите ваш старый пароль","OK","Отмена");
				}
				case 1: //Код безопасности
				{
					ShowCodeSettings(playerid);
				}
				case 2: //Подтверждение мыла
				{
					if(pData[playerid][pEConfirmed])
					{
						SendClientMessage(playerid,CGREEN,"Ваш E-Mail уже подтвержден");
					}
					new mes[256];
					format(mes,sizeof(mes)," {"#cWHITE"}После нажатия на кнопке 'OK', Вам на E-Mail будет отправлено письмо c кодом подтверждения,\n который Вы должны будете ввести в следующем окне.\n Указанный Вами E-Mail адрес: {"#cBLUE"}%s",pData[playerid][pEmail]);
					ShowPlayerDialog(playerid,dPlayerMenuSecurityEConfirm,0,"Подтверждение E-Mail",mes,"OK","Отмена");
				}
				case 3: //Привязка номера
				{
					ShowPlayerDialog(playerid,dPhoneConfirm1,1,"Привязка телефона","{"#cWHITE"}Введите ваш {"#cGREEN"}номер телефона. {"#cWHITE"}.\n После ввода номера вам будет выслано СМС сообщение с кодом подтверждения.\n{"#cGRAY"}(Формат: +7xxxxxxxxxx)","OK","Отмена");
				}
			}
		}
		case dCode:
		{
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"Безопасность","1. Изменить пароль\n2. Код безопасности\n3. Подтверждение E-Mail адреса\nПривязка номера телефона","ОК","Отмена");
			switch(listitem)
			{
				case 0:
				{
					if(!strlen(pData[playerid][pCode])) ShowPlayerDialog(playerid,dCodeSet1,3,"Код безопасности","{"#cWHITE"}Введите новый код безопасности","ОК","Назад");
					else ShowPlayerDialog(playerid,dCodeChange1,3,"Код безопасности","{"#cWHITE"}Введите ваш старый код безопасности","ОК","Назад");
				}
				case 1:
				{
					if(!pData[playerid][pRequestCode])
					{
						if(!strlen(pData[playerid][pCode])) return ShowPlayerDialog(playerid,dCodeMes,0,"Код безопасности","Вам необходимо сначала установить код безопасности","ОК","");
						pData[playerid][pRequestCode] = 1;
					}
					else
					{
						pData[playerid][pRequestCode] = 0;
					}
					UpdatePlayerData(playerid,"requestcode",pData[playerid][pRequestCode]);
					ShowCodeSettings(playerid);
				}
			}
		}
		case dCodeMes:
		{
			ShowCodeSettings(playerid);
		}
		case dCodeSet1:
		{
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"Безопасность","1. Изменить пароль\n2. Код безопасности\n3. Подтверждение E-Mail адреса\nПривязка номера телефона","ОК","Отмена");
			if(strfind(inputtext,"|") != -1)
			{
				return SendClientMessage(playerid,CGRAY,"У вас в пароле пристуствут запрещенные символы");
			}
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			mysql_real_escape_string(inputtext,inputtext);
			if(!strlen(inputtext) && strlen(pData[playerid][pCode]))
			{
				new query[100];
				format(query,sizeof(query),"UPDATE `accounts` SET code = '', requestcode = '0' WHERE id = '%d'",pData[playerid][pMysqlID]);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (удаление кода)");
				format(pData[playerid][pCode],MAX_PLAYER_NAME,"");
				pData[playerid][pRequestCode] = 0;
				SendClientMessage(playerid,CGREEN,"Код безопасности был удален");
			}
			else if(strlen(inputtext) < 6 || strlen(inputtext) > 22)
			{
				SendClientMessage(playerid,CGRAY,"Длина кода должна быть от 6 до 22 символов");
				ShowPlayerDialog(playerid,dCodeSet1,3,"Код безопасности","{"#cWHITE"}Введите новый код безопасности","ОК","Назад");
			}
			else
			{
				SetPVarString(playerid,"setcode",inputtext);
				ShowPlayerDialog(playerid,dCodeSet2,3,"Код безопасности","{"#cWHITE"}Повторите ваш новый код безопасности:","ОК","Отмена");
			}
		}
		case dCodeSet2:
		{
			new oldcode[25];
			GetPVarString(playerid,"setcode",oldcode,MAX_PLAYER_NAME);
			DeletePVar(playerid,"setcode");
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"Безопасность","1. Изменить пароль\n2. Код безопасности\n3. Подтверждение E-Mail адреса\nПривязка номера телефона","ОК","Отмена");
			if(strfind(inputtext,"|") != -1)
			{
				return SendClientMessage(playerid,CGRAY,"У вас в пароле пристуствут запрещенные символы");
			}
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			mysql_real_escape_string(inputtext,inputtext);
			if(!strcmp(inputtext,oldcode,false) && strlen(inputtext))
			{
				new query[128];
				format(query,sizeof(query),"UPDATE `accounts` SET code = '%s' WHERE id = '%d'",inputtext,pData[playerid][pMysqlID]);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (смена кода)");
				format(pData[playerid][pCode],MAX_PLAYER_NAME,"%s",inputtext);
				SendClientMessage(playerid,CGREEN,"Код безопасности изменен. Пожалуйста запишите его.");
			}
			else SendClientMessage(playerid,CGRAY,"Введенные Вами коды безопасности не совпадают");
		}
		case dCodeChange1:
		{
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"Безопасность","1. Изменить пароль\n2. Код безопасности\n3. Подтверждение E-Mail адреса\nПривязка номера телефона","ОК","Отмена");
            if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			if(!strcmp(inputtext,pData[playerid][pCode],false) && strlen(inputtext))
			{
				ShowPlayerDialog(playerid,dCodeSet1,3,"Код безопасности","Введите новый код безопасности. (Чтобы удалить код безопасности оставте поле пустым)","ОК","Назад");
			}
			else SendClientMessage(playerid,CGRAY,"Код введен неверно");
		}
		case dChangePassCode:
		{
			if(!response) return 1;
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			if(!strcmp(inputtext,pData[playerid][pCode],false) && strlen(inputtext))
			{
				ShowPlayerDialog(playerid,dChangePassPass,3,"Смена пароля","{"#cWHITE"}Введите ваш старый пароль","OK","Отмена");
			}
			else SendClientMessage(playerid,CGRAY,"Код введен неверно");
		}
		case dChangePassPass:
		{
			if(!response) return 1;
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			if(!strcmp(inputtext,pData[playerid][pPassword],false) && strlen(inputtext))
			{
				ShowPlayerDialog(playerid,dChangePass1,3,"Смена пароля","{"#cWHITE"}Введите ваш новый пароль","ОК","Отмена");
			}
			else SendClientMessage(playerid,CGRAY,"Пароль введен неверно");
		}
		case dChangePass1:
		{
			if(!response) return 1;
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			if(strlen(inputtext) <6 || strlen(inputtext) > 22)
			{
				SendClientMessage(playerid,CGRAY,"Длина пароля должна быть от 6-и до 22-х символов");
				ShowPlayerDialog(playerid,dChangePass1,3,"Смена пароля","{"#cWHITE"}Введите ваш новый пароль","ОК","Отмена");
			}
			else
			{
				SetPVarString(playerid,"changepass",inputtext);
				ShowPlayerDialog(playerid,dChangePass2,3,"Смена пароля","{"#cWHITE"}Повторите ваш пароль:","ОК","Отмена");
			}
		}
		case dChangePass2:
		{
			new oldpass[25];
			GetPVarString(playerid,"changepass",oldpass,25);
			DeletePVar(playerid,"changepass");
			if(!response) return 1;
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			if(!strcmp(inputtext,oldpass,false) && strlen(inputtext))
			{
				new query[128];
				format(query,sizeof(query),"UPDATE `accounts` SET password = '%s' WHERE id = '%d'",inputtext,pData[playerid][pMysqlID]);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (смена пароля)");
				format(pData[playerid][pPassword],MAX_PLAYER_NAME,"%s",inputtext);
				SendClientMessage(playerid,CGREEN,"Пароль изменен. Пожалуйста запишите его.");
			}
			else SendClientMessage(playerid,CGRAY,"Введенные Вами пароли не совпадают");
		}
		case dPlayerMenuSecurityEConfirm:
		{
			if(!response) return true;
			new code;
			code = RandomEx(10000,99999);
			SetPVarInt(playerid,"emailcode",code);
			new query[300];
			format(query,sizeof(query),"%s?authkey=%s&email=%s&code=%d",EMAIL_ACTIVE,EMAIL_AUTHKEY,pData[playerid][pEmail],code);
			new result = HTTP(0,HTTP_HEAD,query,"","");
			if(!result) return SendClientMessage(playerid,CGRAY,"Произошла ошибка при http запросе");
			printf("query: %s",query);
			format(query,sizeof(query)," {"#cWHITE"}Вам на почтовый адрес {"#cBLUE"}%s{"#cWHITE"} было отправлено письмо с кодом подтверждения.\n Сверните игру, проверьте почту и введите этот код.\n {"#cRED"}ВНИМАНИЕ! Не нажимайте ESC для Выхода из паузы (т.к. окно может закрыться), используйте мышь");
			ShowPlayerDialog(playerid,dPlayerMenuSecurityEConfirm2,1,"Подтверждение E-Mail",query,"ОК","Отмена");
		}
		case dPlayerMenuSecurityEConfirm2:
		{
			if(!response) return true;
			new code = GetPVarInt(playerid,"emailcode");
			if(strval(inputtext) != code)
			{
				SendClientMessage(playerid,CRED,"Код указан неверно");
				return OnPlayerCommandText(playerid, "/menu");
			}
			SendClientMessage(playerid,CGREEN,"E-Mail подтвержден. Теперь Вы можете восстановить свой пароль в любой момент.");
			UpdatePlayerData(playerid,"econfirmed",1);
		}
		case dPlayerMenuSettingsAction:
		{
			if(!response) return true;
			new setting = 1 << listitem;
			if(!(pData[playerid][pSettings] & setting)) pData[playerid][pSettings] |= setting;
			else pData[playerid][pSettings] ^= setting;
			UpdatePlayerData(playerid,"settings",pData[playerid][pSettings]);
			if(setting == setShowNickname)
			{
				if(pData[playerid][pSettings] & setShowNickname)
				{
					for(new i;i<MAX_PLAYERS;i++) ShowPlayerNameTagForPlayer(playerid,i,1);
				}
				else
				{
					for(new i;i<MAX_PLAYERS;i++) ShowPlayerNameTagForPlayer(playerid,i,0);
				}
			}
			ShowSettings(playerid);
		}
		case dCoalwork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWork] = 2;
				SetPlayerSkinNA(playerid,16);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь идите на {"#cRED"}чекпоинт{"#cWHITE"}, чтобы взять мешок с углем.");
				new id = RandomEx(0,3);
				SetPlayerCheckpoint(playerid,gCoalManCPs[id][0],gCoalManCPs[id][1],gCoalManCPs[id][2],3.0);
				SetPVarInt(playerid,"loadid",id);
			}
			else if(pTemp[playerid][pWork] == 2)
			{
				pTemp[playerid][pWork] = 0;
				DeletePVar(playerid,"coalamount");
				DeletePVar(playerid,"loadid");
				RemovePlayerAttachedObject(playerid,0);
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				DisablePlayerCheckpoint(playerid);
				new mes[128];
				format(mes,sizeof(mes),"{"#cGREEN"}Вы заработали {"#cWHITE"}%d${"#cGREEN"}. Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,CGREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"coal");
				pTemp[playerid][pWorkSalary] = 0;
			}
		}
		case dWoodwork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
   				if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid,2);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
    			SetPlayerAttachedObject(playerid,0,341,6);
				SetPlayerAttachedObject(playerid,1,18638,2,0.154999,0.016000,0.004000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
				pTemp[playerid][pWork] = 3;
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь идите к одному из деревьев, чтобы нарубить дров.");
				new id = RandomEx(0,4);
				SetPVarInt(playerid,"loadid",id);
			}
			else if(pTemp[playerid][pWork] == 3)
			{
				pTemp[playerid][pWork] = 0;
				DeletePVar(playerid,"woodamount");
				DeletePVar(playerid,"loadid");
				RemovePlayerAttachedObject(playerid,0);
				RemovePlayerAttachedObject(playerid,1);
				DisablePlayerCheckpoint(playerid);
				new mes[128];
				format(mes,sizeof(mes),"{"#cGREEN"}Вы заработали {"#cWHITE"}%d${"#cGREEN"}. Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,CGREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"wood");
				pTemp[playerid][pWorkSalary] = 0;
			}
		}
		case dMinework:
		{
		    if(!response) return 1;
		    if(!pTemp[playerid][pWork])
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid,2);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
			    SetPlayerAttachedObject(playerid,0,18634,6,0.096999,0.032000,0.193999,88.200057,-88.999984,-6.099993,1.000000,1.000000,1.000000);
				SetPlayerAttachedObject(playerid,1,18638,2,0.154999,0.016000,0.004000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
				pTemp[playerid][pWork] = 5;
				SendClientMessage(playerid,CWHITE,"Вы устроились на подработку {"#cRED"}шахтёром{"#cWHITE"}, спускайтесь в {"#cRED"}шахту{"#cWHITE"} и ищите места добычи");
                SetPVarInt(playerid,"rudamine",0);
			}
			else if(pTemp[playerid][pWork] == 5)
			{
				pTemp[playerid][pWork] = 0;
				DeletePVar(playerid,"woodamount");
				DeletePVar(playerid,"loadid");
				RemovePlayerAttachedObject(playerid,0);
				RemovePlayerAttachedObject(playerid,1);
				SetPVarInt(playerid,"rudamine",0);
				DisablePlayerCheckpoint(playerid);
				new mes[128];
				format(mes,sizeof(mes),"{"#cGREEN"}Вы заработали {"#cWHITE"}%d${"#cGREEN"}. Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,CGREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"mine");
				pTemp[playerid][pWorkSalary] = 0;
			}
		}
		case dGunWork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWork] = 4;
				SetPlayerSkinNA(playerid,27);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь идите на {"#cYELLOW"}желтый маркер{"#cWHITE"}, чтобы взять заготовку.");
				SetPVarInt(playerid,"varioty",40);
			}
			else if(pTemp[playerid][pWork] == 4)
			{
				pTemp[playerid][pWork] = 0;
				if(GetPVarInt(playerid,"pgunobject"))
				{
					new objectid = GetPVarInt(playerid,"pgunobject");
					if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
					DeletePVar(playerid,"pgunobject");
				}
				DeletePVar(playerid,"gunamount");
				RemovePlayerAttachedObject(playerid,0);
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				new mes[128];
				format(mes,sizeof(mes),"{"#cGREEN"}Вы заработали {"#cWHITE"}%d${"#cGREEN"}. Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,CGREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"gun");
				pTemp[playerid][pWorkSalary] = 0;
				DeletePVar(playerid,"varioty");
			}
		}
		case dHire:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: //Автобусник
				{
					if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid,CGRAY,"Эта работа доступна только со 2 уровня");
					pData[playerid][pJob] = 1;
					UpdatePlayerData(playerid,"job",1);
					SendClientMessage(playerid,CWHITE,"==================[{"#cYELLOW"}Трудовой договор{"#cWHITE"}]==================");
					SendClientMessage(playerid,CGRAY,"   Вы были приняты на работу водителя автобуса.");
					SendClientMessage(playerid,CGRAY,"   Чтобы начать работу арендуйте автобус на автовокзале ЛС");
					SendClientMessage(playerid,CGRAY,"   ( Чтобы арендовать автобус Вам нужно просто сесть в него )");
					SendClientMessage(playerid,CWHITE,"====================================================");

				}
				case 1: //Дальнобойщик
				{
					if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid,CGRAY,"Эта работа доступна только со 2 уровня");
					pData[playerid][pJob] = 2;
					UpdatePlayerData(playerid,"job",2);
					SendClientMessage(playerid,CWHITE,"==================[{"#cYELLOW"}Трудовой договор{"#cWHITE"}]==================");
					SendClientMessage(playerid,CGRAY,"   Вы были приняты на работу дальнобойщика.");
					SendClientMessage(playerid,CGRAY,"   Чтобы начать работу арендуйте тягач на стоянке дальнобойщков");
					SendClientMessage(playerid,CGRAY,"   ( Чтобы арендовать тягач Вам нужно просто сесть в него )");
					SendClientMessage(playerid,CWHITE,"====================================================");

				}
				case 2: //Таксист
				{
					if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid,CGRAY,"Эта работа доступна только со 2 уровня");
					pData[playerid][pJob] = 3;
					UpdatePlayerData(playerid,"job",3);
					SendClientMessage(playerid,CWHITE,"==================[{"#cYELLOW"}Трудовой договор{"#cWHITE"}]==================");
					SendClientMessage(playerid,CGRAY,"   Вы были приняты на работу таксиста.");
					SendClientMessage(playerid,CGRAY,"   Чтобы начать работу арендуйте такси в таксопарке");
					SendClientMessage(playerid,CGRAY,"   ( Чтобы арендовать такси Вам нужно просто сесть в него )");
					SendClientMessage(playerid,CWHITE,"====================================================");
				}
				case 3: //Механик
				{
					if(pData[playerid][pLevel] < 4) return SendClientMessage(playerid,CGRAY,"Эта работа доступна только с 4 уровня");
					pData[playerid][pJob] = 4;
					UpdatePlayerData(playerid,"job",4);
					SendClientMessage(playerid,CWHITE,"==================[{"#cYELLOW"}Трудовой договор{"#cWHITE"}]==================");
					SendClientMessage(playerid,CGRAY,"   Вы были приняты на работу механика.");
					SendClientMessage(playerid,CGRAY,"   Чтобы начать работу арендуйте буксир на стоняке буксиров (/gps > Важные)");
					SendClientMessage(playerid,CGRAY,"   ( Чтобы арендовать буксир Вам нужно просто сесть в него )");
					SendClientMessage(playerid,CWHITE,"====================================================");
				}
				case 4: //Развозчик
				{
					if(pData[playerid][pLevel] < 4) return SendClientMessage(playerid,CGRAY,"Эта работа доступна только с 4 уровня");
					pData[playerid][pJob] = 5;
					UpdatePlayerData(playerid,"job",5);
					SendClientMessage(playerid,CWHITE,"==================[{"#cYELLOW"}Трудовой договор{"#cWHITE"}]==================");
					SendClientMessage(playerid,CGRAY,"   Вы были приняты на работу развозчика товаров.");
					SendClientMessage(playerid,CGRAY,"   Чтобы начать работу арендуйте DFT на стоянке (/gps > Работы > Развозчики товаров)");
					SendClientMessage(playerid,CGRAY,"   ( Чтобы арендовать DFT Вам нужно просто сесть в него )");
					SendClientMessage(playerid,CWHITE,"====================================================");
				}
			}
		}
		case dBusRent:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			ShowPlayerDialog(playerid,dBusRoute,2,"Выберите маршрут:","1.ЖДЛС - Лесопилка ($740/рейс)\n2.ЖДЛС - Оружейный завод ($400/рейс)\n3.ЖДЛС - Автошкола ($590/рейс)\n4.ЖДЛС - Шахта ($350/рейс)\n5.ЖДСФ - Оружейный завод ($290/рейс)","ОК","Отмена");
		}
		case dBusRoute:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			SetPVarInt(playerid,"pbusroute",listitem);
			ShowPlayerDialog(playerid,dBusPrice,1,"Цена за проезд","{"#cWHITE"}Введите цену билета:","ОК","Отмена");
		}
		case dBusPrice:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(!strlen(inputtext) || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CGRAY,"Цена должна быть указана цифрами");
				return ShowPlayerDialog(playerid,dBusPrice,1,"Цена за проезд","{"#cWHITE"}Введите цену билета:","ОК","Отмена");
			}
			new price = strval(inputtext);
			if(price < 10 || price > 1000)
			{
				SendClientMessage(playerid,CGRAY,"Цена должна быть от 10 до 1000 $");
				return ShowPlayerDialog(playerid,dBusPrice,1,"Цена за проезд","{"#cWHITE"}Введите цену билета:","ОК","Отмена");
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			new model = GetVehicleModel(vehicleid);
			new route = GetPVarInt(playerid,"pbusroute");
			//DeletePVar(playerid,"pbusroute");
			if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
			TransferMoney(playerid,-1,200,"busrent");
			new routename[56];
			switch(route)
			{
				case 0: routename = "{"#cORANGE"}ЖДЛС {"#cWHITE"}- {"#cORANGE"}Лесопилка";
				case 1: routename = "{"#cORANGE"}ЖДЛС {"#cWHITE"}- {"#cORANGE"}Оружейный завод";
				case 2: routename = "{"#cORANGE"}ЖДЛС {"#cWHITE"}- {"#cORANGE"}Автошкола";
				case 3: routename = "{"#cORANGE"}ЖДСФ {"#cWHITE"}- {"#cORANGE"}Шахта";
				case 4: routename = "{"#cORANGE"}ЖДСФ {"#cWHITE"}- {"#cORANGE"}Оружейный завод";
			}
			new mes[128];
			format(mes,sizeof(mes),"%s\nСтоимость билета: {"#cGREEN"}$%d",routename,price);
			if(!IsValid3DTextLabel(pTemp[playerid][pBusText])) pTemp[playerid][pBusText] = CreateDynamic3DTextLabel(mes,CWHITE,0.0,0.0,3.0,40.0,INVALID_PLAYER_ID,vehicleid);
			pTemp[playerid][pBusID] = vehicleid;
			pTemp[playerid][pBusRoute] = route;
			pTemp[playerid][pBusPrice] = price;
			pTemp[playerid][pBusPos] = 0;
			pTemp[playerid][pBusDemage] = 1000.0;
			SetNextBusCP(playerid,0);
		}
		case dBusEnd:
		{
			if(!response) return 1;
			SetVehicleToRespawnEx(pTemp[playerid][pBusID]);
		}
		case dTruckRent:
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!response || vehicleid == INVALID_VEHICLE_ID)
			{
				RemovePlayerFromVehicle(playerid);
				DeletePVar(playerid,"truckprice");
				return 1;
			}
			new price = GetPVarInt(playerid,"truckprice");
			DeletePVar(playerid,"truckprice");
			pTemp[playerid][pTruckID] = vehicleid;
			TransferMoney(playerid,-1,price,"truckrent");
			SendClientMessage(playerid,CGREEN,"Вы арендовали грузовик. Используйте /gps => Дальнобойщики, чтобы найти один из пунктов загрузки");
		}
		case dTruckLoad:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			new maxamount = GetPVarInt(playerid,"maxamount");
			new loadid = GetPVarInt(playerid,"loadid");
			if(amount < 1 || amount > maxamount)
			{
				SFCM(playerid,CGRAY,"Значение должно быть от 1 до %d",maxamount);
				if(!loadid)
				{
					SPFD(playerid,dTruckLoad,1,"Загрузка угля","OK","Отмена","Сколько угля Вы хотите загрузить? (макс. %d т)",maxamount);
				}
				else
				{
					SPFD(playerid,dTruckLoad,1,"Загрузка древесины","OK","Отмена","Сколько угля Вы хотите загрузить? (макс. %d т)",maxamount);
				}
				return 1;
			}
			new price = gTruckLoadPrice[loadid]*amount;
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CGRAY,"Недостаточно денег");
				return 1;
			}
			new ll;
			for (new i;i<10;i++)
			{
				if(gTruckLoadTurn[loadid][i] == INVALID_PLAYER_ID || i == playerid) continue;
				ll += GetPVarInt(gTruckLoadTurn[loadid][i],"truckamount")*1000;
			}
			new warehouse;
			if(!loadid) warehouse = minesklad;
			else warehouse = woodsklad;
			if(!loadid && warehouse - ll < amount*1000) return SendClientMessage(playerid,CGRAY,"Недостаточно угля на складе, либо весь уголь распределен между дальнобойщиками в очереди");
			else if(loadid && warehouse - ll < amount*1000) return SendClientMessage(playerid,CGRAY,"Недостаточно древесины на складе, либо вся древесина распределена между дальнобойщиками в очереди");
			for(new i;i<10;i++)
			{
				if(gTruckLoadTurn[loadid][i] == INVALID_PLAYER_ID)
				{
					gTruckLoadTurn[loadid][i] = playerid;
					SFCM(playerid,CWHITE,"Вы номер %d в очереди на загрузку",i+1);
					SetPVarInt(playerid,"truckamount",amount);
					SetPVarInt(playerid,"truckonroad",0);
					TransferMoney(playerid,-1,price,"truckload");
					DeletePVar(playerid,"maxamount");
					return 1;
				}
			}
			SendClientMessage(playerid,CGRAY,"Нет места в очереди. Подождите пожалуйста");
		}
		case dTaxiRent:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid,CGREEN,"Вы арендовали такси. Начинайте таксовать");
			SendClientMessage(playerid,CYELLOW,"/taxi {"#cWHITE"} - запросить у пассажира место назначения");
			SendClientMessage(playerid,CYELLOW,"/fare {"#cWHITE"} - установить стоимость проезда");
			TransferMoney(playerid,-1,200,"taxirent");
			pTemp[playerid][pTaxiID] = vehicleid;
		}
		case dCreatehouse1:
		{
			if(!response) return 1;
			gCreatehouse[playerid][chouseHint] = listitem;
			ShowPlayerDialog(playerid,dCreatehouse2,1,"Создание жилища","Укажите цену за квартиру/дом (от 1 тыс. до 10 млн.)","Далее","Выход");
		}
		case dCreatehouse2:
		{
			if(!response) return 1;
			new price = strval(inputtext);
			if(!isNumeric(inputtext) || price < 1000 || price > 10000000)
			{
				SendClientMessage(playerid,CRED,"Неверная цена");
				ShowPlayerDialog(playerid,dCreatehouse2,1,"Создание жилища","Укажите цену за квартиру/дом (от 1 тыс. до 10 млн.)","Далее","Выход");
				return 1;
			}
			gCreatehouse[playerid][chousePrice] = price;
			ShowPlayerDialog(playerid,dCreatehouse3,2,"Создание жилища","Эконом класс\nСредний класс\nЭлитный класс\nОсобняк","Создать","Выход");
		}
		case dCreatehouse3:
		{
			if(!response) return 1;
			new clas=listitem;
			new Float:x, Float:y, Float:z, Float:r;
			GetPlayerPos(playerid,x,y,z);
			GetPlayerFacingAngle(playerid,r);
			new query[512];
			format(query,sizeof(query),"INSERT INTO `houses` VALUES('','%d','%d','%d','0|0|0|0|0','0|0|0|0|0|0|0|0|0','0|0|0|0','0','0','0','0','0','%f','%f','%f','%f','','','','','','','','','','','','')",clas,gCreatehouse[playerid][chousePrice],gCreatehouse[playerid][chouseHint],x,y,z,r);
			mysql_query(query);
			if(mysql_errno()) ShowPlayerDialog(playerid,dMes,0,"Ошибка MySQL","Произошла ошибка mysql","ОК","");
			else
			{
				new houseid = mysql_insert_id();
				new i = houseid - 1;
				SPFD(playerid,dMes,0,"Результат","ОК","","Создан дом. ID: {"#cGREEN"} %d",houseid);
				gHouses[i][houseID] = houseid;
				gHouses[i][houseClass] = clas;
				gHouses[i][housePrice] = gCreatehouse[playerid][chousePrice];
				gHouses[i][houseHint] = gCreatehouse[playerid][chouseHint];
				gHouses[i][houseX] = x;
				gHouses[i][houseY] = y;
				gHouses[i][houseZ] = z;
				gHouses[i][houseR] = r;
				gHouseArea[i] = CreateDynamicSphere(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],2.0,0,0,-1);
				gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
			}

		}
		case dHints:
		{
			if(!response) return 1;
			new hintid = listitem;
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid,"oldx",x);
			SetPVarFloat(playerid,"oldy",y);
			SetPVarFloat(playerid,"oldz",z);
			SetPlayerInterior(playerid,gHints[hintid][hintInterior]);
			SetPlayerVirtualWorld(playerid,hintid+500);
			SetPlayerPos(playerid,gHints[hintid][hintX],gHints[hintid][hintY],gHints[hintid][hintZ]);

		}
		case dHouseInfo:
		{
			if(!response) return 1;
			new houseid = pTemp[playerid][pSelectedHouseID];
			if(!gHouses[houseid][houseOwnerID])
			{
				if(pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас уже есть дом");
				SPFD(playerid,dHouseBuy,0,"Частный дом","Да","Нет","{"#cWHITE"}Вы действительно хотите купить этот дом за {"#cGREEN"}$%d?",gHouses[houseid][housePrice]);
			}
			else
			{
				if(pData[playerid][pHouse] != houseid+1 && gHouses[houseid][houseClose]) return GameTextForPlayer(playerid,"~r~closed",2000,1);
				SetPlayerInterior(playerid,gHints[gHouses[houseid][houseHint]][hintInterior]);
				SetPlayerPos(playerid,gHints[gHouses[houseid][houseHint]][hintX],gHints[gHouses[houseid][houseHint]][hintY],gHints[gHouses[houseid][houseHint]][hintZ]);
				SetPlayerFacingAngle(playerid,gHints[gHouses[houseid][houseHint]][hintR]);
				SetPlayerVirtualWorld(playerid,houseid+1);
				pTemp[playerid][pIsInHouse] = true;
			}
		}
		case dHouseBuy:
		{
			if(!response) return 1;
			new houseid = pTemp[playerid][pSelectedHouseID];
			if(!gHouses[houseid][houseOwnerID])
			{
				new price = gHouses[houseid][housePrice];
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег на руках");
				new query[256];
				format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],gHouses[houseid][houseID]);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
				UpdatePlayerData(playerid,"house",gHouses[houseid][houseID]);
				gHouses[houseid][houseOwnerID] = pData[playerid][pMysqlID];
				format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
				pData[playerid][pHouse] = gHouses[houseid][houseID];
				SendClientMessage(playerid,CGREEN,"Вы купили дом.");
				PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
				SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
				TransferMoney(playerid,-1,price,"buyhouse");
				DestroyDynamicPickup(gHousePickup[houseid]);
				gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
				DestroyDynamicMapIcon(gHouseIcon[houseid]);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);

			}
		}
		case dSellHouse:
		{
			if(!response) return 1;
			new houseid = pData[playerid][pHouse]-1;
			UpdatePlayerData(playerid,"house",0);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка Mysql");
			new query[512];
			format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0', skin = '0|0|0|0',safecode='0', safemoney='0', drugs='0', products='0',inhabit2id = '0',inhabit3id = '0',inhabit4id = '0',inhabit2='',inhabit3='',inhabit4='' WHERE `id` = '%d'",houseid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка Mysql");
			pData[playerid][pHouse] = 0;
			gHouses[houseid][houseOwnerID] = 0;
			strdel(gHouses[houseid][houseOwner],0,24);
			strdel(gHouseHabits[houseid][0],0,24);
			strdel(gHouseHabits[houseid][1],0,24);
			strdel(gHouseHabits[houseid][2],0,24);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			for(new i;i<9;i++)
			{
				if(i < 5)
				{
					gHouses[houseid][houseImprove][i] = 0;
					if(i < 4) gHouses[houseid][houseSkin][i] = 0;
				}
				gHouses[houseid][houseGun][i] = 0;
			}
			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseProducts] = 0;
			TransferMoney(-1,playerid,gHouses[houseid][housePrice],"gossellhouse");
			DestroyDynamicPickup(gHousePickup[houseid]);
			gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
			DestroyDynamicMapIcon(gHouseIcon[houseid]);
			gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
			SendClientMessage(playerid,CGREEN,"Дом продан");
		}
		case dBuyCarSalon:
		{
			if(!response) return 1;
			new carclass = GetPVarInt(playerid,"sellcarClass");
			SetPlayerVirtualWorld(playerid,carclass+1);
			TogglePlayerControllable(playerid,0);
			SetPlayerInterior(playerid,18);
			SetPlayerPos(playerid,1290.7358,1.2840,1001.0210);
			new Float:x, Float:y, Float:z;
			GetVehiclePos(aSellCar[carclass],x,y,z);
			SetPlayerCameraLookAt(playerid,x,y,z);
			y = y + 5.0;
			z = z + 1.0;
			SetPlayerCameraPos(playerid,x,y,z);
			SetPVarInt(playerid,"sellcarID",aSellCar[carclass]);
			pTemp[playerid][pSellCarSelect] = true;
			SendClientMessage(playerid,CGREEN,"Добро пожаловать в автосалон. Используйте следующие клавиши:");
			SendClientMessage(playerid,CWHITE,"Влево{"#cINFO"}, {"#cWHITE"}вправо {"#cINFO"}- Выбор автомобиля");
			SendClientMessage(playerid,CWHITE,"~k~~PED_ANSWER_PHONE~ {"#cINFO"}- Выйти из салона");
			SendClientMessage(playerid,CWHITE,"~k~~PED_LOCK_TARGET~  (по умолчанию Пробел (клавиша быстрого бега)) {"#cINFO"}- купить автомобиль");
			new model = GetVehicleModel(aSellCar[carclass]);
			new modelid = model - 400;
			new mes[256],fuelname[30];
			switch(gTransport[modelid][trFuelMark])
			{
				case 0: strcat(fuelname,"Diesel");
				case 1: strcat(fuelname,"Regular");
				case 2: strcat(fuelname,"Midgrade");
				case 3: strcat(fuelname,"Premium");
				case 4: strcat(fuelname,"Super Premium");
			}
			SelectTextDraw(playerid, 0xADD8E6FF);
			format(mes,sizeof(mes),"MODEL:     %s",gTransport[modelid][trName]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][2],mes);
			format(mes,sizeof(mes),"MAX. FUEL:    %d L",gTransport[modelid][trTank]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][4],mes);
			format(mes,sizeof(mes),"%d $",gTransport[modelid][trPrice]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][6],mes);
			format(mes,sizeof(mes),"ENGINE:    %s",fuelname);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][7],mes);
			format(mes,sizeof(mes),"CONS.:    %d l/100km",gTransport[modelid][trConsumption]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][8],mes);
			for(new t = 0; t < 13; t++) PlayerTextDrawShow(playerid, PTD_autosalon[playerid][t]);
		}
		case dBuyCar:
		{
			if(!response) return 1;

			pTemp[playerid][pSellCarSelect] = false;
			new carclass = GetPVarInt(playerid,"sellcarClass");
			new carid = GetPVarInt(playerid,"sellcarID");
			new color1 = GetPVarInt(playerid,"pbuycarC1");
			new color2 = GetPVarInt(playerid,"pbuycarC2");
			DeletePVar(playerid,"sellcarID");
			DeletePVar(playerid,"sellcarClass");
			TogglePlayerControllable(playerid,1);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerTextDrawDestroy(playerid,pTemp[playerid][pSellCarText]);
			SetCameraBehindPlayer(playerid);
			pTemp[playerid][pJustTP] = true;
			switch(carclass)
			{
				case 0: SetPlayerPos(playerid,555.1915,-1293.4724,17.2482);
				case 1: SetPlayerPos(playerid,-1968.6801,619.9734,35.1719);
				case 2: SetPlayerPos(playerid,1658.5024,2199.9299,10.8203);
				case 3: SetPlayerPos(playerid,507.6233,-1608.4905,16.3576);
			}
			if(!pData[playerid][pHouse] && !pData[playerid][pHotel]) return SendClientMessage(playerid,CGRAY,"У Вас нет дома");
			new model = GetVehicleModel(carid);
			new modelid = model - 400;
			new houseid = pData[playerid][pHouse]-1;
			new hotelid = pData[playerid][pHotel]-1;
			new price = gTransport[modelid][trPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			new query[256];
			format(query,sizeof(query),"INSERT INTO `cars` VALUES ('','%d','%d','GoodCar','%.0f','0.0','1000','%d','%d','0','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0','0','0','0','0')",pData[playerid][pMysqlID],modelid,gTransport[modelid][trTank]+0.0,color1,color2);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1");
			new id = mysql_insert_id();
			UpdatePlayerData(playerid,"car",id);
			if(mysql_errno())
			{
				format(query,sizeof(query),"DELETE FROM `cars` WHERE `id` = '%d'",id);
				mysql_query(query);
				SendClientMessage(playerid,CRED,"Ошибка MySQL 2");
				return 1;
			}
			new slot = -1;
			for(new i;i<MAX_VEHICLES;i++)
			{
				if(gCars[i][carOwnerid] == 0) {slot = i; break;}
			}
			if(slot == -1)
			{
				format(query,sizeof(query),"DELETE FROM `cars` WHERE `id` = '%d'",id);
				mysql_query(query);
				SendClientMessage(playerid,CRED,"Ошибка слота (#01)");
			}
			pData[playerid][pCar] = id;
			gCars[slot][carMysqlID] = id;
			gCars[slot][carOwnerid] = pData[playerid][pMysqlID];
			gCars[slot][carModelid] = modelid;
			gCars[slot][carFuel] = gTransport[modelid][trTank];
			gCars[slot][carDrived] = 0.0;
			gCars[slot][carHealth] = 1000.0;
			gCars[slot][carProbability] = 0;
			gCars[slot][carColor1] = color1;
			gCars[slot][carColor2] = color2;
			strcat(gCars[slot][carPlate],"GoodCar");
			if(houseid >= 1)
			{
				new vehicleid = CreateVehicle(gTransport[modelid][trModel],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[slot][carColor1],gCars[slot][carColor2],-1);
				gCars[slot][carVid] = vehicleid;
				gVehicles[vehicleid-1][vLock] = 1;
				gVehicles[vehicleid-1][vFuel] = gCars[slot][carFuel];
				gVehicles[vehicleid-1][vDrived] = gCars[slot][carDrived];
				gVehicles[vehicleid-1][vHealth] = gCars[slot][carHealth];
				gVehicles[vehicleid-1][vOwnerid] = gCars[slot][carOwnerid];
				gVehicles[vehicleid-1][vX] = gHouses[houseid][houseParkX];
				gVehicles[vehicleid-1][vY] = gHouses[houseid][houseParkY];
				gVehicles[vehicleid-1][vZ] = gHouses[houseid][houseParkZ];
				gVehicles[vehicleid-1][vProbability] = 0;
			}
			else if(hotelid >= 1)
			{
				new room = pData[playerid][pHotelRoom];
				new vehicleid = CreateVehicle(gTransport[modelid][trModel],gHotelPark[hotelid][room][0],gHotelPark[hotelid][room][1],gHotelPark[hotelid][room][2],gHotelPark[hotelid][room][3],gCars[slot][carColor1],gCars[slot][carColor2],-1);
				SetVehicleZAngle(vehicleid,gHotelPark[hotelid][room][3]);
				gCars[slot][carVid] = vehicleid;
				gVehicles[vehicleid-1][vLock] = 1;
				gVehicles[vehicleid-1][vFuel] = gCars[slot][carFuel];
				gVehicles[vehicleid-1][vDrived] = gCars[slot][carDrived];
				gVehicles[vehicleid-1][vHealth] = gCars[slot][carHealth];
				gVehicles[vehicleid-1][vOwnerid] = gCars[slot][carOwnerid];
				gVehicles[vehicleid-1][vX] = gHotelPark[hotelid][room][0];
				gVehicles[vehicleid-1][vY] = gHotelPark[hotelid][room][1];
				gVehicles[vehicleid-1][vZ] = gHotelPark[hotelid][room][2];
				gVehicles[vehicleid-1][vProbability] = 0;
			}
			if(hotelid <= 0 && houseid <= 0)
			{
			    new vehicleid;
				switch(carclass)
				{
					case 0: {
						vehicleid = CreateVehicle(gTransport[modelid][trModel],555.1915,-1293.4724,17.2482,90.0,gCars[slot][carColor1],gCars[slot][carColor2],-1);
						gVehicles[vehicleid-1][vX] = 555.1915;
						gVehicles[vehicleid-1][vY] = -1293.4724;
						gVehicles[vehicleid-1][vZ] = 17.2482;
					}
					case 1: {
						vehicleid = CreateVehicle(gTransport[modelid][trModel],-1968.6801,619.9734,35.1719,90.0,gCars[slot][carColor1],gCars[slot][carColor2],-1);
						gVehicles[vehicleid-1][vX] = -1968.6801;
						gVehicles[vehicleid-1][vY] = 619.9734;
						gVehicles[vehicleid-1][vZ] = 35.1719;
					}
					case 2: {
						vehicleid = CreateVehicle(gTransport[modelid][trModel],1658.5024,2199.9299,10.8203,90.0,gCars[slot][carColor1],gCars[slot][carColor2],-1);
						gVehicles[vehicleid-1][vX] = 1658.5024;
						gVehicles[vehicleid-1][vY] = 2199.9299;
						gVehicles[vehicleid-1][vZ] = 10.8203;
					}
					case 3: {
						vehicleid = CreateVehicle(gTransport[modelid][trModel],507.6233,-1608.4905,16.3576,90.0,gCars[slot][carColor1],gCars[slot][carColor2],-1);
						gVehicles[vehicleid-1][vX] = 507.6233;
						gVehicles[vehicleid-1][vY] = -1608.4905;
						gVehicles[vehicleid-1][vZ] = 16.3576;
					}
				}
				gCars[slot][carVid] = vehicleid;
				gVehicles[vehicleid-1][vLock] = 1;
				gVehicles[vehicleid-1][vFuel] = gCars[slot][carFuel];
				gVehicles[vehicleid-1][vDrived] = gCars[slot][carDrived];
				gVehicles[vehicleid-1][vHealth] = gCars[slot][carHealth];
				gVehicles[vehicleid-1][vOwnerid] = gCars[slot][carOwnerid];
				gVehicles[vehicleid-1][vProbability] = 0;
			}
			printf("id дома %d id отеля %d",houseid,hotelid);
			for(new t = 0; t < 13; t++) PlayerTextDrawHide(playerid, PTD_autosalon[playerid][t]);
			CancelSelectTextDraw(playerid);
			SendClientMessage(playerid,CGREEN,"Поздравляем Вы купили т/с.");
			TransferMoney(playerid,-1,price,"buycar");
		}
		case dBuyCarC1:
		{
			if(!response) return 1;
			new color;
			switch(listitem)
			{
				case 0: color = 1;
				case 1: color = 0;
				case 2: color = 2;
				case 3: color = 3;
				case 4: color = 6;
				case 5: color = 103;
				case 6: color = 33;
				case 7: color = 126;
				case 8: color = 102;
				case 9: color = 85;
				default: return ShowPlayerDialog(playerid,dBuyCarC1Edit,1,"Выбор цвета номер 1","Введите ID цвета номер 1:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC1",color);
			ShowPlayerDialog(playerid,dBuyCarC2,2,"Выберите цвет номер 2","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6. Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8. РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Выход");
		}
		case dBuyCarC1Edit:
		{
			if(!response) return ShowPlayerDialog(playerid,dBuyCarC1,2,"Выберите цвет номер 1","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6. Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8. РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Выход");
			if(!strval(inputtext) || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CGRAY,"Вы должны указать ID цвета авто");
				return ShowPlayerDialog(playerid,dBuyCarC1Edit,1,"Выбор цвета номер 1","Введите ID цвета номер 1:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC1",strval(inputtext));
			ShowPlayerDialog(playerid,dBuyCarC2,2,"Выберите цвет номер 2","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6. Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8. РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Назад");
		}
		case dBuyCarC2:
		{
			if(!response) ShowPlayerDialog(playerid,dBuyCarC1,2,"Выберите цвет номер 1","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6. Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8. РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Выход");
			new color;
			switch(listitem)
			{
				case 0: color = 1;
				case 1: color = 0;
				case 2: color = 2;
				case 3: color = 3;
				case 4: color = 6;
				case 5: color = 103;
				case 6: color = 33;
				case 7: color = 126;
				case 8: color = 102;
				case 9: color = 85;
				default: return ShowPlayerDialog(playerid,dBuyCarC2Edit,1,"Выбор цвета номер 2","Введите ID цвета номер 2:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC2",color);
			ShowPlayerDialog(playerid,dBuyCar,0,"Покупка авто","Вы действительно хотите купить этот автомобиль?","Да","Нет");
		}
		case dBuyCarC2Edit:
		{
			if(!response) return ShowPlayerDialog(playerid,dBuyCarC2,2,"Выберите цвет номер 2","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6. Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8. РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Назад");
			if(!strval(inputtext) || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CGRAY,"Вы должны указать ID цвета авто");
				return ShowPlayerDialog(playerid,dBuyCarC2Edit,1,"Выбор цвета номер 2","Введите ID цвета номер 2:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC2",strval(inputtext));
			ShowPlayerDialog(playerid,dBuyCar,0,"Покупка авто","Вы действительно хотите купить этот автомобиль?","Да","Нет");
		}
		case dSellCar:
		{
			if(!response) return 1;
			new price = GetPVarInt(playerid,"psellcarPrice");
			new carID = GetPVarInt(playerid,"psellcarID");
			new vehicleid = gCars[carID][carVid];
			DeletePVar(playerid,"psellcarPrice");
			DeletePVar(playerid,"psellcarID");
			new query[256];
			format(query,sizeof(query),"DELETE FROM `cars` WHERE `id` = '%d'",pData[playerid][pCar]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (продажа авто)");
			UpdatePlayerData(playerid,"car",0);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 2 (продажа авто)");
			pData[playerid][pCar] = 0;
			DestroyVehicle(vehicleid);
			gCars[carID][carOwnerid] = 0;
			gCars[carID][carMysqlID] = 0;
			gCars[carID][carModelid] = 0;
			gCars[carID][carFuel] = 0.0;
			gCars[carID][carDrived] = 0.0;
			gCars[carID][carHealth] = 0.0;
			gCars[carID][carColor1] = 0;
			gCars[carID][carColor2] = 0;
			gCars[carID][carVid] = INVALID_VEHICLE_ID;
			strdel(gCars[carID][carPlate],0,12);
			TransferMoney(-1,playerid,price,"gossellcar");
			SendClientMessage(playerid,CGREEN,"Т/с продано");
		}
		case dActPlayerMenu:
		{
			if(!response) return 1;
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid,dActPlayerMenuMoney,1,"Передача денег","{"#cWHITE"}Укажите сумму, которую хотите передать:","ОК","Отмена");
			}
			if(listitem == 0)
			{
				new actplayerid = pTemp[playerid][pActPlayer];
				ShowPass(playerid,actplayerid);
				new mes[64];
				format(mes,sizeof(mes),"достал паспорт и показал его %s'y",pData[actplayerid][pNickname]);
				MeAction(playerid,mes);
			}
		}
		case dActPlayerMenuMoney:
		{
			if(!response) return 1;
			if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid,CGRAY,"Передача денег разрешена со 2 уровня");
			new actplayerid = pTemp[playerid][pActPlayer];
			if(pData[actplayerid][pLevel] < 2) return SendClientMessage(playerid,CGRAY,"Передача денег разрешена со 2 уровня");
			new money = strval(inputtext);
			if(money < 1 || money > 5000) return SendClientMessage(playerid,CGRAY,"Вы можете передавать от $1 до $5000");
			if(GetPlayerMoneyEx(playerid) < money) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			TransferMoney(playerid,actplayerid,money,"pay");
			new mes[128];
			format(mes,sizeof(mes),"%s {"#cINFO"}передал Вам {"#cGREEN"}$%d",pData[playerid][pNickname],money);
			SendClientMessage(actplayerid,CWHITE,mes);
			format(mes,sizeof(mes),"Вы передали {"#cWHITE"}%s {"#cRED"}$%d",pData[actplayerid][pNickname],money);
			SendClientMessage(playerid,CINFO,mes);
			format(mes,sizeof(mes),"достал деньги и передал их %s'y",pData[actplayerid][pNickname]);
			MeAction(playerid,mes);
			pTemp[playerid][pActPlayer] = INVALID_PLAYER_ID;

		}
		case dFillingBuy:
		{
			if(!response) return 1;
			if(pData[playerid][pBusiness]) return SendClientMessage(playerid,CGRAY,"У вас уже есть бизнес");
			new fillingid = GetPVarInt(playerid,"bfillingid");
			new price = gFillings[fillingid][fillPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			new query[256];
			format(query,sizeof(query),"UPDATE `fillings` SET `ownerid` = '%d', `ownernick` = '%s', `working` = '0', bank = '0' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],fillingid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка MySQL 1 (покупка запраки)");
			UpdatePlayerData(playerid,"bussiness",fillingid + 1 + FILLING_ID_OFFSET);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка MySQL 2 (покупка запраки)");
			pData[playerid][pBusiness] = fillingid + 1 + FILLING_ID_OFFSET;
			gFillings[fillingid][fillOwnerID] = pData[playerid][pMysqlID];
			format(gFillings[fillingid][fillOwner],24,"%s",pData[playerid][pNickname]);
			gFillings[fillingid][fillWorking] = false;
			gFillings[fillingid][fillBank] = 0;
			TransferMoney(playerid,-1,gFillings[fillingid][fillPrice],"fillingbuy");
			SendClientMessage(playerid,CGREEN,"Поздравляем вы купили АЗС.");
			SendClientMessage(playerid,CGREEN,"Меню управления АЗС {"#cWHITE"}\"/filling\"");
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
		}
		case dFillingInfo:
		{
			if(!response) return 1;
			new fillingid = GetPVarInt(playerid,"fillingid");
			switch(listitem)
			{
				case 0: //Информация
				{
					new mes[512],tankcount,status[24],tankdata[256];
					for(new i;i<5;i++)
					{
						if(gFillings[fillingid][fillTanks][i])
						{
							new tmp[32];
							GetFuelName(i+1,tmp);
							tankcount++;
							format(tankdata,sizeof(tankdata),"%sЦистерна %d (%s): %d/%d литров\n",tankdata,i+1,tmp,gFillings[fillingid][fillFuel][i],gFillings[fillingid][fillTanks][i]);
						}
					}
					if(gFillings[fillingid][fillWorking]) strcat(status,"{"#cGREEN"}Работает");
					else strcat(status,"{"#cRED"}Не работает");
					format(mes,sizeof(mes),"{"#cWHITE"}Общая информация:\nВладелец: {"#cINFO"}%s\n{"#cWHITE"}Банк: {"#cINFO"}%d\n{"#cWHITE"}К-во цистерн: {"#cINFO"}%d\n{"#cWHITE"}Состояние: %s\n\n{"#cWHITE"}Состояние цистерн:\n%s",gFillings[fillingid][fillOwner],gFillings[fillingid][fillBank],tankcount,status,tankdata);
					ShowPlayerDialog(playerid,dMes,0,"Управление АЗС",mes,"OK","");
				}
				case 1: //Смена цены
				{
					new mes[256];
					for(new i;i<5;i++)
					{
						new tmp[64];
						GetFuelName(i+1,tmp);
						if(!i) format(mes,sizeof(mes),"%s ({"#cGREEN"}%d{"#cWHITE"})",tmp,gFillings[fillingid][fillFuelPrice][i]);
						else format(mes,sizeof(mes),"%s\n%s ({"#cGREEN"}%d{"#cWHITE"})",mes,tmp,gFillings[fillingid][fillFuelPrice][i]);
					}
					ShowPlayerDialog(playerid,dFillingPrice,2,"Управление АЗС",mes,"Изменить","Назад");
				}
				case 2: //Улучшения
				{
					ShowPlayerDialog(playerid,dFillingEquip,2,"Управление АЗС","1. Купить улучшенные бензоколонки\n2. Увеличить объем цистерны","Далее","Назад");
				}
				case 3: //Заказ топлива
				{
					ShowPlayerDialog(playerid,dFillingOrderType,2,"Заказ топлива","Выберите топливо, которое хотите заказать:\n1. Дизельное топливо\n2. Regular\n3. Midgrade\n4. Premium\n5. Super Premium","Далее","Отмена");
				}
				case 4:
				{
					ShowPlayerDialog(playerid,dFillingBank,2,"Управление АЗС","1. Посмотреть сумму в кассе\n2. Положить денги в кассу\n3. Снять деньги с кассы","Далее","Назад");
				}
				case 5:
				{
					if(!gFillings[fillingid][fillWorking])
					{
						gFillings[fillingid][fillWorking] = true;
						GameTextForPlayer(playerid,"~g~open",3000,3);
					}
					else
					{
						gFillings[fillingid][fillWorking] = false;
						GameTextForPlayer(playerid,"~r~close",3000,3);
					}
					ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
				}
				case 6: //Продать
				{
					SPFD(playerid,dFillingSell,0,"Управление АЗС","Да","Нет","{"#cWHITE"}Вы хотите продать свою АЗС за $%d\n{"#cGRAY"}(Если хотите продать другому игроку используйте /sellfilling)",gFillings[fillingid][fillPrice]);
				}
			}
		}
		case dFillingSell:
		{
			new fillingid = GetPVarInt(playerid,"fillingid");
			if(gFillings[fillingid][fillOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Эта заправка уже не принадлежит вам");
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new query[256];
			format(query,sizeof(query),"UPDATE `fillings` SET `ownerid` = '0', `ownernick` = '', `working` = '0', bank = '0' WHERE `id` = '%d'",fillingid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (продажа АЗС)");
			UpdatePlayerData(playerid,"bussiness",0);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 2 (продажа АЗС)");
			pData[playerid][pBusiness] = 0;
			gFillings[fillingid][fillOwnerID] = 0;
			format(gFillings[fillingid][fillOwner],24,"");
			gFillings[fillingid][fillWorking] = false;
			gFillings[fillingid][fillBank] = 0;
			TransferMoney(-1,playerid,gFillings[fillingid][fillPrice],"fillingsell");
			SendClientMessage(playerid,CGREEN,"Вы продали свою АЗС государству");
		}
		case dFillingPrice:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new tankid = listitem;
			ShowFillingPrice(playerid,fillingid,tankid);
			SetPVarInt(playerid,"tankid",tankid);
		}
		case dFillingPrice2:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new tankid = GetPVarInt(playerid,"tankid");
			new fuelmark = tankid;
			new price = strval(inputtext);
			if(!strlen(inputtext) || !isNumeric(inputtext) || price < gFuelPrice[fuelmark][0] || price > gFuelPrice[fuelmark][1])
			{
				SFCM(playerid,CGRAY,"Цена не может быть ниже %d и выше %d на данный вид топлива",gFuelPrice[fuelmark][0],gFuelPrice[fuelmark][1]);
				ShowFillingPrice(playerid,fillingid,tankid);
				return 1;
			}
			gFillings[fillingid][fillFuelPrice][tankid] = price;
			new query[128],data[64];
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gFillings[fillingid][fillFuelPrice][i]);
				else format(data,sizeof(data),"%s|%d",data,gFillings[fillingid][fillFuelPrice][i]);
			}
			format(query,sizeof(query),"UPDATE `fillings` SET `fuelprice` = '%s' WHERE id = '%d'",data,gFillings[fillingid][fillMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL (изменение цены на топливо)");
			SendClientMessage(playerid,CGREEN,"Цена на топливо изменена");
			ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
		}
		case dFillingEquip:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			switch(listitem)
			{
				case 0:
				{
					if(gFillings[fillingid][fillPumps] == 1)
					{
						SendClientMessage(playerid,CWHITE,"У Вас уже стоят новейшие бензоколонки");
						return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
					}
					ShowPlayerDialog(playerid,dFillingPumps,0,"Управление АЗС","{"#cWHITE"}Вы хотите установить новые бензоколонки на вашу АЗС?\nЭто будет стоить {"#cRED"}$80000","Да","Нет");
				}
				case 1:
				{
					new mes[340];
					for(new i;i<5;i++)
					{
						new tmp[32],newsize;
						newsize = gFillings[fillingid][fillTanks][i]+500;
						if(newsize > 4000) continue;
						GetFuelName(i+1,tmp);
						if(!i) format(mes,sizeof(mes),"Цистерна %d (%s): {"#cYELLOW"}%d {"#cWHITE"}=> {"#cGREEN"}%d",i+1,tmp,gFillings[fillingid][fillTanks][i],newsize);
						else format(mes,sizeof(mes),"%s\nЦистерна %d (%s): {"#cYELLOW"}%d {"#cWHITE"}=> {"#cGREEN"}%d",mes,i+1,tmp,gFillings[fillingid][fillTanks][i],newsize);
					}
					if(!strlen(mes))
					{
						SendClientMessage(playerid,CGRAY,"Объем всех цистерн уже достиг максимального значения");
						ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
					}
					ShowPlayerDialog(playerid,dFillingTankSize,2,"Управление АЗС",mes,"ОК","Отмена");
				}
			}
		}
		case dFillingPumps:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			if(GetPlayerMoneyEx(playerid) < 80000) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			TransferMoney(playerid,-1,80000,"fillingpumps");
			FMQ("UPDATE `fillings` SET pumps = '1' WHERE id = '%d'",fillingid+1);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка MySQL (улучшение бензоколонок)");
			gFillings[fillingid][fillPumps] = 1;
			for(new i;i<4;i++)
			{
				if(gFuelPumps[fillingid][i][0] == 0.0) continue;
				DestroyDynamicObject(gFuelPumpObjects[fillingid][i]);
				gFuelPumpObjects[fillingid][i] = CreateDynamicObject(1676,gFuelPumps[fillingid][i][0],gFuelPumps[fillingid][i][1],gFuelPumps[fillingid][i][2]+1.5,gFuelPumps[fillingid][i][3],gFuelPumps[fillingid][i][4],gFuelPumps[fillingid][i][5]+90.0);
			}
		}
		case dFillingTankSize:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new tankid = listitem;
			new newtanksize = gFillings[fillingid][fillTanks][tankid] + 500;
			new price = newtanksize*200;
			new mes[256],tmp[64];
			GetFuelName(tankid+1,tmp);
			format(mes,sizeof(mes),"{"#cWHITE"}Вы хотите увеличить объем цистерны номер {"#cINFO"}%d (%s){"#cWHITE"} до {"#cGREEN"}%d{"#cWHITE"} литров?\nЭто будет стоить {"#cRED"}%d$",tankid+1,tmp,newtanksize,price);
			ShowPlayerDialog(playerid,dFillingTankSize2,0,"Управление АЗС",mes,"Да","Нет");
			SetPVarInt(playerid,"tankid",tankid);
		}
		case dFillingTankSize2:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new tankid = GetPVarInt(playerid,"tankid");
			new newtanksize = gFillings[fillingid][fillTanks][tankid] + 500;
			new price = newtanksize*200;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			gFillings[fillingid][fillTanks][tankid] += 500;
			new query[128],data[64];
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gFillings[fillingid][fillTanks][i]);
				else format(data,sizeof(data),"%s|%d",data,gFillings[fillingid][fillTanks][i]);
			}
			format(query,sizeof(query),"UPDATE `fillings` SET tanks = '%s' WHERE id = '%d'",data,gFillings[fillingid][fillMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL (изменение размера цистерны)");
			TransferMoney(playerid,-1,price,"tanksize");
			SendClientMessage(playerid,CGREEN,"Поздравляем, объем цистерны увеличен");
		}
		case dFillingBank:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"Управление АЗС","1. Информация\n2. Цены\n3. Улучшения\n4. Заказать топливо\n5. Управление кассой\n6. Открыть / закрыть заправку\n7. Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			switch(listitem)
			{
				case 0:
				{
					new mes[128];
					format(mes,sizeof(mes),"{"#cWHITE"}В кассе {"#cGREEN"}$%d",gFillings[fillingid][fillBank]);
					ShowPlayerDialog(playerid,dFillingCheck,0,"Управление АЗС",mes,"OK","");
				}
				case 1:
				{
					ShowPlayerDialog(playerid,dFillingPut,1,"Управление АЗС","Укажите сумму, которую хотите положить в кассу:","ОК","Отмена");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,dFillingGet,1,"Управление АЗС","Укажите сумму, которую хотите взять из кассы:","ОК","Отмена");
				}
			}
		}
		case dFillingCheck:
		{
			ShowPlayerDialog(playerid,dFillingBank,2,"Управление АЗС","1. Посмотреть сумму в кассе\n2. Положить денги в кассу\n3. Снять деньги с кассы","Далее","Назад");
		}
		case dFillingPut:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingBank,2,"Управление АЗС","1. Посмотреть сумму в кассе\n2. Положить денги в кассу\n3. Снять деньги с кассы","Далее","Назад");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new price = strval(inputtext);
			if(price < 1 || price > 1000000) return SendClientMessage(playerid,CGRAY,"Неверная сумма");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег на руках");
			gFillings[fillingid][fillBank] += price;
			new query[128];
			format(query,sizeof(query),"UPDATE `fillings` SET `bank` = '%d' WHERE `id` = '%d'",gFillings[fillingid][fillBank],fillingid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
			TransferMoney(playerid,-1,price,"fillingputkassa");
			SendClientMessage(playerid,CGREEN,"Вы положили деньги в кассу заправки");
		}
		case dFillingGet:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingBank,2,"Управление АЗС","1. Посмотреть сумму в кассе\n2. Положить денги в кассу\n3. Снять деньги с кассы","Далее","Назад");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new price = strval(inputtext);
			if(price < 1 || price > 1000000) return SendClientMessage(playerid,CGRAY,"Неверная сумма");
			if(gFillings[fillingid][fillBank] < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег в кассе");
			gFillings[fillingid][fillBank] -= price;
			new query[128];
			format(query,sizeof(query),"UPDATE `fillings` SET `bank` = '%d' WHERE `id` = '%d'",gFillings[fillingid][fillBank],fillingid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
			TransferMoney(-1,playerid,price,"fillinggetkassa");
			SendClientMessage(playerid,CGREEN,"Вы взяли деньги из кассы заправки");
		}
		case dFillingOrderType:
		{
			if(!response || !listitem) return OnPlayerCommandText(playerid,"/filling");
			SetPVarInt(playerid,"fillingordertype",listitem);
			ShowPlayerDialog(playerid,dFillingOrderAmount,1,"Заказ топлива","{"#cWHITE"}Укажите, сколько литров выбранного топлива вы хотите заказать:","ОК","Отмена");
		}
		case dFillingOrderAmount:
		{
			if(!response) return OnPlayerCommandText(playerid,"/filling");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new type = GetPVarInt(playerid,"fillingordertype") - 1;
			if(type < 0 || type > 4) return SendClientMessage(playerid,CGRAY,"Ошибка (#106)");
			new amount = strval(inputtext);
			if(amount < 1 || amount > 20000) return SendClientMessage(playerid,CGRAY,"Неверное количество топлива");
			if(gFillings[fillingid][fillFuel][type] + amount > gFillings[fillingid][fillTanks][type]) return SendClientMessage(playerid,CGRAY,"Недостаточно места в цистерне");
			SetPVarInt(playerid,"fillingorderamount",amount);
			new fname[16],cprice,price;
			GetFuelName(type+1,fname);
			cprice = gFuelPrice[type][0] * amount;
			price = cprice + 3000;
			SetPVarInt(playerid,"fillingorderprice",price);
			new mes[256];
			format(mes,sizeof(mes),"{"#cWHITE"}\t\tЧЕК\n\nТопливо:\t{"#cGREEN"}%s [$%d за литр]\n{"#cWHITE"}Кол-во:\t{"#cGREEN"}%dл\n{"#cWHITE"}Цена:\t\t{"#cRED"}$%d\n{"#cWHITE"}Доставка:\t{"#cRED"}$3000\n{"#cWHITE"}ИТОГО:\t\t{"#cYELLOW"}$%d",
			fname,gFuelPrice[type][0],amount,cprice,price);
			ShowPlayerDialog(playerid,dFillingOrder,0,"Заказ топлива",mes,"Оплата","Отмена");
		}
		case dFillingOrder:
		{
			if(!response) return OnPlayerCommandText(playerid,"/filling");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new type = GetPVarInt(playerid,"fillingordertype") - 1;
			new amount = GetPVarInt(playerid,"fillingorderamount");
			new price = GetPVarInt(playerid,"fillingorderprice");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег на руках");
			gFillings[fillingid][fillFuel][type] += amount;
			UpdateFillingFuel(fillingid);
			TransferMoney(playerid,-1,price,"fillingprod");
			SendClientMessage(playerid,CGREEN,"Товар был доставлен в ваш бизнес с помошью технологии телепортации");
			SendClientMessage(playerid,CGRAY,"(Это временно. Скоро появятся развозчики товаров)");
		}
		case dHouseMenu:
		{
			if(!response) return 1;
			new houseid = pData[playerid][pHouse] - 1;
			switch(listitem)
			{
				case 0://Открыть - закрыть
				{
					if(!gHouses[houseid][houseClose])
					{
						gHouses[houseid][houseClose] = 1;
						GameTextForPlayer(playerid,"~r~closed",2000,3);
					}
					else
					{
						gHouses[houseid][houseClose] = 0;
						GameTextForPlayer(playerid,"~g~opened",2000,3);
					}
					new query[256];
					format(query,sizeof(query),"UPDATE `houses` SET `close` = '%d' WHERE `id` = '%d'",gHouses[houseid][houseClose],houseid+1);
					mysql_query(query);
					if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL (закрытие / открытие дома)");
				}
				case 1: //Статистика
				{
					new classname[20];
					switch(gHouses[houseid][houseClass])
					{
						case 0:classname = "Эконом";
						case 1:classname = "Cредний";
						case 2:classname = "Элитный";
						case 3:classname = "Особняк";
						default: classname = "Неизвестно";
					}
					new mes[256];
					new cnt;
					for(new i;i<3;i++)
					{
						if(gHouses[houseid][houseHabitID][i]) cnt++;
					}
					new carname[24];
					if(!pData[playerid][pCar]) strcat(carname,"Нет");
					else
					{
						for(new i;i<MAX_VEHICLES;i++)
						{
							if(gCars[i][carOwnerid] == gHouses[houseid][houseOwnerID])
							{
								strcat(carname,gTransport[gCars[i][carModelid]][trName]);
								break;
							}
						}
					}
					new rent = floatround(gHouses[houseid][housePrice] * 0.005);
					new status[24];
					if(gHouses[houseid][houseClose]) strcat(status,"{"#cRED"}Закрыт");
					else strcat(status,"{"#cGREEN"}Открыт");
					new improve[64];
					if(gHouses[houseid][houseImprove][0]) strcat(improve,"Автом. двери\n");
					if(gHouses[houseid][houseImprove][1]) strcat(improve,"Сейф\n");
					if(gHouses[houseid][houseImprove][2]) strcat(improve,"Холодильник\n");
					if(gHouses[houseid][houseImprove][3]) strcat(improve,"Шкаф\n");
					if(gHouses[houseid][houseImprove][4]) strcat(improve,"Субсидии");
					format(mes,sizeof(mes),"{"#cWHITE"}Номер дома: %d\nКласс: %s\nК-во жильцов: %d/%d\nДомашний транспорт: %s\nКвартплата: %d\nСостояние: %s\n{"#cWHITE"}Гос. цена: %d\nУлучшения:\n%s",houseid+1,classname,cnt,gHouses[houseid][houseClass],carname,rent,status,gHouses[houseid][housePrice],improve);
					ShowPlayerDialog(playerid,dHouseStat,0,"Управление домом",mes,"OK","");

				}
				case 2: //Улучшения
				{
					new mes[256];
					for(new i;i<5;i++)
					{
						new c[7];
						if(gHouses[houseid][houseImprove][i]) c = ""#cGREEN"";
						else if(!i || gHouses[houseid][houseImprove][i-1]) c = ""#cWHITE"";
						else c = ""#cGRAY"";
						if(!i) format(mes,sizeof(mes),"{%s}%d. %s",c,i+1,gHouseImproveName[i]);
						else format(mes,sizeof(mes),"%s\n{%s}%d. %s",mes,c,i+1,gHouseImproveName[i]);
					}
					ShowPlayerDialog(playerid,dHouseImprove,2,"Управление домом",mes,"Купить","Отмена");
				}
				case 3:
				{
					OnPlayerCommandText(playerid,"/sellcar");
				}
				case 4: //Отметить тс на гпс
				{
					if(!pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"У вас нет личного т/с");
					if(pTemp[playerid][pGPS])
					{
						DisablePlayerCheckpoint(playerid);
						pTemp[playerid][pGPS] = false;
						SendClientMessage(playerid,CRED,"Метка {"#cWHITE"}снята с радара");
					}
					new carid = GetCarSlot(pData[playerid][pCar]);
					if(carid == -1) return SendClientMessage(playerid,CGRAY,"Ошибка #115");
					new vid = gCars[carid][carVid];
					if(vid == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CGRAY,"Ошибка #116");
					SetPlayerCheckpoint(playerid,gVehicles[vid-1][vX],gVehicles[vid-1][vY],gVehicles[vid-1][vZ],5.0);
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid,CRED,"Метка {"#cWHITE"}установлена у Вас на радаре. Чтобы снять метку напишите {"#cINFO"}/gps");
				}
				case 5:
				{
					OnPlayerCommandText(playerid,"/fixcar");
				}
				case 6:
				{
					OnPlayerCommandText(playerid,"/sellhouse");
				}
			}
		}
		case dHouseStat:
		{
			ShowPlayerDialog(playerid,dHouseMenu,2,"Управление домом","1. Открыть / закрыть дом\n2. Информация о доме\n3. Улучшения\n4. Продать домашний транспорт\n5. Отметить транспорт на GPS\n6. Продать дом","ОК","Отмена");
		}
		case dHouseImprove:
		{
			if(!response) return ShowPlayerDialog(playerid,dHouseMenu,2,"Управление домом","1. Открыть / закрыть дом\n2. Информация о доме\n3. Улучшения\n4. Продать домашний транспорт\n5. Отметить транспорт на GPS\n6. Продать дом","ОК","Отмена");
			new houseid = pData[playerid][pHouse] - 1;
			if(gHouses[houseid][houseImprove][listitem])
			{
				SendClientMessage(playerid,CGREEN,"У Вас уже установлено это улучшение");
				ShowPlayerDialog(playerid,dHouseMenu,2,"Управление домом","1. Открыть / закрыть дом\n2. Информация о доме\n3. Улучшения\n4. Продать домашний транспорт\n5. Отметить транспорт на GPS\n6. Продать дом","ОК","Отмена");
			}
			else if((!listitem && !gHouses[houseid][houseImprove][listitem]) || (gHouses[houseid][houseImprove][listitem-1] && !gHouses[houseid][houseImprove][listitem]))
			{
				new mes[128];
				format(mes, sizeof(mes),"{"#cWHITE"}Вы хотите купить улучшение: {"#cINFO"}\"%s\"?\n{"#cWHITE"}Оно обойдется Вам в {"#cRED"}$%d",gHouseImproveName[listitem],gHouseImprovePrice[listitem]);
				ShowPlayerDialog(playerid,dHouseImprove2,0,"Управление домом",mes,"Да","Нет");
				SetPVarInt(playerid,"improveid",listitem);
			}
			else
			{
				SendClientMessage(playerid,CGRAY,"Это улучшение еще не доступно Вам");
				ShowPlayerDialog(playerid,dHouseMenu,2,"Управление домом","1. Открыть / закрыть дом\n2. Информация о доме\n3. Улучшения\n4. Продать домашний транспорт\n5. Отметить транспорт на GPS\n6. Продать дом","ОК","Отмена");
			}
		}
		case dHouseImprove2:
		{
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			if(!response) return ShowPlayerDialog(playerid,dHouseMenu,2,"Управление домом","1. Открыть / закрыть дом\n2. Информация о доме\n3. Улучшения\n4. Продать домашний транспорт\n5. Отметить транспорт на GPS\n6. Продать дом","ОК","Отмена");
			new price = gHouseImprovePrice[improveid];
			if(GetPlayerMoneyEx(playerid) < price)
			{
				ShowPlayerDialog(playerid,dHouseMenu,2,"Управление домом","1. Открыть / закрыть дом\n2. Информация о доме\n3. Улучшения\n4. Продать домашний транспорт\n5. Отметить транспорт на GPS\n6. Продать дом","ОК","Отмена");
				return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			}
			new houseid = pData[playerid][pHouse] - 1;
			gHouses[houseid][houseImprove][improveid] = 1;
			new hintid = gHouses[houseid][houseHint];
			switch(improveid)
			{
				case 1:	CreateDynamicObject(2332,gHintSafe[hintid][0],gHintSafe[hintid][1],gHintSafe[hintid][2],gHintSafe[hintid][3],gHintSafe[hintid][4],gHintSafe[hintid][5],houseid+1); //Сейф
				case 2: CreateDynamicObject(2141,gHintFreez[hintid][0],gHintFreez[hintid][1],gHintFreez[hintid][2],gHintFreez[hintid][3],gHintFreez[hintid][4],gHintFreez[hintid][5],houseid+1);
				case 3:
				{
					CreateDynamicObject(2708,gHintStore[hintid][0],gHintStore[hintid][1],gHintStore[hintid][2],gHintStore[hintid][3],gHintStore[hintid][4],gHintStore[hintid][5],houseid+1);
					gHouses[houseid][houseSkin][0] = pData[playerid][pSkin];
					if(pData[playerid][pFraction]) gHouses[houseid][houseSkin][3] = pData[playerid][pFractionSkin];
					UpdateHouseDress(houseid);
					if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка Mysql (сохранение одежды в шкафу)");
				}
			}

			new data[32],query[128];
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseImprove][i]);
				else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseImprove][i]);
			}
			format(query,sizeof(query),"UPDATE `houses` SET `improve` = '%s' WHERE id = '%d'",data,houseid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка MySQL (покупка улучшения для дома)");
			TransferMoney(playerid,-1,price,"houseimprove");
			SendClientMessage(playerid,CGREEN,"Поздравляем, Вы купили улучшение для дома.");
			if(improveid == 1) SendClientMessage(playerid,CINFO,"Код сейфа по умолчанию: \"{"#cGRAY"}0000{"#cINFO"}\"");
		}
		case dStore:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: //Берем оружие
				{
					new houseid = pData[playerid][pHouse]-1;
					new hintid = gHouses[houseid][houseHint];
					for(new i;i<9;i++)
					{
						if(gHouses[houseid][houseGun][i])
						{
							new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
							GetPlayerCameraPos(playerid,x,y,z);
							SetPVarFloat(playerid,"oldcx",x);
							SetPVarFloat(playerid,"oldcy",y);
							SetPVarFloat(playerid,"oldcz",z);
							GetGunCameraOffset(gHintGun[hintid][i][0],gHintGun[hintid][i][1],gHintStore[hintid][5],x2,y2);
							z2 = gHintGun[hintid][i][2] + 0.4;
							InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,1000,CAMERA_MOVE);
							GetPlayerCameraFrontVector(playerid,x2,y2,z2);
							x += x2;
							y += y2;
							z += z2;
							InterpolateCameraLookAt(playerid,x,y,z,gHintGun[hintid][i][0],gHintGun[hintid][i][1],gHintGun[hintid][i][2],1000,CAMERA_MOVE);
							pTemp[playerid][pSelectStoreGun] = true;
							pTemp[playerid][pStoreGun] = i;
							pTemp[playerid][pSelectStoreGun] = false;
							SetTimerEx("SelectStoreGun",1000,false,"i",playerid);
							SendClientMessage(playerid,CWHITE,"Используйте клавиши {"#cGREEN"}влево{"#cWHITE"} и {"#cGREEN"}вправо{"#cWHITE"} для выбора оружия");
							SendClientMessage(playerid,CWHITE,"Используйте клавишу {"#cGREEN"}входа / Выхода из транспорта{"#cWHITE"} для Выхода");
							SendClientMessage(playerid,CWHITE,"Используйте клавишу {"#cGREEN"}быстрого бега{"#cWHITE"} для подтверждения");
							new gunname[32],mes[48];
							GetWeaponName(GetStoreGunID(i),gunname,32);
							format(mes,48,"~w~%s (~g~%d~w~)",gunname,gHouses[houseid][houseGun][i]);
							GameTextForPlayer(playerid,mes,100000,3);
							TogglePlayerControllable(playerid,0);
							return 1;
						}
					}
					return SendClientMessage(playerid,CGRAY,"У Вас нет оружия в шкафу");
				}
				case 1: //Ложим оружие
				{
					ShowGunList(playerid);
				}
				case 2: //Одежду
				{
					new houseid = pData[playerid][pHouse] - 1;
					new mes[128],cnt;
					for(new i;i<4;i++)
					{
						if(i == 3 && pData[playerid][pFractionSkin]) format(mes,sizeof(mes),"%sФракционная одежда",mes);
						else if(gHouses[houseid][houseSkin][i])
						{
							format(mes,sizeof(mes),"%sОдежда %d\n",mes,i+1);
						}
						else continue;
						cnt++;
					}
					if(!cnt)
					{
						SendClientMessage(playerid,CGRAY,"Нет одежды в шкафу");
						return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
					}
					ShowPlayerDialog(playerid,dStoreSkin,2,"Шкаф",mes,"Одеть","Отмена");
				}
			}
		}
		case dStoreSkin:
		{
			if(!response) return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
			new skin,id;
			new houseid = pData[playerid][pHouse] - 1;
			if(!strcmp(inputtext,"Фракционная одежда",false))
			{
				skin = pData[playerid][pFractionSkin];
			}
			else
			{
				sscanf(inputtext,"{s[100]}i",id);
				skin = gHouses[houseid][houseSkin][id-1];
				pData[playerid][pSkin] = skin;
				UpdatePlayerData(playerid, "skin", skin);
			}
			SetPlayerSkin(playerid,skin);
			MeAction(playerid,"переоделся(сь)");
			new mes[128],cnt;
			for(new i;i<4;i++)
			{
				if(i == 3 && pData[playerid][pFractionSkin]) format(mes,sizeof(mes),"%sФракционная одежда",mes);
				else if(gHouses[houseid][houseSkin][i])
				{
					format(mes,sizeof(mes),"%sОдежда %d\n",mes,i+1);
				}
				else continue;
				cnt ++;
			}
			if(!cnt)
			{
				SendClientMessage(playerid,CGRAY,"Нет одежды в шкафу");
				return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
			}
			ShowPlayerDialog(playerid,dStoreSkin,2,"Шкаф",mes,"Одеть","Отмена");
		}
		case dStorePut:
		{
			if(!response) return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
			new cnt;
			new houseid = pData[playerid][pHouse]-1;
			for(new i;i<=11;i++)
			{
				new gunid,ammo,storeslot;
				GetPlayerWeaponData(playerid,i,gunid,ammo);
				storeslot = GetStoreGunSlot(gunid);
				if(!gunid || storeslot == -1 || ammo <= 0) continue;
				if(gunid == 23 && pTemp[playerid][pTazerGun]) continue;
				if(listitem == cnt)
				{
					new cnt2;
					for(new i2;i2<9;i2++) if(gHouses[houseid][houseGun][i2] && storeslot != i2) cnt2++;
					if(cnt2 >= 3)
					{
						SendClientMessage(playerid,CGRAY,"Вы не можете хранить больше 3-х видов оружия в шкафу");
						return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
					}
					if(gHouses[houseid][houseGun][storeslot] + ammo > 10000) return SendClientMessage(playerid,CWHITE,"У Вас в шкафу максимальное к-во патронов данного оружия");
					gHouses[houseid][houseGun][storeslot] += ammo;
					if(SaveStoreGun(houseid)) return SendClientMessage(playerid,CRED,"Ошибка MySQL (сохранение оружия в шкафу)");
					UpdateHouseGun(houseid);
					SetPlayerAmmoEx(playerid,gunid,0);
					MeAction(playerid,"положил(а) оружие в шкаф");
					SendClientMessage(playerid,CGREEN,"Вы положили оружие в шкаф");
					SetTimerEx("ShowGunList",500,false,"i",playerid);
					break;
				}
				cnt++;
			}
		}
		case dStoreGet:
		{
			if(!response) return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
			new ammo = strval(inputtext);
			new storeslot = pTemp[playerid][pStoreGun];
			new houseid = pData[playerid][pHouse] - 1;
			if(ammo < 1)
			{
				new gunname[32],mes[128];
				GetWeaponName(gHintGunID[storeslot],gunname,32);
				format(mes,sizeof(mes),"{"#cWHITE"}Укажите сколько патронов{"#cGREEN"}%s{"#cWHITE"} Вы хотите взять:");
				ShowPlayerDialog(playerid,dStoreGet,1,"Шкаф",mes,"Взять","Отмена");
				return SendClientMessage(playerid,CGRAY,"Нельзя брать меньше 1 патрона");
			}
			if(ammo > gHouses[houseid][houseGun][storeslot])
			{
				new gunname[32],mes[128];
				GetWeaponName(gHintGunID[storeslot],gunname,32);
				format(mes,sizeof(mes),"{"#cWHITE"}Укажите сколько патронов{"#cGREEN"}%s{"#cWHITE"} Вы хотите взять:");
				ShowPlayerDialog(playerid,dStoreGet,1,"Шкаф",mes,"Взять","Отмена");
				return SendClientMessage(playerid,CGRAY,"Недостаточно патронов в шкафу");
			}
			gHouses[houseid][houseGun][storeslot] -= ammo;
			if(SaveStoreGun(houseid)) return SendClientMessage(playerid,CRED,"Ошибка MySQL (взятие оружия из шкафа)");
			UpdateHouseGun(houseid);
			GivePlayerWeaponEx(playerid,GetStoreGunID(storeslot),ammo);
			GameTextForPlayer(playerid," ",100,3);
			MeAction(playerid,"взял(а) оружие и патроны из шкафа");
			new active=-1;
			for(new i;i<9;i++) if(gHouses[houseid][houseGun][i]) active = i;
			if(active == -1)
			{
				SendClientMessage(playerid,CGRAY,"В шкафу больше нет оружия");
				new Float:x, Float:y, Float:z, Float:x1, Float:y1, Float:z1;
				x = GetPVarFloat(playerid,"oldcx");
				y = GetPVarFloat(playerid,"oldcy");
				z = GetPVarFloat(playerid,"oldcz");
				GetPlayerCameraPos(playerid,x1,y1,z1);
				InterpolateCameraPos(playerid,x1,y1,z1,x,y,z,700,CAMERA_MOVE);
				SetTimerEx("SetCameraBehindPlayerDelay",1000,false,"i",playerid);
				pTemp[playerid][pSelectStoreGun] = false;
				pTemp[playerid][pStoreGun] = 0;
				GameTextForPlayer(playerid," ",100,3);
				TogglePlayerControllable(playerid,1);
			}
		}
		case dSafeCode:
		{
			if(!response) return 1;
			new code = strval(inputtext);
			new houseid = pData[playerid][pHouse] - 1;
			if(!isNumeric(inputtext) || strlen(inputtext) != 4 || code != gHouses[houseid][houseSafeCode]) return SendClientMessage(playerid,CGRAY,"Код введен неверно");
			new mes[128];
			format(mes,sizeof(mes),"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
			ShowPlayerDialog(playerid,dSafe,0,"Сейф",mes,"Далее","Отмена");
		}
		case dSafe:
		{
			if(!response) return 1;
			else ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
		}
		case dSafeAction:
		{
			if(!response)
			{
				new houseid = pData[playerid][pHouse] - 1;
				new mes[128];
				format(mes,sizeof(mes),"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
				return ShowPlayerDialog(playerid,dSafe,0,"Сейф",mes,"Далее","Отмена");
			}
			switch(listitem)
			{
				case 0:	ShowPlayerDialog(playerid,dSafePutMoney,1,"Сейф","{"#cWHITE"}Укажите сумму, которую хотите положить в сейф:","Положить","Отмена");
				case 1: ShowPlayerDialog(playerid,dSafeGetMoney,1,"Сейф","{"#cWHITE"}Укажите сумму, которую хотите взять из сейфа:","Взять","Отмена");
				case 2: ShowPlayerDialog(playerid,dSafePutDrug,1,"Сейф","{"#cWHITE"}Укажите к-во наркотиков, которое Вы хотите положить в сейф","Положить","Отмена");
				case 3: ShowPlayerDialog(playerid,dSafeGetDrug,1,"Сейф","{"#cWHITE"}Укажите к-во наркотиков, которое Вы взять из сейфа","Взять","Отмена");
				case 4: ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Введите новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
		}
		case dSafePutMoney:
		{
			if(!response) ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new money = strval(inputtext);
			if(money < 1 || money > 1000000)
			{
				SendClientMessage(playerid,CGRAY,"Неверная сумма");
				return ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			}
			if(GetPlayerMoneyEx(playerid) < money)
			{
				SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
				return ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			}
			new houseid = pData[playerid][pHouse] - 1;
			if(gHouses[houseid][houseSafeMoney] + money > 1000000)
			{
				SendClientMessage(playerid,CGRAY,"У Вас недостаточно места в сейфе");
				return ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			}
			new query[128],reason[24];
			format(reason,24,"safeput(%d)",houseid+1);
			format(query,sizeof(query),"UPDATE `houses` SET `safemoney` = '%d' WHERE id = '%d'",gHouses[houseid][houseSafeMoney]+money,houseid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL при сохранении денег в сейфе");
			gHouses[houseid][houseSafeMoney] += money;
			TransferMoney(playerid,-1,money,reason);
			MeAction(playerid,"положил(а) деньги в сейф");
			ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
		}
		case dSafeGetMoney:
		{
			if(!response) ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new money = strval(inputtext);
			new houseid = pData[playerid][pHouse] - 1;
			if(money < 1 || money > 1000000) SendClientMessage(playerid,CGRAY,"Сумма должна быть от 1 до 1000000");
			else if(money > gHouses[houseid][houseSafeMoney]) SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег в сейфе");
			else
			{
				new query[128];
				format(query,sizeof(query),"UPDATE `houses` SET `safemoney` = '%d' WHERE id = '%d'",gHouses[houseid][houseSafeMoney]-money,houseid+1);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL при сохранении денег в сейфе");
				gHouses[houseid][houseSafeMoney] -= money;
				TransferMoney(-1,playerid,money,"safeget");
				MeAction(playerid,"взял(а) деньги из сейфа");
			}
			ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
		}
		case dSafePutDrug:
		{
			if(!response) ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new drug = strval(inputtext);
			new houseid = pData[playerid][pHouse] - 1;
			if(drug < 1 || drug > 2000) SendClientMessage(playerid,CGRAY,"Вы не можете положить меньше 1 и больше 2000 г. наркотиков в сейф");
			else if(pData[playerid][pDrugs] < drug) SendClientMessage(playerid,CGRAY,"У Вас недостаточно наркотиков");
			else if(gHouses[houseid][houseDrugs] + drug > 2000) SendClientMessage(playerid,CGRAY,"Недостаточно места в сейфе");
			else
			{
				new query[128];
				format(query,sizeof(query),"UPDATE `houses` SET `drugs` = '%d' WHERE id = '%d'",gHouses[houseid][houseDrugs]+drug,houseid+1);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL при сохранении наркотиков в сейфе");
				gHouses[houseid][houseDrugs] += drug;
				pData[playerid][pDrugs] -= drug;
				MeAction(playerid,"положил(а) наркотики в сейф");
			}
		}
		case dSafeGetDrug:
		{
			if(!response) ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new drug = strval(inputtext);
			new houseid = pData[playerid][pHouse] - 1;
			if(drug < 1 || drug > 2000) SendClientMessage(playerid,CGRAY,"Вы не можете взять меньше 1 и больше 2000 г. наркотиков в сейф");
			else if(gHouses[houseid][houseDrugs] < drug) SendClientMessage(playerid,CGRAY,"У Вас недостаточно наркотиков в сейфе");
			else
			{
				new query[128];
				format(query,sizeof(query),"UPDATE `houses` SET `drugs` = '%d' WHERE id = '%d'",gHouses[houseid][houseDrugs]-drug,houseid+1);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL при сохранении наркотиков в сейфе");
				gHouses[houseid][houseDrugs] -= drug;
				pData[playerid][pDrugs] += drug;
				MeAction(playerid,"взял(а) наркотики из сейфа");
			}
		}
		case dSafeCodeChange:
		{
			if(!response)
			{
				new houseid = pData[playerid][pHouse] - 1;
				new mes[128];
				format(mes,sizeof(mes),"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
				return ShowPlayerDialog(playerid,dSafe,0,"Сейф",mes,"Далее","Отмена");
			}
			if(strlen(inputtext) != 4 || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CGRAY,"Код должен состоять из 4-х цифр");
				return ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Введите новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
			new code = strval(inputtext);
			SetPVarInt(playerid,"safecode",code);
			ShowPlayerDialog(playerid,dSafeCodeChange2,1,"Сейф","{"#cWHITE"}Введите новый код еще раз","Изменить","Отмена");
		}
		case dSafeCodeChange2:
		{
			if(!response)
			{
				new houseid = pData[playerid][pHouse] - 1;
				new mes[128];
				format(mes,sizeof(mes),"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
				return ShowPlayerDialog(playerid,dSafe,0,"Сейф",mes,"Далее","Отмена");
			}
			if(strlen(inputtext) != 4 || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CGRAY,"Код должен состоять из 4-х цифр");
				return ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Введите новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
			new code = strval(inputtext);
			if(code != GetPVarInt(playerid,"safecode"))
			{
				SendClientMessage(playerid,CGRAY,"Коды не совпадают");
				return ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Введите новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
			new houseid = pData[playerid][pHouse] - 1;
			gHouses[houseid][houseSafeCode] = code;
			new query[128];
			format(query,sizeof(query),"UPDATE `houses` SET `safecode` = '%d' WHERE id = '%d'",code,houseid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL (изменение кода сейфа)");
			format(query,sizeof(query),"Ваш новый код сейфа: %s. Не забудте его!",inputtext);
			SendClientMessage(playerid,CGREEN,query);
		}
		case dBuySkin:
		{
			if(!response) return 1;
			new houseid = pData[playerid][pHouse]-1;
			if(!pData[playerid][pHouse] || !gHouses[houseid][houseImprove][3] || ((houseid+1) > 0 && pData[playerid][pMysqlID] != gHouses[houseid][houseOwnerID])) ShowPlayerDialog(playerid,dBuySkin2,0,"Покупка одежды","{"#cRED"}Внимание! {"#cWHITE"}У Вас нет шкафа для одежды.\nЕсли Вы купите эту одежду, то она заменит вашу текущую\nВы все равно хотите купить Выбранную одежду?","Да","Нет");
			else
			{
				new skinid = GetPVarInt(playerid,"clothes_select");
				new skin = gSkins[skinid][skinID];
				new price = GetSkinPrice(skinid);
				new id = pTemp[playerid][pSelectedBusinessID];
				new slot=-1;
				for(new i;i<3;i++)
				{
					if(skin == gHouses[houseid][houseSkin][i]) return SendClientMessage(playerid,CGRAY,"У Вас уже есть эта одежда в шкафу");
					if(!gHouses[houseid][houseSkin][i]) {slot = i; break;}
				}
				if(slot == -1) return ShowPlayerDialog(playerid,dBuySkin2,0,"Покупка одежды","{"#cRED"}Внимание! {"#cWHITE"}У Вас недостаточно места в шкафу.\nЕсли Вы купите эту одежду, то она заменит вашу текущую\nВы все равно хотите купить Выбранную одежду?","Да","Нет");
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"Недостаточно денег");
				if(gBusiness[id][busiProduct] - floatround((price / 100) * 10) / 10 <= 0) return SendClientMessage(playerid, CGRAY, "Ошибка: В бизнесе недостаточно продуктов.");
				gBusiness[id][busiBank] += floatround((price / 100) * 10);
				gBusiness[id][busiProduct] -= floatround((price / 100) * 10) / 20;
				UpdateBusinessText(id);
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				gHouses[houseid][houseSkin][slot] = skin;
				UpdateHouseDress(houseid);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка Mysql (сохранение одежды в шкафу)");
				TransferMoney(playerid,-1,price,"buyskin");
				SendClientMessage(playerid,CGREEN,"Одежда была доставлена в ваш шкаф");
				pTemp[playerid][pChangingSkin] = false;
				if(GetPVarInt(playerid, "curskin") == pData[playerid][pFractionSkin] || (!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])) && pData[playerid][pFraction]) SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
				else pData[playerid][pSkin] = skin, SetPlayerSkin(playerid,skin);

				HidePlayerClothesTD(playerid);
				pTemp[playerid][pJustTP] = true;
				SetPlayerPos(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"));
				SetPlayerInterior(playerid, GetPVarInt(playerid, "interior"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "vw"));
				SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
				TogglePlayerControllable(playerid, 1);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "posx");
				DeletePVar(playerid, "posy");
				DeletePVar(playerid, "posz");
				DeletePVar(playerid, "posa");
				DeletePVar(playerid, "interior");
				DeletePVar(playerid, "vw");
				DeletePVar(playerid, "clothes_sel");
				DeletePVar(playerid, "clothes_class");
				pTemp[playerid][pChangingSkin] = false;
			}
		}
		case dBuySkin2:
		{
			if(!response) return 1;
			new skin;
			new skinid = GetPVarInt(playerid,"clothes_select");
			new houseid = pData[playerid][pHouse]-1;
			skin = gSkins[skinid][skinID];
			new price = GetSkinPrice(skinid);
			new id = pTemp[playerid][pSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"Недостаточно денег");
			if(gBusiness[id][busiProduct] - floatround((price / 100) * 10) / 10 <= 0) return SendClientMessage(playerid, CGRAY, "Ошибка: В бизнесе недостаточно продуктов.");
			gBusiness[id][busiBank] += floatround((price / 100) * 10);
			gBusiness[id][busiProduct] -= floatround((price / 100) * 10) / 10;
			UpdateBusinessText(id);
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
			if((houseid+1) && pData[playerid][pMysqlID] == gHouses[houseid][houseOwnerID])
			{
				new slot=-1, cnt;
				for(new i;i<3;i++)
				{
					if(gHouses[houseid][houseSkin][i]) cnt++;
					if(gHouses[houseid][houseSkin][i] == pData[playerid][pSkin]) slot = i;
				}
				if(cnt >= 3)
				{
					if(slot == -1) return SendClientMessage(playerid,CRED,"Ошибка при нахождении заменямого скина в шкафу");
					gHouses[houseid][houseSkin][slot] = skin;
					UpdateHouseDress(houseid);
				}
			}
			if(UpdatePlayerData(playerid,"skin",skin)) return SendClientMessage(playerid,CRED,"Ошибка MySQL (сохранение скина в профиль)");
			TransferMoney(playerid,-1,price,"buyskin");
			pData[playerid][pSkin] = skin;
			pTemp[playerid][pChangingSkin] = false;
			if(GetPVarInt(playerid, "curskin") == pData[playerid][pFractionSkin] || (!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])) && pData[playerid][pFraction]) SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			else SetPlayerSkin(playerid,pData[playerid][pSkin]);

			HidePlayerClothesTD(playerid);
			pTemp[playerid][pJustTP] = true;
			SetPlayerPos(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "interior"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "vw"));
			SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid, "posx");
			DeletePVar(playerid, "posy");
			DeletePVar(playerid, "posz");
			DeletePVar(playerid, "posa");
			DeletePVar(playerid, "interior");
			DeletePVar(playerid, "vw");
			DeletePVar(playerid, "clothes_sel");
			DeletePVar(playerid, "clothes_class");
			pTemp[playerid][pChangingSkin] = false;
		}
		case dFreez:
		{
   			if(!response) return 1;
			new products,name[24];
			switch(listitem)
			{
				case 0: {products = 10; strcat(name,"хот-дог");}
				case 1: {products = 15; strcat(name,"бургер");}
				case 2: {products = 30; strcat(name,"пиццу");}
			}
  			new houseid = pData[playerid][pHouse] - 1;
   			if(gHouses[houseid][houseProducts] < products)
			{
				SFCM(playerid,CGRAY,"У Вас в холодильнике недостаточно продуктов. %d/%d",gHouses[houseid][houseProducts],products);
				ShowPlayerDialog(playerid,dFreez,2,"Холодильник","Хот-дог ({"#cRED"}-10 прод. {"#cGREEN"}+20 сытость{"#cWHITE"})\nБургер ({"#cRED"}-15 прод. {"#cGREEN"}+30 сытость{"#cWHITE"})\nПицца ({"#cRED"}-30 прод. {"#cGREEN"}+60 сытость{"#cWHITE"})","Съесть","Отмена");
				return 1;
			}
   			new query[128];
			format(query,sizeof(query),"UPDATE `houses` SET `products` = '%d' WHERE `id` = '%d'",gHouses[houseid][houseProducts]-products,houseid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (поедание продуктов)");
			gHouses[houseid][houseProducts] -= products;
			/*	*/
			SFCM(playerid,CORANGE,"Чтобы съесть напишите {"#cWHITE"}/eat{"#cORANGE"}. Осталось %d продуктов",gHouses[houseid][houseProducts]);
			SendClientMessage(playerid,-1,"Чтобы положить поднос, введите {"#cORANGE"}/put{"#cWHITE"}.");
			new mes[128];
			format(mes,sizeof(mes),"взял(а) %s из холодильника",name);
			MeAction(playerid,mes);
 			if(listitem == 1) SetPlayerAttachedObject(playerid,0,2214,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
			else if(listitem == 2) SetPlayerAttachedObject(playerid,0,2220,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
			else if(!listitem) SetPlayerAttachedObject(playerid,0,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
			if(listitem) SetPlayerSpecialAction(playerid, 25);
			pTemp[playerid][pEat] = listitem+1;
		}
		case dHotel:
		{
			if(!response) return 1;
			new room = pData[playerid][pHotelRoom];
			new hotelid = pData[playerid][pHotel] - 1;
			switch(listitem)
			{
				case 0: //продление
				{
					new remain = gHotelEndurance[hotelid][room] - gCurDay;
					if(remain <= 2)
					{
						ShowPlayerDialog(playerid,dHotelExtend,2,"Отель","На какой период Вы хотите продлить аренду комнаты?\n5 дней\n10 дней\n15 дней\n20 дней","OK","Отмена");
					}
					else SendClientMessage(playerid,CGRAY,"Продлить аренду можно только за 2 дня до окончания");
				}
				case 1: //отказ
				{
					ShowPlayerDialog(playerid,dHotelReject,0,"Отель","{"#cWHITE"}Вы действительно хотите отказаться от аренды?\n{"#cGRAY"}(деньги за аренду не возвращаются)","Да","Нет");
				}
			}
		}
		case dHotelExtend:
		{
			if(!response) return 1;
			new time = listitem*5;
			if(!time) return ShowPlayerDialog(playerid,dHotelExtend,2,"Отель","На какой период Вы хотите продлить аренду комнаты?\n5 дней \n10 дней\n15 дней\n20 дней","OK","Отмена");
			new room = pData[playerid][pHotelRoom];
			new price = time*2000;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			new hotelid = pData[playerid][pHotel] - 1;
			TransferMoney(playerid,-1,price,"hotelextend");
			gHotelEndurance[hotelid][room] += time;
			UpdateHotelResidents(hotelid);
			SendClientMessage(playerid,CGREEN,"Аренда комнаты продлена");
		}
		case dHotelReject:
		{
			if(!response) return 1;
			if(pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"Перед тем как отказаться от аренды продайте ваше т/с");
			new room = pData[playerid][pHotelRoom];
			new hotelid = pData[playerid][pHotel] - 1;
			gHotelResidents[hotelid][room] = 0;
			gHotelEndurance[hotelid][room] = 0;
			UpdateHotelResidents(hotelid);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (отказ от аренды отеля)");
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `hotel` = '0', `hotelroom` = '0' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 2 (отказ от аренды отеля)");
			pData[playerid][pHotel] = 0;
			pData[playerid][pHotelRoom] = 0;
			SendClientMessage(playerid,CYELLOW,"Вы отказались от аренды комнаты в отеле");
		}
		case dHotelBuy:
		{
			if(!response) return 1;
			if(pData[playerid][pBusiness]) return SendClientMessage(playerid,CGRAY,"У Вас уже есть Бизнес");
			ShowPlayerDialog(playerid,dHotelBuy2,0,"Отель","{"#cWHITE"}Вы действительно хотите купить этот отель?","Да","Нет");
		}
		case dHotelBuy2:
		{
			if(!response) return 1;
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			if(GetPlayerMoneyEx(playerid) < 60000) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			new query[128];
			format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],hotelid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (покупка отеля)");
			TransferMoney(playerid,-1,60000,"buyhotel");
			gHotelData[hotelid][hotelOwnerid] = pData[playerid][pMysqlID];
			format(gHotelData[hotelid][hotelOwner],24,"%s",pData[playerid][pNickname]);
			SendClientMessage(playerid,CGREEN,"Поздравляем! Вы купили отель");
			new mes[128];
			new cnt;
			for(new k;k<8;k++) if(gHotelResidents[hotelid][k]) cnt++;
			format(mes,sizeof(mes),"\t{"#cORANGE"}Отель\nВладелец: {"#cORANGE"}%s\nЦена за номер (в сутки): {"#cORANGE"}$%d\nЖильцов: %d/8",gHotelData[hotelid][hotelOwner],gHotelData[hotelid][hotelPrice],cnt);
			UpdateDynamic3DTextLabelText(gHotelText[hotelid],CWHITE,mes);
		}
		case dHotelEnter:
		{
			if(!response) return 1;
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			pTemp[playerid][pJustTP] = true;
			SetPlayerVirtualWorld(playerid,hotelid);
			SetPlayerInterior(playerid,15);
			SetPlayerPos(playerid,2215.1782,-1150.4290,1025.7969);
			SetPlayerFacingAngle(playerid,270.0);
		}
		case dReception:
		{
			if(!response) return 1;
			if(pData[playerid][pHouse]) return SendClientMessage(playerid,CGRAY,"У Вас уже есть дом. Зачем Вам нужна комната в отеле?");
			if(pData[playerid][pHotel]) return SendClientMessage(playerid,CGRAY,"Вы уже арендуете комнату в другом отеле");
			ShowPlayerDialog(playerid,dHotelRent,2,"Отель","На какой период Вы хотите арендовать комнату?\n5 дней\n10 дней\n15 дней\n20 дней","OK","Отмена");

		}
		case dHotelRent:
		{
			if(!response) return 1;
			new time = listitem*5;
			if(!time) return ShowPlayerDialog(playerid,dHotelRent,2,"Отель","На какой период Вы хотите арендовать комнату?\n5 дней\n10 дней\n15 дней\n20 дней","OK","Отмена");
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			SetPVarInt(playerid,"selectedhoteltime",time);
			new room = -1;
			for(new i;i<8;i++)
			{
				if(!gHotelResidents[hotelid][i]) {room = i;break;}
			}
			if(room == -1) return SendClientMessage(playerid,CGRAY,"К сожалению в этом отеле нет свободных номеров");
			SetPVarInt(playerid,"selectedroom",room);
			ShowPlayerDialog(playerid,dHotelRent2,0,"Отель","{"#cWHITE"}У нас есть свободный номер.\n Он стоит {"#cRED"}$2000 в сутки.\n{"#cYELLOW"}Вы хотите снять его?","Да","Нет");
		}
		case dHotelRent2:
		{
			if(!response) return 1;
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			new time = GetPVarInt(playerid,"selectedhoteltime");
			new room = GetPVarInt(playerid,"selectedroom");
			new price = time*2000;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			gHotelResidents[hotelid][room] = pData[playerid][pMysqlID];
			gHotelEndurance[hotelid][room] = gCurDay + time;
			UpdateHotelResidents(hotelid);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (аренда номера)");
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `hotel` = '%d', hotelroom = '%d' WHERE `id` = '%d'",hotelid+1,room,pData[playerid][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 2 (аренда номера)");
			pData[playerid][pHotel] = hotelid+1;
			TransferMoney(playerid,-1,price,"hotelrent");
			SendClientMessage(playerid,CORANGE,"Поздравляем Вы арендовали комнату в отеле. Теперь Вы можете купить т/с");
		}
		case dGPS:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:	ShowPlayerDialog(playerid,dGPSWork,2,"Global Position System","Лесоруб\nСборщик оружия\nВодитель автобуса\nДальнобойщик\nТаксист\nРазвозчики товаров\nШахта","Отметить","Назад");
				case 1: ShowPlayerDialog(playerid,dGPSMain,2,"Global Position System","Ж/Д Вокзал LS\nПравитесльвто\nБанк\nСТО LS\nСТО SF\nСТО LV\nАвтошкола\nВоенкомат","Отметить","Назад"); //Важные
				case 2: ShowPlayerDialog(playerid,dGPSAuto,2,"Global Position System","Авторынок (Эконом)\nАвторынок (Средний)\nАвторынок (Спорт)\nМоторынок","Отметить","Назад"); //Авторынки
				case 3: ShowPlayerDialog(playerid,dGPSTruck,2,"Global Position System","Загрузка угля\nЗагрузка древесины\nРазгрузка","Отметить","Назад"); //Авторынки
			}
		}
		case dGPSWork:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"Global Position System","1.Работы\n2.Важные\n3.Авторынки\n4.Дальнобойщики","Выбрать","Выход");
			switch(listitem)
			{
				case 0: SetPlayerCheckpoint(playerid,-1108.0339,-1655.5341,76.3672,4.0); //Лесоруб
				case 1: SetPlayerCheckpoint(playerid,-1006.6297,-696.1597,32.0078,4.0); //Оружейник
				case 2: SetPlayerCheckpoint(playerid,1077.2036,-1756.5911,13.3915,4.0); //Автобусник
				case 3: SetPlayerCheckpoint(playerid,-503.1611,-537.3449,25.5234,4.0); //Дальнобой
				case 4: SetPlayerCheckpoint(playerid,1273.2477,-1824.2330,13.3853,4.0); //Таксисит
				case 5: SetPlayerCheckpoint(playerid,2443.4209,-2092.8198,13.5469,4.0); //Развозчики
				case 6: SetPlayerCheckpoint(playerid,1028.3728,-332.5703,73.9889,4.0); //Развозчики
			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,CRED,"Метка {"#cWHITE"}установлена у Вас на радаре. Чтобы снять метку напишите {"#cINFO"}/gps");
		}
		case dGPSMain:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"Global Position System","1.Работы\n2.Важные\n3.Авторынки\n4.Дальнобойщики","Выбрать","Выход");
			switch(listitem)
			{
				case 0: SetPlayerCheckpoint(playerid,1767.3883,-1893.5396,13.5620,4.0); //ЖДЛС
				case 1: SetPlayerCheckpoint(playerid,952.5091,-910.0012,45.7656,4.0); //правительство
				case 2: SetPlayerCheckpoint(playerid,1460.0953,-1012.5419,26.8438,4.0); //Банк
				case 3: SetPlayerCheckpoint(playerid,1010.8031,-1434.6841,13.5469,4.0); //СТО LS
				case 4: SetPlayerCheckpoint(playerid,-2173.5769,974.1692,80.0000,4.0); //СТО SF
				case 5: SetPlayerCheckpoint(playerid,1950.2028,2165.3779,10.8203,4.0); //СТО LV
				case 6: SetPlayerCheckpoint(playerid,-2027.5573,-98.1029,35.1641,4.0); //школа
				case 7: SetPlayerCheckpoint(playerid,1168.9017,1366.2009,10.8125,4.0); //военкомат
			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,CRED,"Метка {"#cWHITE"}установлена у Вас на радаре. Чтобы снять метку напишите {"#cINFO"}/gps");
		}
		case dGPSAuto:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"Global Position System","1.Работы\n2.Важные\n3.Авторынки\n4.Дальнобойщики","Выбрать","Выход");
			switch(listitem)
			{
				case 0: SetPlayerCheckpoint(playerid,554.0256,-1287.5737,17.2482,4.0);
				case 1: SetPlayerCheckpoint(playerid,-1964.6195,616.4292,35.0156,4.0);
				case 2: SetPlayerCheckpoint(playerid,1661.6849,2195.1252,10.8203,4.0);
				case 3: SetPlayerCheckpoint(playerid,509.3900,-1604.5217,15.9480,4.0);
			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,CRED,"Метка {"#cWHITE"}установлена у Вас на радаре. Чтобы снять метку напишите {"#cINFO"}/gps");
		}
		case dGPSTruck:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"Global Position System","1.Работы\n2.Важные\n3.Авторынки\n4.Дальнобойщики","Выбрать","Выход");
			switch(listitem)
			{
				case 0: SetPlayerCheckpoint(playerid,355.1710,903.3607,20.5953,4.0);
				case 1: SetPlayerCheckpoint(playerid,-1084.7234,-1622.5729,76.3672,4.0);
				case 2: SetPlayerCheckpoint(playerid,-1050.1774,-638.2383,31.5759,4.0);
			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,CRED,"Метка {"#cWHITE"}установлена у Вас на радаре. Чтобы снять метку напишите {"#cINFO"}/gps");
		}
		case dLeaderskin:
		{
			if(!response) return 1;
			new fractionid = listitem;
			SetPVarInt(playerid,"actfraction",fractionid);
			new mes[128];
			for(new i;i<9;i++)
			{
				new skinid = gFractionSkin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
				else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
			}
			new actplayerid = GetPVarInt(playerid,"actplayerid");
			ShowPlayerDialog(playerid,dMakeleader,2,pData[actplayerid][pNickname],mes,"OK","Отмена");
		}
		case dMakeleader:
		{
			if(!response) return 1;
			new fractionid = GetPVarInt(playerid,"actfraction");
			new skinid = gFractionSkin[fractionid][listitem];
			new rank = gFractionRankCount[fractionid];
			new actplayerid = GetPVarInt(playerid,"actplayerid");
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '%d', rank = '%d', `fractionskin` = '%d', `subfraction` = '0' WHERE `id` = '%d'",fractionid+1,rank,skinid,pData[actplayerid][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (назначение лидера)");
			pData[actplayerid][pFraction] = fractionid+1;
			pData[actplayerid][pRank] = rank;
			pData[actplayerid][pFractionSkin] = skinid;
			pData[actplayerid][pSubfraction] = 0;
			pData[actplayerid][pJob] = 0;
			SetPlayerColor(actplayerid,gFractionColor[fractionid]);
			new mes[128];
			format(mes,sizeof(mes),"%s {"#cWHITE"}был назначен лидером фракции {"#cINFO"}\"%s\"",pData[actplayerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(playerid,CYELLOW,mes);
			format(mes,sizeof(mes),"Вы были назначены лидером фракции \"%s\"",gFractionName[fractionid]);
			SendClientMessage(actplayerid,CINFO,mes);
			new houseid = pData[actplayerid][pHouse]-1;
			if(!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])) SetPlayerSkin(actplayerid,skinid);
			else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,skinid);
			else
			{
				if(GetPlayerSkin(actplayerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(actplayerid,skinid);
				gHouses[houseid][houseSkin][3] = skinid;
				UpdateHouseDress(houseid);
				SendClientMessage(actplayerid,CINFO,"Фракционный скин был доставлен в ваш шкаф");
			}
		}
		case dInvite:
		{
			if(!response) return 1;
			new fractionid = pTemp[playerid][pOfferFractionid];
			new offer = pTemp[playerid][pOfferFraction];
			if(!IsPlayerConnected(offer) || pData[offer][pFraction] != fractionid+1 || !IsAbleToHire(offer)) return SendClientMessage(playerid,CGRAY,"Лидер вышел из игры");
			new mes[128];
			for(new i;i<9;i++)
			{
				new skinid = gFractionSkin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
				else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
			}
			SendClientMessage(playerid,CINFO,"Ждите, пока лидер выберет одежду для Вас");
			ShowPlayerDialog(offer,dInviteSkin,2,pData[playerid][pNickname],mes,"Принять","");
		}
		case dInviteSkin:
		{
			new actplayerid = GetPVarInt(playerid,"actinplayerid");
			new fractionid = pTemp[actplayerid][pOfferFractionid];
			new skinid = gFractionSkin[fractionid][listitem];
			if(pData[playerid][pFraction] != fractionid+1) return SendClientMessage(playerid,CGRAY,"Ошибка #001");
			pData[actplayerid][pFraction] = fractionid+1;
			pData[actplayerid][pRank] = 1;
			pData[actplayerid][pFractionSkin] = skinid;
			pData[actplayerid][pSubfraction] = pData[playerid][pSubfraction];
			pData[actplayerid][pJob] = 0;
			SetPlayerColor(actplayerid,gFractionColor[fractionid]);
			new query[256];
			format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '%d', rank = '1', `fractionskin` = '%d', `subfraction` = '%d', `job` = '0' WHERE `id` = '%d'",fractionid+1,skinid,pData[playerid][pSubfraction],pData[actplayerid][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (принятие во фракцию)");
			UpdatePlayerData(actplayerid,"subfraction",pData[actplayerid][pSubfraction]);
			new mes[128];
			format(mes,sizeof(mes),"%s был принят во фракцию \"%s\"",pData[actplayerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(playerid,CINFO,mes);
			print(mes);
			format(mes,sizeof(mes),"Вы были приняты во фракцию \"%s\"",gFractionName[fractionid]);
			SendClientMessage(actplayerid,CINFO,mes);
			new houseid = pData[actplayerid][pHouse]-1;
			if(!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[actplayerid][pMysqlID])) SetPlayerSkin(actplayerid,skinid);
			else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,skinid);
			else
			{
				if(GetPlayerSkin(actplayerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(actplayerid,skinid);
				gHouses[houseid][houseSkin][3] = skinid;
				UpdateHouseDress(houseid);
				SendClientMessage(actplayerid,CINFO,"Фракционный скин был доставлен в ваш шкаф");
			}
		}
		case dSetRank:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"actgrplayerid");
			new fractionid = pData[playerid][pFraction] - 1;
			if(!IsPlayerConnected(playerid)) return 1;
			new rank = listitem+1;
			new action[16];
			if(rank == pData[actplayerid][pRank]) return 1;
			else if(rank < pData[actplayerid][pRank]) action = "понизил";
			else action = "повысил";
			UpdatePlayerData(actplayerid,"rank",rank);
			pData[actplayerid][pRank] = rank;
			new mes[128];
			format(mes,sizeof(mes),"Ты %s %s до ранга: \"%s\"",action,pData[actplayerid][pNickname],gFractionRankName[fractionid][rank-1]);
			SendClientMessage(playerid,CINFO,mes);
			format(mes,sizeof(mes),"%s %s вас до ранга: \"%s\"",pData[playerid][pNickname],action,gFractionRankName[fractionid][rank-1]);
			SendClientMessage(actplayerid,CINFO,mes);
		}
		case dFractionSkin:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"actplayerid");
			if(!IsPlayerConnected(actplayerid) || pData[actplayerid][pFraction] != pData[playerid][pFraction]) return 1;
			new fractionid = pData[actplayerid][pFraction]-1;
			new skinid = gFractionSkin[fractionid][listitem];
			if(skinid == pData[actplayerid][pFractionSkin]) return 1;
			new mes[128];
			format(mes,sizeof(mes),"%s Выдал Вам новую фракционную одежду",pData[playerid][pNickname]);
			SendClientMessage(actplayerid,CINFO,mes);
			format(mes,sizeof(mes),"%s получил новую фракционную одежду",pData[actplayerid][pNickname]);
			SendClientMessage(playerid,CINFO,mes);
			UpdatePlayerData(actplayerid,"fractionskin",skinid);
			pData[actplayerid][pFractionSkin] = skinid;
			new houseid = pData[actplayerid][pHouse]-1;
			if(!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[actplayerid][pMysqlID])) SetPlayerSkin(actplayerid,skinid);
			else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,skinid);
			else
			{
				if(GetPlayerSkin(actplayerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(actplayerid,skinid);
				gHouses[houseid][houseSkin][3] = skinid;
				UpdateHouseDress(houseid);
				SendClientMessage(actplayerid,CINFO,"Фракционный скин был доставлен в ваш шкаф");
			}
		}
		case dExamType:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 1:
				{
					if(pData[playerid][pLicenses] & LIC_DRIVING) return SendClientMessage(playerid,CGRAY,"У вас уже есть права");
					if(GetPlayerMoneyEx(playerid) < 250) return SendClientMessage(playerid,CGRAY,"Не хватает денег.");
					ShowPlayerDialog(playerid,dAutoExam1,0,"Автошкола","{"#cINFO"}\t\t\t\t\t\tШкола вождения\n\n{"#cWHITE"}Добро пожаловать в автошколу. Чтобы сдать на права Вам нужно выполнить следующие действия\n1. Прочитайте и запомните ПДД\n2. Сдайте тест на знание ПДД\n3. Сдайте практический экзамен иструктору","Далее","Выход");
				}
				case 2:
				{
					if(pData[playerid][pLicenses] & LIC_FLY) return SendClientMessage(playerid,CGRAY,"У вас уже есть лицензия пилота");
					if(GetPlayerMoneyEx(playerid) < 500) return SendClientMessage(playerid,CGRAY,"Не хватает денег.");
					ShowPlayerDialog(playerid,dAirExam1,0,"Летная школа","{"#cINFO"}\t\t\t\t\t\tЛетная школа\n\n{"#cWHITE"}Добро пожаловать в летную школу. Чтобы получить лицензию пилота вам необходимо:\n1. Прочитайте и запомните ПВП\n2. Сдайте тест на знание ПВП\n3. Заплатите $3000 за проведение экзамена\n4. Сдайте практический экзамен иструктору","Далее","Выход");
				}
				case 3:
				{
					if(pData[playerid][pLicenses] & LIC_BOAT) return SendClientMessage(playerid,CGRAY,"У вас уже есть эта лицензия");
                    if(GetPlayerMoneyEx(playerid) < 3000) return SendClientMessage(playerid,CGRAY,"Не хватает денег.");
					if(gDSTurn[19] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"К сожалению все места в очереди заняты");
					for(new i=19;i>=0;i--)
					{
						if(gDSTurn[i] == playerid) return SendClientMessage(playerid,CGRAY,"Вы уже стоите в очереди");
						if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
						gDSTurn[i+1] = playerid;
						break;
					}
					pTemp[playerid][pExamType] = 2;
					pTemp[playerid][pWaitingExam] = true;
					SendClientMessage(playerid,CGREEN,"Ждите, Вас Вызовут для прохождения экзамена.");
					SendClientMessage(playerid,CGREEN,"Не Выходите из автошколы");
				}
			}

		}
		case dAutoExam1:
		{
			if(!response) return 1;
			new mes[1560];
			strcat(mes,"Общие положения:\n");
			strcat(mes,"1.Разрешенная скорость передвижения для т/с, по городу - 60 км/ч, за городом - 110 км/ч, на автомагистралях - 150 км/ч.\n");
			strcat(mes,"2.При необходимости, водитель обязан пропустить т/с со спец.сигналом (Полиция,Служба спасения,Скорая помощь) , а именно: постепенно снижая скорость, прижаться к обочине.\n");
			strcat(mes,"3.Перекрестки в штате являются нерегулируемыми. Разрешается проезд на запрещающие сигналы светофора.\n");
			strcat(mes,"4.По требованию работника правоoхранительных органов, водитель обязан остановиться и выполнить все перечисленные требования сотрудника правоохранительных органов.\n");
			strcat(mes,"5.В случае возникновения ДТП(Дорожно-транспортного происшествия) водитель обязан: \n");
			strcat(mes,"  а) оставаться на месте ДТП;\n");
			strcat(mes,"  б) Вызвать сотрудников правоохоранительных органов;\n");
			strcat(mes,"  в) Вызвать сотрудников скорой помощи, если того требует ситуация.\n");
			strcat(mes,"6.Водитель обязан пропускать пешеходов, в специальных местах для перехода (перекрестки, специальная разметка).\n");
			strcat(mes,"7.Водитель обязан осуществлять парковку транспортного средства только на стоянках, либо на обочине, заезжая при этом только 2-мя колесами.\n");
			strcat(mes,"Запрещается:\n");
			strcat(mes,"1. Выезд на полосу встречного движения при очевидной угрозе лобового столкновения.\n");
			strcat(mes,"2. Экстренное торможение без везкой причины, в случае возникновения поломки т/с, по мере возможности Вам следует:\n");
			strcat(mes," а) прижаться к обочине;\n");
			strcat(mes," б) включить сигнал, оповещающий об аварийной ситуации.\n");
			strcat(mes,"3.Обгон впереди движущегося т/с с правой стороны,обгон разрешен лишь в случае поворота впереди движущегося т/с.\n");
			strcat(mes,"4.Нарушение установленного скоростного лимита.\n");
			strcat(mes,"5.Управление транспортным средством в нетрезвом виде.");
			strcat(mes,"6. Разворот в туннелях строго запрещен.");
			strcat(mes,"7. Движение транспортного средства задним ходом разрешается при условии, что этот маневр будет безопасен и не создаст помех другим участникам движения.\n");
			strcat(mes,"При необходимости водитель должен прибегнуть к помощи других лиц.");
			strcat(mes,"8. На автомагистралях запрещается: движение задним ходом и учебная езда.");
			ShowPlayerDialog(playerid,dAutoExam2,0,"Школа вождения",mes,"Далее","Отмена");
		}
		case dAutoExam2:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAutoExam3,0,"Школа вождения","{"#cWHITE"}Сейчас Вам будет предложено пройти тест.\nЧтобы получить доступ к практическому экзамену\nВам нужно правильно ответить на все 5 вопросов","Далее","Отмена");
		}
		case dAutoExam3:
		{
			if(!response) return 1;
			ShowTestQuestion(playerid,0,5,dAutoTest1);
		}
		case dAutoTest1:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,0,2,dAutoTest1,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,5,10,dAutoTest2);
		}
		case dAutoTest2:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,2,4,dAutoTest2,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,10,15,dAutoTest3);
		}
		case dAutoTest3:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,4,6,dAutoTest3,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,15,20,dAutoTest4);
		}
		case dAutoTest4:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,6,8,dAutoTest4,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,20,25,dAutoTest5);
		}
		case dAutoTest5:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,8,12,dAutoTest5,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			if(gDSTurn[19] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"К сожалению все места в очереди заняты");
			for(new i=19;i>=0;i--)
			{
				if(gDSTurn[i] == playerid) return SendClientMessage(playerid,CGRAY,"Вы уже стоите в очереди");
				if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
				gDSTurn[i+1] = playerid;
				break;
			}
			pTemp[playerid][pExamType] = 0;
			pTemp[playerid][pWaitingExam] = true;
			SendClientMessage(playerid,CGREEN,"Поздравляем, Вы сдали тест. Ждите, Вас Вызовут для прохождения экзамена.");
			SendClientMessage(playerid,CGREEN,"Не Выходите из автошколы");
		}
		case dAirExam1:
		{
			if(!response) return 1;
			new mes[1000];
			strcat(mes,"Правила визуального полета:\n");
			strcat(mes,"1. Управлять воздушным транспортом разрешается лицам, достигшим 18 лет и имеющим лицензию на управление указанным транспортом.\n");
			strcat(mes,"2. Управление воздушным транспортом в состоянии наркотического или алкогольного опьянения строго запрещается.\n");
			strcat(mes,"3. Во время управления воздушным транспортным средством запрещается разговаривать по телефону и отвлекаться от управления.\n");
			strcat(mes,"4. При сближении с воздушным судном, двигающимся вам навстречу, необходимо отклониться от текущего курса на 30 градусов вправо, после расхождения, вернуться на прежний курс\n");
			strcat(mes,"5. Ограничения скорости для воздушного транспорта отсутствуют. \n");
			strcat(mes,"6. Ограничения высоты полета для воздушного транспорта отсутствуют.\n");
			strcat(mes,"7. Полеты над базами ВВС и ВСН для гражданских воздушных судов категорически запрещены. При пролете над военными базам по вам может быть открыт огонь на поражение без предупреждения\n");
			strcat(mes,"8. Выполнение фигур высшего пилотажа разрешается только лицам, достигшим 21 года и имеющим стаж управления воздушными судами не менее 3-х лет.\n");
			strcat(mes,"9. Выполнение фигур высшего пилотажа разрешается только над незаселеной зоной.");
			strcat(mes,"10. Выполнение фигур высшего пилотажа с пассажирами на борту запрещается.\n");
			ShowPlayerDialog(playerid,dAirExam2,0,"Летная школа",mes,"Далее","Отмена");
		}
		case dAirExam2:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAirExam3,0,"Летная школа","{"#cWHITE"}Сейчас Вам будет предложено пройти тест.\nЧтобы получить доступ к практическому экзамену\nВам нужно правильно ответить на все 8 вопросов","Далее","Отмена");
		}
		case dAirExam3:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAirExam4,2,"Летная школа","Со скольки лет разрешено управлять воздушным траспортом?\n1. С 18\n2. С 20\n3. С 21\n4. С 16","Далее","Отмена");
		}
		case dAirExam4:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam4,2,"Летная школа","Со скольки лет разрешено управлять воздушным траспортом?\n1. С 18\n2. С 20\n3. С 21\n4. С 16","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam5,2,"Летная школа","Управление воздушным траспортом в состоянии наркотического или алкогольного опьянения\n1.Запрещается\n2.Разрешается\n3.Не рекомендуется","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam5:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam5,2,"Летная школа","Управление воздушным траспортом в состоянии наркотического или алкогольного опьянения\n1.Запрещается\n2.Разрешается\n3.Не рекомендуется","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam6,2,"Летная школа","Что из перечисленного запрещается во время управления воздушным транспортом?\n1.Оглядываться по сторонам\n2.Разговаривать по рации\n3.Разговаривать по телефону и отвлекаться от управления","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam6:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam6,2,"Летная школа","Что из перечисленного запрещается во время управления воздушным транспортом?\n1.Оглядываться по сторонам\n2.Разговаривать по рации\n3.Разговаривать по телефону и отвлекаться от управления","Далее","Отмена");
				case 3:ShowPlayerDialog(playerid,dAirExam7,2,"Летная школа","Что необходимо сделать при сближении с другим воздушным судном?\n1.Отклониться от курса на 20 градусов влево\n2.Отклониться от курса на 90 градусов вправо\n3.Отклониться от курса на 30 градусов вправо\n4.Изменить высоту\n5.Изменить скорость","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam7:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam7,2,"Летная школа","Что необходимо сделать при сближении с другим воздушным судном?\n1.Отклониться от курса на 20 градусов влево\n2.Отклониться от курса на 90 градусов вправо\n3.Отклониться от курса на 30 градусов вправо\n4.Изменить высоту\n5.Изменить скорость","Далее","Отмена");
				case 3:ShowPlayerDialog(playerid,dAirExam8,2,"Летная школа","Ограничение скорости для воздушного транспорта:\n1.60 км/ч\n2.120 км/ч\n3.180 км/ч\n4.220 км/ч\n5.Отсутствует","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam8:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam8,2,"Летная школа","Ограничение скорости для воздушного транспорта:\n1.60 км/ч\n2.120 км/ч\n3.180 км/ч\n4.220 км/ч\n5.Отсутствует","Далее","Отмена");
				case 5:ShowPlayerDialog(playerid,dAirExam9,2,"Летная школа","Ограничение высоты полёта воздушного транспорта:\n1.Отсутствует\n2. 100 м\n3. 200 м\n4. 500 м\n5. 1 км","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam9:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam9,2,"Летная школа","Ограничение высоты полёта воздушного транспорта:\n1.Отсутствует\n2. 100 м\n3. 200 м\n4. 500 м\n5. 1 км","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam10,2,"Летная школа","Полёты над военными базами для гражданских лиц:\n1.Запрещены\n2.Разрешены в дневное время\n3.Разрешены в ночное время\n4.Разрешены","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam10:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam10,2,"Летная школа","Полёты над военными базами для гражданских лиц:\n1.Запрещены\n2.Разрешены в дневное время\n3.Разрешены в ночное время\n4.Разрешены","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam11,2,"Летная школа","Выполнение фигур высшего пилотажа:\n1.Разрешено с 20 лет\n2.Разрешено с 21 года\n3.Разрешено с 25 лет\n4.Запрещено","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam11:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam11,2,"Летная школа","Выполнение фигур высшего пилотажа:\n1.Разрешено с 20 лет\n2.Разрешено с 21 года\n3.Разрешено с 25 лет\n4.Запрещено","Далее","Отмена");
				case 2:
				{

					if(gDSTurn[19] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"К сожалению все места в очереди заняты");
					for(new i=19;i>=0;i--)
					{
						if(gDSTurn[i] == playerid) return SendClientMessage(playerid,CGRAY,"Вы уже стоите в очереди");
						if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
						gDSTurn[i+1] = playerid;
						break;
					}
					pTemp[playerid][pWaitingExam] = true;
					pTemp[playerid][pExamType] = 1;
					SendClientMessage(playerid,CGREEN,"Поздравляем, Вы сдали тест. Ждите, Вас Вызовут для прохождения экзамена.");
					SendClientMessage(playerid,CGREEN,"Не Выходите из автошколы");
				}
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dExamResult:
		{
			new actplayerid = pTemp[playerid][pExamCandidate];
			if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pOnExam]) return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
			if(listitem == 1)
			{
				if(pTemp[actplayerid][pExamType] == 0) pData[actplayerid][pLicenses] |= LIC_DRIVING,TransferMoney(actplayerid,-1,250,"instrexamsdal");
				if(pTemp[actplayerid][pExamType] == 1) pData[actplayerid][pLicenses] |= LIC_FLY,TransferMoney(actplayerid,-1,500,"instrexamsdal");
				if(pTemp[actplayerid][pExamType] == 2) pData[actplayerid][pLicenses] |= LIC_BOAT,TransferMoney(actplayerid,-1,3000,"instrexamsdal");
				new query[128];
				format(query,sizeof(query),"UPDATE `accounts` SET `licenses` = '%d' WHERE `id` = '%d'",pData[actplayerid][pLicenses],pData[actplayerid][pMysqlID]);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (лицензия)");
				SendClientMessage(actplayerid,CGREEN,"Поздравляем. Вы сдали экзамен.");
				SendClientMessage(playerid,CGREEN,"Экзамен завершен");
				TransferMoney(-1,playerid,250,"instrexam");
			}
			else
			{
				SendClientMessage(actplayerid,CBADINFO,"Вы провалили экзамен.");
				SendClientMessage(playerid,CGREEN,"Экзамен завершен");
			}
			pTemp[playerid][pOnExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			pTemp[actplayerid][pOnExam] = false;
		}
		case dHeal:
		{
			new price = GetPVarInt(playerid,"healprice");
			new doctorid = GetPVarInt(playerid,"doctorid");
			if(!response) return SendClientMessage(doctorid,CGRAY,"Пациент отказался от лечения");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			SetPlayerHealthEx(playerid,100.0);
			TransferMoney(playerid,doctorid,price,"heal");
			SendClientMessage(doctorid,CGREEN,"Пациент согласился на лечение");
		}
		case dReport:
		{
			if(!response) return 1;
			if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
			if(pTemp[playerid][pNotReport]) return SendClientMessage(playerid,CGRAY,"Нельзя писать сообщение чаще чем 1 раз в минуту");
			pTemp[playerid][pNotReport] = 1;
			new mes[128];
			format(mes,sizeof(mes),"Жалоба от %s[%d]: %s",pData[playerid][pNickname],playerid,inputtext);
			SendClientMessage(playerid,CYELLOW,mes);
			AdminChat(CYELLOW,mes);
		}
		case dKiosk:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					SetPlayerHealthEx(playerid,100.0);
				}
				case 1:
				{
					pData[playerid][pHunger] = 100;
				}
			}
		}
		case dATM:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new mes[128];
					format(mes,sizeof(mes),"{"#cWHITE"}У Вас на счету: {"#cGREEN"}$%d",pData[playerid][pBank]);
					ShowPlayerDialog(playerid,dATMWatch,0,"Банкомат",mes,"OK","");
				}
				case 1:
				{
					ShowPlayerDialog(playerid,dATMGet,1,"Банкомат","{"#cWHITE"}Укажите сумму которую хотите снять:","Снять","Выход");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,dATMPut,1,"Банкомат","{"#cWHITE"}Укажите сумму которую хотите положить на счет:","Положить","Выход");
				}
			}
		}
		case dATMWatch:
		{
			ShowPlayerDialog(playerid,dATM,2,"Банкомат","Проверить счет\nСнять деньги со счета\nПоложить деньги на счет","OK","Отмена");
		}
		case dATMGet:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 1 || amount > 100000) return SendClientMessage(playerid,CGRAY,"Можно снимать от $1 до $100000");
			if(pData[playerid][pBank] < amount) return SendClientMessage(playerid,CGRAY,"У Вас недостаточено денег на счету");
			pData[playerid][pBank] -= amount;
			UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
			TransferMoney(-1,playerid,amount,"atmget");
			SendClientMessage(playerid,CGREEN,"Вы сняли деньги со счета");
		}
		case dATMPut:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 1 || amount > 100000) return SendClientMessage(playerid,CGRAY,"Можно ложить от $1 до $100000");
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CGRAY,"У Вас недостаточено денег на руках");
			pData[playerid][pBank] += amount;
			UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
			TransferMoney(playerid,-1,amount,"atmput");
			SendClientMessage(playerid,CGREEN,"Вы положили деньги на счет в банке");
		}
		case dShop:
		{
			if(!response) return 1;
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(pData[playerid][pPhone]) return SendClientMessage(playerid,CGRAY,"У Вас уже есть телефон");
					new price = gShopProduct[0]*gBusiness[id][busiPrice];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
					if(gShopProduct[0] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CGRAY,"В этом магазине не осталось товара");
					new number,count;
					do
					{
						mysql_free_result();
						count++;
						if(count >= 20) return SendClientMessage(playerid,CGRAY,"Произошла ошибка, попробуйте еще раз");
						number = RandomEx(100000,999999);
						new query[128];
						format(query,sizeof(query),"SELECT `id` FROM `accounts` WHERE `phone` = '%d'",number);
						mysql_query(query);
						mysql_store_result();
					}
					while(mysql_num_rows() > 0);
					mysql_free_result();
					pData[playerid][pPhone] = number;
					UpdatePlayerData(playerid,"phone",number);
					gBusiness[id][busiProduct] -= gShopProduct[0];
					TransferMoney(playerid,-1,price,"buyphone");
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					UpdateBusinessText(id);
					new mes[128];
					format(mes,sizeof(mes),"Поздравляем Вы купили телефон. Ваш номер: %d",number);
					SendClientMessage(playerid,CGREEN,mes);
					SendClientMessage(playerid,CGREEN,"Все звонки и смс временно бесплатны");
				}
				case 1:
				{
					if(pTemp[playerid][pHealing]) return SendClientMessage(playerid,CGRAY,"У Вас уже есть аптечка");
					new price = gShopProduct[1]*gBusiness[id][busiPrice];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
					if(gShopProduct[1] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CGRAY,"В этом магазине не осталось товара");
					gBusiness[id][busiProduct] -= gShopProduct[1];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"aptechka");
					pTemp[playerid][pHealing] = true;
					SendClientMessage(playerid,CGREEN,"Вы купили аптечку. /healme - Вылечиться");
				}
				case 2:
				{
					if(pData[playerid][pWatch]) return SendClientMessage(playerid,CGRAY,"У Вас уже есть часы");
					new price = gShopProduct[2]*gBusiness[id][busiPrice];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
					if(gShopProduct[2] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CGRAY,"В этом магазине не осталось товара");
					gBusiness[id][busiProduct] -= gShopProduct[2];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"buywatch");
					pData[playerid][pWatch] = 1;
					UpdatePlayerData(playerid,"watch",1);
					SendClientMessage(playerid,CGREEN,"Вы купили часы. /time - Посмотреть время");
				}
				case 3:
				{
				    new price = gShopProduct[3]*gBusiness[id][busiPrice];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
					if(gShopProduct[3] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CGRAY,"В этом магазине не осталось товара");
					gBusiness[id][busiProduct] -= gShopProduct[3];
					TransferMoney(playerid,-1,price,"buyphoto");
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					UpdateBusinessText(id);
					SendClientMessage(playerid,CGREEN,"Поздравляем Вы купили фотоаппарат.");
					GivePlayerWeaponEx(playerid,43,50);
				}
			}
		}
		case dBuyFood:
		{
			if(!response) { ShowPlayerEateryTD(playerid, pTemp[playerid][pSelectedBusinessID]); return 1; }
			new sel = GetPVarInt(playerid, "eatery_sel");
			new id = pTemp[playerid][pSelectedBusinessID];
			new price = gEateryCosts[sel] * (25 * gBusiness[id][busiPrice]);
			if(id < 0) return 1;
			new money = GetPlayerMoneyEx(playerid);
			if(!money) return SendClientMessage(playerid,CGRAY,"К сожалению, у Вас нет денег даже на еду");
			if(money < price)
			{
				new amount = money / gBusiness[id][busiPrice];
				SetPVarInt(playerid,"eatprice",money);
				SPFD(playerid,dBuyFood,0,"Заксочная","Да","Нет","{"#cWHITE"}У Вас хватает денег только для того,\n чтобы наполнить свой желудок на %d процентов.\nВы согласны потратить все деньги на еду?",pData[playerid][pHunger] + amount);
				return 1;
			}
			new amount = 25 * gEateryCosts[sel];
			if(amount > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CGRAY,"К сожалению, всю еду в этой закусочной уже съели");
			gBusiness[id][busiProduct] -= amount;
			TransferMoney(playerid,-1,price,"buyfood");
			gBusiness[id][busiBank] += price;
			pTemp[playerid][pEat] = sel + 4;
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
			UpdateBusinessText(id);
			SendClientMessage(playerid, -1, "Введите {"#cORANGE"}/eat{"#cWHITE"}, чтобы съесть купленное.");
			SendClientMessage(playerid, -1, "Чтобы положить поднос, введите {"#cORANGE"}/put{"#cWHITE"}.");
			if(sel == 3) SetPlayerAttachedObject(playerid,0,1546,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
			else SetPlayerSpecialAction(playerid, 25), SetPlayerAttachedObject(playerid,0,gEateryObj[sel],3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
		}
		case dGrocer:
		{
			if(!response) return 1;
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			new products = strval(inputtext);
			if(products < 1 || products > 200) return SendClientMessage(playerid,CGRAY,"Вы можете купить не менее 1 и не более 200 продуктов за раз");
			SetPVarInt(playerid,"grocerproducts",products);
			new price = products * gBusiness[id][busiPrice];
			new mes[128];
			format(mes,sizeof(mes),"{"#cWHITE"}Вы хотите купить %d продуктов за {"#cRED"}$%d",products,price);
			ShowPlayerDialog(playerid,dGrocer2,0,"Продуктвоый магазин",mes,"Да","Нет");
		}
		case dGrocer2:
		{
			if(!response) return ShowPlayerDialog(playerid,dGrocer,1,"Магазин продуктов","{"#cWHITE"}Здесь Вы можете купить продукты которые будут храниться в вашем холодильнике\nУкажите количество продуктов которое Вы хотите купить:","ОК","Отмена");
			new products = GetPVarInt(playerid,"grocerproducts");
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			new price = products * gBusiness[id][busiPrice];
			new houseid = pData[playerid][pHouse]-1;
			if(houseid < 0) return 1;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег");
			if(gBusiness[id][busiProduct] < products) return SendClientMessage(playerid,CGRAY,"В магазине недостаточно продуктов");
			if(gHouses[houseid][houseProducts] + products > 400) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно места в холодильнике");
			gBusiness[id][busiProduct] -= products;
			gBusiness[id][busiBank] += price;
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
			UpdateBusinessText(id);
			pTemp[playerid][pCarryProducts] = products;
			TransferMoney(playerid,-1,price,"buyhomeproducts");
			SendClientMessage(playerid,CGREEN,"Вы купили продукты. Теперь отнесите их домой и положите в холодильник.");
		}
		case dGangLeader:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			switch(listitem)
			{
				case 0:
				{
					new mes[1000];
					strcat(mes,"{"#cWHITE"}");
					for(new i;i<MAX_PLAYERS;i++)
					{
						if(!IsPlayerConnected(i)) continue;
						if(pData[i][pFraction] != fractionid+1) continue;
						new rankid = pData[i][pRank] - 1;
						if(pData[i][pPhone]) format(mes,sizeof(mes),"%s%s [%d] (%s) Тел: %d\n",mes,pData[i][pNickname],i,gFractionRankName[fractionid][rankid],pData[i][pPhone]);
						else format(mes,sizeof(mes),"%s%s [%d] (%s)\n",mes,pData[i][pNickname],i,gFractionRankName[fractionid][rankid]);
					}
					ShowPlayerDialog(playerid,dMes,0,"Члены банды онлайн",mes,"OK","");
				}
				case 1:
				{
					new mes[256];
					for(new i;i<10;i++)
					{
						format(mes,sizeof(mes),"%s%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
					}
					ShowPlayerDialog(playerid,dGangRank,2,"Выберите ранг",mes,"Изменить","Отмена");
				}
				case 2:
				{
				}
				case 3:
				{
					new rankid1 = gGangAccess[fractionid-2][0]-1;
					new rankid2 = gGangAccess[fractionid-2][1]-1;
					new rankid3 = gGangAccess[fractionid-2][2]-1;
					new rankid4 = gGangAccess[fractionid-2][3]-1;
					new mes[512];
					format(mes,sizeof(mes),"1. Доступ к общаку [{"#cGREEN"}%s{"#cWHITE"}]\n2. Принимать во фракцию [{"#cGREEN"}%s{"#cWHITE"}]\n3. Увольнять из фракции [{"#cGREEN"}%s{"#cWHITE"}]\n4. Изменять ранг игроков [{"#cGREEN"}%s{"#cWHITE"}]",gFractionRankName[fractionid][rankid1],gFractionRankName[fractionid][rankid2],gFractionRankName[fractionid][rankid3],gFractionRankName[fractionid][rankid4]);
					ShowPlayerDialog(playerid,dCredentials,2,"Выберите возможность.",mes,"Изменить","Отмена");
				}
				case 4:
				{
					ShowPlayerDialog(playerid,dGangCode,1,"Сейф банды","{"#cWHITE"}Введите новый код от сейфа с деньгами:","OK","Отмена");
				}
			}
		}
		case dGobGun:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 0) return SendClientMessage(playerid,CGRAY,"Неверное количество");
			SetPVarInt(playerid,"getgobgun",amount);
			ShowPlayerDialog(playerid,dGobAmmo,1,"Общак","Укажите, сколько хотите взять патронов:","Взять","Отмена");
		}
		case dGobAmmo:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 0) return SendClientMessage(playerid,CGRAY,"Неверное количество");
			new mes[56];
			format(mes,sizeof(mes),"/takegun %d %d",GetPVarInt(playerid,"getgobgun"),amount);
			OnPlayerCommandText(playerid,mes);
		}
		case dMobGun:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 0) return SendClientMessage(playerid,CGRAY,"Неверное количество");
			new mafid = pData[playerid][pFraction] - 15;
			if(gMafWarehouse[mafid] < amount) return SendClientMessage(playerid,CGRAY,"В общаке не достаточно ед. оружия");
			if(pData[playerid][pGunAmount] + amount > 500 && amount > 0) return SendClientMessage(playerid,CGRAY,"Вы можете носить с собой не больше 500 ед. оружия и 500 патронов");
			gMafWarehouse[mafid] -= amount;
			pData[playerid][pGunAmount] += amount;
			pData[playerid][pAmmo] += 150;
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || pData[i][pFraction] != pData[playerid][pFraction]) continue;
				new mes[128];
				format(mes,sizeof(mes),"%s {"#cGREEN"}взял с общака {"#cWHITE"}%d {"#cGREEN"}ед оружия, {"#cWHITE"}150 {"#cGREEN"}патронов",pData[playerid][pNickname],amount);
				SendClientMessage(i,CWHITE,mes);
			}
			MeAction(playerid,"взял материалы из общака");
		}
		case dGangCode:
		{
			if(!response) return 1;
			if(strlen(inputtext) != 6)
			{
				SendClientMessage(playerid,CGRAY,"Код должен содержать 6 цифр");
				ShowPlayerDialog(playerid,dGangCode,1,"Сейф банды","{"#cWHITE"}Введите новый код от сейфа с деньгами:","OK","Отмена");
			}
			new gangid = pData[playerid][pFraction] - 3;
			new code = strval(inputtext);
			new query[128];
			format(query,sizeof(query),"UPDATE `gangs` SET `code` = '%d' WHERE `id` = '%d'",code,gangid);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошл ошибка MySQL");
			SendClientMessage(playerid,CGREEN,"Код от сейфа сменен");
		}
		case dGangRank:
		{

			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			SetPVarInt(playerid,"selectedrank",listitem+1);
			SPFD(playerid,dGangRank2,1,"Название ранга","Сменить","Отмена","{"#cWHITE"}Введите новое название ранга '%s [%d]'",gFractionRankName[fractionid][listitem],listitem+1);
		}
		case dGangRank2:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			new rankid = GetPVarInt(playerid,"selectedrank") - 1;
			if(rankid < 0) return 1;
			if(strlen(inputtext) < 1 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid,CGRAY,"Название ранга должно содержать от 1 до 20 символов");
				SPFD(playerid,dGangRank2,1,"Название ранга","Сменить","Отмена","{"#cWHITE"}Введите новое название ранга '%s [%d]'",gFractionRankName[fractionid][rankid],rankid+1);
			}
			if(strfind(inputtext,"|") != -1) return SendClientMessage(playerid,CGRAY,"Найдены запрещенные символы");
			format(gFractionRankName[fractionid][rankid],24,"%s",inputtext);
			new query[280],data[220];
			for(new i;i<10;i++)
			{
				if(!i) format(data,sizeof(data),"%s",gFractionRankName[fractionid][i]);
				else format(data,sizeof(data),"%s,%s",data,gFractionRankName[fractionid][i]);
			}
			format(query,sizeof(query),"UPDATE `gangs` SET `ranks` = '%s' WHERE `id` = '%d'",data,fractionid-1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка MySQL (смена названий рангов)");
			SendClientMessage(playerid,CGREEN,"Вы сменили название ранга");
			new mes[256];
			for(new i;i<10;i++)
			{
				format(mes,sizeof(mes),"%s%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
			}
			ShowPlayerDialog(playerid,dGangRank,2,"Выберите ранг",mes,"Изменить","Отмена");
		}
		case dCredentials:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			SetPVarInt(playerid,"credentialid",listitem);
			new mes[512];
			for(new i;i<10;i++)
			{
				if(i+1 < gGangAccess[fractionid-2][listitem]) format(mes,sizeof(mes),"%s%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
				else format(mes,sizeof(mes),"%s{"#cGREEN"}%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
			}
			ShowPlayerDialog(playerid,dCredentials2,2,"Выберите минимальный ранг",mes,"Изменить","Отмена");
		}
		case dCredentials2:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			new credentialid = GetPVarInt(playerid,"credentialid");
			new field[24];
			switch(credentialid)
			{
				case 0: field = "dorma";
				case 1: field = "invite";
				case 2: field = "uninvite";
				case 3: field = "giverank";
			}
			new rankid = listitem;
			new query[128];
			format(query,sizeof(query),"UPDATE `gangs` SET `%s` = '%d' WHERE `id` = '%d'",field,rankid+1,fractionid-1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CGRAY,"Произошла ошибка MySQL (смена полномочий)");
			gGangAccess[fractionid-2][credentialid] = rankid + 1;
			SendClientMessage(playerid,CGREEN,"Полномочия изменены");
			new rankid1 = gGangAccess[fractionid-2][0]-1;
			new rankid2 = gGangAccess[fractionid-2][1]-1;
			new rankid3 = gGangAccess[fractionid-2][2]-1;
			new rankid4 = gGangAccess[fractionid-2][3]-1;
			new mes[512];
			format(mes,sizeof(mes),"1. Доступ к общаку [{"#cGREEN"}%s{"#cWHITE"}]\n2. Принимать во фракцию [{"#cGREEN"}%s{"#cWHITE"}]\n3. Увольнять из фракции [{"#cGREEN"}%s{"#cWHITE"}]\n4. Изменять ранг игроков [{"#cGREEN"}%s{"#cWHITE"}]",gFractionRankName[fractionid][rankid1],gFractionRankName[fractionid][rankid2],gFractionRankName[fractionid][rankid3],gFractionRankName[fractionid][rankid4]);
			ShowPlayerDialog(playerid,dCredentials,2,"Выберите возможность.",mes,"Изменить","Отмена");
		}
		case dMakeGun:
		{
			if(!response) return 1;
			SetPVarInt(playerid,"makegunid",listitem);
			new needgun = gGunAmount[listitem];
			new bool:noneedgun;
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++)
			{
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == gGunID[listitem]) {noneedgun = true; SetPVarInt(playerid,"noneedgun",1); break;}
			}
			if(pData[playerid][pGunAmount] < needgun && !noneedgun)
			{
				SFCM(playerid,CGRAY,"Вам нужно %d ед. оружия для сборки этого оружия",needgun);
				ShowMakeGunList(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dMakeGun2,1,"Сборка оружия","{"#cWHITE"}Сколько патронов вы хотите использовать для этого оружия?","Собрать","Отмена");
		}
		case dMakeGun2:
		{
			if(!response) return 1;
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			new ammo = strval(inputtext);
			if(ammo < 1 || ammo > 500)
			{
				SendClientMessage(playerid,CGRAY,"Неверное к-во патронов");
				ShowMakeGunList(playerid);
				return 1;
			}
			new gunid = GetPVarInt(playerid,"makegunid");
			new needgun = gGunAmount[gunid];
			new weaponid = gGunID[gunid];
			if(pData[playerid][pAmmo] < ammo) return SendClientMessage(playerid,CGRAY,"У вас недостаточно патронов");
			if(!GetPVarInt(playerid,"noneedgun")) pData[playerid][pGunAmount] -= needgun;
			SetPVarInt(playerid,"noneedgun",0);
			pData[playerid][pAmmo] -= ammo;
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `gunamount` = '%d', `ammo` = '%d' WHERE `id` = '%d'",pData[playerid][pGunAmount],pData[playerid][pAmmo],pData[playerid][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка mysql");
			GivePlayerWeaponEx(playerid,weaponid,ammo);
			MeAction(playerid,"собрал оружие");
		}
		case dBuyGangCar:
		{
			if(!response) return 1;
			new model = gGangCarModelID[listitem];
			new modelid = model - 400;
			new price = gTransport[modelid][trPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			new fractionid = pData[playerid][pFraction] - 1;
			new gangid = fractionid - 2;
			new slot = -1;
			for(new i;i<5;i++)
			{
				if(!gGangCars[gangid][i] || gGangCars[gangid][i] == 481) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid,CGRAY,"У вас нет свободных слотов под авто");
			gGangCars[gangid][slot] = model;
			new data[64],query[128];
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gGangCars[gangid][i]);
				else format(data,sizeof(data),"%s|%d",data,gGangCars[gangid][i]);
			}
			format(query,sizeof(query),"UPDATE `gangs` SET `cars` = '%s' WHERE `id` = '%d'",data,gangid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка Mysql (Покупа трансорта для банды)");
			TransferMoney(playerid,-1,price,"buygangauto");
			SendClientMessage(playerid,CGREEN,"Авто для банды куплено. Используйте /grespawn");
		}
		case dSellGangCar:
		{
			if(!response) return 1;
			new idx;
			new slot = strval(strtok(inputtext,idx)) - 1;
			if(slot < 0 || slot > 4) return SendClientMessage(playerid,CGRAY,"Внутренняя ошибка");
			if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Внутренняя ошибка 2");
			new gangid = pData[playerid][pFraction] - 3;
			if(!gGangCars[gangid][slot] || gGangCars[gangid][slot] == 481) return SendClientMessage(playerid,CGRAY,"В этом слоте нет автомобиля, который можно продать");
			SetPVarInt(playerid,"gangsellcarslot",slot);
			new mes[128],modelid = gGangCars[gangid][slot] - 400;
			new price = floatround(gTransport[modelid][trPrice]*0.2);
			SetPVarInt(playerid,"gangsellcarprice",price);
			format(mes,sizeof(mes),"{"#cWHITE"}Вы действительно хотите продать %s за {"#cGREEN"}$%d?",gTransport[modelid][trName],price);
			ShowPlayerDialog(playerid,dSellGangCar2,0,"Продажа автомобиля банды",mes,"Да","Нет");
		}
		case dSellGangCar2:
		{
			if(!response) return 1;
			new slot = GetPVarInt(playerid,"gangsellcarslot");
			new price = GetPVarInt(playerid,"gangsellcarprice");
			if(slot < 0 || slot > 4) return SendClientMessage(playerid,CGRAY,"Внутренняя ошибка");
			if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Внутренняя ошибка 2");
			new gangid = pData[playerid][pFraction] - 3;
			if(!gGangCars[gangid][slot] || gGangCars[gangid][slot] == 481) return SendClientMessage(playerid,CGRAY,"В этом слоте нет автомобиля, который можно продать");
			gGangCars[gangid][slot] = 481;
			new data[64],query[128];
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gGangCars[gangid][i]);
				else format(data,sizeof(data),"%s|%d",data,gGangCars[gangid][i]);
			}
			format(query,sizeof(query),"UPDATE `gangs` SET `cars` = '%s' WHERE `id` = '%d'",data,gangid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка Mysql (Продажа трансорта банды)");
			TransferMoney(-1,playerid,price,"sellgangauto");
			SendClientMessage(playerid,CGREEN,"Автомобиль продан. Используйте /grespawn");
		}
		case dBank:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new mes[128];
					format(mes,sizeof(mes),"{"#cWHITE"}У Вас на счету: {"#cGREEN"}$%d",pData[playerid][pBank]);
					ShowPlayerDialog(playerid,dATMWatch,0,"Банкомат",mes,"OK","");
				}
				case 1:
				{
					ShowPlayerDialog(playerid,dATMGet,1,"Банкомат","{"#cWHITE"}Укажите сумму которую хотите снять:","Снять","Выход");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,dATMPut,1,"Банкомат","{"#cWHITE"}Укажите сумму которую хотите положить на счет:","Снять","Выход");
				}
			}
		}
		case dSubleader:
		{
			if(!response) return 1;
			if(!listitem) return 1;
			new id = GetPVarInt(playerid,"actsubleader");
			if(!IsPlayerConnected(id) || !pData[id][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Неверный ID / игрок не зарегестрирован");
			new subid = listitem - 1;
			new fractionid = pData[playerid][pFraction] - 1;
			new frid = GetSubfractionID(fractionid);
			new skinid = gFractionSkin[fractionid][0];
			pData[id][pFraction] = fractionid + 1;
			pData[id][pRank] = pData[playerid][pRank] - 1;
			pData[id][pSubfraction] = subid + 1;
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '%d', `rank` = '%d', `fractionskin` = '%d', `subfraction` = '%d' WHERE `id` = '%d'",pData[id][pFraction],pData[id][pRank],skinid,pData[id][pSubfraction],pData[id][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL 1 (принятие во подфракцию)");
			new mes[128];
			format(mes,sizeof(mes),"%s назначил вас лидером подфракции %s: \"%s\"",pData[playerid][pNickname],gFractionName[fractionid],gSubfractionName[frid][subid]);
			SendClientMessage(id,CINFO,mes);
			format(mes,sizeof(mes),"Вы назначили %s управлять подфракцией: \"%s\"",pData[id][pNickname],gSubfractionName[frid][subid]);
			SendClientMessage(playerid,CINFO,mes);
			new houseid = pData[id][pHouse]-1;
			if(houseid == -1) SetPlayerSkin(id,skinid);
			else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(id,skinid);
			else
			{
				if(GetPlayerSkin(id) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(id,skinid);
				gHouses[houseid][houseSkin][3] = skinid;
				UpdateHouseDress(houseid);
				SendClientMessage(id,CINFO,"Фракционный скин был доставлен в ваш шкаф");
			}

		}
		case dSubleaders:
		{
		    if(!response) return 1;
		    if(!listitem) return 1;
		    switch(listitem)
		    {
		        case 0:
		        {
        			new mes[128];
					for(new i;i<3;i++)
					{
						if(strlen(gSubfractionName[0][i]))
						{
							strcat(mes,"\n");
							strcat(mes,gSubfractionName[0][i]);
						}
					}
					ShowPlayerDialog(playerid,0000,2,"Подфракция",mes,"Ок","Отмена");
		        }
		        case 1:
		        {
       				new mes[128];
					for(new i;i<3;i++)
					{
						if(strlen(gSubfractionName[1][i]))
						{
							strcat(mes,"\n");
							strcat(mes,gSubfractionName[1][i]);
						}
					}
					ShowPlayerDialog(playerid,0000,2,"Подфракция",mes,"Ок","Отмена");
		        }
		        case 2:
		        {
        			new mes[128];
					for(new i;i<3;i++)
					{
						if(strlen(gSubfractionName[2][i]))
						{
							strcat(mes,"\n");
							strcat(mes,gSubfractionName[2][i]);
						}
					}
					ShowPlayerDialog(playerid,0000,2,"Подфракция",mes,"Ок","Отмена");
		        }
		    }
		}
		case dStopLoad:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			else
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return 1;
				if(gVehicleGun[vehicleid][vGunLoading] == false && gVehicleGun[vehicleid][vGunUnloading] == false) return 1;
				gVehicleGun[vehicleid][vGunLoading] = false;
				gVehicleGun[vehicleid][vGunUnloading] = false;
				if(IsValid3DTextLabel(gVehicleGun[vehicleid][vGunText])) DestroyDynamic3DTextLabelEx(gVehicleGun[vehicleid][vGunText]);
				DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
				DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
				gVehicleGun[vehicleid][vGunArea] = 0;
				gVehicleGun[vehicleid][vGunPickup] = 0;
				SendClientMessage(playerid,CGREEN,"Загрузка / разгрузка завершена");
			}
		}
		case dService:
		{
			if(!response) return 1;
			new job,jobname[24];
			switch(listitem)
			{
				case 0: {job = 3; jobname = "таксисты";}
				case 1: {job = 4; jobname = "механики";}
			}
			SFCM(playerid,CGREEN,"Ближайшие %s:",jobname);
			new mes[256];
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID] || pData[i][pJob] != job) continue;
				if(pData[i][pPhone]) format(mes,sizeof(mes),"%s тел. %d ( %.0fm )",pData[i][pNickname],pData[i][pPhone],GetPlayerDistanceToPlayer(playerid,i));
				else format(mes,sizeof(mes),"%s тел. Нет ( %.0fm )",pData[i][pNickname],GetPlayerDistanceToPlayer(playerid,i));
				SendClientMessage(playerid,CWHITE,mes);
			}
		}
		case dEmergencyCall:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dEmergencyPolice1,1,"Полиция","{"#cWHITE"}Здравствуйте. Опишите ситуацию:","ОК","Отмена");
				case 1:ShowPlayerDialog(playerid,dEmergencyMedic1,1,"Скороя помощь","{"#cWHITE"}Здравствуйте. Опишите ситуацию:","ОК","Отмена");
				case 2:
				{
					if(gEmCall[2] != INVALID_PLAYER_ID)
					{
						SendClientMessage(playerid,CGRAY,"Линия занята");
						return OnPlayerCommandText(playerid,"/c 911");
					}
					ShowPlayerDialog(playerid,dEmergencyMechanic1,1,"Буксир / механик","{"#cWHITE"}Здравствуйте. Опишите ситуацию:","ОК","Отмена");
				}
			}
		}
		case dEmergencyPolice1:
		{
			if(!response) return 1;
			new Float:x, Float:y, Float:z,pos[5];
			GetPlayerPos(playerid,x,y,z);
			if(x < 0) strcat(pos,"SF");
			else if(y > 100.0) strcat(pos,"LV");
			else strcat(pos,"LS");
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
				if(pData[i][pFraction] != 9) continue;
				new mes[128];
				format(mes,sizeof(mes),"[D] %s вызывает полицию (%s). Чтобы принять вызов введите {"#cWHITE"}/pc",pData[playerid][pNickname],pos);
				SendClientMessage(i,CDEPARTMENT,mes);
				format(mes,sizeof(mes),"[D] Причина: %s",inputtext);
				SendClientMessage(i,CDEPARTMENT,mes);
			}
			gEmCall[0] = playerid;
			ShowPlayerDialog(playerid,dMes,0,"Полиция","{"#cWHITE"}Вызов принят. Ждите","ОК","");
		}
		case dEmergencyMedic1:
		{
			if(!response) return 1;
			new Float:x, Float:y, Float:z,pos[5];
			GetPlayerPos(playerid,x,y,z);
			if(x < 0) strcat(pos,"SF");
			else if(y > 100.0) strcat(pos,"LV");
			else strcat(pos,"LS");
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
				if(pData[i][pFraction] != 2) continue;
				new mes[128];
				format(mes,sizeof(mes),"[D] %s вызывает скорую помощь (%s). Чтобы принять вызов введите {"#cWHITE"}/mc",pData[playerid][pNickname],pos);
				SendClientMessage(i,CDEPARTMENT,mes);
				format(mes,sizeof(mes),"[D] Причина: %s",inputtext);
				SendClientMessage(i,CDEPARTMENT,mes);

			}
			gEmCall[1] = playerid;
			ShowPlayerDialog(playerid,dMes,0,"Скорая помощь","{"#cWHITE"}Вызов принят. Ждите","ОК","");
		}
		case dEmergencyMechanic1:
		{
			if(!response) return 1;
			if(gEmCall[2] != INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid,CGRAY,"Линия занята");
				return OnPlayerCommandText(playerid,"/c 911");
			}
			new Float:x, Float:y, Float:z,pos[5];
			GetPlayerPos(playerid,x,y,z);
			if(x < 0) strcat(pos,"SF");
			else if(y > 100.0) strcat(pos,"LV");
			else strcat(pos,"LS");
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
				if(pData[i][pJob] != 4 || pTemp[i][pMechID] == INVALID_VEHICLE_ID) continue;
				new mes[128];
				format(mes,sizeof(mes),"[Диспечер] %s вызывает механика (%s). Чтобы принять вызов введите {"#cWHITE"}/rc",pData[playerid][pNickname],pos);
				SendClientMessage(i,CDEPARTMENT,mes);
				format(mes,sizeof(mes),"[Диспечер] Причина: %s",inputtext);
				SendClientMessage(i,CDEPARTMENT,mes);

			}
			gEmCall[2] = playerid;
			ShowPlayerDialog(playerid,dMes,0,"Буксир","{"#cWHITE"}Вызов принят. Ждите","ОК","");
		}
		case dMechRent:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid,CGREEN,"Вы арендовали буксир.");
			SendClientMessage(playerid,CYELLOW,"/tow {"#cWHITE"} - предложить водителю отбуксировать его т.с.");
			SendClientMessage(playerid,CYELLOW,"/unfill {"#cWHITE"} - предложить водителю слить все топливо");
			TransferMoney(playerid,-1,500,"mechrent");
			pTemp[playerid][pMechID] = vehicleid;
		}
		case dDFTRent:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(GetPlayerMoneyEx(playerid) < 500)
			{
				SendClientMessage(playerid,CGRAY,"Вам нужно $500 чтобы арендовать этот DFT");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid,CGREEN,"Вы арендовали DFT.");
			TransferMoney(playerid,-1,500,"dafrent");
			pTemp[playerid][pDFTID] = vehicleid;
		}
		case dTow:
		{
			if(!response) return 1;
			new trailer = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !trailer) return 1;
			new towcode = GetPVarInt(playerid,"towcode");
			new offer = GetPVarInt(playerid,"towoffer");
			new offee = GetPVarInt(playerid,"towoffee");
			if(offee != playerid) return SendClientMessage(playerid,CGRAY,"Ошибка");
			if(strlen(inputtext) != 5 || strval(inputtext) != towcode) return SendClientMessage(playerid,CGRAY,"Код введен неверно");
			if(GetPlayerDistanceToPlayer(playerid,offer) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(offer)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
			RemovePlayerFromVehicle(playerid);
			new vehicleid = pTemp[offer][pMechID];
			SetTimerEx("AttachTrailerToVehicleEx",3000,false,"ii",trailer,vehicleid);
			SetPVarInt(playerid,"towvid",vehicleid);
			SetPVarInt(playerid,"towactvid",trailer);
			SendClientMessage(playerid,CINFO,"Т.С. будет прицеплено через 3 секунды. Чтобы отцепить, используйте {"#cWHITE"}/untow");
		}
		case dUnfill:
		{
			if(!response) return 1;
			new trailer = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !trailer) return 1;
			new towcode = GetPVarInt(playerid,"towcode");
			new offer = GetPVarInt(playerid,"towoffer");
			new offee = GetPVarInt(playerid,"towoffee");
			if(offee != playerid) return SendClientMessage(playerid,CGRAY,"Ошибка");
			if(strlen(inputtext) != 5 || strval(inputtext) != towcode) return SendClientMessage(playerid,CGRAY,"Код введен неверно");
			if(GetPlayerDistanceToPlayer(playerid,offer) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(offer)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
			gVehicles[trailer - 1][vFuel] = 0.0;
			gVehicles[trailer - 1][vProbability] = 0;
			SendClientMessage(playerid,CINFO,"Топливо было слито с вашего бензобака");
			SendClientMessage(offer,CINFO,"Вы слили топливо с бензобака вашего клиента");
		}
		case dDissolution:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			new subfraction = GetSubfractionID(fractionid);
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(pData[i][pFraction] != fractionid + 1) continue;
				if(subfraction != -1 && (pData[playerid][pSubfraction] != pData[i][pSubfraction] || pData[i][pRank] >= pData[playerid][pRank])) continue;
				else if(pData[i][pRank] >= gFractionRankCount[fractionid]) continue;
				new command[56];
				format(command,56,"/uninvite %d",i);
				OnPlayerCommandText(playerid,command);
			}
			new query[400];
			if(subfraction <= 0) format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `fraction` = '%d' AND `rank` < '%d'",fractionid + 1,gFractionRankCount[fractionid]);
			else format(query,sizeof(query),"UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `fraction` = '%d' AND `rank` < '%d' AND `subfraction` = '%d'",fractionid + 1,gFractionRankCount[fractionid],subfraction);
			mysql_query(query);
			format(query,sizeof(query),"%d игроков, которые оффлайн, были уволены",mysql_affected_rows());
			SendClientMessage(playerid,CINFO,query);
		}
		case dBuyBusiness1:
		{
			if(!response) return 1;
			new businessid = pTemp[playerid][pSelectedBusinessID];
			if(businessid < 0) return 1;
			if(gBusiness[businessid][busiOwnerID]) return SendClientMessage(playerid, -1, ""#cGRAY"Ошибка: Этот бизнес уже кто-то купил.");
			new mes[128];
			format(mes,sizeof(mes),"{"#cWHITE"}Вы действительно хотите купить этот бизнес за {"#cRED"}$%d?",gBusiness[businessid][busiSellPrice]);
			ShowPlayerDialog(playerid,dBuyBusiness2,0,"Бизнес",mes,"Нет","Да");
		}
		case dBuyBusiness2:
		{
			if(response) return 1;
			new businessid = pTemp[playerid][pSelectedBusinessID];
			if(businessid < 0) return 1;
			if(gBusiness[businessid][busiOwnerID]) return SendClientMessage(playerid, -1, ""#cGRAY"Ошибка: Этот бизнес уже кто-то купил.");
			new price = gBusiness[businessid][busiSellPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег для покупки этого бизнеса");
			if(pData[playerid][pBusiness]) return SendClientMessage(playerid,CGRAY,"У вас уже есть бизнес");
			new query[128];
			format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '%d' WHERE `id` = '%d'",pData[playerid][pMysqlID],businessid+1);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Произошла ошибка MySQL (#99)");
			gBusiness[businessid][busiOwnerID] = pData[playerid][pMysqlID];
			SendClientMessage(playerid,CGREEN,"Поздравляем, Вы купили бизнес.");
			SendClientMessage(playerid,CWHITE,"/business {"#cINFO"}- панель управления бизнесом");
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
			UpdateBusinessText(businessid);
			UpdatePlayerData(playerid,"bussiness",businessid+1);
			pData[playerid][pBusiness] = businessid+1;
			TransferMoney(playerid,-1,price,"buybusiness");
		}
		case dBusiness:
		{
			if(!response) return 1;
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,dBusinessBank,2,"Бизнес","1. Посмотреть сумму в кассе\n2. Положить денги в кассу\n3. Снять деньги с кассы","Далее","Назад");
				case 1: ShowPlayerDialog(playerid,dBusinessOrder1,1,"Бизнес","{"#cWHITE"}Введите к-во товара, которое хотите заказать:\n{"#cGRAY"}(1ед. = {"#cRED"}$1{"#cGRAY"})","Заказать","Отмена");
				case 2: ShowBusinessInformation(playerid,id,dBusinessStat);
				case 3:
				{
					ShowPlayerDialog(playerid,dBusinessPrice,1,"Бизнес","{"#cWHITE"}Введите цену за 1 ед. товара (от 1 до 10)","ОК","Отмена");
				}
				case 4: //Закр - откр
				{
					if(gBusiness[id][busiStatus])
					{
						gBusiness[id][busiStatus] = 0;
						SendClientMessage(playerid,CINFO,"Бизнес закрыт");
					}
					else
					{
						gBusiness[id][busiStatus] = 1;
						SendClientMessage(playerid,CINFO,"Бизнес открыт");
					}
					UpdateBusinessData(id+1,"status",gBusiness[id][busiStatus]);
					UpdateBusinessText(id);
				}
				case 5: //Продажа
				{
					new mes[256];
					format(mes,sizeof(mes),"{"#cWHITE"}Вы действительно хотите продать свой бизнес государству за {"#cGREEN"}$%d\n{"#cGRAY"}(Если вы хотите продать бизнес другому игроку используйте /sellbusiness [ID игрока] [Сумма])",gBusiness[id][busiSellPrice]);
					ShowPlayerDialog(playerid,dBusinessSell,0,"Бизнесс",mes,"Да","Нет");
				}
			}
		}
		case dBusinessOrder1:
		{
			if(!response) OnPlayerCommandText(playerid,"/business");
			SendClientMessage(playerid,CGRAY,"Чтобы заказать продукты, следуйте в доки.");
		}
		case dBusinessOrder2:
		{
			if(!response) OnPlayerCommandText(playerid,"/business");
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			new prod = GetPVarInt(playerid,"orderprod");
			if(prod < 1 || prod > 30000) return SendClientMessage(playerid,CGRAY,"Неверное к-во товара");
			if(prod + gBusiness[id][busiProduct] > 30000) return SendClientMessage(playerid,CGRAY,"Вы не можете хранить больше 30 тыс. ед. товара");
			new price = prod;
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SFCM(playerid,CGRAY,"Вам нужно $%d для того чтобы заказать %d ед. товара",price,prod);
				return 1;
			}
			TransferMoney(playerid,-1,price,"orderbusiprod");
			gBusiness[id][busiProduct] += prod;
			UpdateBusinessData(id+1,"product",gBusiness[id][busiProduct]);
			UpdateBusinessText(id);
			SendClientMessage(playerid,CGREEN,"Товар был доставлен в ваш бизнес с помошью технологии телепортации");
			SendClientMessage(playerid,CGRAY,"(Это временно. Скоро появятся развозчики товаров)");
		}
		case dBusinessStat:
		{
			OnPlayerCommandText(playerid,"/business");
		}
		case dBusinessBank:
		{
			if(!response) return OnPlayerCommandText(playerid,"/business");
			new id = pTemp[playerid][pSelectedBusinessID];
			switch(listitem)
			{
				case 0:
				{
					new mes[64];
					format(mes,sizeof(mes),"{"#cWHITE"}В кассе: {"#cGREEN"}$%d",gBusiness[id][busiBank]);
					ShowPlayerDialog(playerid,dBusinessStat,0,"Бизнес",mes,"OK","");
				}
				case 1:
				{
					ShowPlayerDialog(playerid,dBusinessPut,1,"Бизнес","Укажите сумму, которую вы хотите положить в кассу","Положить","Отмена");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,dBusinessGet,1,"Бизнес","Укажите сумму, которую вы хотите взять из кассы","Взять","Отмена");
				}
			}
		}
		case dBusinessPut:
		{
			if(!response) return OnPlayerCommandText(playerid,"/business");
			new id = pTemp[playerid][pSelectedBusinessID];
			new sum = strval(inputtext);
			if(sum < 1) return SendClientMessage(playerid,CGRAY,"Неверная сумма");
			if(GetPlayerMoneyEx(playerid) < sum) return SendClientMessage(playerid,CGRAY,"Недостаточно денег на руках");
			if(UpdateBusinessData(id+1,"bank",gBusiness[id][busiBank] + sum)) return SendClientMessage(playerid,CGRAY,"Произошла ошибка MySQL");
			gBusiness[id][busiBank] += sum;
			TransferMoney(playerid,-1,sum,"businessput");
			MeAction(playerid,"положил деньги в кассу");
			OnPlayerCommandText(playerid,"/business");
		}
		case dBusinessGet:
		{
			if(!response) return OnPlayerCommandText(playerid,"/business");
			new id = pTemp[playerid][pSelectedBusinessID];
			new sum = strval(inputtext);
			if(sum < 1) return SendClientMessage(playerid,CGRAY,"Неверная сумма");
			if(gBusiness[id][busiBank] < sum) return SendClientMessage(playerid,CGRAY,"Недостаточно денег в кассе");
			if(UpdateBusinessData(id+1,"bank",gBusiness[id][busiBank] - sum)) return SendClientMessage(playerid,CGRAY,"Произошла ошибка MySQL");
			gBusiness[id][busiBank] -= sum;
			TransferMoney(-1,playerid,sum,"businessget");
			MeAction(playerid,"взял деньги с кассы");
			OnPlayerCommandText(playerid,"/business");
		}
		case dBusinessSell:
		{
			if(!response) return OnPlayerCommandText(playerid,"/business");
			new id = pTemp[playerid][pSelectedBusinessID];
			new sum = gBusiness[id][busiSellPrice];
			if(UpdateBusinessData(id+1,"ownerid",0)) return SendClientMessage(playerid,CGRAY,"Произошла ошибка MySQL (#102)");
			gBusiness[id][busiOwnerID] = 0;
			gBusiness[id][busiStatus] = 1;
			new query[128];
			format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '0', `status` = '1' WHERE `id` = '%d'",id+1);
			mysql_query(query);
			UpdateBusinessText(id);
			UpdatePlayerData(playerid,"bussiness",0);
			pData[playerid][pBusiness] = 0;
			TransferMoney(-1,playerid,sum,"gossellbusiness");
			SendClientMessage(playerid,CGREEN,"Бизнес продан государству");
		}
		case dBusinessPrice:
		{
			if(!response) OnPlayerCommandText(playerid,"/business");
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			new price = strval(inputtext);
			if(price < 1 || price > 10) return SendClientMessage(playerid,CGRAY,"Неверная цена");
			gBusiness[id][busiPrice] = price;
			UpdateBusinessData(id+1,"price",price);
			UpdateBusinessText(id);
			SendClientMessage(playerid,CGREEN,"Новая цена товара установлена");
		}
		case dBusinessBuyProd1:
		{
			if(!response) return 1;
			new h,m,s;
			gettime(h,m,s);
			if(h > 22 && h < 4) return SendClientMessage(playerid,CGRAY,"Заказывать товары c 22:00 до 4:00 нельзя.");
			ShowPlayerDialog(playerid,dBusinessBuyProd2,1,"Заказ товара","{"#cWHITE"}Укажите, сколько единиц товара вы хотите заказать (1ед. = {"#cRED"}$1{"#cWHITE"}):","Далее","Отмена");
		}
		case dBusinessBuyProd2:
		{
			if(!response) return 1;
			if(!isNumeric(inputtext) || !strval(inputtext)) return ShowPlayerDialog(playerid,dBusinessBuyProd2,1,"Заказ товара","{"#cWHITE"}Укажите, сколько единиц товара вы хотите заказать (1ед. = {"#cRED"}$1{"#cWHITE"}):","Далее","Отмена");
			new businessid = pData[playerid][pBusiness] - 1;
			new order = gBusiness[businessid][busiOrder];
			new amount = strval(inputtext);
			new deliving = gBusiness[businessid][busiDeliving];
			if(gBusiness[businessid][busiOrder] > 0) return SendClientMessage(playerid,CGRAY,"Вы не можете заказать новую партию, пока не развезут уже заказанную");
			if(amount < 500 || amount > 30000) return SendClientMessage(playerid,CGRAY,"К-во товара должно быть от 500 до 30000");
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			if(gBusiness[businessid][busiProduct] + amount + order + deliving > 30000)
			{
				SendClientMessage(playerid,CGRAY,"На складе вашего бизнеса недостаточно места");
				new sum = gBusiness[businessid][busiProduct]+order+deliving;
				SFCM(playerid,CGRAY,"(Склад: %d, Заказано: %d, Доставляется: %d, Итого: %d, Свободно:{"#cGREEN"}%d)",gBusiness[businessid][busiProduct],order,deliving,sum,30000-sum);
			}
			gBusiness[businessid][busiOrder] += amount;
			TransferMoney(playerid,-1,amount,"businessbuyprod");
			SendClientMessage(playerid,CGREEN,"Товар заказан. Теперь следуйте к базе развозчиков товара, чтобы заказать доставку");
		}
		case dBusinessDelivery1:
		{
			if(!response) return 1;
			if(!isNumeric(inputtext) || !strval(inputtext)) ShowPlayerDialog(playerid,dBusinessDelivery1,1,"Доставка товара","{"#cWHITE"}Укажите сумму, которую вы готовы заплатить за доставку к вашему бизнесу:","Далее","Отмена");
			new businessid = pData[playerid][pBusiness] - 1;
			new order = gBusiness[businessid][busiOrder];
			new price = strval(inputtext);
			if(price < 1000 || price > 15000) return SendClientMessage(playerid,CGRAY,"Цена должны быть от $1000 до $15000 за рейс");
			new count = floatround(order/5000.0,floatround_ceil);
			new amount = price * count;
			SetPVarInt(playerid,"orderprice",price);
			new mes[256];
			format(mes,sizeof(mes),"\t\t\t{"#cYELLOW"}Услуги доставки\n{"#cWHITE"}К-во товара:\t\t{"#cGREEN"}%d\n{"#cWHITE"}К-во рейсов:\t\t{"#cGREEN"}%d\n{"#cWHITE"}Цена за рейс:\t\t{"#cGREEN"}$%d\n\n{"#cWHITE"}ИТОГО:\t\t\t{"#cLIGHTGREEN"}$%d",order,count,price,amount);
			ShowPlayerDialog(playerid,dBusinessDelivery2,0,"Доставка",mes,"Оплатить","Отмена");
		}
		case dBusinessDelivery2:
		{
			if(!response) return 1;
			new businessid = pData[playerid][pBusiness] - 1;
			new order = gBusiness[businessid][busiOrder];
			new price = GetPVarInt(playerid,"orderprice");
			if(price < 1000 || price > 15000) return SendClientMessage(playerid,CGRAY,"Цена должны быть от $1000 до $15000 за рейс");
			new count = floatround(order/5000.0,floatround_ceil);
			if(count < 1) return SendClientMessage(playerid,CGRAY,"Ошибка (#117)");
			new amount = price * count;
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег на руках");
			for(new i;i<DELIVERY_COUNT;i++)
			{
				if(gDelivery[i][deliBusy] && gDelivery[i][deliBusinessid] == businessid) return SendClientMessage(playerid,CGRAY,"Вы не можете заказать доставку, пока не завершится ваш предыдущий заказ");
			}
			new slot = -1;
			for(new i;i<DELIVERY_COUNT;i++)
			{
				if(gDelivery[i][deliBusy] == false) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid,CGRAY,"К сожалению, нет места в очереди. Попробуйте позже");
			gDelivery[slot][deliBusinessid] = businessid;
			format(gDelivery[slot][deliCustomer],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
			for(new i;i<6;i++)
			{
				gDelivery[slot][deliPerformerid][i] = INVALID_PLAYER_ID;
				gDelivery[slot][deliProduct][i] = 0;
			}
			gDelivery[slot][deliPrice] = price;
			gDelivery[slot][deliCount] = count;
			gDelivery[slot][deliPerforming] = 0;
			gDelivery[slot][deliBusy] = true;
			TransferMoney(playerid,-1,amount,"businessdeliverypay");
			SendClientMessage(playerid,CGREEN,"Ваш заказ поставлен в очередь.");
			SaveDeliveryData(slot);
		}
		case dDeliveryList:
		{
			if(!response) return 1;
			if(pTemp[playerid][pDeliving]) return SendClientMessage(playerid,CGRAY,"Вы уже выполняете заказ");
			if(!gDelivery[listitem][deliBusy]) return ShowDeliveryList(playerid);
			if(gDelivery[listitem][deliCount] <= gDelivery[listitem][deliPerforming])
			{
				SendClientMessage(playerid,CGRAY,"Все рейсы этого заказа уже выполняются");
				ShowDeliveryList(playerid);
				return 1;
			}
			new number = -1;
			for(new i;i<6;i++)
			{
				if(gDelivery[listitem][deliPerformerid][i] == INVALID_PLAYER_ID) {number = i; break;}
			}
			if(number == -1)
			{
				SendClientMessage(playerid,CGRAY,"Все рейсы этого заказа уже выполняются");
				return ShowDeliveryList(playerid);
			}
			pTemp[playerid][pDeliving] = true;
			pTemp[playerid][pDeliveryid] = listitem;
			pTemp[playerid][pDeliveryNumber] = number;
			gDelivery[listitem][deliPerformerid][number] = playerid;
			gDelivery[listitem][deliPerforming]++;
			SendClientMessage(playerid,CGREEN,"Заказ принят. Следуйте к докам и згрузитесь в одном из ангаров");
			SaveDeliveryData(listitem);
		}
		case dBints:
		{
			if(!response) return 1;
			new Float:x,Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid,"oldx",x);
			SetPVarFloat(playerid,"oldy",y);
			SetPVarFloat(playerid,"oldz",z);
			SetPVarInt(playerid,"oldint",GetPlayerInterior(playerid));
			SetPVarInt(playerid,"oldworld",GetPlayerVirtualWorld(playerid));
			SetPlayerInterior(playerid,gBints[listitem][bintInterior]);
			SetPlayerPosEx(playerid,gBints[listitem][bintX],gBints[listitem][bintY],gBints[listitem][bintZ]);
		}
		case dBar:
		{
			if(!response) { ShowPlayerBarTD(playerid, pTemp[playerid][pSelectedBusinessID]); return 1; }
			new id = pTemp[playerid][pSelectedBusinessID];
			listitem = GetPVarInt(playerid, "bar_sel");
			if(id < 0) return 1;
			new price = gBarCosts[listitem] * (gBusiness[id][busiPrice] * 10);
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"Ошибка: У вас недостаточно денег.");
			if(gBusiness[id][busiProduct] < gBarCosts[listitem] * 10) return SendClientMessage(playerid,CGRAY,"Ошибка: В баре недостаточно продуктов");
			new mes[128];
			format(mes,sizeof(mes),"купил %s",gBarNames[listitem]);
			MeAction(playerid,mes);
			TransferMoney(playerid,-1,price,"barbuydrink");
			gBusiness[id][busiProduct] -= gBarCosts[listitem] * 10;
			gBusiness[id][busiBank] += price;
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
			UpdateBusinessText(id);
			if(listitem != sizeof(gBarObj) - 1) {
				if(listitem == 1) SetPlayerSpecialAction(playerid, 22);
				else SetPlayerSpecialAction(playerid, 20);
			}
			else {
				SetPlayerAttachedObject(playerid,0,2769,6,0.095999,0.073999,0.049000,-156.000030,-81.899986,12.599999,1.000000,1.000000,1.000000);
				ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
				SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,0);
				if(25 + pData[playerid][pHunger] > 100) pData[playerid][pHunger] = 100;
				else pData[playerid][pHunger] += 25;
			}
			DeletePVar(playerid, "bar_sel");
		}
		case dAdvertSend:
		{
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,CGRAY,"К сожалению, очередь на объявления занята, попробуйте позже");
			new text[100];
			GetPVarString(playerid,"advert",text,100);
			DeletePVar(playerid,"advert");
			new price = strlen(text) * gAdvertPrice;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			gAdvertCount ++;
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++)
			{
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid,CGRAY,"Ошибка (#111)");
			TransferMoney(playerid,-1,price,"advert");
			gAdvert[slot][adMoney] = price;
			format(gAdvert[slot][adSender],24,"%s",pData[playerid][pNickname]);
			gAdvert[slot][adPhone] = pData[playerid][pPhone];
			format(gAdvert[slot][adText],100,"%s",text);
			gAdvert[slot][adBusy] = true;
			pTemp[playerid][pAdvertTime] = 60;
		}
		case dAdvertList:
		{
			if(!response) return 1;
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			SetPVarInt(playerid,"editadvert",listitem);
			gAdvert[listitem][adCheking] = true;
			new mes[256];
			format(mes,sizeof(mes),"%s\n1.Отправить\n2.Редактировать\n3.Удалить и отправить администрации\n4.Удалить",gAdvert[listitem][adText]);
			ShowPlayerDialog(playerid,dAdvertAction,2,gAdvert[listitem][adSender],mes,"ОК","Отмена");
		}
		case dAdvertAction:
		{
			new id = GetPVarInt(playerid,"editadvert");
			if(!response)
			{
				gAdvert[id][adCheking] = false;
				return ShowAdvertList(playerid);
			}
			switch(listitem)
			{
				case 1:
				{
					gAdvert[id][adTime] = gAdvertTime;
					gAdvertTime += 30;
					format(gAdvert[id][adCheker],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
					gAdvert[id][adCheking] = false;
					gAdvert[id][adCheked] = true;
					ShowAdvertList(playerid);
				}
				case 2:
				{
					ShowPlayerDialog(playerid,dAdvertEdit,1,gAdvert[id][adSender],gAdvert[id][adText],"OK","Отмена");
				}
				case 3:
				{
					new mes[160];
					format(mes,sizeof(mes),"[AD] %s:%s",gAdvert[id][adSender],gAdvert[id][adText]);
					AdminChat(CYELLOW,mes);
					SendClientMessage(playerid,CYELLOW,mes);
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adPhone] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					gAdvert[id][adBusy] = false;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adTime] = 0;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
				}
				case 4:
				{
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adPhone] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					gAdvert[id][adBusy] = false;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adTime] = 0;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
				}
				default: {gAdvert[id][adCheking] = false; ShowAdvertList(playerid);}
			}
		}
		case dAdvertEdit:
		{
			new id = GetPVarInt(playerid,"editadvert");
			if(!response)
			{
				gAdvert[id][adCheking] = false;
				return ShowAdvertList(playerid);
			}
			format(gAdvert[id][adText],100,"%s",inputtext);
			OnDialogResponse(playerid,dAdvertAction,1,1,"");
		}
		case dPresentPhone:
		{
			if(!response)
			{
				MeAction(playerid,"выбросил подарок");
				return 1;
			}
			if(!isNumeric(inputtext) || strlen(inputtext) != 6 || inputtext[0] == '0')
			{
				SendClientMessage(playerid,CGRAY,"Номер должен состоять из {"#cWHITE"}6 {"#cGRAY"}цифр. Первая цифра не должны быть {"#cWHITE"}\"ноль\"");
				ShowPlayerDialog(playerid,dPresentPhone,1,"Подарок от Санты.","{"#cLIGHTGREEN"}Вы получили сим карту с открытым номером.\nНомер вы можете выбрать сами {"#cGRAY"}(6 цифр):","OK","Выбросить");
				return 1;
			}
			
			new query[128];
			format(query,sizeof(query),"SELECT `id` FROM `accounts` WHERE `phone` = '%s'",inputtext);
			mysql_query(query);
			mysql_store_result();
			if(mysql_num_rows())
			{
				SendClientMessage(playerid,CGRAY,"Такой номер уже используется");
				ShowPlayerDialog(playerid,dPresentPhone,1,"Подарок от Санты.","{"#cLIGHTGREEN"}Вы получили сим карту с открытым номером.\nНомер вы можете выбрать сами {"#cGRAY"}(6 цифр):","OK","Выбросить");
				return 1;
			}
			mysql_free_result();
			pData[playerid][pPhone] = strval(inputtext);
			new mes[128];
			format(mes,sizeof(mes),"Ваш новый номер телефона: {"#cWHITE"}%d. {"#cLIGHTGREEN"}С новым годом!!!",pData[playerid][pPhone]);
			SendClientMessage(playerid,CLIGHTGREEN,mes);
			UpdatePlayerData(playerid,"phone",pData[playerid][pPhone]);
		}
		case dNewsDial:
		{
			if(!response) return 1;
			if(GetPlayerMoneyEx(playerid) < gNewsDialPrice) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			if(!gNewsDialing) return SendClientMessage(playerid,CGRAY,"Звонки не принимаются");
			if(gNewsDialee != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Линия занята");
			TransferMoney(playerid,-1,gNewsDialPrice,"newsdial");
			gNewsDialMoney += gNewsDialPrice;
			if(random(3)) return SendClientMessage(playerid,CGRAY,"Дозвониться не получилось");
			SendClientMessage(playerid,CGREEN,"Вы в эфире");
			SendClientMessage(gNewsDialer,CGREEN,"Игрок дозвонился");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid,0,330,6);
			gNewsDialee = playerid;
		}
		case dUnemplyment:
		{
			if(!response) return 1;
			if((pData[playerid][pFraction] < 3 && pData[playerid][pFraction] != 0) || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CGRAY,"Нельзя получать пособие, находясь во фракции");
			if(pData[playerid][pJob]) return SendClientMessage(playerid,CGRAY,"Вы не безработный");
			pData[playerid][pUnemployment] = 1;
			UpdatePlayerData(playerid,"unemployment",1);
			SendClientMessage(playerid,CWHITE,"Теперь вы будете получать пособие по безработице");
		}
		case dDonate:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: //Игровая валюта
				{
					ShowPlayerDialog(playerid,dDonateMoney1,1,"Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{"#cGREEN"}$1000 {"#cWHITE"}= {"#cRED"}1р.","Далее","Отмена");
				}
				case 1: //Смена ника
				{
					if(pData[playerid][pDonate] < 10)
					{
						OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 10 рублей на донат счете, чтобы поменять ник");
					}
					ShowPlayerDialog(playerid,dDonateNickname1,1,"Смена ника","{"#cWHITE"}Введите игровой ник, на который вы хотите поменять свой:","Далее","Отмена");
				}
				case 2: //Смена цвета кожи и национальности
				{
					if(pData[playerid][pDonate] < 150)
					{
						OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 150 рублей на донат счете, чтобы сменить национальность и цвет кожи");
					}
					ShowPlayerDialog(playerid,dDonateNation1,0,"Смена национальности","{"#cWHITE"}Выберите цвет кожи:","Темный","Светлый");
				}
				case 3: //Смена возраста
				{
					if(pData[playerid][pDonate] < 100)
					{
						OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 100 рублей на донат счете, чтобы сменить национальность и цвет кожи");
					}
					ShowPlayerDialog(playerid,dDonateAge1,1,"Смена возраста","{"#cWHITE"}Введите желаемый возраст:","Далее","Отмена");
				}
				case 4:
				{
				    if(pData[playerid][pDonate] < 100)
				    {
				    	OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 100 рублей на донат счете, для снятия варна.");
				    }
				    pData[playerid][pWarn] = 0;
				    pData[playerid][pDonate] -= 100;
				    SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным снятием варнов.");
				}
				case 5:
				{
    				if(pData[playerid][pDonate] < 25)
				    {
				    	OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 25 рублей на донат счете, чтобы купить аптечку.");
				    }
				    pData[playerid][pDonate] -= 25;
                    SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением аптечки.");
				}
				case 6:
				{
    				if(pData[playerid][pDonate] < 400)
				    {
				    	OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 400 рублей на донат счете, чтобы купить скин Woozie.");
				    }
				    pData[playerid][pSkin] = 294;
				    pData[playerid][pDonate] -= 400;
				    SetPlayerSkin(playerid,pData[playerid][pSkin]);
				    SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением скина.");
				}
				case 7:
				{
    				if(pData[playerid][pDonate] < 550)
				    {
				    	OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 550 рублей на донат счете, чтобы купить лимузин.");
				    }
			     	pData[playerid][pCar] = 409;
			     	pData[playerid][pDonate] -= 550;
				    SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением машины.");
				}
				case 8:
				{
    				if(pData[playerid][pDonate] < 600)
				    {
				    	OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 600 рублей на донат счете, чтобы купить Bullet.");
				    }
			     	pData[playerid][pCar] = 541;
			     	pData[playerid][pDonate] -= 600;
				    SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением машины.");
				}
				case 9:
				{
    				if(pData[playerid][pDonate] < 450)
				    {
				    	OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 450 рублей на донат счете, чтобы купить Maverick.");
				    }
			     	pData[playerid][pCar] = 487;
			     	pData[playerid][pDonate] -= 450;
				    SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением машины.");
				}
				case 10:
				{
                    ShowPlayerDialog(playerid,dDonateNumber,1,"Смена номера телефона","{"#cWHITE"}6-4 цифр: 250руб \n3-2 цифры: 400руб \n1 цифра: 600руб \nВведите желаемый номер ниже:","Далее","Отмена");
				}
				case 11:
				{
					if(pData[playerid][pDonate] < 20)
				    {
				    	OnPlayerCommandText(playerid,"/donate");
						return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 20 рублей на донат счете, чтобы уволиться из фракции.");
				    }
			    	pData[playerid][pFraction] = 0;
					pData[playerid][pRank] = 0;
					pData[playerid][pFractionSkin] = 0;
					pData[playerid][pSubfraction] = 0;
					SendClientMessage(playerid,CINFO,"Вы были успешно уволены.");
				}
				case 12: //Баланс
				{
					new mes[128];
					format(mes,sizeof(mes),"У вас на донат счете: {"#cWHITE"}%d {"#cINFO"}рублей",pData[playerid][pDonate]);
					SendClientMessage(playerid,CINFO,mes);
					OnPlayerCommandText(playerid,"/donate");
					DonateNewUpdate(playerid);
				}
			}
		}
		case dDonateMoney1:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			if(!isNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid,dDonateMoney1,1,"Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{"#cGREEN"}$1000 {"#cWHITE"}= {"#cRED"}1р.","Далее","Отмена");
			new amount = strval(inputtext);
			if(amount < 1000)
			{
				ShowPlayerDialog(playerid,dDonateMoney1,1,"Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{"#cGREEN"}$1000 {"#cWHITE"}= {"#cRED"}1р.","Далее","Отмена");
				return SendClientMessage(playerid,CGRAY,"Минимальная сумма: $1000");
			}
			new money = floatround(amount / 1000.0,floatround_ceil) * 1;
			if(money < 1) return 1;
			if(pData[playerid][pDonate] < money)
			{
				ShowPlayerDialog(playerid,dDonateMoney1,1,"Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{"#cGREEN"}$1000 {"#cWHITE"}= {"#cRED"}1р.","Далее","Отмена");
				return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег на донат счете");
			}
			SetPVarInt(playerid,"donatemoney",money);
			SetPVarInt(playerid,"donateamount",amount);
			new mes[256];
			format(mes,sizeof(mes),"{"#cWHITE"}Будет снято: %d рублей\nБудет зачислено: $%d\nОстанется на донат счете: %d рублей",money,amount,pData[playerid][pDonate] - money);
			ShowPlayerDialog(playerid,dDonateMoney2,0,"Донат",mes,"ОК","Отмена");
		}
		case dDonateMoney2:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			new money = GetPVarInt(playerid,"donatemoney");
			new amount = GetPVarInt(playerid,"donateamount");
			DeletePVar(playerid,"donatemoney");
			DeletePVar(playerid,"donateamount");
			if(money < 2 || amount < 1000)
			{
				ShowPlayerDialog(playerid,dDonateMoney1,1,"Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{"#cGREEN"}$1000 {"#cWHITE"}= {"#cRED"}1р.","Далее","Отмена");
				return SendClientMessage(playerid,CGRAY,"Минимальная сумма к оплате: 2 рубля");
			}
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < money) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег на донат счете");
			pData[playerid][pDonate] -= money;
			if(UpdatePlayerData(playerid,"donate",pData[playerid][pDonate]))
			{
				pData[playerid][pDonate] += money;
				return SendClientMessage(playerid,CRED,"Произошла ошибка MySQL (Донат)");
			}
			TransferMoney(-1,playerid,amount,"donate");
			DonateLog(playerid,-money,7);
			new mes[128];
			format(mes,sizeof(mes),"%d {"#cINFO"}рублей переведено в {"#cWHITE"}%d {"#cINFO"} игровых доларов",money,amount);
			SendClientMessage(playerid,CWHITE,mes);
			OnPlayerCommandText(playerid,"/donate");
		}
		case dDonateNickname1:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			if(pData[playerid][pDonate] < 10)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 10 рублей на донат счете, чтобы поменять ник");
			}
			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"Длина ника не может быть меньше трех и больше 20 символов");
			}
			if(strfind(inputtext,"|") != -1) return SendClientMessage(playerid,CGRAY,"В нике не может содержаться симовл \"|\"");
			mysql_real_escape_string(inputtext,inputtext);
			new query[128];
			format(query,sizeof(query),"SELECT `nickname` FROM `accounts` WHERE `nickname` = '%s'",inputtext);
			mysql_query(query);
			mysql_store_result();
			if(mysql_num_rows() > 0)
			{
				SendClientMessage(playerid,CGRAY,"Этот никнейм уже используется");
				OnPlayerCommandText(playerid,"/donate");
				return mysql_free_result();
			}
			mysql_free_result();
			SetPVarString(playerid,"nnick",inputtext);
			new mes[256];
			format(mes,sizeof(mes),"{"#cWHITE"}Новый никнейм: {"#cBLUE"}%s{"#cWHITE"}.\nБудет снято: 10 рублей\nОстанется на донат счете: %d рублей\n\t\tПродолжить?",inputtext,pData[playerid][pDonate] - 10);
			ShowPlayerDialog(playerid,dDonateNickname2,0,"Смена ника",mes,"Да","Нет");
		}
		case dDonateNickname2:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < 10)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 10 рублей на донат счете, чтобы поменять ник");
			}
			new nickname[24];
			GetPVarString(playerid,"nnick",nickname,24);
			DeletePVar(playerid,"nnick");
			if(strlen(nickname) < 3 || strlen(nickname) > 20)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"Длина ника не может быть меньше трех и больше 20 символов");
			}
			if(strfind(nickname,"|") != -1) return SendClientMessage(playerid,CGRAY,"В нике не может содержаться симовл \"|\"");
			mysql_real_escape_string(nickname,nickname);
			new query[128];
			format(query,sizeof(query),"SELECT `nickname` FROM `accounts` WHERE `nickname` = '%s'",nickname);
			mysql_query(query);
			mysql_store_result();
			if(mysql_num_rows() > 0)
			{
				SendClientMessage(playerid,CGRAY,"Этот никнейм уже используется");
				OnPlayerCommandText(playerid,"/donate");
				return mysql_free_result();
			}
			mysql_free_result();
			if(pData[playerid][pDonate] < 10) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег на донат счете");
			if(SetPlayerName(playerid,nickname) == -1)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"У вас присутствуют запрещенные символы в никнейме");
			}
			if(IsTextInvalid(nickname)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			if(pData[playerid][pHouse])
			{
				new houseid = pData[playerid][pHouse] - 1;
				if(gHouses[houseid][houseOwnerID] == pData[playerid][pMysqlID])
				{
					format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",nickname);
					format(query,sizeof(query),"UPDATE `houses` SET `owner` = '%s' WHERE `id` = '%d'",nickname,houseid+1);
					mysql_query(query);
				}
				else
				{
					new slot = -1;
					if(gHouses[houseid][houseHabitID][0] == pData[playerid][pMysqlID]) slot = 0;
					else if(gHouses[houseid][houseHabitID][1] == pData[playerid][pMysqlID]) slot = 1;
					else if(gHouses[houseid][houseHabitID][2] == pData[playerid][pMysqlID]) slot = 2;
					else return SendClientMessage(playerid,CGRAY,"Ошибка (#122)");
					format(gHouseHabits[houseid][slot],MAX_PLAYER_NAME,"%s",nickname);
					format(query,sizeof(query),"UPDATE `houses` SET `inhabit%d`='%s' WHERE `id`='%d'",slot+2,nickname,houseid+1);
					mysql_query(query);
				}
			}
			pData[playerid][pDonate] -= 10;
			
			format(query,sizeof(query),"UPDATE `accounts` SET `nickname` = '%s', `donate` = '%d' WHERE `id` = '%d'",nickname,pData[playerid][pDonate],pData[playerid][pMysqlID]);
			mysql_query(query);
			format(query,sizeof(query),"Ваш никнейм был изменен на: {"#cWHITE"}%s",nickname);
			SendClientMessage(playerid,CGREEN,query);
			SendClientMessage(playerid,CSYSTEM,"Перезайдите с новым ником");
			format(query,sizeof(query),"[A] %s => %s",pData[playerid][pNickname],nickname);
			AdminChat(CORANGE,query);
			DonateLog(playerid,-10,8);
			NewKick(playerid);
		}
		case dDonateNation1:
		{
			if(!response) return ShowPlayerDialog(playerid,dDonateNation2,2,"Смена национальности","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","Отмена"); //Белые
			else
			{
				SetPVarInt(playerid,"donatecolor",1);
				SetPVarInt(playerid,"donatenation",10);
				SetPVarInt(playerid,"donatelang",LANG_ENGLISH);
				new mes[256];
				format(mes,sizeof(mes),"{"#cWHITE"}\tСмена национальности\n\nЦвет кожи: Темный\nНациональность: Афроамериканец\nБудет снято: 150 рублей\nОстанется на донат счете: %d рублей\n\n\t{"#cYELLOW"}Продолжить?",pData[playerid][pDonate] - 150);
				ShowPlayerDialog(playerid,dDonateNation3,0,"Смена национальности",mes,"Да","Нет");
			}
		}
		case dDonateNation2:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			new language;
			switch(listitem)
			{
				case 1: language = LANG_ENGLISH;
				case 2: language = LANG_JAPAN;
				case 3: language = LANG_ITALIAN;
				case 4..6: language = LANG_SPAIN;
				case 7: language = LANG_RUSSIAN;
				case 8: language = LANG_PORTUGAL;
				case 9: language = LANG_FRENCH;
				default: language = LANG_ENGLISH;
			}
			SetPVarInt(playerid,"donatecolor",0);
			SetPVarInt(playerid,"donatenation",listitem);
			SetPVarInt(playerid,"donatelang",language);
			new mes[256];
			format(mes,sizeof(mes),"{"#cWHITE"}\tСмена национальности\n\nЦвет кожи: Светлый\nНациональность: %s\nБудет снято: 150 рублей\nОстанется на донат счете: %d рублей\n\n\t{"#cYELLOW"}Продолжить?",inputtext,pData[playerid][pDonate] - 150);
			ShowPlayerDialog(playerid,dDonateNation3,0,"Смена национальности",mes,"Да","Нет");
		}
		case dDonateNation3:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < 150)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 150 рублей на донат счете, чтобы сменить национальность и цвет кожи");
			}
			new color = GetPVarInt(playerid,"donatecolor");
			new nation = GetPVarInt(playerid,"donatenation");
			new language = GetPVarInt(playerid,"donatelang");
			pData[playerid][pColor] = color;
			pData[playerid][pNation] = nation;
			pData[playerid][pLanguage] = language | LANG_ENGLISH;
			pData[playerid][pDonate] -= 150;
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `color` = '%d', `nation` = '%d', `language` = '%b', `donate` = '%d' WHERE `id` = '%d'",color,nation,pData[playerid][pLanguage],pData[playerid][pDonate],pData[playerid][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
			DonateLog(playerid,-150,9);
			SendClientMessage(playerid,CGREEN,"Национальность и цвет кожи изменены");
		}
		case dDonateAge1:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			if(IsTextInvalid(inputtext)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
			if(pData[playerid][pDonate] < 100)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 100 рублей на донат счете, чтобы сменить игровой возраст");
			}
			if(!isNumeric(inputtext) || !strlen(inputtext)) ShowPlayerDialog(playerid,dDonateAge1,1,"Смена возраста","{"#cWHITE"}Введите желаемый игровой возраст:","Далее","Отмена");
			new age = strval(inputtext);
			if(age < 16 || age > 110)
			{
				SendClientMessage(playerid,CGRAY,"Возраст не может быть менее 16 и более 110");
				return OnPlayerCommandText(playerid,"/donate");
			}
			SetPVarInt(playerid,"donateage",age);
			new mes[256];
			format(mes,sizeof(mes),"{"#cWHITE"}\tСмена возраста\n\nНовый игровой возраст: %d\nБудет снято: 100 рублей\nОстанется на донат счете: %d рублей\n\t{"#cYELLOW"}Продолжить?",age,pData[playerid][pDonate] - 100);
			ShowPlayerDialog(playerid,dDonateAge2,0,"Смена возраста",mes,"Да","Нет");
		}
		case dDonateAge2:
		{
			if(!response) return OnPlayerCommandText(playerid,"/donate");
			if(pData[playerid][pDonate] < 100)
			{
				OnPlayerCommandText(playerid,"/donate");
				return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 100 рублей на донат счете, чтобы сменить игровой возраст");
			}
			new age = GetPVarInt(playerid,"donateage");
			if(age < 16 || age > 110)
			{
				SendClientMessage(playerid,CGRAY,"Возраст не может быть менее 16 и более 110");
				return OnPlayerCommandText(playerid,"/donate");
			}
			pData[playerid][pAge] = age;
			pData[playerid][pDonate] -= 100;
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `age` = '%d', donate = '%d' WHERE `id` = '%d'",age,pData[playerid][pDonate],pData[playerid][pMysqlID]);
			mysql_query(query);
			if(mysql_errno()) return SendClientMessage(playerid,CRED,"Ошибка MySQL");
			DonateLog(playerid,-100,10);
			SendClientMessage(playerid,CGREEN,"Игровой возраст изменен");
		}
		case dRecolor:
		{
			if(!response) return 1;
			new repairid = GetPVarInt(playerid,"selectedrepair") - 1;
			if(repairid < 0 || repairid > 2) return SendClientMessage(playerid,CGRAY,"Вы должны быть на эстакаде");
			new businessid = repairid + REPAIR_ID_OFFSET;
			if(gBusiness[businessid][busiType] != 8) return SendClientMessage(playerid,CGRAY,"Внутренняя ошибка (#143)");
			if(gBusiness[businessid][busiProduct] < 250) return SendClientMessage(playerid,CGRAY,"В СТО недостаточно краски");
			new price = 250 * gBusiness[businessid][busiPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			if(!pData[playerid][pCar] || !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGRAY,"Перекрашивать можно только личный авто");
			new slot = GetCarSlot(pData[playerid][pCar]);
			new vehicleid = gCars[slot][carVid];
			if(GetPlayerVehicleID(playerid) != vehicleid) return SendClientMessage(playerid,CGRAY,"Вы должны быть на своем личном авто");
			new c1 = GetPVarInt(playerid,"recolor1");
			new c2 = GetPVarInt(playerid,"recolor2");
			ChangeVehicleColor(vehicleid,c1,c2);
			gCars[slot][carColor1] = c1;
			gCars[slot][carColor2] = c2;
			new query[128];
			format(query,sizeof(query),"UPDATE `cars` SET `color1` = '%d' , `color2` = '%d' WHERE `id` = '%d'",c1,c2,pData[playerid][pCar]);
			mysql_query(query);
			SendClientMessage(playerid,CGREEN,"Т/с покрашено в новый цвет");
			TransferMoney(playerid,-1,price,"recolor");
			gBusiness[businessid][busiProduct] -= 250;
			gBusiness[businessid][busiBank] += price;
			UpdateBusinessText(businessid);
			UpdateBusinessDataEx(businessid+1,"product",gBusiness[businessid][busiProduct],"bank",gBusiness[businessid][busiBank]);
		}
		case dSellZone:
		{
		    if(!response) return 1;
		    if(listitem+3 == pData[playerid][pFraction]) return SendErr(playerid, "Вы указали свою организацию");
			new leader = -1;
			for(new i;i<MAX_PLAYERS;i++) {
			    if(pData[i][pFraction] == listitem+3) {
					if(IsALeader(i)) {
				 		if(GetPlayerDistanceToPlayer(playerid,i) <= 3.0) {
       						leader = i;
							break;
						}
					}
				}
			}
			if(leader == -1) return SendErr(playerid, "Лидер выбранной банды должен находиться рядом с Вами");
			SetPVarInt(playerid, "sellzonelead", leader);
			SetPVarInt(playerid, "sellzone",listitem+3);
			ShowPlayerDialog(playerid, dSellZone2, DIALOG_STYLE_INPUT,"Продажа территории", "Укажите предлагаемую цену для продажи своей территории\n(Цена может быть от 1 до 1.000.000$","Выбор","Отмена");
			return 1;
		}
		case dSellZone2:
		{
		    if(!response) return 1;
		    if(IsCapture == 1) return SendErr(playerid, "Вы не можете продать территорию во время капта");
			new price = strval(inputtext);
			if(price < 1 || price > 1000000) return ShowPlayerDialog(playerid, dSellZone2, DIALOG_STYLE_INPUT,"Продажа территории", "Укажите предлагаемую цену для продажи своей территории\n(Цена может быть от 1 до 1.000.000$","Выбор","Отмена");
		    new lead = GetPVarInt(playerid, "sellzonelead");
			new faction = GetPVarInt(playerid, "sellzone");
		    if(!IsALeader(lead) || pData[lead][pFraction] != faction) return SendErr(playerid, "Лидер выбранной организации покинул игру");
		    if(GetPlayerDistanceToPlayer(playerid,lead) > 3.0) return SendErr(playerid, "Вы находитесь далеко от лидера указанной банды");
			for(new i=1;i<=TOTALGZ;i++)
			{
				if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]) && ZoneOnBattle[i] == 0)
				{
				    if(GZMZ[i][gFrak] == pData[playerid][pFraction]) {
					    SetPVarInt(playerid,"gzoffee",lead);
						SetPVarInt(lead,"gzoffee",lead);
						SetPVarInt(lead,"gzoffer",playerid);
						SetPVarInt(lead,"gzprice",price);
						SetPVarInt(lead,"gzvalue",i);
						new zStr[150];
						format(zStr, 150, "Вы предложили {"#cWHITE"}%s{"#cINFO"} купить у вас гангзону{"#cINFO"} за {"#cWHITE"}$%d",pData[lead][pNickname],price);
						SendClientMessage(playerid, CINFO, zStr);
						format(zStr, 150, "{"#cWHITE"}%s {"#cINFO"}предложил Вам купить его гангзону за {"#cWHITE"}$%d",pData[playerid][pNickname],price);
		        		SendClientMessage(lead, CINFO, zStr);
		        		SendClientMessage(lead,CINFO,"Чтобы согласиться нажмите {"#cGREEN"}Y, {"#cINFO"}иначе - {"#cRED"}N");
		    	    	return 1;
					}
				    break;
				}
			}
			SendErr(playerid, "Вы должны находиться на своей территории");
			return 1;
		}
		case dAnim:
		{
			if(!response) return true;
			OnPlayerCommandText(playerid,"/animlist");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~ ~n~ ~n~ ~n~  ~g~~k~~PED_SPRINT~ ~n~~w~cancel the animation", 5000, 3);
			SetPVarInt(playerid,"UseAnim",1);
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,dAnimdance,DIALOG_STYLE_LIST,"{30C3F0}Танцы", "0. Танец - 1\n1. Танец - 2\n2. Танец - 3\n3. Танец - 4\n4. Танец - 5\n5. Танец - 6\n6. Танец - 7\n7. Танец - 8\n8. Танец - 9\n9. Танец - 10","Выбрать","Отмена");
				case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_HANDSUP); 
				case 2: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1, 1, 0, 0, 0, 0 ,1);
				case 3: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.0,1,0,0,0,0,1);//мыть руки
				case 4: ApplyAnimation(playerid,"BEACH","ParkSit_M_loop",4.1,1,0,0,0,0,1);//сесть на землю
				case 5: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,1,0,0,0,0,1);//сесть на землю
				case 6: ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,1,0,0,0,0,1); //лежать
				case 7: ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.1,1,0,0,0,0,1); //читать рэп
				case 8: ApplyAnimation( playerid, "BEACH", "ParkSit_W_Loop", 4.1, 1, 0, 0, 0, 0 ,1);
				case 9: ApplyAnimation( playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0 ,1);// Установить бомбу
				case 10: ApplyAnimation( playerid, "BSKTBALL", "BBALL_def_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Поза вратаря
				case 11: ApplyAnimation( playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Сложить руки
				case 12: ApplyAnimation( playerid, "GRAVEYARD", "mrnF_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Плакать
				case 13: ApplyAnimation( playerid, "RYDER", "RYD_Die_PT1", 4.1, 1, 0, 0, 0, 0 ,1);
				case 14: ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1,1,0,0,0,0,1); // Голосовать
				case 15: ApplyAnimation(playerid,"ON_LOOKERS","POINTUP_IN", 4.1, 0, 0, 0, 0, 0 ,1);
				case 16: ApplyAnimation(playerid,"RIOT","RIOT_ANGRY", 4.1, 0, 0, 0, 0, 0 ,1);
				case 17: ApplyAnimation(playerid,"MISC","PLYRLEAN_LOOP", 4.1, 1, 0, 0, 0, 0 ,1);
				case 18: ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop", 4.1, 1, 0, 0, 0, 0 ,1);// Смотреть на небо
				case 19: ApplyAnimation(playerid,"ON_LOOKERS","wave_loop", 4.1, 1, 0, 0, 0, 0 ,1);//
				case 20: ApplyAnimation(playerid,"ON_LOOKERS","shout_02", 4.1, 1, 0, 0, 0, 0 ,1);// Болельщик
				case 21: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop", 4.1, 1, 0, 0, 0, 0 ,1);// медитация
				case 22: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1); // facepalm
				case 23: ApplyAnimation(playerid,"ped","cower",4.1,1,0,0,0,0,1); //лежать
			}
		}
		case dAnimdance:
		{
			if(!response) return OnPlayerCommandText(playerid,"/animlist");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~ ~n~ ~n~ ~n~  ~g~~k~~PED_SPRINT~ ~n~~w~cancel the animation", 5000, 3);
			OnPlayerCommandText(playerid,"/animlist");
			SetPVarInt(playerid,"UseAnim",1);
			switch(listitem)
			{
			case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1); //танец... до 4
			case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
			case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
			case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
			case 4: ApplyAnimation( playerid, "DANCING", "dnce_M_b", 4.1, 1, 0, 0, 0, 0 ,1);
			case 5: ApplyAnimation( playerid, "DANCING", "dnce_M_a", 4.1, 1, 0, 0, 0, 0 ,1);
			case 6: ApplyAnimation( playerid, "DANCING", "dnce_M_b", 4.1, 1, 0, 0, 0, 0 ,1);
			case 7: ApplyAnimation( playerid, "DANCING", "DAN_Down_A", 4.1, 1, 0, 0, 0, 0 ,1);
			case 8: ApplyAnimation( playerid, "DANCING", "DAN_Left_A", 4.1, 1, 0, 0, 0, 0 ,1);
			case 9: ApplyAnimation( playerid, "DANCING", "DAN_Loop_A", 4.1, 1, 0, 0, 0, 0 ,1);
			}
		}
		case dVibMar:
		{
			if(!response) return true;
			switch(listitem) {
				case 0: {
					if(StartVibori == true) return	SendClientMessage(playerid, CRED, "Выборы уже начаты");
					StartVibori = true;
					SendClientMessageToAll(0xD0E324AA, " Внимание! Начались выборы нового мэра штата. Проголосовать можно в здании любой мэрии.");
					svt = gettime()+10800;
				 	for(new h = 0; h < sizeof(KandidatsGolosa); h++)
	  				{
	      				KandidatsGolosa[h] = 0;
					    gVibMarKan[h] = Create3DTextLabel("{5DE01B}Проголосовать\n{FFFFFF}нажмите: 'F'",0xFFFFFFAA,-1843.96,-275.82,1036.12,20.0,h);
					    gVibMarKantwo[h] = Create3DTextLabel("{5DE01B}Проголосовать\n{FFFFFF}нажмите: 'F'",0xFFFFFFAA,-1843.92,-279.16,1036.12,20.0,h);
			    	}
				}
				case 1:  OnPlayerCommandText(playerid,"/edcand");
				case 2:
				{
					if(StartVibori == false) return	SendClientMessage(playerid, CRED, "Выборы не проводятся.");
					StartVibori = false;
					SendClientMessage(playerid, CRED, "Выборы окончены.");
     				for(new h; h < sizeof(KandidatsGolosa); h++)
				    {
        				Delete3DTextLabel(gVibMarKan[h]);
				        Delete3DTextLabel(gVibMarKantwo[h]);
        			}
				}
			}
			return true;
		}
		case dVibMarEdit:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dVibMarEditC1, DIALOG_STYLE_INPUT,"{30C3F0}Кандидат #1","Введите имя кандидата, или оставьте строчку пустой для удаления", "Done/Del", "Выйти");
				case 1: ShowPlayerDialog(playerid, dVibMarEditC2, DIALOG_STYLE_INPUT,"{30C3F0}Кандидат #2","Введите имя кандидата, или оставьте строчку пустой для удаления", "Done/Del", "Выйти");
				case 2: ShowPlayerDialog(playerid, dVibMarEditC3, DIALOG_STYLE_INPUT,"{30C3F0}Кандидат #3","Введите имя кандидата, или оставьте строчку пустой для удаления", "Done/Del", "Выйти");
			}
			return true;
		}
		case dVibMarEditC1:
		{
			if(!response) return OnPlayerCommandText(playerid,"/edcand");
			new ucs = strlen(inputtext);
			if(ucs <=0)
			{
				format(Kandidat1,40,"Нет кандидата");
				SendClientMessage(playerid,-1,"Кандидат удалён");
				KandidatsGolosa[0] = 0;
				return OnPlayerCommandText(playerid,"/edcand");
			}
			strmid(Kandidat1, inputtext, 0, strlen(inputtext), 255);
			SendMes(playerid,CRED,"Кандидат #1: %s ",Kandidat1);
			KandidatsGolosa[0] = 0;
			return OnPlayerCommandText(playerid,"/edcand");
		}
		case dVibMarEditC2:
		{
			if(!response) return OnPlayerCommandText(playerid,"/edcand");
			new ucs = strlen(inputtext);
			if(ucs <=0)
			{
				format(Kandidat2,40,"Нет кандидата");
				SendClientMessage(playerid,-1,"Кандидат удалён");
				KandidatsGolosa[1] = 0;
				return OnPlayerCommandText(playerid,"/edcand");
			}
			strmid(Kandidat2, inputtext, 0, strlen(inputtext), 255);
			SendMes(playerid,CRED,"Кандидат #1: %s ",Kandidat2);
			KandidatsGolosa[1] = 0;
			return OnPlayerCommandText(playerid,"/edcand");
		}
		case dVibMarEditC3:
		{
			if(!response) return OnPlayerCommandText(playerid,"/edcand");
			new ucs = strlen(inputtext);
			if(ucs <=0)
			{
				format(Kandidat3,40,"Нет кандидата");
				SendClientMessage(playerid,-1,"Кандидат удалён");
				KandidatsGolosa[2] = 0;
				return OnPlayerCommandText(playerid,"/edcand");
			}
			strmid(Kandidat3, inputtext, 0, strlen(inputtext), 255);
			SendMes(playerid,CRED,"Кандидат #1: %s ",Kandidat3);
			KandidatsGolosa[2] = 0;
			return OnPlayerCommandText(playerid,"/edcand");
		}
		case dVibGolos:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
					{
						if(!strcmp(Kandidat1, "Нет кандидата")) return SendClientMessage(playerid,CRED,"Кандидат не указан. Голосование невозможно");
						KandidatsGolosa[0] += 1;
						SendMes(playerid, CBLUE, "Вы отдали свой голос за {FFFFFF}%s", Kandidat1);
						pData[playerid][pGolos] = 1;
						SendClientMessage(playerid, 0xFF7837AA,"Ваш голос учтён, спасибо, что пришли на выборы.");
						return true;
					}
				case 1:
					{
						if(!strcmp(Kandidat2, "Нет кандидата")) return SendClientMessage(playerid,CRED,"Кандидат не указан. Голосование невозможно");
						KandidatsGolosa[1] += 1;
						SendMes(playerid, CBLUE, "Вы отдали свой голос за {FFFFFF}%s", Kandidat2);
						pData[playerid][pGolos] = 1;
						SendClientMessage(playerid, 0xFF7837AA,"Ваш голос учтён, спасибо, что пришли на выборы.");
						return true;
					}
				case 2:
					{
						if(!strcmp(Kandidat3, "Нет кандидата")) return SendClientMessage(playerid,CRED,"Кандидат не указан. Голосование невозможно");
						KandidatsGolosa[2] += 1;
						SendMes(playerid, CBLUE, "Вы отдали свой голос за {FFFFFF}%s", Kandidat3);
						pData[playerid][pGolos] = 1;
						SendClientMessage(playerid, 0xFF7837AA,"Ваш голос учтён, спасибо, что пришли на выборы.");
						return true;
					}
			}
			return true;
		}
		case dBizWar:
		{
		    if(!response) return MafiaNapad = 0, MafiaID = 0,SendClientMessage(playerid, CGREEN, "Захват отменен");
		    SendMes(playerid, CGREEN, "Ид фракции: %i", MafiaNapad);
		    new faction, Float:pos[4];
		    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
		    GetPlayerFacingAngle(playerid,pos[3]);
		    IsStrela = 1;
		    PokasGZ = GangZoneCreate(pos[0], pos[1], pos[2], pos[3]);
		    printf("ТЕСТ 6");
		    foreach(new i: Player)
		    {
				if(IsAMafia(i))
				{
					GangZoneShowForPlayer(i, PokasGZ, CRED);
				}
			}
			printf("ТЕСТ 1");
			SendFMes(MafiaNapad, COLOR_LIME, "[F] На ваш бизнес напали");
			SendFMes(MafiaNapad, COLOR_LIME, "[F] Откройте карту и посмотрите где проходит Стрела.");
			printf("ТЕСТ 2");
			printf("ТЕСТ 3");
			faction = pData[playerid][pFraction];
			printf("ТЕСТ 4");


			pMafias[playerid][hX] = pos[0]+70.0;
	 		pMafias[playerid][hY] = pos[1]+70.0;
	 		pMafias[playerid][hZ] = pos[2];

			pMafias[MafiaNapad][hX] = pos[0]+70.0;
	 		pMafias[MafiaNapad][hY] = pos[1]+70.0;
	 		pMafias[MafiaNapad][hZ] = pos[2];

			GangInfoD[faction][capture] = 1;
			GangInfoD[MafiaNapad][capture] = 1;
			GangInfoD[MafiaNapad][captureid] = faction;
			GangInfoD[faction][captureid] = faction;

			GangInfoD[faction][gangnumber] = 1;
			GangInfoD[MafiaNapad][gangnumber] = 0;

			gNapadMafia = faction;
			gSecury = MafiaNapad;

			CaptureStartD();

			MafiaNapad = 0;
			return true;
		}
		case dTeleportMenu:
		{
		    if(!response) return false;
		    switch(listitem)
		    {
				case 0: {
					SetPlayerPos(playerid,1016.0635,-351.2166,73.9922);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 1:{
					SetPlayerPos(playerid,2487.2007,-1686.5780,13.5116);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 2:{
					SetPlayerPos(playerid,-1124.8518,-1630.4059,76.3672);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 3:{
					SetPlayerPos(playerid,-1974.2432,199.7563,27.3223);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 4:{
					SetPlayerPos(playerid,-2659.7356,611.1049,14.4531);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 5:{
					SetPlayerPos(playerid,1579.0553,1781.2063,10.8203);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 6:{
					SetPlayerPos(playerid,1175.7518,-1311.2419,13.9925);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 7:{
					SetPlayerPos(playerid,1455.0680,-1747.7822,13.5469);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 8:{
					SetPlayerPos(playerid,-2757.6042,358.7905,4.3828);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 9:{
					SetPlayerPos(playerid,2359.9961,2456.6697,10.8203);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 10:{
					SetPlayerPos(playerid,-1617.2435,681.6759,7.1875);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 11:{
					SetPlayerPos(playerid,310.0600,-1814.6708,4.3416);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 12:{
					SetPlayerPos(playerid,-2019.9148,-90.4206,35.3203);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 13:{
					SetPlayerPos(playerid,404.3030,2548.8787,16.4307);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 14:{
					SetPlayerPos(playerid,345.0062,1912.1013,19.0138);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 15:{
					SetPlayerPos(playerid,280.3469,1842.4667,17.6481);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
				case 16:{
					SetPlayerPos(playerid,-1806.8073,546.6467,35.1641);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
				}
		    }
		    return true;
		}
		case dHelpInfo:
		{
		    if(!response) return true;
			switch(listitem)
			{
			    case 0:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"О сервере.","Western State - увлекательный сервер для игры в GTA San Andreas Multiplayer.\n\
					На нашем сервере вы сможете насладиться Role Play обстановкой виртуально\n\
					реализовывая себя в игре.Вы сможете устроиться на работу, купить себе дом,\n\
					автомобиль, завести семью и наконец просто развлечься играя в казино.\n\n\
					Мы уверены, что наш сервер не заставит вас скучать!","<<Помощь","Выход>>");
			    }
			    case 1:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Role Play","Role Play - это режим при котором каждый игрок должен отыгрывать свою\n\
					виртуальную роль.В режиме Role Play есть несколько обязательных\n\
					правил и терминов, с ними вы можете познакомиться на нашем форуме, в разделе\n\
					'Помощь'.Изучить RP режим вам так же помогут в Университете, если же вы\n\
					захотите вступить в гос.организацию его диплом будет нужен обязательно.","<<Помощь","Выход>>");
			    }
			    case 2:
			    {
			        new string[500];
                    strcat(string, "Для начала вам необходимо подзаработать немного денег. По штату передвигаются\nрейсовые автобусы, которые доставят вас на все возможные подработки.\n");
					strcat(string, "Подработок у нас несколько, это шахта, лесопилка и стройка.\nЗаработав немного наличности вы сможете сдать на права,с вод.правами вам\nоткроются новые возможности заработка.\n");
					strcat(string, "Так же вы сможете купить себе автомобиль в личное пользование\nдля более удобного передвижения. Чтобы узнать местоположение важных мест введите\nкоманду /gps.");
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Начало игры",string,"<<Помощь","Выход>>");
			    }
			    case 3:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Общение","Для общения на сервере используется IC и OOC чаты.\n\
					IC - это игровой чат в котором обсуждаются только игровые ситуации. (ТЕКСТ)\n\
					OOC - это не игровой чат, сюда пишется всё, что касается реального мира. (/b ТЕКСТ)\n\
					Дополнительные инструменты общения - /menu > Commands > Общение.","<<Помощь","Выход>>");
			    }
			    case 4:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Транспорт","На нашем сервере существует как общественный транспорт, так и личный.\n\
					Автобусы ездят по заданым маршрутам. Такси ездят по свободному маршруту.\n\
					Поездка в такси обойдётся вам в несколько раз дороже, чем на автобусе, но зато\n\
					быстрее и в любую точку карты.Личный автомобиль можно купить только имея вод.права,\n\
					личный транспорт подлежит страховке, так же нужно проходить тех.осмотр.","<<Помощь","Выход>>");
			    }
			    case 5:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Жильё","В нашем штате имеются дома разных классов, от самых дешёвых на окрайне, до самых \n\
					дорогих вилл на ВайнВуде.В дом можно потселять других игроков и брать с них арендную\n\
					плату. В домах имеется холодильник, шкаф, сейф.В доме так же можно поправлять свои\n\
					потребности: кушать, спать, ходить в туалет, мыться. За дом взымается плата за коммунальные\n\
					услуги, не оплатив их вы лишаетесь своего жилья.","<<Помощь","Выход>>");
			    }
			    case 6:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Бизнесы","Вы можете открыть свой бизнес, купив любое предприятие в штате, от маленьких лавок \n\
					до заводов. Управляя бизнесом вам необходимо заказывать доставку продуктов, \n\
					оплачивать налоги. Так же можно покупать АЗС, игрок может сразу иметь АЗС и обычный\n\
					бизнес одновременно.","<<Помощь","Выход>>");
			    }
			    case 7:
			    {
       				new string[500];
                    strcat(string, "На нашем сервере есть много организаций, их два типа: гос.организации и нелегальные организации.\n");
					strcat(string, "Гос. ораганизациями заведует Администрация Штата во главе Губернатора. Губернатор назначает выборы\nмэров в города.\n");
					strcat(string, "Выбор проходят раз в месяц, либо если мэра сняли досрочно. Выдвигаемый мэр обязательно должен \nсостоять в партии.Нелегальные организации никому не подчиняются, каждая банда/мафия имеет своего лидера.");
					ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Организации",string,"<<Помощь","Выход>>");
			    }
			    case 8:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Работы","У нас имееются 3 типа работы: Подработки, Работы и Работа в организации.\n\
					Подработка является временной работой, зарплата начисляется сразу же.\n\
					На официальной работе зарплата приходит раз в PayDay, так же как и на работе\n\
					в организации. На офицальную работу необходимо устроиться в отделе кадров, в мэрии.\n\
					Безработные игроки получают 'Пособие по безработице'","<<Помощь","Выход>>");
			    }
			    case 9:
			    {
			        ShowPlayerDialog(playerid,dHelpInfoTwo,DIALOG_STYLE_MSGBOX,"Потребности","У каждого персонажа есть 4 потребности: сытость, гигиена, нужда и усталость.\n\
					Если ваш персонаж проголодался, у вас отнимаются ХП. Если ваш персонаж грязный,\n\
					то другие будут чувстововать его запах.Если ваш персонаж вовремя не сходил в туалет,\n\
					то он справит нужду без предупреждения. Если ваш персонаж устал, то он может упасть\n\
					в обморок прямо на улице.","<<Помощь","Выход>>");
			    }
			}
		}
		case dHelpInfoTwo:
		{
		    if(!response) return true;
		    ShowPlayerDialog(playerid,dHelpInfo,2,"Помощь по серверу.","- О сервере\n- Role Play\n- Начало игры\n- Общение\n- Транспорт\n- Жильё\n- Бизнесы\n- Организации\n- Работы\n- Потребности","Далее","Отмена");
		}
		case dDonateNumber:
		{
		    if(!response) return true;
		    NumberCheck(playerid,inputtext);
		}
		case dAPass:
		{
		    if(!response) return true;
		    new string[150];
			format(string,sizeof(string),"SELECT * FROM `accounts` WHERE `apass` = '%s'",inputtext);
			mysql_query(string);
			mysql_store_result();
			if(mysql_num_rows() > 0)
			{
				SendClientMessage(playerid,CINFO,"Вы успешно вошли под администратором.");
  			}
			else
			{
			    SendClientMessage(playerid,CRED,"Ошибка. Код введён не верно.");
			    NewKick(playerid);
			}
			mysql_free_result();
		}
		case dAPassNew:
		{
		    if(!response) return true;
		    new apassn = strlen(inputtext),string[150];
		    if(apassn < 10 || apassn > 20) return ShowPlayerDialog(playerid,dAPassNew,DIALOG_STYLE_MSGBOX,"Настройки администратора","Введите Ваш будущий админ пароль.\nОн должен состоять мин. - 10 сим. и макс. - 20 сим.\nЖелательно в нём должны присутствовать буквы и цифры.","Ок","");
			format(string,sizeof(string),"UPDATE `accounts` SET `apass` = '%s' WHERE `nickname` = '%s'",inputtext,pData[playerid][pNickname]);
			mysql_query(string);
			SendClientMessage(playerid,CORANGE,"Вы успешно установили новый админ. пароль.\nЗапишите куда-нибудь его, что бы не забыть его.");
		}
		case dRadio:
		{
		    if(!response) return true;
      		switch(listitem)
    		{
			    case 0: PlayAudioStreamForPlayer(playerid, "http://radio02-cn03.akadostream.ru:8108/shanson128.mp3");
			    case 1: PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8101/rr_128");
			    case 2: PlayAudioStreamForPlayer(playerid, "http://stream05.akaver.com/skyradio_hi.mp3");
				case 3: PlayAudioStreamForPlayer(playerid, "http://radio.zaycev.fm:9002/rnb/ZaycevFM(128).m3u");
				case 4: StopAudioStreamForPlayer(playerid),SendClientMessage(playerid,CINFO,"Вы выключили радио");
			}
		}
	}
	return 0;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	GetVehicleDamageStatus(vehicleid,gVehicles[vehicleid-1][vDemages][0],gVehicles[vehicleid-1][vDemages][1],gVehicles[vehicleid-1][vDemages][2],gVehicles[vehicleid-1][vDemages][3]);
	if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
	{
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pBusID] == vehicleid) {GetVehicleHealth(vehicleid,pTemp[i][pBusDemage]); break;}
		}
	}
	return 1;
}


public OnQueryError(errorid, error[], resultid, extraid, callback[], query[], connectionHandle)
{
	switch(resultid)
	{
		case msqRegister:
		{
			new playerid = extraid;
			SendClientMessage(playerid,CRED,"Произошла ошибка при регистрации");
			SendClientMessage(playerid,CWHITE,"Напишите /q чтобы Выйти");
			NewKick(playerid);
		}
	}
	printf("MySQL ERROR [%d]: %s. Query: %s",errorid,error,query);
	return 1;
}

public OnDynamicObjectMoved(objectid)
{
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(gPickups[pcupUnemploymentInfo] == pickupid)
	{
		if((pData[playerid][pFraction] < 3 && pData[playerid][pFraction] != 0) || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CGRAY,"Нельзя получать пособие, находясь во фракции");
		if(pData[playerid][pJob]) return SendClientMessage(playerid,CGRAY,"Вы не безработный");
		if(!pData[playerid][pUnemployment]) ShowPlayerDialog(playerid,dUnemplyment,0,"Пособие по безработице","{"#cWHITE"}Хотите ли вы получать пособие по безработице","Да","Нет");
		else SendClientMessage(playerid,CWHITE,"Вы уже получаете пособие по безработице");
	}
	return 1;
}

public OnPlayerPressButton(playerid,buttonid)
{
	if(buttonid >= gPDDoorButton[0] && buttonid <= gPDDoorButton[PD_DOOR_COUNT - 1])
	{
  		if(pData[playerid][pFraction] != 9) return SendClientMessage(playerid,CGRAY,"У вас нет карточки для открытия этой двери");
		new id = buttonid - gPDDoorButton[0];
		new prison = GetPlayerVirtualWorld(playerid) - 1;
		if(prison < 0 || prison > 2) return SendClientMessage(playerid,CGRAY,"Ошибка (#109)");
		if(id >= 3)
		{
			if(!gPDCamStatus[id-3]) {MoveDynamicObject(gPDDoors[id][prison],gPDDoorOPos[id][0],gPDDoorOPos[id][1],gPDDoorOPos[id][2],PD_DOOR_SPEED,gPDDoorOPos[id][3],gPDDoorOPos[id][4],gPDDoorOPos[id][5]); gPDCamStatus[id-3] = true;}
			else {MoveDynamicObject(gPDDoors[id][prison],gPDDoorCPos[id][0],gPDDoorCPos[id][1],gPDDoorCPos[id][2],PD_DOOR_SPEED,gPDDoorCPos[id][3],gPDDoorCPos[id][4],gPDDoorCPos[id][5]); gPDCamStatus[id-3] = false;}
		}
		else
		{
			MoveDynamicObject(gPDDoors[id][prison],gPDDoorOPos[id][0],gPDDoorOPos[id][1],gPDDoorOPos[id][2],PD_DOOR_SPEED,gPDDoorOPos[id][3],gPDDoorOPos[id][4],gPDDoorOPos[id][5]);
			SetTimerEx("ReturnPDDoor",PD_DOOR_DELAY,false,"ii",id,prison);
		}
	}
	if(buttonid == gBarrierButton[2])
	{
		if(pData[playerid][pFraction] != 8) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только армейцам");
		MoveDynamicObject(gBarrier[2],462.21, 2540.05, 11.31, 1.0);
		MoveDynamicObject(gBarrier[3],466.81, 2546.64, 11.31, 1.0);
		SetTimerEx("CloseBarrier",10000,false,"i",2);
	}
	if(buttonid == gBarrierButton[0])
	{
		if(pData[playerid][pFraction] != 8) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только армейцам");
		MoveDynamicObject(gBarrier[0],346.70, 1799.90, 18.10,0.02,0.00, 0.00, 34.00);
		SetTimerEx("CloseBarrier",10000,false,"i",0);
	}
	if(buttonid == gBarrierButton[3])
	{
		if(pData[playerid][pFraction] != 9 && (pData[playerid][pSubfraction] != 1 || pData[playerid][pSubfraction] != 2 || pData[playerid][pSubfraction] != 3)) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только сотрудникам LSPD/SFPD/LVPD");
		MoveDynamicObject(gBarrier[4],525.6920166,-357.7460022,1004.2709961,0.0001,0.00, 0.00, 320.00);
		SetTimerEx("CloseBarrier",10000,false,"i",3);
	}
	if(buttonid == gBarrierButton[4])
	{
		if(pData[playerid][pFraction] != 9 || pData[playerid][pSubfraction] != 2) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только сотрудникам SFPD");
		MoveDynamicObject(gBarrier[5],515.6669921875, -348.0673828125, 1005.5289916992,0.001,0.00, 0.00, 65.00);
		SetTimerEx("CloseBarrier",10000,false,"i",4);
	}
	if(buttonid == gBarrierButton[5])
	{
		if(pData[playerid][pFraction] != 9 || pData[playerid][pSubfraction] != 2) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только сотрудникам SFPD");
		MoveDynamicObject(gBarrier[6],-1701.43, 687.70, 24.593,0.001,0.00, 25.00, 90.00);
		SetTimerEx("CloseBarrier",10000,false,"i",5);
	}
	if(buttonid == gBarrierButton[6])
	{
		if(pData[playerid][pFraction] != 8) return SendClientMessage(playerid,CGRAY,"Данная функция доступна только армейцам");
		MoveDynamicObject(gBarrier[7],141.80, 1965.30, 19.303, 0.001,  0.00, 345.0, 0.00);
		SetTimerEx("CloseBarrier",10000,false,"i",6);
	}
	return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(playertextid == PTD_autosalon[playerid][11])
	{
			pTemp[playerid][pOff]++;
			pTemp[playerid][pSellCarSelect] = false;
			new carclass = GetPVarInt(playerid,"sellcarClass");
			DeletePVar(playerid,"sellcarID");
			DeletePVar(playerid,"sellcarClass");
			TogglePlayerControllable(playerid,1);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			SetCameraBehindPlayer(playerid);
			pTemp[playerid][pJustTP] = true;
			CancelSelectTextDraw(playerid);
			for(new t = 0; t < 13; t++) PlayerTextDrawHide(playerid, PTD_autosalon[playerid][t]);
			switch(carclass)
			{
				case 0: SetPlayerPos(playerid,555.1915,-1293.4724,17.2482);
				case 1: SetPlayerPos(playerid,-1968.6801,619.9734,35.1719);
				case 2: SetPlayerPos(playerid,1658.5024,2199.9299,10.8203);
				case 3: SetPlayerPos(playerid,507.6233,-1608.4905,16.3576);
			}
			return true;
	}
	else if(playertextid == PTD_autosalon[playerid][3])
	{
			new carclass = GetPVarInt(playerid,"sellcarClass");
			new carid = GetPVarInt(playerid,"sellcarID");
			new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
			GetVehiclePos(carid,x,y,z);
			if(carclass != 3 && aSellCar[carclass+1] == carid+1) carid = aSellCar[carclass]; //Последняя машина
			else if(carclass == 3 && aSellCar[4] == carid) carid = aSellCar[carclass]; //Последняя машина
			else carid++;
			SetPVarInt(playerid,"sellcarID",carid);
			GetVehiclePos(carid,x2,y2,z2);
			InterpolateCameraLookAt(playerid,x,y,z,x2,y2,z2,1300,CAMERA_MOVE);
			y = y + 5.0;
			z = z + 1.0;
			y2 = y2 + 5.0;
			z2 = z2 + 1.0;
			InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,1300,CAMERA_MOVE);
			pTemp[playerid][pSellCarSelect] = false;
			SetTimerEx("AbleToSelectCar",1200,false,"i",playerid);
			new model = GetVehicleModel(carid);
			new modelid = model - 400;
			new mes[256],fuelname[30];
			switch(gTransport[modelid][trFuelMark])
			{
				case 0: strcat(fuelname,"Diesel");
				case 1: strcat(fuelname,"Regular");
				case 2: strcat(fuelname,"Midgrade");
				case 3: strcat(fuelname,"Premium");
				case 4: strcat(fuelname,"Super Premium");
			}
			format(mes,sizeof(mes),"MODEL:     %s",gTransport[modelid][trName]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][2],mes);
			format(mes,sizeof(mes),"MAX. FUEL:    %d L",gTransport[modelid][trTank]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][4],mes);
			format(mes,sizeof(mes),"%d $",gTransport[modelid][trPrice]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][6],mes);
			format(mes,sizeof(mes),"ENGINE:    %s",fuelname);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][7],mes);
			format(mes,sizeof(mes),"CONS.:    %d l/100km",gTransport[modelid][trConsumption]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][8],mes);
			return true;
	}
	else if(playertextid == PTD_autosalon[playerid][1])
	{
		    new carclass = GetPVarInt(playerid,"sellcarClass");
			new carid = GetPVarInt(playerid,"sellcarID");
			new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
			GetVehiclePos(carid,x,y,z);
			if(aSellCar[carclass] == carid && carclass != 3) carid = aSellCar[carclass+1]-1; //Первая машина
			else if (aSellCar[carclass] == carid && carclass == 3) carid = aSellCar[carclass+1];
			else carid--;
			SetPVarInt(playerid,"sellcarID",carid);
			GetVehiclePos(carid,x2,y2,z2);
			InterpolateCameraLookAt(playerid,x,y,z,x2,y2,z2,1300,CAMERA_MOVE);
			y = y + 5.0;
			z = z + 1.0;
			y2 = y2 + 5.0;
			z2 = z2 + 1.0;
			InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,1300,CAMERA_MOVE);
			pTemp[playerid][pSellCarSelect] = false;
			SetTimerEx("AbleToSelectCar",1200,false,"i",playerid);
			new model = GetVehicleModel(carid);
			new modelid = model - 400;
			new mes[256],fuelname[30];
			switch(gTransport[modelid][trFuelMark])
			{
				case 0: strcat(fuelname,"Diesel");
				case 1: strcat(fuelname,"Regular");
				case 2: strcat(fuelname,"Midgrade");
				case 3: strcat(fuelname,"Premium");
				case 4: strcat(fuelname,"Super Premium");
			}
			format(mes,sizeof(mes),"MODEL:     %s",gTransport[modelid][trName]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][2],mes);
			format(mes,sizeof(mes),"MAX. FUEL:    %d L",gTransport[modelid][trTank]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][4],mes);
			format(mes,sizeof(mes),"%d $",gTransport[modelid][trPrice]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][6],mes);
			format(mes,sizeof(mes),"ENGINE:    %s",fuelname);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][7],mes);
			format(mes,sizeof(mes),"CONS.:    %d l/100km",gTransport[modelid][trConsumption]);
			PlayerTextDrawSetString(playerid,PTD_autosalon[playerid][8],mes);
			return true;
	}
	else if(playertextid == PTD_autosalon[playerid][9])
	{
			pTemp[playerid][pOff]++;
			if(pData[playerid][pCar]) return SendClientMessage(playerid,CGRAY,"Вам нужно продать свою машину перед тем как купить новую");
			new carid = GetPVarInt(playerid,"sellcarID");
			new model = GetVehicleModel(carid);
			new modelid = model - 400;
			if(GetPlayerMoneyEx(playerid) < gTransport[modelid][trPrice]) return SendClientMessage(playerid,CGRAY,"У Вас недостаточно денег для покупки этого т/с");
			ShowPlayerDialog(playerid,dBuyCarC1,2,"Выберите цвет номер 1","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6. Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8. РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Выход");
            return true;
	}
	else if(playertextid == StatsTextdraw[32][playerid])
	{
	    if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"Вы заглушены и не можете писать в репорт");
		ShowPlayerDialog(playerid,dReport,1,"Репорт","Введите вопрос / жалобу:","ОК","Отмена");
	}
	else if(playertextid == StatsTextdraw[36][playerid])
	{
	    ShowPlayerDialog(playerid,dCommandList,2,"Команды сервера","1.Общие\n2.Работы\n3.Чаты\n4.Дом\n5.Бизнес\n6.Фракция\n7.Лидерам\n8.Языки","OK","Отмена");
	}
	else if(playertextid == StatsTextdraw[43][playerid]) {
	
		ShowPlayerDialog(playerid,dDonate,2,"Услуги доната","1.Игровая валюта (1р. = $1000)\n2.Смена ника (10р)\n3.Смена цвета кожи и национальности (150р)\n4.Смена игрового возраста (100р)\n5. Снятие варна (100р)\n6. Купить аптечку (25р)\n7. Скин Woozie (400р)\n8. Stretch - Лимузин (550руб)\n9. Bullet (600р)\n10. Maverick (450р)\n11. Смена номера телефона\n{"#cINFO"}12.Проверить баланс","Далее","Отмена");
	}
	else if(playertextid == StatsTextdraw[46][playerid])
	{
		ShowPlayerDialog(playerid,dHelpInfo,2,"Помощь по серверу.","- О сервере\n- Role Play\n- Начало игры\n- Общение\n- Транспорт\n- Жильё\n- Бизнесы\n- Организации\n- Работы\n- Потребности","Далее","Отмена");
	}
	else if(playertextid == StatsTextdraw[40][playerid])
	{
	    ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"Безопасность","1. Изменить пароль\n2. Код безопасности\n3. Подтверждение E-Mail адреса\n4. Привязка номера телефона","ОК","Отмена");
    }
    else if(playertextid == StatsTextdraw[50][playerid])
	{
        CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 61; i++) PlayerTextDrawHide(playerid, StatsTextdraw[i][playerid]);
    }
    else if(playertextid == PTD_adminSpec[playerid][14]) {
        left_adminSpec(playerid, GetPVarInt(playerid, "spec_activ")-1);
    }
    else if(playertextid == PTD_adminSpec[playerid][15]) {
        right_adminSpec(playerid, GetPVarInt(playerid, "spec_activ")-1);
    }
    else if(playertextid == PTD_adminSpec[playerid][16]) {
        end_adminSpec(playerid);
    }
    return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(clickedid == Text:INVALID_TEXT_DRAW) // ESC
 	{
	  	if(GetPVarInt(playerid, "spec_mouse") == 1  && GetPVarInt(playerid, "spec_activ") > 0)
	  	{
		   GameTextForPlayer(playerid, "SPEC: HIDE CURSOR", 800, 5);
		   DeletePVar(playerid, "spec_mouse"), CancelSelectTextDraw(playerid);
  		}
		if(GetPVarInt(playerid,"menumm") == 1)
	 	{
	 	    SetPVarInt(playerid, "menumm", 0);
		 	for(new i = 0; i < 61; i++) PlayerTextDrawHide(playerid, StatsTextdraw[i][playerid]);
		}
 	}
	if(clickedid >= gEateryTextDraw[5] && clickedid <= gEateryTextDraw[8]) {
		new bid = pTemp[playerid][pSelectedBusinessID], id = _:clickedid - _:gEateryTextDraw[5];
		new cost = gEateryCosts[id] * (gBusiness[bid][busiPrice] * 25);
		SetPVarInt(playerid, "eatery_sel", id);
		new mes[128];
		format(mes,sizeof(mes),"{"#cWHITE"}Прием пищи обойдется Вам в {"#cRED"}$%d{"#cWHITE"}.",cost);
		ShowPlayerDialog(playerid,dBuyFood,0,"Закусочная",mes,"Купить","Отмена");
	}
	if(GetPVarInt(playerid, "eatery_td")) HidePlayerEateryTD(playerid), DeletePVar(playerid, "eatery_td");
	if(clickedid >= gBarTextDraw[6] && clickedid <= gBarTextDraw[10]) {
		new bid = pTemp[playerid][pSelectedBusinessID], id = _:clickedid - _:gBarTextDraw[6];
		new cost = gBarCosts[id] * (gBusiness[bid][busiPrice] * 10);
		SetPVarInt(playerid, "bar_sel", id);
		new mes[128], str[64];
		if(id == 4) str = "закуски";
		else str = "выпивки";
		format(mes, sizeof(mes), "{"#cWHITE"}Покупка этой %s обойдётся Вам в {"#cRED"}$%i{"#cWHITE"}.", str, cost);
		ShowPlayerDialog(playerid, dBar, 0, "Бар", mes, "Купить", "Отмена");
	}
	if(GetPVarInt(playerid, "bar_td")) HidePlayerBarTD(playerid), DeletePVar(playerid, "bar_td");
	if(clickedid == gSkinShopDraw[0]) {
		new
		    b_skins[114][2],
		    b_class = GetPVarInt(playerid, "clothes_class"),
		    b_sel = GetPVarInt(playerid, "clothes_sel"),
		    b_skin,
		    b_price,
		    b_max = 0,
		    b_str[32]
		;
		for(new x, z; x < sizeof(gSkins); x ++) {
			b_skin = GetSkinID(b_class, pData[playerid][pSex], pData[playerid][pColor], x);
			b_price = GetSkinPrice(x);
			if(!b_skin) continue;
			b_skins[z][0] = b_skin;
			b_skins[z][1] = b_price;
			z ++;
		}
		for(new x; x < sizeof(b_skins) - 1; x ++) {
		    if(!b_skins[x + 1][0]) {
				b_max = x;
				break;
			}
		    else continue;
		}
		if(b_sel == b_max) b_sel = 0;
		else b_sel ++;
		SetPlayerSkin(playerid, b_skins[b_sel][0]);
		format(b_str, 32, "~y~$%i", b_skins[b_sel][1]);
		PlayerTextDrawSetString(playerid, gSkinShopPriceDraw[playerid], b_str);
		SetPVarInt(playerid, "clothes_sel", b_sel);
	}
	else if(clickedid == gSkinShopDraw[1]) {
		new
		    b_skins2[114][2],
		    b_class = GetPVarInt(playerid, "clothes_class"),
		    b_sel = GetPVarInt(playerid, "clothes_sel"),
		    b_skin,
		    b_price,
		    b_max = 0,
		    b_str[32]
		;
		for(new x, z; x < sizeof(gSkins); x ++) {
			b_skin = GetSkinID(b_class, pData[playerid][pSex], pData[playerid][pColor], x);
			b_price = GetSkinPrice(x);
			if(!b_skin) continue;
			b_skins2[z][0] = b_skin;
			b_skins2[z][1] = b_price;
			z ++;
		}
		for(new x; x < sizeof(b_skins2) - 1; x ++) {
		    if(!b_skins2[x + 1][0]) {
				b_max = x;
				break;
			}
		    else continue;
		}
		if(b_sel - 1 < 0) b_sel = b_max;
		else b_sel --;
		SetPlayerSkin(playerid, b_skins2[b_sel][0]);
		format(b_str, 32, "~y~$%i", b_skins2[b_sel][1]);
		PlayerTextDrawSetString(playerid, gSkinShopPriceDraw[playerid], b_str);
		SetPVarInt(playerid, "clothes_sel", b_sel);
	}
	else if(clickedid == gSkinShopDraw[3]) {
		new
			b_skin = GetPlayerSkin(playerid),
			b_index = -15
		;
		for(new x; x < sizeof(gSkins); x ++) {
			if(gSkins[x][skinID] != b_skin) continue;
			b_index = x;
			break;
		}
		SetPVarInt(playerid, "clothes_select", b_index);
		SPFD(playerid,dBuySkin,0,"Покупка одежды","Да","Нет","{"#cWHITE"}Вы хотите купить эту одежду за {"#cRED"}$%i{"#cWHITE"}?",GetSkinPrice(b_index));
	}
	else if(clickedid == gSkinShopDraw[4] || (GetPVarInt(playerid, "clothes_td") && clickedid == Text:INVALID_TEXT_DRAW)) {
		if(pTemp[playerid][pChangingSkin]) {
			HidePlayerClothesTD(playerid);
			pTemp[playerid][pJustTP] = true;
			SetPlayerPos(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "interior"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "vw"));
			SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
			TogglePlayerControllable(playerid, 1);
			SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid, "posx");
			DeletePVar(playerid, "posy");
			DeletePVar(playerid, "posz");
			DeletePVar(playerid, "posa");
			DeletePVar(playerid, "interior");
			DeletePVar(playerid, "vw");
			DeletePVar(playerid, "clothes_sel");
			DeletePVar(playerid, "clothes_class");
			pTemp[playerid][pChangingSkin] = false;
		}
	}
	else if(clickedid >= gInterfaceElement[C_ELEMENT_BACKGROUND] && clickedid <= gInterfaceElement[C_ELEMENT_EXIT])
	{
		if(clickedid == gInterfaceElement[C_ELEMENT_WANTED]) ComputerPage(playerid,C_PAGE_WANTED);
		else if(clickedid == gInterfaceElement[C_ELEMENT_HOME]) ComputerPage(playerid,C_PAGE_MAIN);
		else if(clickedid == gInterfaceElement[C_ELEMENT_GOTO_WANTED_LIST]) ComputerPage(playerid,C_PAGE_WANTED);
		else if(clickedid == gInterfaceElement[C_ELEMENT_BEARING]) ComputerPage(playerid,C_PAGE_WANTED_INFO,GetPVarInt(playerid,"bearee"));
		else if(clickedid == gInterfaceElement[C_ELEMENT_EXIT]) ExitComputer(playerid);
		else if(clickedid == gInterfaceElement[C_ELEMENT_NEXT])
		{
			if(GetPVarInt(playerid,"wanted_page")+1 < 53)
			{
				SetPVarInt(playerid,"wanted_page",GetPVarInt(playerid,"wanted_page")+1);
				ComputerPage(playerid,C_PAGE_WANTED);
			}
		}
		else if(clickedid == gInterfaceElement[C_ELEMENT_BACK])
		{
			if(GetPVarInt(playerid,"wanted_page")-1 >= 0)
			{
				SetPVarInt(playerid,"wanted_page",GetPVarInt(playerid,"wanted_page")-1);
				ComputerPage(playerid,C_PAGE_WANTED);
			}
		}
		if(clickedid >= gInterfaceElement[C_ELEMENT_WANTED_LIST][0] && clickedid <= gInterfaceElement[C_ELEMENT_WANTED_LIST][MAX_PLAYERS-1])
		{
			new slot = _:clickedid - _:gInterfaceElement[C_ELEMENT_WANTED_LIST][0];
			new id = gInterfaceWantedList[slot];
			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Игрок не найден");
			if(!IsPlayerConnected(id))
			{
				RemovePlayerFromWantedList(id);
				return SendClientMessage(playerid,CGRAY,"Подозреваемый вышел из игры");
			}
			ComputerPage(playerid,C_PAGE_WANTED_INFO,id);
		}
	}
	else if(clickedid == Text:INVALID_TEXT_DRAW)
	{
	}
    return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(GetPVarInt(playerid,"selectpoint") > 0 && GetPVarInt(playerid,"selectpoint") < 3)
	{
		SetPVarInt(playerid,"selectpoint",2);
		SetPVarFloat(playerid,"selectpointX",fX);
		SetPVarFloat(playerid,"selectpointY",fY);
		SetPlayerMapIcon(playerid,iconTaxi,fX,fY,fZ,0,CYELLOW,1);
		SendClientMessage(playerid,CINFO,"Вы установили {"#cYELLOW"}место назначения. {"#cINFO"}Чтобы подтвердить, нажмите {"#cWHITE"}~k~~CONVERSATION_YES~");
	}
	return 1;
}

stock CaptureStartD()
{
	foreach(new i:Player)
	{
		if(IsAMafia(i))
		{

		}
	}
}
stock CaptureUpdD(bandkiller)
{
	foreach(new i:Player)
	{
		if(IsAMafia(i))
		{
			if(GangInfoD[bandkiller][gangnumber] == 1)
			{
			}
			else
			{

			}
		}
	}
}

stock CaptureEndD()
{
	foreach(new i:Player)
	{
		if(IsAMafia(i))
		{
			GangInfoD[gNapadMafia][score] = 0;
			GangInfoD[gSecury][score] = 0;
		}
	}
}


stock GzCheckD()
{
	for(new i =1;i<=TOTALBIZZ;i++)
	{
		if(ZoneOnBattleM[i] == 1 && GZSafeTimeM[i] == 0)
		{
		    if(GangInfoD[gSecury][score] < GangInfoD[gNapadMafia][score])//|| )
			{
			    gBusiness[MafiaID][busiMafia] = gNapadMafia;
			    UpdateBusinessData(MafiaID+1,"busiMafia",gBusiness[MafiaID][busiMafia]);
                IsStrela = 0;
                UpdateBusinessText(MafiaID);
                GangZoneHideForAll(PokasGZ);
                GangZoneDestroy(PokasGZ);
                SendFMes(gSecury, CRED, "[F] Вы проиграли бизнес перешел к нападающим");
                SendFMes(gNapadMafia, COLOR_LIME, "[F] Вы выиграли бизнес ваш.");
                CaptureEndD();
				MafiaID = 0;
				gNapadMafia = 0;
				gSecury = 0;
			}
			else if(GangInfoD[gSecury][score] > GangInfoD[gNapadMafia][score])//|| )
			{
                IsStrela = 0;
                GangZoneHideForAll(PokasGZ);
                GangZoneDestroy(PokasGZ);
                SendFMes(gNapadMafia, CRED, "[F] Вы проиграли бизнес остался у врага");
                SendFMes(gSecury, COLOR_LIME, "[F] Вы выиграли бизнес остался");
                CaptureEndD();
				MafiaID = 0;
				gNapadMafia = 0;
				gSecury = 0;
			}
		}
	}
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
	SetPVarInt(playerid, "GMTest", 0);
	if(weaponid == 23 && pData[issuerid][pFraction] == 9)
	{
		if(pTemp[issuerid][pTazerGun])
		{
			new id = playerid;
			if(pData[id][pFraction] >= 8 && pData[id][pFraction] <= 11) return   SendClientMessage(issuerid, CGRAY, "Вы не можете ударить тазером законника");
			if(IsPlayerInAnyVehicle(id)) return SendClientMessage(issuerid, CGRAY, "Человек в машине!");
			if(pTemp[id][pTazer] || pTemp[id][pCuffee] == id) return SendClientMessage(issuerid,CGRAY,"Игрок уже оглушен / в наручниках");
			new mes[128];
			if(pData[issuerid][pSex] == 1) format(mes,sizeof(mes),"ударил электрошокером %s",pData[id][pNickname]);
			else format(mes,sizeof(mes),"ударила электрошокером %s",pData[id][pNickname]);
			MeAction(issuerid,mes);
			TogglePlayerControllable(id, 0);
			SetPlayerSpecialAction(id,SPECIAL_ACTION_HANDSUP);
			pTemp[id][pTazer] = 15;
		}
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	if (damagedid >= MAX_PLAYERS) return 1;
	if(damagedid != INVALID_PLAYER_ID && !pTemp[damagedid][pControllable] && (pTemp[damagedid][pTazer] || pTemp[damagedid][pCuffee] == damagedid))
	{
		new Float:health = pData[damagedid][pHealth];
		health -= amount;
		if(health < 0.0) health = 0.0;
		SetPlayerHealthEx(damagedid,health);
	}
	if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 9)
	{
		for(new i;i<sizeof(gAreas[arGreenZone]);i++)
		{
			if(IsPlayerInDynamicArea(playerid,gAreas[arGreenZone][i]))
			{
				pTemp[playerid][pDM] += 1;
				if(pTemp[playerid][pDM] >= 3)
				{
					SendClientMessage(playerid,CBADINFO,"Вы были кикнуты за ДМ");
					NewKick(playerid);
				}
				else
				{
					new mes[64];
					format(mes,sizeof(mes),"ДМ в зеленых зонах запрещен (%d/3).",pTemp[playerid][pDM]);
					ShowPlayerDialog(playerid,dMes,0,"Предупреждение",mes,"ОК","");
				}
			}
		}
	}
	return 1;
}
public AnimationDelay(playerid,id)
{
	switch(id)
	{
		case 1: ApplyAnimation(playerid,"CARRY","crry_prtial",1.0,1,1,1,1,1,1);
	}
}
forward WoodLoader(playerid);
public WoodLoader(playerid)
{
	MoveObject(objstart[0][playerid], -1103.5000000,-1622.4013672,76.6729965, 2);
	SetTimerEx("WoodLoaderEnd",5000,false,"i",playerid);
	return 1;
}
forward WoodLoaderEnd(playerid);
public WoodLoaderEnd(playerid)
{
	DestroyObject(objstart[0][playerid]);
	objstart[1][playerid] = CreateObject(18720,-1103.6800537,-1621.8879395,76.8980026,0.0,0.0,96.0); //object(prt_watersplash) (1)
	objstart[2][playerid] = CreateObject(18720,-1103.7519531,-1622.8515625,76.8980026,0.0,0.0,96.0);
	SetTimerEx("WoodLoaderEndE",3000,false,"i",playerid);
	return 1;
}
forward WoodLoaderEndE(playerid);
public WoodLoaderEndE(playerid)
{
	DestroyObject(objstart[1][playerid]);
	DestroyObject(objstart[2][playerid]);
	return 1;
}
public AbleToSelectCar(playerid)
{
	pTemp[playerid][pSellCarSelect] = true;
}

public GunReady(playerid)
{
	new objectid = GetPVarInt(playerid,"pgunobject");
	DeletePVar(playerid,"pgunobject");
	DestroyDynamicObject(objectid);
	DeletePVar(playerid,"pgunmodel");
	new locat = GetPVarInt(playerid,"pgunlocat") - 1;
	DeletePVar(playerid,"pgunlocat");
	gGunWorkTableStat[locat] = false;
	RemovePlayerAttachedObject(playerid,0);
	RemovePlayerAttachedObject(playerid,1);
	if(!IsPlayerInDynamicArea(playerid,gAreas[arGunWorkWork][locat])) return SendClientMessage(playerid,CGRAY,"Вы потреяли все детали по дороге. (( Не используй баги ))");
	if(GetPVarInt(playerid,"varioty") > 0)
	{
		new mat1 = GetPVarInt(playerid,"varioty");
		new vick = RandomEx(0,100);
		if(vick < mat1)
		{
			SendClientMessage(playerid,CGRAY,"Вы сделали бракованную деталь");
			SetPVarInt(playerid,"gunamount",0);
			return 1;
		}
		else SetPVarInt(playerid,"varioty",mat1-5);
	}
	SetPVarInt(playerid,"gunamount",2);
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
	SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
	SendClientMessage(playerid,CWHITE,"Вы собрали оружие. Отнесите его на склад");
	SetPlayerCheckpoint(playerid,2565.6428,-1292.8887,1045.0704,9.0);
	return 1;
}
stock Convert(seconds, stringTo[], size = sizeof(stringTo))
{
	stringTo[0] = 0x0;
	new result[4];
	result[0] = floatround(seconds / (3600 * 24));
	result[1] = floatround(seconds / 3600);
	result[2] = floatround((seconds / 60) - (result[1] * 60));
	result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
	switch(result[0])
	{
	case 0:
		{
			switch(result[1])
			{
				case 0: format(stringTo,size,"%02d:%02d",result[2],result[3]);
				default: format(stringTo,size,"%d:%02d:%02d",result[1],result[2],result[3]);
			}
		}
	}
	return stringTo;
}
forward ReklamaTimer();
public ReklamaTimer()
{
    SendClientMessageToAll(-1,"{FFFFFF}Для пополнения счёта зайдите на сайт {ff4d00}v-sampe.ru{FFFFFF}, в раздел донат.");
	SendClientMessageToAll(-1,"{FFFFFF}Для доступа к меню введите {4f7942}/mn.{FFFFFF} Заметили читера? - {ff0000}/report ID.");
}
public MainTimer()
{
    new h,m,s;
	gettime(h,m,s);
	WHDataUpdate();
	for(new i;i<6;i++) //Столы с заготовками
	{
		if(gGunWorkTime[i]) gGunWorkTime[i]--;
	}
	//ганг зоны
	for(new i;i<20;i++) {
		if(FrakCD[i] > 0) {
			FrakCD[i]--;
			if(FrakCD[i] == 0) SendFMes(i,COLOR_LIGHTRED,"[F] Ваша банда снова может участвовать в захвате зон");
		}
	}
	GzCheckD();
	GzCheck();
    for(new i = 1; i <= TOTALGZ; i++)
	{
		if(GZSafeTime[i] > 0)
		{
			GZSafeTime[i]--;
			new stringText[30];
			Convert(GZSafeTime[i], stringText);
			TextDrawSetString(CaptTime, stringText);
   			if(GZSafeTime[i] == 60 || GZSafeTime[i] == 600)
			{
			    new string[127];
                format(string,127,"До окончания захвата территории осталось %d секунд.",GZSafeTime[i]);
				SendFMes(GZMZ[i][gNapad],0xff2400FF,string);
				SendFMes(GZMZ[i][gFrak],0xff2400FF,string);
			}
			if(GZSafeTime[i] == 0 && ZoneOnBattle[i] == 1)
			{
			    new string[127];
  				format(string,127,"Захват территории был окончен!");
				SendFMes(GZMZ[i][gNapad],0xff2400FF,string);
				SendFMes(GZMZ[i][gFrak],0xff2400FF,string);
			}
		}
	}
	//Очередь в загрузке дальнобоев
	for(new i2;i2<2;i2++)
	{
		new text[256];
		strcat(text,"{"#cYELLOW"}  Очередь на загрузку:{"#cWHITE"}");
		for(new i;i<10;i++)
		{
			if(gTruckLoadTurn[i2][i] != INVALID_PLAYER_ID && !IsPlayerConnected(gTruckLoadTurn[i2][i])) gTruckLoadTurn[i2][i] = INVALID_PLAYER_ID;
			if(i != 9 && gTruckLoadTurn[i2][i] == INVALID_PLAYER_ID && gTruckLoadTurn[i2][i+1] != INVALID_PLAYER_ID) {gTruckLoadTurn[i2][i] = gTruckLoadTurn[i2][i+1]; gTruckLoadTurn[i2][i+1] = INVALID_PLAYER_ID;}
			if(gTruckLoadTurn[i2][i] != INVALID_PLAYER_ID) format(text,sizeof(text),"%s\n%d. %s",text,i+1,pData[gTruckLoadTurn[i2][i]][pNickname]);
			else format(text,sizeof(text),"%s\n%d. -",text,i+1);
		}
		UpdateDynamic3DTextLabelText(gTruckLoadTurnText[i2], CWHITE, text);
		if(gTruckLoadTurn[i2][0] != INVALID_PLAYER_ID)
		{
			new playerid = gTruckLoadTurn[i2][0];
			new amount = GetPVarInt(playerid,"truckamount")*1000;
			if(IsPlayerConnected(playerid))
			{
				if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
				{
					if(amount - pTemp[playerid][pTruckWeight] == 100)
					{
						pTemp[playerid][pTruckWeight] += 100;
						if(!i2) minesklad -= 100;
						else woodsklad -= 100;
						pTemp[playerid][pTruckWagonTime] = 60;
						SendClientMessage(playerid,CGREEN,"Ваша фура загружена. У Вас есть 1 минута чтобы прицепить её");
						SendClientMessage(playerid,CGREEN,"Если не успеете заказ будет аннулирован. Деньги не возвращаются");
					}
					else if(pTemp[playerid][pTruckWeight] < amount)
					{
						pTemp[playerid][pTruckWeight] += 100;
						if(!i2) minesklad -= 100;
						else woodsklad -= 100;
					}
					else if(pTemp[playerid][pTruckWagonTime]) pTemp[playerid][pTruckWagonTime]--;
					else
					{
						if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
						DestroyVehicle(pTemp[playerid][pTruckWagonID]);
						pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
						pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
						pTemp[playerid][pTruckWeight] = 0;
						gTruckLoadTurn[i2][0] = INVALID_PLAYER_ID;
						SendClientMessage(playerid,CRED,"Вы не успели. Заказ аннулирован");
					}
					if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID)
					{
						new mes[128];
						if(i2 == 0) format(mes,sizeof(mes),"{"#cGREEN"}Угля в фуре: {"#cWHITE"}%d/%d",pTemp[playerid][pTruckWeight],amount);
						if(i2 == 1) format(mes,sizeof(mes),"{"#cGREEN"}Древесины в фуре: {"#cWHITE"}%d/%d",pTemp[playerid][pTruckWeight],amount);
						UpdateDynamic3DTextLabelText(pTemp[playerid][pTruckWagonText],CWHITE,mes);
					}
				}
				else
				{
					SendClientMessage(playerid,CWHITE,"Подошла очередь загрузки вашей фуры");
					SendClientMessage(playerid,CWHITE,"После загрузки у Вас будет всего минута, чтобы прицепить её.");
					if(!i2) pTemp[playerid][pTruckWagonID] = CreateVehicle(450,1080.9932,-341.1987,73.9922,87.8339,1,1,-1);
					else pTemp[playerid][pTruckWagonID] = CreateVehicle(450,-1106.4139,-1612.6790,76.3739,90.9196,1,1,-1);
					if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
					pTemp[playerid][pTruckWagonText] = CreateDynamic3DTextLabel("_",CWHITE,0.0,0.0,2.0,20.0,INVALID_PLAYER_ID,pTemp[playerid][pTruckWagonID]);
				}
				if(!IsPlayerInDynamicArea(playerid,gAreas[arTruckWagonCoal]) && !IsPlayerInDynamicArea(playerid,gAreas[arTruckWagonWood]) && (gTruckLoadTurn[0][0] == playerid || gTruckLoadTurn[1][0] == playerid))
				{
					new vehicleid = GetPlayerVehicleID(playerid);
					if(IsTrailerAttachedToVehicle(vehicleid))
					{
						new trailerid = GetVehicleTrailer(vehicleid);
						if(pTemp[playerid][pTruckWagonID] == trailerid)
						{
							new loadid = GetPVarInt(playerid,"loadid");
							pTemp[playerid][pTruckLoadID] = loadid;
							DeletePVar(playerid,"loadid");
							SetPVarInt(playerid,"truckonroad",1);
							gTruckLoadTurn[loadid][0] = INVALID_PLAYER_ID;
							SendClientMessage(playerid,CWHITE,"Теперь можете спокойно ехать к оружейному заводу. (( /gps => Дальнобойщики => Оружейный завод ))");
						}
						else
						{
							SendClientMessage(playerid,CGRAY,"Вы были кикнуты за попытку угнать чужую фуру");
							NewKick(playerid);
						}
					}
				}
			}
		}
	}
	//выборы
	if(svt < gettime() && StartVibori == true)
	{
		StartVibori = false;
		for(new hs; hs < sizeof(KandidatsGolosa); hs++)
  		{
			Delete3DTextLabel(gVibMarKan[hs]);
   			Delete3DTextLabel(gVibMarKantwo[hs]);
		}
  		SendClientMessageToAll(0xD0E324AA, " Внимание! Выборы окончены. Посмотреть результаты голосования можно в мэрии");
	}
	//Очередь в автошколе
	new text[256];
	strcat(text,"{"#cINFO"}  Очередь на экзамен:{"#cWHITE"}");
	for(new i;i<20;i++)
	{
		if(gDSTurn[i] != INVALID_PLAYER_ID && !IsPlayerConnected(gDSTurn[i]) || (gDSTurn[i] != INVALID_PLAYER_ID && !pTemp[gDSTurn[i]][pWaitingExam])) gDSTurn[i] = INVALID_PLAYER_ID;
		if(i != 19 && gDSTurn[i] == INVALID_PLAYER_ID && gDSTurn[i+1] != INVALID_PLAYER_ID)
		{
			gDSTurn[i] = gDSTurn[i+1];
			gDSTurn[i+1] = INVALID_PLAYER_ID;
			if(!i)
			{
				new mes[128];
				format(mes,sizeof(mes),"%s ожидает Вызова на практический экзамен по вождению",pData[gDSTurn[0]][pNickname]);
				for(new j;j<MAX_PLAYERS;j++)
				{
					if(!IsPlayerConnected(j) || !pTemp[j][pLogined]) continue;
					else if(pData[j][pFraction] == 1)
					{
						SendClientMessage(j,CINFO,mes);
					}
				}
			}
		}
		if(gDSTurn[i] != INVALID_PLAYER_ID) format(text,sizeof(text),"%s\n%d. %s",text,i+1,pData[gDSTurn[i]][pNickname]);
	}
	UpdateDynamic3DTextLabelText(gDSTurnText,CWHITE,text);
	if(gGangRespawnCar) gGangRespawnCar--;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(gReconnectTime[i]) gReconnectTime[i]--;
		if(gClientTimeout[i])
		{
			gClientTimeout[i]--;
			if(!gClientTimeout[i])
			{
				format(gClientIP[i],24,"");
			}
		}
		if(!IsPlayerConnected(i)) {Kick(i); continue;}
		if(IsKicked(i)) continue;
		pTemp[i][pDDOS] = false;
		pTemp[i][pDDOS2] = false;
		pTemp[i][pKick2] = 0;
		if(pTemp[i][pAbletoGun]) pTemp[i][pAbletoGun] --;
		if(pTemp[i][pCoalmanTime]) pTemp[i][pCoalmanTime]--;
		if(pTemp[i][pAntiCleoWood] > 0) pTemp[i][pAntiCleoWood]--;
		if(GetPVarInt(i,"kmwoodtime") > 0) SetPVarInt(i,"kmwoodtime",0);
		if(pData[i][pAdmin] > 0) pData[i][pAdminm]++;
		if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
		{
			SendClientMessage(i,CGRAY,"Вы были забанены на 5 дней за использование JetPack");
			ServerBan(-1,i,5,"JetPack");
			NewKick(i);
		}

		pTemp[i][pOff] = 0;
		if(!pTemp[i][pAbletoHP] && !pTemp[i][pIsAFK] && !pData[i][pAdmin])
		{
			new Float:health, Float:armour;
			GetPlayerHealth(i,health);
			GetPlayerArmour(i,armour);
			if(pData[i][pHealth] < health)
			{
				SetPlayerHealth(i,pData[i][pHealth]);
				new Float:newhealth;
				GetPlayerHealth(i,newhealth);
				if(newhealth > pData[i][pHealth]) pTemp[i][pKick6]++;
				else pTemp[i][pKick6] = 0;
				if(pTemp[i][pKick6] > 3)
				{
					pTemp[i][pKick6] = 0;
				}
			}
			else if(pData[i][pHealth] > health && health > 0.0) pData[i][pHealth] = floatround(health);
			if(pTemp[i][pArmour] < armour)
			{
				SetPlayerArmour(i,pTemp[i][pArmour]);
			}
			else if(pTemp[i][pArmour] > armour) pTemp[i][pArmour] = armour;
		}
		else pTemp[i][pAbletoHP] = false;
		if(GetPlayerMoney(i) > pData[i][pMoney] && !pTemp[i][pIsAFK] && !pData[i][pAdmin])
		{
			if(pTemp[i][pCheat])
			{
				ResetPlayerMoney(i);
				GivePlayerMoney(i,pData[i][pMoney]);
				pTemp[i][pCheat] = false;
			}
			else pTemp[i][pCheat] = true;
		}
		else pTemp[i][pCheat] = false;
		if(pData[i][pJail])
		{
			pData[i][pJail]--;
			if(!pData[i][pJail])
			{
				SendClientMessage(i,CGRAY,"Вы были освобождены");
				new prison = pData[i][pPrison];
				SetPlayerInterior(i,0);
				SetPlayerVirtualWorld(i,0);
				SetPlayerPos(i,camExit[prison][0],camExit[prison][1],camExit[prison][2]);
				SetPlayerFacingAngle(i,camExit[prison][3]);
			}
		}
		pTemp[i][pAFK] ++;
		if(pTemp[i][pAFK] >= 3)
		{
			new mes[128];
			format(mes,sizeof(mes),"AFK %d сек.",pTemp[i][pAFK]);
			SetPlayerChatBubble(i,mes,CWHITE,10.0,1600);
			pTemp[i][pIsAFK] = true;
		}
		if((pTemp[i][pAFK] > 900 || pTemp[i][pDarkAFK] > 900) && !IsPlayerAdmin(i) && pData[i][pAdmin] < 3)
		{
			SendClientMessage(i,CGRAY,"Вы были кикнуты за простой в АФК");
			NewKick(i);
		}
		if(pTemp[i][pFillGoing])
		{
			new vehicleid = GetPlayerVehicleID(i);
			if(vehicleid && pTemp[i][pFillingAmount] > gVehicles[vehicleid-1][vFuel] + 0.5) gVehicles[vehicleid-1][vFuel] += 0.5;
			else if(vehicleid)
			{
				gVehicles[vehicleid-1][vFuel] = pTemp[i][pFillingAmount];
				TogglePlayerControllable(i,1);
				SendClientMessage(i,CGREEN,"Машина заправлена, можете ехать");
				pTemp[i][pFilling] = false;
				pTemp[i][pFillGoing] = false;
				pTemp[i][pFillingAmount] = 0.0;
				pTemp[i][pFillingSpeed] = 0.0;
				pTemp[i][pFillingAccel] = 0.0;
				pTemp[i][pFillingID] = 0;
				pTemp[i][pFillingMark] = 0;
				pTemp[i][pFillingPrice] = 0;
			}
		}
		if(GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID)
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(i,x,y,z);
			x -= 1.5;
			SetPlayerPos(i,x,y,z);
		}
		if(pTemp[i][pInHospital])
		{
			if(pData[i][pHealth] < 100.0) SetPlayerHealthEx(i,pData[i][pHealth]+1.0);
		}
		if(pTemp[i][pTazer])
		{
			pTemp[i][pTazer]--;
			if(!pTemp[i][pTazer])
			{
				SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
				TogglePlayerControllable(i,1);
			}
		}
		if(GetPlayerVirtualWorld(i) != pTemp[i][pWorld]) pTemp[i][pWorldKick]++;
		if(pTemp[i][pAdvertTime] > 0) pTemp[i][pAdvertTime]--;
	}
	if(gCurHour != h)
	{
		gCurHour = h;
		PayDay();
	}
	//Объявления
	if(gAdvertTime > 0) gAdvertTime--;
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(gAdvert[i][adTime]) gAdvert[i][adTime]--;
		if(gAdvert[i][adCheked] && !gAdvert[i][adTime])
		{
			gNewsMoney += gAdvert[i][adMoney];
			SaveNewsMoney();
			new mes[128];
			format(mes,sizeof(mes),"Объявление: %s. Отправитель: %s (тел. %d)",gAdvert[i][adText],gAdvert[i][adSender],gAdvert[i][adPhone]);
			SendClientMessageToAll(CGREEN,mes);
			format(mes,sizeof(mes),"\t\t\t\tПроверил: %s",gAdvert[i][adCheker]);
			SendClientMessageToAll(CGREEN,mes);
			strdel(gAdvert[i][adSender],0,24);
			gAdvert[i][adPhone] = 0;
			strdel(gAdvert[i][adText],0,100);
			strdel(gAdvert[i][adCheker],0,24);
			gAdvert[i][adBusy] = false;
			gAdvert[i][adCheked] = false;
			gAdvert[i][adCheking] = false;
			gAdvert[i][adTime] = 0;
			if(gAdvertCount > 0) gAdvertCount--;
		}
	}
	return 1;

}
public CarShotTimer()
{
	for(new i;i<MAX_PLAYERS;i++)
	{
		carshoter[i] = 0;
	}
	return 1;
}

public MainTimer2()
{
	foreach(new i:Player) {
   		if(IsKicked(i)) continue;
		if(GetPlayerState(i) == PLAYER_STATE_PASSENGER && !pTemp[i][pAFK] && checkcs[i] == 1)
    	{
        	new veher = GetPlayerVehicleID(i);
			new Float:xa, Float:ya, Float:za;
			new Float:b_x, Float:b_y, Float:b_z;
			GetPlayerPos(i, b_x, b_y, b_z);
			xa = b_x - pTemp[i][pX];
			ya = b_y - pTemp[i][pY];
			za = b_z - pTemp[i][pZ];
			new Float:distance;
			distance = floatsqroot(floatadd(floatadd(floatpower(xa,2),floatpower(ya,2)),floatpower(za,2)));
            if(distance > 55)
            {
                if(GetVehicleDriver(veher) != INVALID_PLAYER_ID) pTemp[i][pCarDriver] = 20;
                else if(pTemp[i][pCarDriver] <= 0)
				{
                    carshoter[i]++;
					if(carshoter[i] > 2)
					{
					    if(pData[i][pLevel] < 2)
					    {
               	   		}
					    if(pData[i][pLevel] > 3)
					    {
               	   		}
                	}
				}
				else pTemp[i][pCarDriver]--;
			}
		}
	}
	return 1;
}
public BusStop(playerid)
{
	new pos = pTemp[playerid][pBusPos];
	new route = pTemp[playerid][pBusRoute];
	if(pos == 99 || gBusCPs[route][pos+1][0] == 0.0)
	{
		new buslevel;
		if(pData[playerid][pBusSkill] >= BUS_LEVEL_2) buslevel = 2;
		if(pData[playerid][pBusSkill] >= BUS_LEVEL_3) buslevel = 3;
		pTemp[playerid][pBusPos] = 10;
		pData[playerid][pSalary] += gBusSalary[route];
		pData[playerid][pSalary] += buslevel * 200;
		pData[playerid][pBusSkill] ++;
		new query[512];
		format(query,sizeof(query),"UPDATE `accounts` SET `salary` = '%d', `busskill` = '%d' WHERE `id` = '%d'",pData[playerid][pSalary],pData[playerid][pBusSkill],pData[playerid][pMysqlID]);
		mysql_query(query);
		format(query,sizeof(query),"%d$ было добавлено к вашей зарплате.",gBusSalary[route]);
		SendClientMessage(playerid,CGREEN,query);
		if(pData[playerid][pBusSkill] == BUS_LEVEL_2 || pData[playerid][pBusSkill] == BUS_LEVEL_3) SendClientMessage(playerid,CGREEN,"Вы повысили свой уровень водителя автобуса");
	}
	else pTemp[playerid][pBusPos]++;
	SetNextBusCP(playerid,pTemp[playerid][pBusPos]);
	return 1;
}

public BusSpawn(playerid)
{
	if(GetPVarInt(playerid,"exitedtrans") != 1) return 1;
	new Float:health;
	health = pTemp[playerid][pBusDemage];
	new repairprice = floatround((1000.0-health));
	pData[playerid][pSalary] -= repairprice;
	pData[playerid][pSalary] -= 25;
	pTemp[playerid][pWorkSalary] -= 25;
	DisablePlayerRaceCheckpoint(playerid);
	pTemp[playerid][pBusID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pBusRoute] = 0;
	pTemp[playerid][pBusPos] = 0;
	pTemp[playerid][pBusPrice] = 0;
	if(IsValid3DTextLabel(pTemp[playerid][pBusText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pBusText]);
	pTemp[playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;
	SendClientMessage(playerid,CWHITE,"Рабочий день окончен");
	new mes[128];
	format(mes,sizeof(mes),"Заработано: {"#cWHITE"}$%d",pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,CGREEN,mes);
	format(mes,sizeof(mes),"За ремонт: {"#cWHITE"}-$%d",repairprice);
	SendClientMessage(playerid,CRED,mes);
	format(mes,sizeof(mes),"Итого: {"#cWHITE"}$%d",pTemp[playerid][pWorkSalary] - repairprice);
	SendClientMessage(playerid,CYELLOW,mes);
	pTemp[playerid][pWorkSalary] = 0;
	UpdatePlayerData(playerid, "salary", pData[playerid][pSalary]);
	SetVehicleToRespawnEx(pTemp[playerid][pBusID]);
	SendClientMessage(playerid,CRED,"Рабочее т/с было отбуксировано.");
	return 1;
}

public BusSpawnEx(playerid)
{
	new Float:health;
	health = pTemp[playerid][pBusDemage];
	new repairprice = floatround((1000.0-health));
	pData[playerid][pSalary] -= repairprice;
	pData[playerid][pSalary] -= 25;
	pTemp[playerid][pWorkSalary] -= 25;
	UpdatePlayerData(playerid, "salary", pData[playerid][pSalary]);
	DisablePlayerRaceCheckpoint(playerid);
	pTemp[playerid][pBusID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pBusRoute] = 0;
	pTemp[playerid][pBusPos] = 0;
	pTemp[playerid][pBusPrice] = 0;
	if(IsValid3DTextLabel(pTemp[playerid][pBusText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pBusText]);
	pTemp[playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;
	SendClientMessage(playerid,CWHITE,"Рабочий день окончен");
	new mes[128];
	format(mes,sizeof(mes),"Заработано: {"#cWHITE"}$%d",pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,CGREEN,mes);
	format(mes,sizeof(mes),"За ремонт: {"#cWHITE"}$%d",repairprice);
	SendClientMessage(playerid,CRED,mes);
	format(mes,sizeof(mes),"Итого: {"#cWHITE"}$%d",pData[playerid][pSalary] - repairprice);
	SendClientMessage(playerid,CYELLOW,mes);
	pTemp[playerid][pWorkSalary] = 0;
	SetVehicleToRespawnEx(pTemp[playerid][pBusID]);
	SendClientMessage(playerid,CRED,"Рабочее т/с было отбуксировано.");
	return 1;
}

public UpdateCarInfo(playerid,const vehicleid,speedonly)
{
	if(!IsPlayerConnected(playerid) || IsKicked(playerid))
	{
		HideCarInfo(playerid);
		KillTimer(pTemp[playerid][pCarInfoTimer]);
		pTemp[playerid][pCarInfoTimer] = 0;
		return 1;
	}
	new info[8][20];
	new Float:X, Float:Y, Float:Z, Float:X2, Float:Y2, Float:Z2, marks[4], tick = GetTickCount();
	marks[0] = 'r';
	marks[1] = 'l';
	marks[2] = 'l';
	marks[3] = 'l';
	new lights,engine;
	engine = GetEngineStatL(vehicleid,lights);
	if(!speedonly)
	{
		X2 = gVehicles[vehicleid-1][vX];
		Y2 = gVehicles[vehicleid-1][vY];
		Z2 = gVehicles[vehicleid-1][vZ];
		GetVehiclePos(vehicleid, X, Y, Z);
		if(X > 10000.0 || Y > 10000.0 || Z > 10000.0 || X < -10000.0 || Y < -10000.0 || Z < -10000.0)
		{
			SendClientMessage(playerid,CGRAY,"Ошибка 2");
			NewKick(playerid);
			SetVehicleToRespawn(vehicleid);
			return 1;
		}
		new Float:veloc;
		veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		gVehicles[vehicleid-1][vDrived] += veloc;
		if(engine == 1)
		{
			marks[0] = 'g';
			gVehicles[vehicleid-1][vFuel] -= (veloc/100)*gTransport[GetVehicleModel(vehicleid)-400][trConsumption];
			if(gVehicles[vehicleid-1][vFuel] <= 0.0)
			{
				gVehicles[vehicleid-1][vFuel] = 0.0;
				ToggleEngine(vehicleid);
				SendClientMessage(playerid,CGRAY,"Двигатель заглох");
			}
			else if(gVehicles[vehicleid-1][vProbability])
			{
				new probability = gVehicles[vehicleid-1][vProbability];
				new number = RandomEx(0,10000);
				if(probability >= number)
				{
					SetVehicleHealthEx(vehicleid,300);
					ToggleEngine(vehicleid);
					SFCM(playerid,CGRAY,"Двигатель заглох из-за неправильной марки топлива (%d)",number);
				}
			}
			else if(gVehicles[vehicleid-1][vHealth] <= 300.0)
			{
				gVehicles[vehicleid-1][vHealth] = 300.0;
				ToggleEngine(vehicleid);
				SendClientMessage(playerid,CGRAY,"Двигатель заглох");
			}
		}
		gVehicles[vehicleid-1][vX] = X;
		gVehicles[vehicleid-1][vY] = Y;
		gVehicles[vehicleid-1][vZ] = Z;
	}
 	GetVehicleVelocity(vehicleid,X,Y,Z);
	new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 189.47;
	new lims[64];
	if(pTemp[playerid][pSLimit])
	{
		format(lims,sizeof(lims),"(%d)",pTemp[playerid][pSLimit]);
		if(speed > pTemp[playerid][pSLimit])
		{
			new Float:dif = pTemp[playerid][pSLimit] / speed;
			SetVehicleVelocity(vehicleid,X*dif,Y*dif,Z);
			speed = pTemp[playerid][pSLimit];
		}

	}
	marks[1] = gVehicles[vehicleid-1][vLock] == 1 ? 'g':'r';
	marks[2] = lights > 0 ? 'g':'r';
	marks[3] = pTemp[playerid][pSLimit] > 0 ? 'g':'r';
	new Float:acceleration,probegveh;
	probegveh = floatround(gVehicles[vehicleid-1][vDrived]);
	acceleration = (speed - pTemp[playerid][pSpeed0]) / 0.2;
	format(info[0],20,"%.0f/300",gVehicles[vehicleid-1][vFuel]);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[21][playerid],info[0]);
	format(info[1],20,"~%c~M",marks[0]);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[27][playerid],info[1]);
	format(info[2],20,"~%c~L",marks[2]);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[24][playerid],info[2]);
	format(info[3],20,"~%c~LOCK",marks[1]);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[23][playerid],info[3]);
	format(info[4],20,"%.0f",speed);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[18][playerid],info[4]);
	format(info[5],20,"%06d",probegveh);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[30][playerid],info[5]);
	format(info[6],20,"%s",VehicleNames[GetVehicleModel(vehicleid)-400]);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[28][playerid],info[6]);
	format(info[7],20,"~%c~MAX",marks[3]);
	PlayerTextDrawSetString(playerid,SpeedTextdraws[26][playerid],info[7]);
	if(speed > 20) PlayerTextDrawShow(playerid,SpeedTextdraws[3][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[3][playerid]);
	if(speed > 35) PlayerTextDrawShow(playerid,SpeedTextdraws[5][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[5][playerid]);
 	if(speed > 50) PlayerTextDrawShow(playerid,SpeedTextdraws[6][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[6][playerid]);
 	if(speed > 65) PlayerTextDrawShow(playerid,SpeedTextdraws[7][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[7][playerid]);
 	if(speed > 80) PlayerTextDrawShow(playerid,SpeedTextdraws[8][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[8][playerid]);
 	if(speed > 95) PlayerTextDrawShow(playerid,SpeedTextdraws[9][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[9][playerid]);
 	if(speed > 110) PlayerTextDrawShow(playerid,SpeedTextdraws[10][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[10][playerid]);
 	if(speed > 120) PlayerTextDrawShow(playerid,SpeedTextdraws[11][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[11][playerid]);
 	if(speed > 130) PlayerTextDrawShow(playerid,SpeedTextdraws[12][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[12][playerid]);
 	if(speed > 140) PlayerTextDrawShow(playerid,SpeedTextdraws[13][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[13][playerid]);
 	if(speed > 155) PlayerTextDrawShow(playerid,SpeedTextdraws[15][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[15][playerid]);
 	if(speed > 170) PlayerTextDrawShow(playerid,SpeedTextdraws[14][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[14][playerid]);
 	if(speed > 185) PlayerTextDrawShow(playerid,SpeedTextdraws[16][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[16][playerid]);
 	if(speed > 200) PlayerTextDrawShow(playerid,SpeedTextdraws[17][playerid]);
 	else PlayerTextDrawHide(playerid,SpeedTextdraws[17][playerid]);
	GetVehicleHealth(vehicleid,gVehicles[vehicleid-1][vHealth]);
	if(acceleration >= 200.0 && tick - pTemp[playerid][pLastTick2] < 400)
	{
		new mesd[128];
		format(mesd,sizeof(mesd),"[A] %s [%d] большое ускорение (%.2f)",pData[playerid][pNickname],playerid,acceleration);
		AdminChat(CRED,mesd);
		SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве (AIR/SPEED/CARSHOT).");
		NewKick(playerid);
	}
	if(!engine && speed != 0 && tick - pTemp[playerid][pLastTick2] < 400) {
		if(speed >= pTemp[playerid][pSpeed0] + 1) {
			pTemp[playerid][pKick5] ++;
			if(pTemp[playerid][pKick5] >= 10) {
			    new mes[128];
				format(mes, sizeof(mes), "[A] %s [%i] кикнут за езду с выключенным двигателем (%i/10). [NEW]", pData[playerid][pNickname], playerid, pTemp[playerid][pKick5]);
				AdminChat(CRED,mes);
				SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве (#103).");
				NewKick(playerid);
			}
		}
		else pTemp[playerid][pKick5] = 0;
	}
	pTemp[playerid][pSpeed0] = speed;
	if(pTemp[playerid][pTaxiGoing])
	{
		if(pTemp[playerid][pTaxiTurn][0] != INVALID_PLAYER_ID)
		{
			new gig = pTemp[playerid][pTaxiTurn][0];
			if(!IsPlayerConnected(gig) || GetPlayerVehicleID(gig) != vehicleid) pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
		}
		if(pTemp[playerid][pTaxiTurn][1] != INVALID_PLAYER_ID)
		{
			new gig = pTemp[playerid][pTaxiTurn][1];
			if(!IsPlayerConnected(gig) || GetPlayerVehicleID(gig) != vehicleid) pTemp[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;
		}
		new passid = pTemp[playerid][pTaxiPass];
		if(!IsPlayerConnected(passid) || passid == INVALID_PLAYER_ID)
		{
			pTemp[playerid][pTaxiGoing] = false;
			pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
			pTemp[playerid][pTaxiStart] = 0.0;
		}
		else
		{
			new sum = floatround((gVehicles[vehicleid-1][vDrived] - pTemp[playerid][pTaxiStart])*pTemp[playerid][pTaxiPrice]);
			if(GetPlayerState(passid) == PLAYER_STATE_PASSENGER && GetPlayerVehicleID(passid) == vehicleid)
			{
				new mes[24];
				format(mes,sizeof(mes),"~w~$%d",sum);
				GameTextForPlayer(playerid,mes,300,4);
				GameTextForPlayer(passid,mes,300,4);
				if(GetPlayerMoneyEx(passid) < sum)
				{
					SendClientMessage(passid,CGRAY,"Недостаточно денег для проезда на такси");
					if(GetPlayerMoneyEx(passid) - sum > -5 && sum > 0)
					{
						TransferMoney(passid,playerid,sum,"taxipay");
					}
					pTemp[playerid][pTaxiGoing] = false;
					pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
					passid = INVALID_PLAYER_ID;
					pTemp[playerid][pTaxiStart] = 0.0;
					RemovePlayerMapIcon(playerid,iconTaxi);
					RemovePlayerMapIcon(passid,iconTaxi);
					RemovePlayerFromVehicle(passid);
					return 1;
				}
			}
			else
			{
				pTemp[playerid][pTaxiGoing] = false;
				pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
				pTemp[playerid][pTaxiStart] = 0.0;
				RemovePlayerMapIcon(playerid,iconTaxi);
				RemovePlayerMapIcon(passid,iconTaxi);
				if(sum > 0)
				{
					TransferMoney(passid,playerid,sum,"taxipay");
				}
				passid = INVALID_PLAYER_ID;
			}
		}
		if(passid == INVALID_PLAYER_ID && pTemp[playerid][pTaxiTurn][0] != INVALID_PLAYER_ID)
		{
			passid = pTemp[playerid][pTaxiTurn][0];
			if(IsPlayerConnected(passid) && GetPlayerVehicleID(passid) == vehicleid)
			{
				if(GetPlayerMoneyEx(passid) < pTemp[playerid][pTaxiPrice])
				{
					SendClientMessage(passid,CGRAY,"Недостаточно денег для проезда на такси");
					return RemovePlayerFromVehicle(passid);
				}
				pTemp[playerid][pTaxiStart] = gVehicles[vehicleid-1][vDrived];
				pTemp[playerid][pTaxiPass] = passid;
				pTemp[playerid][pTaxiGoing] = true;
				pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
				new mes[128];
				format(mes,sizeof(mes),"Теперь за проезд будет платить {"#cWHITE"}%s",pData[passid][pNickname]);
				SendClientMessage(playerid,CINFO,mes);
				SendClientMessage(passid,CINFO,"Теперь Вы платите за проезд");
			}
			else pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
		}
		if(pTemp[playerid][pTaxiTurn][1] != INVALID_PLAYER_ID && pTemp[playerid][pTaxiTurn][0] == INVALID_PLAYER_ID) {pTemp[playerid][pTaxiTurn][0] = pTemp[playerid][pTaxiTurn][1]; pTemp[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;}
	}
	if(pTemp[playerid][pFilling] && IsPlayerInAnyVehicle(playerid))
	{
		new newkeys,ud,lr;
		GetPlayerKeys(playerid,newkeys,ud,lr);
		if(lr > 0)
		{
			new tank = gTransport[GetVehicleModel(vehicleid) - 400][trTank];
			new markid = pTemp[playerid][pFillingMark]-1;
			new fillingid = pTemp[playerid][pFillingID]-1;
			if(!gFillings[fillingid][fillFuel][markid] || gFillings[fillingid][fillFuel][markid] < pTemp[playerid][pFillingAmount] - gVehicles[vehicleid-1][vFuel])
			{
				GameTextForPlayer(playerid,"мA A€C €AKOмЌ…‡OC’ ЏOЊ‡…BO “ЏO† –APK…",20000,4);
				return 1;
			}
			pTemp[playerid][pFillingAccel] += 0.1;
			pTemp[playerid][pFillingSpeed] += pTemp[playerid][pFillingAccel];
			if(pTemp[playerid][pFillingAmount] + pTemp[playerid][pFillingSpeed] <= tank ) pTemp[playerid][pFillingAmount] = pTemp[playerid][pFillingSpeed] + pTemp[playerid][pFillingAmount];
			else pTemp[playerid][pFillingAmount] = tank;
			PlayerTextDrawBoxColor(playerid, pTemp[playerid][pFillingBar][1], 0x33AA33AA);
			PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][1]);
			PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][2], -16777182);
			PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][2]);
			UpdateFillingBar(playerid,vehicleid);
		}
		else if(lr < 0)
		{
			pTemp[playerid][pFillingAccel] += 0.1;
			pTemp[playerid][pFillingSpeed] += pTemp[playerid][pFillingAccel];
			if(pTemp[playerid][pFillingAmount] - pTemp[playerid][pFillingSpeed] > gVehicles[vehicleid-1][vFuel]) pTemp[playerid][pFillingAmount] -= pTemp[playerid][pFillingSpeed];
			else pTemp[playerid][pFillingAmount] = gVehicles[vehicleid-1][vFuel];
			PlayerTextDrawBoxColor(playerid, pTemp[playerid][pFillingBar][2], 0xFF0000AA);
			PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][2]);
			PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][1], 866792226);
			PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][1]);
			UpdateFillingBar(playerid,vehicleid);
		}
		else
		{
			pTemp[playerid][pFillingSpeed] = 0.0;
			pTemp[playerid][pFillingAccel] = 0.0;
			PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][1], 866792226);
			PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][2], -16777182);
			PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][1]);
			PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][2]);
		}
		if(ud < 0) // вверх
		{
			if(pTemp[playerid][pFillingMark] < 5) pTemp[playerid][pFillingMark]++;
			else pTemp[playerid][pFillingMark] = 1;
			pTemp[playerid][pFillingAmount] = gVehicles[vehicleid-1][vFuel];
			UpdateFillingBar(playerid,vehicleid);
		}
		else if(ud > 0) // вниз
		{
			if(pTemp[playerid][pFillingMark] <= 1) pTemp[playerid][pFillingMark] = 5;
			else pTemp[playerid][pFillingMark]--;
			pTemp[playerid][pFillingAmount] = gVehicles[vehicleid-1][vFuel];
			UpdateFillingBar(playerid,vehicleid);
		}
	}
	if(speed >= 10 && !pTemp[playerid][pDialog] && !IsKicked(playerid)) {
		if(pTemp[playerid][pBusID] != vehicleid && vehicleid >= aBus[0] && vehicleid <= aBus[1]) {
			new mes[128];
			format(mes, sizeof(mes), "[A] %s [%i] кикнут за езду в неарендованном транспорте. [NEW]", pData[playerid][pNickname], playerid);
			AdminChat(CRED,mes);
			SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве (#104).");
			NewKick(playerid);
			SetVehicleToRespawn(vehicleid);
		}
		if(pTemp[playerid][pTruckID] != vehicleid && vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1]) {
			new mes[128];
			format(mes, sizeof(mes), "[A] %s [%i] кикнут за езду в неарендованном транспорте. [NEW]", pData[playerid][pNickname], playerid);
			AdminChat(CRED,mes);
			SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве (#104).");
			NewKick(playerid);
			SetVehicleToRespawn(vehicleid);
		}
		if(pTemp[playerid][pTaxiID] != vehicleid && vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1]) {
			new mes[128];
			format(mes, sizeof(mes), "[A] %s [%i] кикнут за езду в неарендованном транспорте. [NEW]", pData[playerid][pNickname], playerid);
			AdminChat(CRED,mes);
			SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве (#104).");
			NewKick(playerid);
			SetVehicleToRespawn(vehicleid);
		}
		if(pTemp[playerid][pMechID] != vehicleid && vehicleid >= aMech[0] && vehicleid <= aMech[1]) {
			new mes[128];
			format(mes, sizeof(mes), "[A] %s [%i] кикнут за езду в неарендованном транспорте. [NEW]", pData[playerid][pNickname], playerid);
			AdminChat(CRED,mes);
			SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве (#104).");
			NewKick(playerid);
			SetVehicleToRespawn(vehicleid);
		}
		if(pTemp[playerid][pDFTID] != vehicleid && vehicleid >= aProduct[0] && vehicleid <= aProduct[1]) {
			new mes[128];
			format(mes, sizeof(mes), "[A] %s [%i] кикнут за езду в неарендованном транспорте. [NEW]", pData[playerid][pNickname], playerid);
			AdminChat(CRED,mes);
			SendClientMessage(playerid, CRED, "Вы были кикнуты по подозрению в читерстве (#104).");
			NewKick(playerid);
			SetVehicleToRespawn(vehicleid);
		}
	}
	pTemp[playerid][pLastTick2] = GetTickCount();
	return 1;
}

public FuelTmier()
{
	for(new i;i<MAX_VEHICLES;i++)
	{
		if(GetEngineStat(i+1) > 0)
		{
			if(gVehicles[i][vFuel] >= 0.002) gVehicles[i][vFuel] -= 0.002;
			else gVehicles[i][vFuel] = 0;
		}
	}
}

public MinuteTimer()
{
	UpdateEconomic(); //Расчет экономики
	SaveNewsMoney();
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || !pTemp[i][pLogined]) continue;
		if(pData[i][pHunger] >= 1) pData[i][pHunger] -= 0.8;
		else SetPlayerHealthEx(i,pData[i][pHealth]-2.0);
		if(pData[i][pMut])
		{
			pData[i][pMut]--;
			UpdatePlayerData(i,"mut",pData[i][pMut]);
			if(!pData[i][pMut]) SendClientMessage(i,CGREEN,"Вы снова можете использовать чат");
		}
		if(pTemp[i][pNotReport]) pTemp[i][pNotReport]--;
		if(pData[i][pFraction])
		{
			if(pTemp[i][pGiveSalary] > 0) pTemp[i][pGiveSalary]--;
			else
			{
				if(pTemp[i][pAFK] < 60)
				{
					new fractionid = pData[i][pFraction]-1;
					new rank = pData[i][pRank];
					pData[i][pSalary] += gFractionSalary[fractionid][rank-1];
				}
				pTemp[i][pGiveSalary] = 15;
			}
		}
		pData[i][pGiveExp]++;
		if(pTemp[i][AntiCrack]) pTemp[i][AntiCrack]--;
		if(pTemp[i][PlayerStoned] >= 2)
		{
			pTemp[i][PlayerStoned] += 1;
			switch(pTemp[i][PlayerStoned])
			{
			    case 10,20,25,30: {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2) SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
					else SetPlayerFacingAngle(i, angle + 90);
				}
			    case 31: pTemp[i][PlayerStoned] = 0;
			}
		}
		if(pData[i][pHunger] > 100) pData[i][pHunger] = 100;
		if(pTemp[i][pTakeGun]) pTemp[i][pTakeGun]--;
		if(pData[i][pWanted])
		{
			pData[i][pWanted]--;
			new level = del(pData[i][pWanted],WANTED_TIME);
			SetPlayerWantedLevel(i,level);
			UpdatePlayerData(i,"wanted",pData[i][pWanted]);
			if(!level) RemovePlayerFromWantedList(i);
			else AddPlayerInWantedList(i);
		}
		pData[i][pPiss]++;
		if(pData[i][pPiss] >= 55)
		{
		    SendClientMessage(i,CINFO,"[Информация] Вы хотите в туалет (по маленькому). Зайдите в один из туалетов города.");
		}
		pData[i][pShit]++;
		if(pData[i][pShit] >= 55)
		{
		    SendClientMessage(i,CINFO,"[Информация] Вы хотите в туалет (по большому). Зайдите в один из туалетов города.");
		}
		if(pTemp[i][pEconomicLog])
		{
			new mes[128],CT;
			CT = floatround(1000 * (1 - (float(gGunWorkWH[0]) / gGunWorkWH[1])));
			format(mes,sizeof(mes),"k = %.2f; C1 = %d; C2 = %d; C3 = %d; CoalTruck = %d;",economicFactor,gWorkSalary[0],gWorkSalary[1],gWorkSalary[2],CT);
			SendClientMessage(i,CSYSTEM,mes);
		}
	}
}

public PlayerPlaySoundDelay(playerid,soundid)
{
	PlayerPlaySound(playerid,soundid,0.0,0.0,0.0);
	return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)
{
	if(gVehicles[vehicleid - 1][vCheckDelay] || !gVehicles[vehicleid - 1][vSpawned]) return 1;
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	new
		Float: bPos[4],
		Float: bVel[3],
		bDiff[2]
	;
	GetVehicleVelocity(vehicleid, bVel[0], bVel[1], bVel[2]);
	GetVehiclePos(vehicleid, bPos[0], bPos[1], bPos[2]);
	GetVehicleZAngle(vehicleid, bPos[3]);
	bDiff[0] = Difference(gVehicles[vehicleid - 1][vX], bPos[0]);
	bDiff[1] = Difference(gVehicles[vehicleid - 1][vY], bPos[1]);
	if(bDiff[0] >= 15 || bDiff[1] >= 15) {
		if(passenger_seat && (bDiff[0] >= 25 || bDiff[1] >= 25)) {
			SendClientMessage(playerid, CGRAY, "Вы были кикнуты по подозрению в читерстве.");
			NewKick(playerid);
		}
		SetVehiclePos(vehicleid, gVehicles[vehicleid - 1][vX], gVehicles[vehicleid - 1][vY], gVehicles[vehicleid - 1][vZ]);
		SetVehicleZAngle(vehicleid, gVehicles[vehicleid - 1][vA]);
		goto ENDCALLBACK;
	}
	else {
		gVehicles[vehicleid - 1][vX] = bPos[0];
		gVehicles[vehicleid - 1][vY] = bPos[1];
		gVehicles[vehicleid - 1][vZ] = bPos[2];
		gVehicles[vehicleid - 1][vA] = bPos[3];
		goto ENDCALLBACK;
	}
	ENDCALLBACK:
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	return 1;
}

forward SelectStoreGun(playerid);
public SelectStoreGun(playerid)
{
	pTemp[playerid][pSelectStoreGun] = true;
}

forward SetCameraBehindPlayerDelay(playerid);
public SetCameraBehindPlayerDelay(playerid)
{
	SetCameraBehindPlayer(playerid);
}

forward ShowGunList(playerid);
public ShowGunList(playerid)
{
	new mes[256];
	for(new i;i<=11;i++)
	{
		new gunid,ammo,storeslot;
		GetPlayerWeaponData(playerid,i,gunid,ammo);
		storeslot = GetStoreGunSlot(gunid);
		if(!gunid || !ammo || storeslot == -1) continue;
		if(gunid == 23 && pTemp[playerid][pTazerGun]) continue;
		new gunname[32];
		GetWeaponName(gunid,gunname,32);
		if(!i) format(mes,sizeof(mes),"%s [{"#cGREEN"}%d{"#cWHITE"}]",gunname,ammo);
		else format(mes,sizeof(mes),"%s\n%s [{"#cGREEN"}%d{"#cWHITE"}]",mes,gunname,ammo);
	}
	if(!strlen(mes))
	{
		SendClientMessage(playerid,CGRAY,"У Вас нет оружия");
		ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду","Далее","Отмена");
		return 1;
	}
	ShowPlayerDialog(playerid,dStorePut,2,"Шкаф",mes,"Положить","Отмена");
	return 1;
}

forward GameModeExitDelay();
public GameModeExitDelay()
{
	GameModeExit();
}

forward ClearAnimationsDelay(playerid);
public ClearAnimationsDelay(playerid)
{
	ApplyAnimation(playerid,"ped","IDLE_chat",4.1,1,0,0,0,1,1);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2) && pTemp[playerid][pWork] == 5) {
	    ClearAnimations(playerid);
		ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
	}
}

forward CarryDelay(playerid);
public CarryDelay(playerid)
{
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
}

forward CloseBarrier(id);
public CloseBarrier(id)
{
	switch(id)
	{
		case 0: MoveDynamicObject(gBarrier[0],346.70, 1799.90, 18.00,0.01,0.00, 269.00,34.00);
		case 2:
		{
			MoveDynamicObject(gBarrier[2],462.21, 2540.05, 19.01, 1.0);
			MoveDynamicObject(gBarrier[3],466.81, 2546.64, 19.01, 1.0);
		}
		case 3: MoveDynamicObject(gBarrier[4],525.6920166,-357.7460022,1004.2709961,0.0001,0.00, 0.00, 90.00);
		case 4: MoveDynamicObject(gBarrier[5],515.6669921875, -348.0673828125, 1005.5289916992,0.001,0.00, 0.00, 179.99450683594);
		case 5: MoveDynamicObject(gBarrier[6],-1701.43, 687.70, 24.59,0.001,0.00, -90.00, 90.00);
		case 6: MoveDynamicObject(gBarrier[7],141.80, 1965.30, 19.30, 0.001,  0.00, 270.0, 0.00);
	}
}
forward CloseArmGate(id);
public CloseArmGate(id)
{
	switch(id)
	{
		case 1: MoveDynamicObject(armgate[0],286.02802, 1821.33875, 19.99820,1.0);
		case 2: MoveDynamicObject(armgate[1],135.02631, 1941.53564, 21.65000,1.0);
	}
}
forward AntiCarShoter(playerid);
public AntiCarShoter(playerid)
{
	checkcs[playerid] = 1;
	return 1;
}
forward CarHack(playerid, vehicleid);
public CarHack(playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(IsPlayerInVehicle(playerid, vehicleid) && pTemp[playerid][pAFK] < 1)
	{
		new mes[128];
		format(mes,sizeof(mes),"[A] %s [%d] кикнут за антивыкидывание из транспорта (%d/3). [NEW]",pData[playerid][pNickname],playerid,pTemp[playerid][pKick7]);
		AdminChat(CRED,mes);
		Kick(playerid);
	}
	else pTemp[playerid][pKick7] = 0;
	return 1;
}

forward ClearPhone(playerid);
public ClearPhone(playerid)
{
	RemovePlayerAttachedObject(playerid,0);
}

forward SetPlayerPosExA(playerid,Float:x,Float:y,Float:z);
public SetPlayerPosExA(playerid,Float:x,Float:y,Float:z)
{
	SetPlayerPos(playerid,x,y,z,0);
}

forward Unfreez(playerid);
public Unfreez(playerid)
{
	TogglePlayerControllable(playerid,1);
	ClearAnimations(playerid);
}

forward StealMats(playerid,armyid);
public StealMats(playerid,armyid)
{
	if(!IsPlayerInDynamicArea(playerid,gAreas[arArmyAmmo]))
	{
		SendClientMessage(playerid,CGRAY,"Вам не удалось украсть оружие и патроны");
		return 1;
	}
	new f = RandomEx(100,500);
	if(pData[playerid][pGunAmount] + f > 500) f = 500 - pData[playerid][pGunAmount];
	new a = RandomEx(0,500);
	if(pData[playerid][pAmmo] + a > 500) a = 500 - pData[playerid][pAmmo];
	if(gArmyWarehouse[armyid][0] < f || gArmyWarehouse[armyid][1] < a) return SendClientMessage(playerid,CGRAY,"На складе недостаточно единиц оружия и патронов");
	gArmyWarehouse[armyid][0] -= f;
	gArmyWarehouse[armyid][1] -= a;
	new mes[128];
	format(mes,sizeof(mes),"Вы смогли украсть %d единиц оружия и %d патронов со склада",f,a);
	SendClientMessage(playerid,CINFO,mes);
	pData[playerid][pGunAmount] += f;
	UpdatePlayerData(playerid,"gunamount",pData[playerid][pGunAmount]);
	pData[playerid][pAmmo] += a;
	UpdatePlayerData(playerid,"ammo",pData[playerid][pAmmo]);
	return 1;
}

forward CleoFail(playerid,area);
public CleoFail(playerid,area)
{
	if(IsPlayerInDynamicArea(playerid,area)) pTemp[playerid][pCleoFail]++;
	else pTemp[playerid][pCleoFail] = 0;
	if(pTemp[playerid][pCleoFail] >= 2)
	{
		pTemp[playerid][pCleoFail] = 0;
		SendClientMessage(playerid,CGRAY,"Вы были кинуты по подозрению в читерстве (Спидхак / Флай / ТП)");
		NewKick(playerid);
	}
}

forward OnDetonate(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2);
public OnDetonate(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2)
{
	new slot = -1;
	for(new i;i<50;i++)
	{
		if(!gDetonateArea[i][0]) {slot = i; break;}
	}
	CreateExplosion(x,y,z,6,3.0);
	gDetonatePickup[slot][0] = CreateDynamicPickup(1318,1,x,y,z);
	gDetonatePickup[slot][1] = CreateDynamicPickup(1318,1,x2,y2,z2);
	gDetonateArea[slot][0] = CreateDynamicSphere(x,y,z,1.0);
	gDetonateArea[slot][1] = CreateDynamicSphere(x2,y2,z2,1.0);
	SetTimerEx("OnUnDetonate",1200000,false,"i",slot);
}

forward OnUnDetonate(id);
public OnUnDetonate(id)
{
	DestroyDynamicPickup(gDetonatePickup[id][0]);
	DestroyDynamicPickup(gDetonatePickup[id][1]);
	DestroyDynamicArea(gDetonateArea[id][0]);
	DestroyDynamicArea(gDetonateArea[id][1]);
	gDetonateArea[id][0] = 0;
	gDetonateArea[id][1] = 0;
	gDetonatePickup[id][0] = 0;
	gDetonatePickup[id][1] = 0;
}

forward AttachTrailerToVehicleEx(trailerid,vehicleid);
public AttachTrailerToVehicleEx(trailerid,vehicleid)
{
	AttachTrailerToVehicle(trailerid,vehicleid);
}

forward RemovePlayerAttachedObjectDelay(playerid,slot);
public RemovePlayerAttachedObjectDelay(playerid,slot)
{
	RemovePlayerAttachedObject(playerid,slot);
}


forward ReturnPDDoor(id,prison);
public ReturnPDDoor(id,prison)
{
	MoveDynamicObject(gPDDoors[id][prison],gPDDoorCPos[id][0],gPDDoorCPos[id][1],gPDDoorCPos[id][2],PD_DOOR_SPEED,gPDDoorCPos[id][3],gPDDoorCPos[id][4],gPDDoorCPos[id][5]);
	return 1;
}

stock Debug(string[],va_args<>)
{
	new query[180];
	va_format(query,sizeof(query),string,va_start<1>);
	format(query,sizeof(query),"INSERT INTO `debug` VALUES ('','%s');",query);
	mysql_query(query);
}

stock HideCarInfo(playerid)
{
 	for(new t = 0;t<12;t++) PlayerTextDrawShow(playerid,BarTextdraws[t][playerid]);
	return 1;
}

stock ToggleEngine(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(engine <= 0)
	{
		new modelid = GetVehicleModel(vehicleid) - 400;
		if(modelid < 0) return 1;
		if(gTransport[modelid][trFuelable] == 1)
		{
			if(gVehicles[vehicleid-1][vFuel] <= 0.0 || gVehicles[vehicleid-1][vHealth] <= 300) return -1;
		}
		else engine = 1;
		engine = 1;
	}
	else if (engine > 0 && gTransport[GetVehicleModel(vehicleid) - 400][trFuelable] == 1) engine = 0;
    SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock GetEngineStat(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock GetEngineStatL(vehicleid,&lights)
{
	new engine, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock WHDataUpdate()
{
	new mes[256];
	format(mes,sizeof(mes),"{"#cYELLOW"}Состояние склада: {"#cYELLOW"}%d{"#cWHITE"}кг",gCoalWH);
	UpdateDynamic3DTextLabelText(gCoalWHText,CWHITE,mes);
	UpdateDynamic3DTextLabelText(gCoalWHText2,CWHITE,mes);
	format(mes,sizeof(mes),"{"#cYELLOW"}Состояние склада: {"#cYELLOW"}%d{"#cWHITE"} кг",woodsklad);
	UpdateDynamic3DTextLabelText(gWoodWHText,CWHITE,mes);
	format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gArmyWarehouse[0][0],gArmyWarehouse[0][1]);
	UpdateDynamic3DTextLabelText(gArmyWarehouseText[0],CWHITE,mes);
	format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gArmyWarehouse[1][0],gArmyWarehouse[1][1]);
	UpdateDynamic3DTextLabelText(gArmyWarehouseText[1],CWHITE,mes);
	format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gPDWarehouse[0][0],gPDWarehouse[0][1]);
	UpdateDynamic3DTextLabelText(gPDWarehouseText[0],CWHITE,mes);
	format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gPDWarehouse[1][0],gPDWarehouse[1][1]);
	UpdateDynamic3DTextLabelText(gPDWarehouseText[1],CWHITE,mes);
	format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",gPDWarehouse[2][0],gPDWarehouse[2][1]);
	UpdateDynamic3DTextLabelText(gPDWarehouseText[2],CWHITE,mes);
	for(new im;im<3;im++)
	{
		format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d",gMafWarehouse[im]);
		UpdateDynamic3DTextLabelText(gMafDormText[im],CWHITE,mes);

	}
	if(gArmyWarehouse[0][1] <= 99900) gArmyWarehouse[0][1] += 100;
	if(gArmyWarehouse[1][1] <= 99900) gArmyWarehouse[1][1] += 100;
	if(gPDWarehouse[0][1] <= 49900) gPDWarehouse[0][1] += 100;
	if(gPDWarehouse[1][1] <= 49900) gPDWarehouse[1][1] += 100;
	if(gPDWarehouse[2][1] <= 49900) gPDWarehouse[2][1] += 100;
	for(new i;i<5;i++)
	{
		format(mes,sizeof(mes),"Ед. оружия: {"#cGREEN"}%d/%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d/%d\n{"#cWHITE"}Наркотиков: {"#cGREEN"}%d/%d\n{"#cWHITE"}Денег: {"#cGREEN"}$%d",gGangDorm[i][0],gGangDormLevel[gGangDormLimit[i]][0],gGangDorm[i][1],gGangDormLevel[gGangDormLimit[i]][1],gGangDorm[i][2],gGangDormLevel[gGangDormLimit[i]][2],gGangDorm[i][3]);
		UpdateDynamic3DTextLabelText(gGangDormText[i],CWHITE,mes);
	}
}
stock UpdTerrsBand()
{
    TotalGz[0] = 0;
    TotalGz[1] = 0;
    TotalGz[2] = 0;
    TotalGz[3] = 0;
    TotalGz[4] = 0;
	for(new i = 1; i <= TOTALGZ;i++)
	{
		switch(GZMZ[i][gFrak])
		{
			case F_BALLAS: TotalGz[0]++;
			case F_GROVE: TotalGz[1]++;
			case F_AZTEC: TotalGz[2]++;
			case F_VAGOS: TotalGz[3]++;
			case F_RIFA: TotalGz[4]++;
		}
  	}
	for(new i;i<5;i++)
	{
	    new mes[3000];
		format(mes,sizeof(mes),"{"#cWHITE"}Кол-во территорий: {"#cGREEN"}%d\n{"#cWHITE"}Ед. оружия: {"#cGREEN"}%d/%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d/%d\n{"#cWHITE"}Наркотиков: {"#cGREEN"}%d/%d\n{"#cWHITE"}Денег: {"#cGREEN"}$%d",TotalGz[i],gGangDorm[i][0],gGangDormLevel[gGangDormLimit[i]][0],gGangDorm[i][1],gGangDormLevel[gGangDormLimit[i]][1],gGangDorm[i][2],gGangDormLevel[gGangDormLimit[i]][2],gGangDorm[i][3]);
		UpdateDynamic3DTextLabelText(gGangDormText[i],CWHITE,mes);
	}
}

stock LoadGZ()
{
    new time = GetTickCount();
    new query[200];
    mysql_query("SELECT * FROM `gangzone`");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
		   	mysql_fetch_row(query);
        	sscanf(query, "p<|>iffffi",GZMZ[idx][idm],GZMZ[idx][gCoords][0],GZMZ[idx][gCoords][1],GZMZ[idx][gCoords][2],GZMZ[idx][gCoords][3],GZMZ[idx][gFrak]);
        	TOTALGZ++;
	        GZMZ[idx][idm] = GangZoneCreate(GZMZ[idx][gCoords][0],GZMZ[idx][gCoords][1],GZMZ[idx][gCoords][2],GZMZ[idx][gCoords][3]);
        	ZoneOnBattle[idx] = 0; GZSafeTime[idx] = 0;
        }
    }
    mysql_free_result();
    printf(" [Загрузка ганг зон]: Было загружено - %d потрачено %d (ms)", TOTALGZ,GetTickCount() - time);
	return 1;
}



stock SaveGZ(idx)
{
	new query[200];
	format(query,sizeof(query),"UPDATE `gangzone` SET `ginfo1` = '%f', `ginfo2` = '%f', `ginfo3` = '%f', `ginfo4` = '%f', `fraction` = '%d' WHERE `id` = '%d'",
	GZMZ[idx][gCoords][0], GZMZ[idx][gCoords][1],GZMZ[idx][gCoords][2],GZMZ[idx][gCoords][3],GZMZ[idx][gFrak], idx);
	mysql_query(query);
	if(mysql_errno()) print("Ошибка MySQL");
	return 1;
}

stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZMZ[gangzonex][gFrak])
	{
		case F_GROVE: zx = 0x009900AA;
		case F_BALLAS: zx = 0xCC00FFAA;
		case F_RIFA: zx = 0x6666FFAA;
		case F_AZTEC: zx = 0x00CCFFAA;
		case F_VAGOS: zx = 0xffff00AA;
		case 0: zx = 0xC0C0C0AA;
	}
	return zx;
}


stock CaptureStart(familyone, familytwo)
{
	new BANDAA[128];
	new BANDAB[128];
	for(new i;i<MAX_PLAYERS;i++) {
		if(!IsAGang(i)) continue;
		TextDrawShowForPlayer(i, BandaCapt1a);
		TextDrawShowForPlayer(i, BandaCapt2a);
		TextDrawShowForPlayer(i, ScoreCapt1a);
		TextDrawShowForPlayer(i, ScoreCapt2a);
		TextDrawShowForPlayer(i, CaptTime);
		TextDrawShowForPlayer(i, ScoreCapt);
		TextDrawShowForPlayer(i, Textdraw4);
		format(BANDAA, sizeof(BANDAA), "%s", GetGangName(familyone));
		TextDrawSetString(BandaCapt1a, BANDAA);
		format(BANDAB, sizeof(BANDAB), "%s", GetGangName(familytwo));
		TextDrawSetString(BandaCapt2a, BANDAB);
		format(BANDAA, 64, "0");
		TextDrawSetString(ScoreCapt1a, BANDAA);
		format(BANDAB, 64, "0");
		TextDrawSetString(ScoreCapt2a, BANDAB);
		SendMes(i, 0xff2400FF, "%s начала захват территории %s",GetGangName(familyone), GetGangName(familytwo));
	}
}

stock CaptureUpd(bandkiller)
{
	new SCORE1[128];
	new SCORE2[128];
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsAGang(i)) continue;
		if(GangInfo[bandkiller][gangnumber] == 1)
		{
			format(SCORE1, 64, "%d", GangInfo[bandkiller][score]);
			TextDrawSetString(ScoreCapt1a, SCORE1);
		}
		else
		{
			format(SCORE2, 64, "%d", GangInfo[bandkiller][score]);
			TextDrawSetString(ScoreCapt2a, SCORE2);
		}
	}
}

stock CaptureEnd()
{
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsAGang(i)) continue;
		TextDrawHideForPlayer(i, BandaCapt1a);
		TextDrawHideForPlayer(i, BandaCapt2a);
		TextDrawHideForPlayer(i, ScoreCapt1a);
		TextDrawHideForPlayer(i, ScoreCapt2a);
		TextDrawHideForPlayer(i, CaptTime);
		TextDrawHideForPlayer(i, ScoreCapt);
		TextDrawHideForPlayer(i, Textdraw4);
		IsCapture = 0;
	}
	UpdTerrsBand();
}
stock GzCheck()
{
	for(new i =1;i<=TOTALGZ;i++)
	{
		if(ZoneOnBattle[i] == 1 && GZSafeTime[i] == 0)
		{
			if(GangInfo[GZMZ[i][gNapad]][score] > GangInfo[GZMZ[i][gFrak]][score] ||
			GangInfo[GZMZ[i][gNapad]][score] == 0 && GangInfo[GZMZ[i][gFrak]][score] == 0)
			{
			    new string[256];
				new zx,zl;
				zx = GZMZ[i][gNapad];
				zl = i;
				ZoneOnBattle[zl] =0;

				format(string,90,"Банда %s захватила новую территорию",GetGangName(zx));
				SendFMes(GZMZ[i][gFrak],CBLUE, string);
				SendFMes(GZMZ[i][gNapad],CBLUE, string);

				CaptureEnd();
				GangInfo[GZMZ[zl][gNapad]][captureid] = 0;
				GangInfo[GZMZ[zl][gNapad]][capture] = 0;
				GangInfo[GZMZ[zl][gNapad]][score] = 0;
				GangInfo[GZMZ[zl][gFrak]][captureid] = 0;
				GangInfo[GZMZ[zl][gFrak]][capture] = 0;
				GangInfo[GZMZ[zl][gFrak]][score] = 0;
				GangInfo[GZMZ[i][gNapad]][gangnumber] = 0;
				GangInfo[GZMZ[i][gFrak]][gangnumber] = 0;
				GZMZ[zl][gFrak] = zx;
				GZMZ[zl][gNapad] = 0;
				GangZoneStopFlashForAll(GZMZ[zl][idm]);
				GangZoneHideForAll(GZMZ[zl][idm]);
				GangZoneShowForAll(GZMZ[zl][idm],GetGangZoneColor(zl));
				SaveGZ(zl);
				UpdTerrsBand();
			}
			else if(GangInfo[GZMZ[i][gNapad]][score] < GangInfo[GZMZ[i][gFrak]][score] ||
			GangInfo[GZMZ[i][gNapad]][score] == GangInfo[GZMZ[i][gFrak]][score])
			{
			    new string[256];
				new zx,zl;
				zx = GZMZ[i][gFrak];
				zl = i;

				format(string,90,"Попытка захватить территорию %s провалилась",GetGangName(zx));
				SendFMes(F_GROVE,0xff2400FF, string);
				SendFMes(F_BALLAS,0xff2400FF, string);
				SendFMes(F_AZTEC,0xff2400FF, string);
				SendFMes(F_RIFA,0xff2400FF, string);
				SendFMes(F_VAGOS,0xff2400FF, string);

				ZoneOnBattle[zl] =0;
				CaptureEnd();
				GangInfo[GZMZ[zl][gNapad]][captureid] = 0;
				GangInfo[GZMZ[zl][gNapad]][capture] = 0;
				GangInfo[GZMZ[zl][gNapad]][score] = 0;
				GangInfo[GZMZ[zl][gFrak]][captureid] = 0;
				GangInfo[GZMZ[zl][gFrak]][capture] = 0;
				GangInfo[GZMZ[zl][gFrak]][score] = 0;
				GangInfo[GZMZ[i][gNapad]][gangnumber] = 0;
				GangInfo[GZMZ[i][gFrak]][gangnumber] = 0;
				GZMZ[zl][gFrak] = zx;
				GZMZ[zl][gNapad] = 0;
				GangZoneStopFlashForAll(GZMZ[zl][idm]);
				GangZoneHideForAll(GZMZ[zl][idm]);
				GangZoneShowForAll(GZMZ[zl][idm],GetGangZoneColor(zl));
				SaveGZ(zl);
				UpdTerrsBand();
			}
		}
	}
	return true;
}

stock SendFMes(fact, color, str[])
{
	if(fact == 12) fact = 9;
	else if(fact == 9) fact = 12;
	for( new i; i < MAX_PLAYERS; i ++)
	{
		if(pData[i][pFraction] == fact) SendClientMessage(i, color, str);
		else if((fact == 12 && pData[i][pFraction] == 9) || (fact == 9 && pData[i][pFraction] == 12)) SendClientMessage(i, color, str);
	}
	return true;
}

stock SendErr(playerid,string[])
{
	new msg[256];
	format(msg,sizeof(msg),"~ %s",string);
	SendClientMessage(playerid,CGRAY, msg);
	return 1;
}

stock IsALeader(playerid)
{
	new rang = pData[playerid][pRank];
	new fact = pData[playerid][pFraction]-1;
	if(pData[playerid][pSubfraction] && rang >= gFractionRankCount[fact]-1) return 1;
	else if(!pData[playerid][pSubfraction] && rang == gFractionRankCount[fact]) return 1;
	else return 0;
}


stock GetGangName(fnumbwer)
{
	new string[256];
	switch(fnumbwer)
	{
		case F_GROVE: format(string,32,"Grove Street");
		case F_BALLAS: format(string,32,"The Ballas");
		case F_RIFA: format(string,32,"The Rifa");
		case F_AZTEC: format(string,32,"Varios Los Aztecas");
		case F_VAGOS: format(string,32,"Los Santos Vagos");
	}
	return string;
}
stock GetMafiaName(fnumbwer)
{
	new string[256];
	switch(fnumbwer)
	{
		case F_YAK: format(string,32,"Yakuza");
	 	case F_LCN: format(string,32,"La Cosa Nostra");
		case F_RM: format(string,32,"Russian Mafia");
	 }
	return string;
}
stock IsPlayerInBandOnline(bandid)
{
	new np;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(pData[i][pFraction] == bandid) np++;
	}
	return np;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock IsAGang(playerid)
{
	new member = pData[playerid][pFraction];
	switch(member)
	{
		case F_GROVE, F_BALLAS, F_RIFA, F_AZTEC, F_VAGOS: return true;
	}
	return false;
}
stock IsAMafia(playerid)
{
	new member = pData[playerid][pFraction];
	switch(member)
	{
		case F_YAK, F_LCN, F_RM: return true;
	}
	return false;
}

stock IsInAllowed(playerid)
{
	new L = sizeof(allowedfactions);
	for(new i =0;i<L;i++)
	{
		if(pData[playerid][pFraction] == allowedfactions[i]) return true;
	}
	return false;
}

stock GetGZColorF(fnumber)
{
	new zx;
	switch(fnumber)
	{
		case F_GROVE: zx = 0x009900AA;
		case F_BALLAS: zx = 0xCC00FFAA;
		case F_RIFA: zx = 0x6666FFAA;
		case F_AZTEC: zx = 0x00CCFFAA;
		case F_VAGOS: zx = 0xffff00AA;
		case 0: zx = 0xC0C0C0AA;
	}
	return zx;
}
stock SetPlayerDataToDefault(playerid)
{
	pData[playerid][pMysqlID] = 0;
	strdel(pData[playerid][pNickname],0,MAX_PLAYER_NAME);
	strdel(pData[playerid][pPassword],0,MAX_PLAYER_NAME);
	strdel(pData[playerid][pEmail],0,MAX_PLAYER_NAME);
	pData[playerid][pSex] = 0;
	pData[playerid][pWarn] = 0;
	pData[playerid][pMut] = 0;
	pData[playerid][pEConfirmed] = 0;
	pData[playerid][pAge] = 0;
	pData[playerid][pSkin] = 0;
	pData[playerid][pFractionSkin] = 0;
	pData[playerid][pHealth] = 100;
	pData[playerid][pHunger] = 100;
	pData[playerid][pColor] = 0;
	pData[playerid][pHouse] = 0;
	pData[playerid][pHotel] = 0;
	pData[playerid][pHotelRoom] = 0;
	pData[playerid][pJob] = 0;
	pData[playerid][pCar] = 0;
	pData[playerid][pSalary] = 0;
	pData[playerid][pMoney] = 0;
	pData[playerid][pBank] = 0;
	randomspawn[playerid] = -1;
	pData[playerid][pBusSkill] = 0;
	pData[playerid][pTruckSkill] = 0;
	pData[playerid][pLevel] = 1;
	pData[playerid][pExp] = 0;
	pData[playerid][pPhone] = 0;
	pData[playerid][pPhoneMoney] = 0;
	pData[playerid][pWanted] = 0;
	pData[playerid][pJail] = 0;
	pData[playerid][pPrison] = 0;
	pData[playerid][pKillings] = 0;
	pData[playerid][pDeaths] = 0;
	pData[playerid][pDrugs] = 0;
	pData[playerid][pAmmo] = 0;
	pData[playerid][pGunAmount] = 0;
	pData[playerid][pSpouse] = 0;
	pData[playerid][pFraction] = 0;
	pData[playerid][pSubfraction] = 0;
	pData[playerid][pRank] = 0;
	pData[playerid][pWatch] = 0;
	pData[playerid][pBusiness] = 0;
	pData[playerid][pLevel] = 0;
	strdel(pData[playerid][pCode],0,MAX_PLAYER_NAME);
	pData[playerid][pRequestCode] = 0;
	pData[playerid][pLanguage] = 0b10000000;
	pData[playerid][pAdmin] = 0;
	pData[playerid][pLicenses] = 0;
	pData[playerid][pStatus] = 0;
	pData[playerid][pUnemployment] = 0;
	pData[playerid][pSettings] = 65535;
	pData[playerid][pDonate] = 0;
	pData[playerid][pVehicleKey] = 0;
	pData[playerid][pArmyTime] = 0;
	pData[playerid][pArmyRank] = 0;
	pData[playerid][pAdminm] = 0;
	pData[playerid][pGiveExp] = 0;
	pData[playerid][pSkills] = 0;
	for(new i;i<13;i++) gGuns[playerid][i] = 0, gAmmos[playerid][i] = 0;
    SetPVarInt(playerid,"kmwoodtime",0);
    gmadmin[playerid] = false;
    plogin[playerid] = false;
	pTemp[playerid][pJoined] = false;
	pTemp[playerid][pLogined] = false;
	pTemp[playerid][pLoginAttempt] = 0;
	pTemp[playerid][pChoosingSkin] = false;
	pTemp[playerid][pWork] = 0;
	pTemp[playerid][pWorkSalary] = 0;
	pTemp[playerid][pJustTP] = false;
	pTemp[playerid][pBusID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pBusRoute] = 0;
	pTemp[playerid][pBusPos] = 0;
	pTemp[playerid][pBusPrice] = 0;
	pTemp[playerid][pBusSpawnTimer] = 0;
	pTemp[playerid][pBusDemage] = 0;
	pTemp[playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pTruckWagonTime] = 0;
	pTemp[playerid][pTruckWeight] = 0;
	pTemp[playerid][pTruckLoadID] = 0;
	pTemp[playerid][pTaxiID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTaxiPrice] = 0;
	pTemp[playerid][pTaxi3DText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pTaxiGoing] = false;
	pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
	pTemp[playerid][pTaxiStart] = 0.0;
	pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
	pTemp[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;
	pTemp[playerid][pIsInHouse] = false;
	pTemp[playerid][pSelectedHouseID] = 0;
	pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellHousePrice] = 0;
	pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellFillingPrice] = 0;
	pTemp[playerid][pSellHouseID] = 0;
	pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSettleHouseID] = 0;
	pTemp[playerid][pSellCarSelect] = false;
	pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellCarPrice] = 0;
	pTemp[playerid][pSellCarID] = 0;
	pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellBusinessPrice] = 0;
	pTemp[playerid][pSellBusinessID] = 0;
	pTemp[playerid][pActPlayer] = INVALID_PLAYER_ID;
	pTemp[playerid][pAFK] = 0;
	pTemp[playerid][pAFKText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pIsAFK] = false;
	pTemp[playerid][pShowNicknames] = true;
	pTemp[playerid][pFilling] = false;
	pTemp[playerid][pFillGoing] = false;
	pTemp[playerid][pFillingAmount] = 0.0;
	pTemp[playerid][pFillingSpeed] = 0.0;
	pTemp[playerid][pFillingAccel] = 0.0;
	pTemp[playerid][pFillingID] = 0;
	pTemp[playerid][pFillingMark] = 0;
	pTemp[playerid][pFillingPrice] = 0;
	pTemp[playerid][pSelectStoreGun] = false;
	pTemp[playerid][pStoreGun] = 0;
	pTemp[playerid][pHealth] = 100.0;
	pTemp[playerid][pChangingSkin] = false;
	pTemp[playerid][pCarryProducts] = 0;
	pTemp[playerid][pEat] = 0;
	pTemp[playerid][pGPS] = false;
	pTemp[playerid][pUseButton] = true;
	pTemp[playerid][pWaitingExam] = false;
	pTemp[playerid][pExamType] = 0;
	pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
	pTemp[playerid][pOnExam] = false;
	pTemp[playerid][pTestQNumber] = 0;
	pTemp[playerid][pCheat] = false;
	pTemp[playerid][pX] = 0.0;
	pTemp[playerid][pY] = 0.0;
	pTemp[playerid][pZ] = 0.0;
	pTemp[playerid][pSpectating] = false;
	pTemp[playerid][pSpectator] = INVALID_PLAYER_ID;
	pTemp[playerid][pSpectatee] = INVALID_PLAYER_ID;
	pTemp[playerid][pAbletoTP] = false;
	pTemp[playerid][pAbletoGun] = 0;
	pTemp[playerid][pAbletoHP] = false;
	pTemp[playerid][pArmour] = 0.0;
	pTemp[playerid][pOff] = false;
	pTemp[playerid][pLoginTime] = 180;
	pTemp[playerid][pAntiDM] = false;
	pTemp[playerid][pCall] = false;
	pTemp[playerid][pDM] = 0;
	pTemp[playerid][pKick] = 0;
	pTemp[playerid][pKick2] = 0;
	pTemp[playerid][pKick3] = 0;
	pTemp[playerid][pDarkAFK] = 0;
	pTemp[playerid][pCaller] = INVALID_PLAYER_ID;
	pTemp[playerid][pCallee] = INVALID_PLAYER_ID;
	pTemp[playerid][pInHospital] = false;
	pTemp[playerid][pDead] = false;
	pTemp[playerid][pGangKey] = false;
	pTemp[playerid][pEnterVehicle] = INVALID_VEHICLE_ID;
	pTemp[playerid][pGiveSalary] = 0;
	pTemp[playerid][pCleoFail] = 0;
	pTemp[playerid][pTakeGun] = 0;
	pTemp[playerid][pMechID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pMechOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pMechOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pMechTrailer] = 0;
	pTemp[playerid][pTazer] = 0;
	pTemp[playerid][pCuffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pCuffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pControllable] = 1;
	pTemp[playerid][pKick5] = 0;
	pTemp[playerid][pKick6] = 0;
	pTemp[playerid][pKick7] = 0;
	pTemp[playerid][pCoalmanTime] = 0;
	pTemp[playerid][pTPhone] = true;
	pTemp[playerid][pAngle] = 0.0;
	pTemp[playerid][pBangam] = true;
	pTemp[playerid][pSLimit] = 0;
	pTemp[playerid][pSelectedBusinessID] = -1;
	pTemp[playerid][pEconomicLog] = false;
	pTemp[playerid][pEther] = false;
	pTemp[playerid][pAntiCleoWood] = 0;
	pTemp[playerid][pAntiCleoWoodKick] = 0;
	pTemp[playerid][pRadio] = true;
	pTemp[playerid][pPresentOn] = false;
	pTemp[playerid][pDeliving] = false;
	pTemp[playerid][pDeliveryid] = 0;
	pTemp[playerid][pDeliveryNumber] = 0;
	pTemp[playerid][pDFTID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pDialog] = false;
	pTemp[playerid][pTazerGun] = false;
	pTemp[playerid][pWantedListIndex] = -1;
	pTemp[playerid][pLastTick] = 0;
	pTemp[playerid][pLastTick2] = 0;
	pTemp[playerid][pGunSkill][0] = 0; pTemp[playerid][pGunSkill][1] = 0; pTemp[playerid][pGunSkill][2] = 0;
	pTemp[playerid][pGunSkill][3] = 0; pTemp[playerid][pGunSkill][4] = 0; pTemp[playerid][pGunSkill][5] = 0; pTemp[playerid][pGunSkill][6] = 0;
	pTemp[playerid][AntiCrack] = 0;
    pTemp[playerid][PlayerStoned] = 0;
	strdel(pRegData[playerid][0],0,MAX_PLAYER_NAME);
	strdel(pRegData[playerid][1],0,MAX_PLAYER_NAME);
	strdel(pRegData[playerid][2],0,64);
	pRegData[playerid][3][0] = 0;
	pRegData[playerid][4][0] = 0;
	ChangeSkin[playerid] = 1;
	SetPVarInt(playerid,"skinid",0);
	SetPVarInt(playerid,"registration_stepend",0);
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3404, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3404, 1045.5625, -300.6016, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3402, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3402, 1045.5625, -300.6016, 72.9844, 0.25);
	//шахта
	RemoveBuildingForPlayer(playerid,17325, -1109.0391, -1621.1016, 75.2656, 0.25);
	RemoveBuildingForPlayer(playerid,17324, -1109.0391, -1621.1016, 75.2656, 0.25);
	RemoveBuildingForPlayer(playerid,1676,-92.1016,-1161.7891,2.9609,20.0);
	RemoveBuildingForPlayer(playerid,1676,1941.6563,-1778.4531,14.1406,20.0);
	RemoveBuildingForPlayer(playerid,1686,655.6641,-571.2109,15.3594,20.0);
	RemoveBuildingForPlayer(playerid, 3345, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16595, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16596, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16597, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16598, 231.2813, 2545.7969, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3296, 255.9844, 2549.3281, 20.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 392.7109, 2596.4531, 17.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3296, 376.2969, 2606.3438, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 390.8203, 2604.0703, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 389.1328, 2611.0625, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 382.1875, 2609.4766, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16600, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 16602, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 16772, 404.7969, 2454.7188, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3364, 77.3203, 2456.2500, 15.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3287, 255.9844, 2549.3281, 20.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16599, 231.2813, 2545.7969, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 278.1484, 2555.1875, 15.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 16098, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16101, 321.6719, 2463.4922, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16368, 321.6719, 2463.4922, 25.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 357.5938, 2449.6172, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 364.2266, 2450.7578, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 316.3984, 2570.3672, 15.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 361.3750, 2571.8125, 15.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3287, 376.2969, 2606.3438, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 382.1875, 2609.4766, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16771, 404.7969, 2454.7188, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 16773, 397.4766, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 16775, 412.1172, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 405.3594, 2563.0859, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 16370, 385.3438, 2598.6250, 17.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 390.8203, 2604.0703, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 392.7109, 2596.4531, 17.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 389.1328, 2611.0625, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 16326, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16377, 416.1875, 2533.8281, 19.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 16378, 414.4063, 2536.5469, 18.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 2074, 419.3281, 2538.5391, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 16408, 418.2266, 2538.8516, 11.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1810, 418.7344, 2538.7578, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2518, 414.8438, 2535.1172, 9.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 2147, 413.9688, 2538.2188, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 16327, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16407, 419.3828, 2540.5078, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1748, 418.2734, 2541.0625, 9.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1810, 417.6328, 2542.5000, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1812, 416.2422, 2540.3359, 8.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 2115, 418.6875, 2539.5938, 8.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1810, 418.2031, 2539.9063, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1738, 420.1328, 2542.8750, 9.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 16374, 425.4688, 2531.0000, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16790, 425.4688, 2531.0000, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 422.8281, 2535.7344, 15.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 423.0234, 2535.7344, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1763, 421.0781, 2540.8125, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 16501, 429.9844, 2546.5156, 17.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 16409, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16601, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1496, -1618.6016, 680.9141, 6.1719, 0.25);
	//Елки
	RemoveBuildingForPlayer(playerid, 729, -1806.6797, 558.9141, 34.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1815.7500, 564.3281, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1799.2109, 563.5625, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1806.5703, 549.9141, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1812.7344, 556.2422, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1799.6484, 556.3516, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1807.6719, 565.8438, 34.0078, 0.25);


	SetPVarInt(playerid,"repairoffee",-1);
	SetPVarInt(playerid,"repairoffer",-1);
	return 1;
}

stock RegisterPlayer(playerid)
{
	new query[512],language,date[12],y,m,d,ip[15],rphone[24],invitation[28];
	GetPlayerIp(playerid,ip,15);
	getdate(y,m,d);
	format(date,12,"%d-%d-%d",y,m,d);
	GetPVarString(playerid,"rphone",rphone,24);
	GetPVarString(playerid,"rinvitation",invitation,28);
	switch(pRegData[playerid][5][0])
	{
		case 1: language = LANG_ENGLISH;
		case 2: language = LANG_JAPAN;
		case 3: language = LANG_ITALIAN;
		case 4..6: language = LANG_SPAIN;
		case 7: language = LANG_RUSSIAN;
		case 8: language = LANG_PORTUGAL;
		case 9: language = LANG_FRENCH;
		case 10: language = LANG_ENGLISH;
		default: language = LANG_ENGLISH;
	}
	language = LANG_ENGLISH | language;
	format(query,sizeof(query),"INSERT INTO `accounts` VALUES('','%s','%s','%s','%s','%s','0','0','0','%d','%d','%s','%d','%d','0','100.0','100','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','','0','%b','0','00000000','1','%s','15','0','0','0','0','0','0','0','0','0','0','0','0','%s','none','none','','0')",pRegData[playerid][0],
		pRegData[playerid][1],
		pRegData[playerid][2],
		ip,
		rphone,
		pRegData[playerid][3][0],
		pRegData[playerid][4][0],
		pRegData[playerid][6],
		pRegData[playerid][5][0],
		GetPVarInt(playerid,"skinid"),
		language,
		date,
		invitation
	);
	for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid, RegisterTextdrawST3[i][playerid]);
	if(!mysql_query(query)) {
		mysql_debug(1);
		mysql_query(query);
		mysql_debug(0);
		SendClientMessage(playerid, -1, "Произошла ошибка при отправке запроса создания аккаунта. Обратитесь к администрации!");
		NewKick(playerid);
	}
	else {
		for(new c = 0; c < 21; c++) SendClientMessage(playerid,-1," ");
		SendClientMessage(playerid,CGREEN,"Аккаунт зарегистрирован");
		SendClientMessage(playerid,CWHITE,"Для того что бы в будущем Вы могли востановить пароль от своего аккаунта Вы можете {"#cYELLOW"}подтвердить email.");
		SendClientMessage(playerid,CGREEN,"Для этого зайдите в меню (/menu) и выберите SETTINGS > Подвердить E-Mail.");
		SendClientMessage(playerid,CGREEN,"Для получения помощи рекомендуем вам подойти к иконке информации.");
		LoadPlayerData(playerid);
		pTemp[playerid][pLogined] = true;
		plogin[playerid] = true;
		pTemp[playerid][pREGISKL] = true;
		SetPVarInt(playerid,"registskin",0);
        StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
	}
	return 1;
}

stock UpdatePlayerData(playerid,field[],data)
{
	new query[512];
	format(query,sizeof(query),"UPDATE `accounts` SET `%s` = '%d' WHERE `id` = '%d'",field,data,pData[playerid][pMysqlID]);
	mysql_query(query);
	return mysql_errno();
}

stock LoadPlayerData(playerid)
{
	FMQ("SELECT * FROM `accounts` WHERE nickname = '%s'",pRegData[playerid][0]);
	new result[1500],newdonate;
	mysql_store_result();
	mysql_fetch_row(result);
	mysql_free_result();
	new guns[128];
	sscanf(result,"p<|>e<is[32]s[32]s[64]s[16]s[24]iiiiiiiiifiiiiiiiiiiiiiiiiiiiiiiiiiiiiis[32]ibiiis[12]iiiiiiiiiiiiis[28]s[20]s[80]>s[128]i",pData[playerid],guns,newdonate);
	SetPVarString(playerid,"mysqlgun",guns);
	new h,m,s;
	gettime(h,m,s);
	if(pData[playerid][pHouse])
	{
		new houseid = pData[playerid][pHouse]-1;
		if(!gHouses[houseid][houseOwnerID])
		{
			SendClientMessage(playerid,CGRAY,"Владелец дома, в котором Вы живете, продал свой дом");
			pData[playerid][pHouse] = 0;
			UpdatePlayerData(playerid,"house",0);
		}
		else if(gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])
		{
			new bool:leave;
			for(new i;i<3;i++)
			{
				if(gHouses[houseid][houseHabitID][i] == pData[playerid][pMysqlID]) {leave = true; break;}
			}
			if(!leave)
			{
				SendClientMessage(playerid,CGRAY,"Владелец дома выселил Вас");
				pData[playerid][pHouse] = 0;
				UpdatePlayerData(playerid,"house",0);
			}
		}
		if(gHouses[houseid][houseOwnerID] == pData[playerid][pMysqlID]) {
			if(!pData[playerid][pFraction] && gHouses[houseid][houseSkin][3] != 0) {
				gHouses[houseid][houseSkin][3] = 0;
				UpdateHouseDress(houseid);
			}
		}
	}
	if(pData[playerid][pFraction]) pTemp[playerid][pGiveSalary] = 10;
	if(pData[playerid][pAdmin])
	{
		new mes[128];
		format(mes,sizeof(mes),"Вы администратор %d-го уровня",pData[playerid][pAdmin]);
		SendClientMessage(playerid,CINFO,mes);
	}
	new warn = pData[playerid][pWarn];
	if(warn && warn <= gCurDay)
	{
		pData[playerid][pWarn] = 0;
		UpdatePlayerData(playerid,"warn",0);
		SendClientMessage(playerid,CGREEN,"Все предупреждения (Warn'ы) были сняты");
	}
 	sscanf(pData[playerid][pSkills], "p<,>a<i>[7]",pTemp[playerid][pGunSkill]); //Считываем скилы
	SetPlayerSkills(playerid);
	new query[128],date[12],y,d;
	getdate(y,m,d);
	format(date,12,"%d-%d-%d",y,m,d);
	format(query,sizeof(query),"UPDATE `accounts` SET `status` = '1', `last` = '%s' WHERE `id` = '%d'",date,pData[playerid][pMysqlID]);
	mysql_query(query);
}

stock CreateTextDraws()
{
}

stock SetNextBusCP(playerid,pos)
{
	new type = 0;
	new route = pTemp[playerid][pBusRoute];
	if(gBusCPs[route][pos][0] == gBusCPs[route][pos+1][0] && gBusCPs[route][pos][1] == gBusCPs[route][pos+1][1]) type = 1;
	SetPlayerRaceCheckpoint(playerid,type,gBusCPs[route][pos][0],gBusCPs[route][pos][1],gBusCPs[route][pos][2],gBusCPs[route][pos+1][0],gBusCPs[route][pos+1][1],gBusCPs[route][pos+1][2],4.0);
}

stock GetPlayerTruckLevel(playerid)
{
	if(pData[playerid][pTruckSkill] >= TRUCK_LEVEL_3) return 3;
	else if(pData[playerid][pTruckSkill] >= TRUCK_LEVEL_2) return 2;
	else return 1;
}

stock LoadServerData()
{
}

stock SaveServerData()
{
	for(new i;i<MAX_VEHICLES;i++)
	{
		if(gCars[i][carVid] != INVALID_VEHICLE_ID)
		{
			printf("Saving %d",i);
			new query[512],data[256];
			new vehicleid = gCars[i][carVid];
			for(new i2;i2<18;i2++)
			{
				if(i2<4) format(data,256,"%s %d",data,gVehicles[vehicleid-1][vDemages][i2]);
				else format(data,256,"%s %d",data,gVehicles[vehicleid-1][vTuning][i2-4]);
			}
			format(query,sizeof(query),"UPDATE `cars` SET `fuel` = '%.2f', `drived` = '%.2f', `health` = '%.2f', `probability`='%d', `data` = '%s' WHERE `id` = '%d'",gVehicles[vehicleid-1][vFuel],gVehicles[vehicleid-1][vDrived],gVehicles[vehicleid-1][vHealth],gVehicles[vehicleid-1][vProbability],data,gCars[i][carMysqlID]);
			mysql_query(query);
			if(mysql_errno()) printf("Error while saving car data");
		}
	}
	new fid = ini_openFile("warehouses.ini");
	ini_setInteger(fid,"coal",gCoalWH);
	ini_setInteger(fid,"wood",gWoodWH);
	ini_setInteger(fid,"guncoal",gGunWorkWH[0]);
	ini_setInteger(fid,"gunwood",gGunWorkWH[1]);
	ini_setInteger(fid,"gun",gGunWorkWH[2]);
	ini_setInteger(fid,"army1gun",gArmyWarehouse[0][0]);
	ini_setInteger(fid,"army1ammo",gArmyWarehouse[0][1]);
	ini_setInteger(fid,"army2gun",gArmyWarehouse[1][0]);
	ini_setInteger(fid,"army2ammo",gArmyWarehouse[1][1]);
	ini_setInteger(fid,"lspdgun",gPDWarehouse[0][0]);
	ini_setInteger(fid,"lspdammo",gPDWarehouse[0][1]);
	ini_setInteger(fid,"sfpdgun",gPDWarehouse[1][0]);
	ini_setInteger(fid,"sfpdammo",gPDWarehouse[1][1]);
	ini_setInteger(fid,"lvpdgun",gPDWarehouse[2][0]);
	ini_setInteger(fid,"lvpdammo",gPDWarehouse[2][1]);
	ini_setInteger(fid,"yaksklad",gMafWarehouse[0]);
	ini_setInteger(fid,"lcnsklad",gMafWarehouse[1]);
	ini_setInteger(fid,"rmsklad",gMafWarehouse[2]);
	ini_closeFile(fid);
	//Заправки
	for(new i;i<FILLING_COUNT;i++)
	{
		new query[128];
		format(query,sizeof(query),"UPDATE `fillings` SET `bank` = '%d' WHERE `id` = '%d'",gFillings[i][fillBank],gFillings[i][fillMysqlID]);
		mysql_query(query);
	}
	// Слоты доставки продуктов
	for(new i; i < DELIVERY_COUNT; i ++) SaveDeliveryData(i);
	// Банк репортёров
	SaveNewsMoney();
	return 1;
}

stock ShowHintsDialog(playerid,dialogid,button1[],button2[])
{
	new mes[2200];
	for(new i;i<HINTS_COUNT;i++)
	{
		format(mes,sizeof(mes),"%s\n{"#cLIGHTGREEN"}[%d] {"#cWHITE"}%s",mes,i+1,gHints[i][hintDescription]);
	}
	ShowPlayerDialog(playerid,dialogid,2,"Hints",mes,button1,button2);
	return 1;
}

stock GetCarSlot(carID)
{
	for(new i3;i3<MAX_VEHICLES;i3++)
	{
		if(carID == gCars[i3][carMysqlID])
		{
			return i3;
		}
	}
	return -1;
}

stock GetCarClassName(classid,classname[],size=sizeof(classname))
{
	switch(classid)
	{
		case 0: format(classname,size,"Эконом");
		case 1: format(classname,size,"Средний");
		case 2: format(classname,size,"Спорт");
		case 3: format(classname,size,"Мото");
	}
}

stock GetPlayerMoneyEx(playerid)
{
	return pData[playerid][pMoney];
}

stock GivePlayerMoneyEx(playerid,money,reason[])
{
	if(GetPlayerMoney(playerid) < 0) ResetPlayerMoney(playerid);
	pData[playerid][pMoney] = pData[playerid][pMoney] + money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,pData[playerid][pMoney]);
	new query[256];
	format(query,sizeof(query),"INSERT INTO `log_money` VALUES ('','%s','%d','%d','%d','%s')",pData[playerid][pNickname],pData[playerid][pMysqlID],money,pData[playerid][pMoney],reason);
	mysql_query(query);
	UpdatePlayerData(playerid,"money",pData[playerid][pMoney]);
	return 1;
}

forward TransferMoney(playerid,toplayerid,money,reason[]);
public TransferMoney(playerid,toplayerid,money,reason[])
{
	if(GetPlayerMoney(playerid) < 0) ResetPlayerMoney(playerid);
	if(GetPlayerMoney(toplayerid) < 0) ResetPlayerMoney(toplayerid);
	if(toplayerid >= 0)
	{
		pData[toplayerid][pMoney] = pData[toplayerid][pMoney] + money;
		GivePlayerMoney(toplayerid,money);
	}
	if(playerid >= 0)
	{
		GivePlayerMoney(playerid,-money);
		pData[playerid][pMoney] = pData[playerid][pMoney] - money;
	}
	if(playerid >= 0) UpdatePlayerData(playerid,"money",pData[playerid][pMoney]);
	if(toplayerid >= 0) UpdatePlayerData(toplayerid,"money",pData[toplayerid][pMoney]);
}

stock ShowPass(playerid,actplayerid)
{
	new mes[512],name[2][24],army[25],jobname[25],jobstat[25],classname[12],nation[64];
	new houseid = pData[playerid][pHouse]-1;
	explode(name,pData[playerid][pNickname],"_");
	if(!strlen(name[1])) strcat(name[1],"*неизвестно*");
	if(pData[playerid][pJob])
	{
		switch(pData[playerid][pJob])
		{
			case 1:
			{
				strcat(jobname,"Водитель автобуса");
				if(pData[playerid][pBusSkill] >= BUS_LEVEL_3) jobstat = "Опытный работник";
				else if(pData[playerid][pBusSkill] >= BUS_LEVEL_2) jobstat = "Стабильный работник";
				else jobstat = "Начинающий работник";
			}
			case 2:
			{
				strcat(jobname,"Дальнобойщик");
				if(pData[playerid][pTruckSkill] >= TRUCK_LEVEL_3) jobstat = "Опытный работник";
				else if(pData[playerid][pTruckSkill] >= TRUCK_LEVEL_2) jobstat = "Стабильный работник";
				else jobstat = "Начинающий работник";
			}
			case 3:
			{
				strcat(jobname,"Водитель такси");
				jobstat = "Водитель";
			}
			default:
			{
				strcat(jobname,"Безработный");
				jobstat = "-";
			}
		}
	}
	else if(pData[playerid][pFraction] && !IsGang(pData[playerid][pFraction]))
	{
		new fractionid = pData[playerid][pFraction]-1;
		new rank = pData[playerid][pRank];
		strcat(jobname,gFractionName[fractionid]);
		strcat(jobstat,gFractionRankName[fractionid][rank-1]);
	}
	new housenumber[15];
	if(houseid >= 0)
	{
		format(housenumber,15,"%d",pData[playerid][pHouse]);
		switch(gHouses[houseid][houseClass])
		{
			case 0:classname = "Эконом";
			case 1:classname = "Cредний";
			case 2:classname = "Элитный";
			case 3:classname = "Особняк";
			default:classname = "Неизвестно";
		}
	}
	else
	{
		housenumber = "Отсутствует";
		classname = "Отсутствует";
	}
	switch(pData[playerid][pNation])
	{
		case 1: strcat(nation,"Американец");
		case 2: strcat(nation,"Японец");
		case 3: strcat(nation,"Итальянец");
		case 4: strcat(nation,"Мексиканец");
		case 5: strcat(nation,"Латиноамериканец");
		case 6: strcat(nation,"Испанец");
		case 7: strcat(nation,"Русский");
		case 8: strcat(nation,"Португалец");
		case 9: strcat(nation,"Француз");
		case 10: strcat(nation,"Афроамериканец");
	}
	if(pData[playerid][pArmyRank] > 0)
	{
		format(army,24,"{"#cINFO"}%s",gFractionRankName[7][pData[playerid][pArmyRank]-1]);
	}
	else format(army,24,"{"#cRED"} ---");
	format(mes,sizeof(mes),"{"#cWHITE"}                   ДАННЫЕ:\nИмя: {"#cINFO"}%s\n{"#cWHITE"}Фамилия: {"#cINFO"}%s\n{"#cWHITE"}Возраст: {"#cINFO"}%d\n{"#cWHITE"}Национальность: {"#cINFO"}%s\n{"#cWHITE"}Воинский учет: {"#cINFO"}%s\n{"#cWHITE"}Законопослушность: {"#cINFO"}%d",name[0],name[1],pData[playerid][pAge],nation,army,pData[playerid][pZakon]);
	format(mes,sizeof(mes),"%s\n\n{"#cWHITE"}                  ПРОПИСКА\nДом номер: {"#cBLUE"}%s\n{"#cWHITE"}Класс дома: {"#cBLUE"}%s",mes,housenumber,classname);
	format(mes,sizeof(mes),"%s\n\n{"#cWHITE"}        ТРУДОВОЕ УСТРОЙСТВО:\nМесто работы: {"#cBLUE"}%s\n{"#cWHITE"}Должность: {"#cBLUE"}%s",mes,jobname,jobstat);

	ShowPlayerDialog(actplayerid,dMes,0,"        Паспорт        ",mes,"OK","");
}
stock ActionDex(playerid,action[],Float:distance = 13.0)
{
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,CGREEN,action);
	}
	return 1;
}

stock MeAction(playerid,action[],Float:distance = 13.0)
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
	new mes[128];
	format(mes,sizeof(mes),"%s %s",pData[playerid][pNickname],action);
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,CPINK,mes);
	}
	return 1;
}

stock DoAction(playerid,action[],Float:distance = 13.0)
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
	new mes[128];
	format(mes,sizeof(mes),"%s (%s)",action,pData[playerid][pNickname]);
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) ||  GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,CPINK,mes);
	}
	return 1;
}

stock TryAction(playerid,action[],Float:distance = 13.0)
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
	new luck[24];
	if(RandomEx(0,2) == 1) strcat(luck,"{"#cGREEN"}Удачно");
	else strcat(luck,"{"#cRED"}Неудачно");
	new mes[190];
	format(mes,sizeof(mes),"%s %s | %s",pData[playerid][pNickname],action,luck);
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,CPINK,mes);
	}
	return 1;
}

stock Speech(playerid,text[],language,Float:distance = 13.0,anim = 1,color = 1)
{
	if(!pTemp[playerid][pLogined] || !pData[playerid][pMysqlID]) return 1;
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
	if(pTemp[playerid][pControllable] && anim)
	{
		ApplyAnimation(playerid,"ped","IDLE_chat",4.1,1,1,1,1,1,1);
		SetTimerEx("ClearAnimationsDelay",strlen(text)*200+1000,false,"i",playerid);
	}
	new mes[190],mes2[64],langname[32];
	new mesid[190];
	if(language | LANG_ENGLISH != LANG_ENGLISH)
	{
		switch(language)
		{
			case LANG_JAPAN: strcat(langname,"Японский");
			case LANG_ITALIAN: strcat(langname,"Итальянский");
			case LANG_PORTUGAL: strcat(langname,"Португальский");
			case LANG_FRENCH: strcat(langname,"Французский");
			case LANG_SPAIN: strcat(langname,"Испанский");
			case LANG_RUSSIAN: strcat(langname,"Русский");
		}
		format(mes,sizeof(mes),"%s [%s]: %s",pData[playerid][pNickname],langname,text);
		format(mesid,sizeof(mesid),"%s [%d] [%s]: %s",pData[playerid][pNickname],playerid,langname,text);
	}
	else
	{
		format(mes,sizeof(mes),"%s: %s",pData[playerid][pNickname],text);
		format(mesid,sizeof(mesid),"%s[%d]: %s",pData[playerid][pNickname],playerid,text);
	}
	format(mes2,sizeof(mes2),"%s сказал что-то на непонятном языке",pData[playerid][pNickname]);
	if(language | LANG_ENGLISH == LANG_ENGLISH)
	{
		SetPlayerChatBubble(playerid,text,CWHITE,10.0,5000);
	}
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && pData[i][pMysqlID])
		{
			new Float:rdist,c;
			rdist = GetPlayerDistanceToPlayer(playerid,i);
			if (rdist > distance || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
			if(color)
			{
				switch(floatround(rdist))
				{
					case 0..2: c = 0xFFFFFFFF;
					case 3..6: c = 0xCCCCCCFF;
					case 7..10: c = 0xAAAAAAFF;
					default: c = 0x888888FF;
				}
			}
			else c = CWHITE;
			if(pData[i][pLanguage] & language)
			{
				if(pData[i][pSettings] & setPlayerIDChat) SendClientMessage(i,c,mesid);
				else SendClientMessage(i,c,mes);
			}
			else SendClientMessage(i,CPINK,mes2);
		}
	}
	return 1;
}

stock LoudSpeech(playerid,text[],language,Float:distance = 20.0)
{
	if(!pTemp[playerid][pLogined] || !pData[playerid][pMysqlID]) return 1;
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
	new mes[190],mes2[64],langname[32];
	if(language | LANG_ENGLISH != LANG_ENGLISH)
	{
		switch(language)
		{
			case LANG_JAPAN: strcat(langname,"Японский");
			case LANG_ITALIAN: strcat(langname,"Итальянский");
			case LANG_PORTUGAL: strcat(langname,"Португальский");
			case LANG_FRENCH: strcat(langname,"Французский");
			case LANG_SPAIN: strcat(langname,"Испанский");
			case LANG_RUSSIAN: strcat(langname,"Русский");
		}
		format(mes,sizeof(mes),"%s [%s]: %s",pData[playerid][pNickname],langname,text);
	}
	else format(mes,sizeof(mes),"%s кричит: %s",pData[playerid][pNickname],text);
	format(mes2,sizeof(mes2),"%s кричит что-то на непонятном языке",pData[playerid][pNickname]);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"RIOT","RIOT_shout",4.1,0,0,0,0,1);
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i)) continue;
		new Float:rdist,c;
		rdist = GetPlayerDistanceToPlayer(playerid,i);
		if(!pTemp[i][pLogined] || !pData[i][pMysqlID] || rdist > distance || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
		switch(floatround(rdist))
		{
			case 0..3: c = 0xFFFFFFFF;
			case 4..8: c = 0xCCCCCCFF;
			case 9..13: c = 0xAAAAAAFF;
			default: c = 0x888888FF;
		}
		if(pData[i][pLanguage] & language) SendClientMessage(i,c,mes);
		else SendClientMessage(i,CPINK,mes2);
	}
	return 1;
}

stock DepartmentChat(color,mes[],Medic = 1,DOD = 1, DOI = 1, FBI = 1,Mayor = 1)
{
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || !pData[i][pFraction] || pData[i][pJail]) continue;
		new fraction = pData[i][pFraction];
		if(Medic && fraction == 2 || DOD && fraction == 8 || DOI && fraction == 9 || FBI && fraction == 11 || Mayor && fraction == 11 || fraction == 12 || fraction == 13 || fraction == 14)
		{
			SendClientMessage(i,color,mes);
		}
	}
}

stock SendAdminMessage(color,const message[],exc = -1)
{
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && pData[i][pMysqlID])
		{
			if(pData[i][pSettings] & setAdminInfo || exc == i) SendClientMessage(i,color,message);
		}
	}
}

stock PayDay()
{
	new bool:newday;
	new day = GetDayNumber();
	if(gCurDay != day)	{gCurDay = day; newday = true;}
	new h,m,s;
	gettime(h,m,s);
	SetWorldTime(h);
	if(newday)
	{
		for(new i;i<HOTEL_COUNT;i++)
		{
			new bool:did;
			for(new k;k<8;k++)
			{
				if(gHotelEndurance[i][k] && gHotelEndurance[i][k] <= day)
				{
					new ownerid = gHotelResidents[i][k];
					new query[128];
					for(new l;l<MAX_VEHICLES;l++)
					{
						if(ownerid == gCars[l][carOwnerid])
						{
							new vehicleid = gCars[l][carVid];
							new price = floatround(gTransport[gCars[l][carModelid]][trPrice]*0.8);
							DestroyVehicle(vehicleid);
							format(query,sizeof(query),"DELETE FROM `cars` WHERE `id` = '%d'",gCars[l][carMysqlID]);
							mysql_query(query);
							format(query,sizeof(query),"UPDATE `accounts` SET `money` = `money` + '%d', `car` = '0' WHERE `id` = '%d'",price,ownerid);
							mysql_query(query);
							printf("%d Выселен из отеля",ownerid);
						}
					}
					did = true;
					gHotelResidents[i][k] = 0;
					gHotelEndurance[i][k] = 0;
				}
			}
			if(did) UpdateHotelResidents(i);
		}
	}
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
		new str[70];
		new fractionid = pData[i][pFraction]-1;
		new rank = pData[i][pRank]-1;
		if(IsAGang(i))
		{
			pData[i][pSalary] += TotalGz[pData[i][pFraction]-3]*70;
			format(str, sizeof(str), "В Вашу зарплату добавлено %d$", TotalGz[IsAGang(i)]*70);
			SendClientMessage(i, COLOR_GREY, str);
		}
		else if(pData[i][pFraction])
		{
			pData[i][pSalary] += gFractionSalary[fractionid][rank];
			format(str, sizeof(str), "В Вашу зарплату добавлено %d$", gFractionSalary[fractionid][rank]);
			SendClientMessage(i, COLOR_GREY, str);
		}
		SendClientMessage(i,CWHITE,"==========[{"#cGRAY"}Банковский чек{"#cWHITE"}]=========");
		new mes[64];
		format(mes,sizeof(mes),"Время: %d:00",h);
		SendClientMessage(i,CWHITE,mes);
		format(mes,sizeof(mes),"Заработок: {"#cGREEN"}$%d",pData[i][pSalary]);
		SendClientMessage(i,CWHITE,mes);
		pData[i][pZakon]++;
		if(pData[i][pSalary])
		{
			pData[i][pBank] += pData[i][pSalary];
			pData[i][pSalary] = 0;
		}
		if(pData[i][pUnemployment] && pData[i][pGiveExp])
		{
			if(pData[i][pJob] || (pData[i][pFraction] < 3 && pData[i][pFraction] != 0) || pData[i][pFraction] > 7)
			{
				pData[i][pUnemployment] = 0;
				UpdatePlayerData(i,"unemployment",0);
			}
			else
			{
				pData[i][pBank] += 125;
				SendClientMessage(i,CWHITE,"Пособие: {"#cGREEN"}$125");
			}
		}
		if(pData[i][pHouse] && !pData[i][pAdmin])
		{
			new houseid = pData[i][pHouse] - 1;
			new price = floatround(gHouses[houseid][housePrice] * 0.004);
			if(gHouses[houseid][houseImprove][4]) price = price / 2;
			format(mes,sizeof(mes),"Квартплата: {"#cRED"}$%d",price);
			SendClientMessage(i,CWHITE,mes);
			pData[i][pBank] -= price;
			if(pData[i][pBank] < 0 && abs(pData[i][pBank]) > gHouses[houseid][housePrice])
			{
				UpdatePlayerData(i,"house",0);
				if(mysql_errno()) return SendClientMessage(i,CRED,"Ошибка Mysql");
				new query[512];
				format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0', skin = '0|0|0|0',safecode='0', safemoney='0', drugs='0', products='0',inhabit2id = '0',inhabit3id = '0',inhabit4id = '0',inhabit2='',inhabit3='',inhabit4='' WHERE `id` = '%d'",houseid+1);
				mysql_query(query);
				if(mysql_errno()) return SendClientMessage(i,CRED,"Ошибка Mysql");
				pData[i][pHouse] = 0;
				gHouses[houseid][houseOwnerID] = 0;
				strdel(gHouses[houseid][houseOwner],0,24);
				strdel(gHouseHabits[houseid][0],0,24);
				strdel(gHouseHabits[houseid][1],0,24);
				strdel(gHouseHabits[houseid][2],0,24);
				gHouses[houseid][houseHabitID][0] = 0;
				gHouses[houseid][houseHabitID][1] = 0;
				gHouses[houseid][houseHabitID][2] = 0;
				for(new j;j<9;j++)
				{
					if(j < 5)
					{
						gHouses[houseid][houseImprove][j] = 0;
						if(j < 4) gHouses[houseid][houseSkin][j] = 0;
					}
					gHouses[houseid][houseGun][j] = 0;
				}
				gHouses[houseid][houseSafeCode] = 0;
				gHouses[houseid][houseSafeMoney] = 0;
				gHouses[houseid][houseDrugs] = 0;
				gHouses[houseid][houseProducts] = 0;
				pData[i][pBank] += gHouses[houseid][housePrice];
				DestroyDynamicPickup(gHousePickup[houseid]);
				gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
				DestroyDynamicMapIcon(gHouseIcon[houseid]);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
				SendClientMessage(i,CRED,"Ваш дом был продан в счет погашения задолженности в банке");
			}
		}
		format(mes,sizeof(mes),"Счет: {"#cYELLOW"}$%d",pData[i][pBank]);
		SendClientMessage(i,CWHITE,mes);
		SendClientMessage(i,CWHITE,"==================================");
		if(pData[i][pGiveExp] >= 40)
		{
			if(pTemp[i][pAFK] <= 10)
			{
				pData[i][pExp]++;
				pData[i][pGiveExp] = 0;
				if(pData[i][pFraction] == 8)
				{
					if(pData[i][pRank] != pData[i][pArmyRank])
					{
						pData[i][pArmyTime]++;
						if(pData[i][pArmyTime] >= 5)
						{
							pData[i][pArmyTime] = 0;
							pData[i][pArmyRank] = pData[i][pRank];
							SendClientMessage(i,CGREEN,"Ваш текущий ранг в армии был внесен в воинский учет");
						}
					}
					else pData[i][pArmyTime] = 0;
					new query[150];
					format(query,sizeof(query),"UPDATE `accounts` SET `armytime` = '%d', `armyrank` = '%d' WHERE `id` = '%d'",pData[i][pArmyTime],pData[i][pArmyRank],pData[i][pMysqlID]);
					mysql_query(query);
				}
			}
			else SendClientMessage(i,CGRAY,"Вы не получили EXP потому что были в АФК во время PayDay");
		}
		else
		{
			SendClientMessage(i,CGRAY,"Вы не получили EXP потому что отыграли меньше 40 минут.");
		}
		if(pData[i][pExp] >= pData[i][pLevel]*6)
		{
			SendClientMessage(i,CGREEN,"Ваш игровой уровень и IC возраст повысился");
			pData[i][pLevel]++;
			pData[i][pAge]++;
			pData[i][pExp] = pData[i][pExp] - (pData[i][pLevel]-1)*6;
			SetPlayerScore(i,pData[i][pLevel]);
		}
		new query[180];
		format(query,sizeof(query),"UPDATE `accounts` SET `exp` = '%d', `level` = '%d', age='%d' WHERE `id` = '%d'",pData[i][pExp],pData[i][pLevel],pData[i][pAge],pData[i][pMysqlID]);
		mysql_query(query);
		if(pData[i][pHotel])
		{
			new room = pData[i][pHotelRoom];
			new hotelid = pData[i][pHotel] - 1;
			if(gHotelResidents[hotelid][room] == pData[i][pMysqlID])
			{
				new remain = gHotelEndurance[hotelid][room] - day;
				if(remain <= 2) SendClientMessage(i,CYELLOW,"ВНИМАНИЕ! У Вас осталось менее 2-х дней до того как Вас Выселят из отеля, если Вы не оплатите за проживание.");
			}
			else
			{
				SendClientMessage(i,CORANGE,"Вы были Выселены из отеля за неуплату");
				SendClientMessage(i,CORANGE,"Если у Вас было т/с, то оно было продано гос-у за 80 процентов от цены на рынке");
				pData[i][pHotel] = 0;
				pData[i][pHotelRoom] = 0;
				format(query,sizeof(query),"UPDATE `accounts` SET `hotel` = '0', `hotelroom` = '0' WHERE `id` = '%d'",pData[i][pMysqlID]);

				mysql_query(query);
			}
		}
		MoneyFriends(i);
	}
	return 1;
}
stock SetVehicleHealthEx(vehicleid, Float:health)
{
	gVehicles[vehicleid-1][vHealth] = health;
	SetVehicleHealth(vehicleid,health);
}

stock ShowSettings(playerid)
{
	new mes[512];
	for(new i;i<SETTINGS_COUNT;i++)
	{
		new flag[14] = "{"#cRED"}Выкл";
		if(pData[playerid][pSettings] & (1 << i)) flag = "{"#cGREEN"}Вкл";
		format(mes,sizeof(mes),"%s%d.%s [%s{"#cWHITE"}]\n",mes,i+1,gSettingName[i],flag);
	}
	/*new mes[256],flag[12];
	if(pTemp[playerid][pShowNicknames]) strcat(flag,"{"#cGREEN"}Вкл.");
	else strcat(flag,"{"#cRED"}Выкл.");
	format(mes,sizeof(mes),"1. Показывать ники игроков [%s{"#cWHITE"}]\n",flag);
	if(pData[playerid][pSettings] & setAdminInfo) strcat(flag,"{"#cGREEN"}Вкл.");
	else strcat(flag,"{"#cRED"}Выкл.");*/
	ShowPlayerDialog(playerid,dPlayerMenuSettingsAction,2,"Выберите настройку",mes,"Изменить","Отмена");
}

stock ShowCodeSettings(playerid)
{
	new data[2][25],mes[128];
	if(!strlen(pData[playerid][pCode])) strcat(data[0],"Установить");
	else strcat(data[0],"Изменить");
	if(!pData[playerid][pRequestCode]) strcat(data[1],"{"#cRED"}Выкл.");
	else strcat(data[1],"{"#cGREEN"}Вкл.");
	format(mes,sizeof(mes),"\n1. %s код безопасности\n2. Запрашивать код безопасности при входе [%s{"#cWHITE"}]",data[0],data[1]);
	ShowPlayerDialog(playerid,dCode,2,"Код безопасности",mes,"OK","Назад");
}

stock ShowFillingPrice(playerid,fillingid,tankid)
{
	new tmp[32];
	GetFuelName(tankid+1,tmp);
	new mes[256];
	format(mes,sizeof(mes),"{"#cWHITE"}Укажите новую цену для топлива марки \"{"#cINFO"}%s{"#cWHITE"}\" (от %d до %d)\n{"#cGRAY"}(текущая цена: %d)",tmp,gFuelPrice[tankid][0],gFuelPrice[tankid][1],gFillings[fillingid][fillFuelPrice][tankid]);
	ShowPlayerDialog(playerid,dFillingPrice2,1,"Управление АЗС",mes,"OK","Отмена");
}

stock GetFuelName(fuelid,result[],size=sizeof(result))
{
	switch(fuelid)
	{
		case 0: format(result,size,"Пусто");
		case 1: format(result,size,"Diesel");
		case 2: format(result,size,"Regular");
		case 3: format(result,size,"Midgrade");
		case 4: format(result,size,"Premium");
		case 5: format(result,size,"Super Premium");
	}
}

stock Float:GetFillingBarX(const Float: fuel,tank)
{
	return 223.0+(fuel*184/tank);
}

stock UpdateFillingBar(playerid,vehicleid)
{
	new modelid = GetVehicleModel(vehicleid)-400;
	new tank = gTransport[modelid][trTank];
	new Float:getfuel;
	getfuel = pTemp[playerid][pFillingAmount] - gVehicles[vehicleid-1][vFuel];
	new fillingid = pTemp[playerid][pFillingID]-1;
	new fillingmark = pTemp[playerid][pFillingMark];
	new price = floatround(gFillings[fillingid][fillFuelPrice][fillingmark-1] * getfuel);
	pTemp[playerid][pFillingPrice] = price;
	new Float:x,mes[32];
	x = GetFillingBarX(pTemp[playerid][pFillingAmount],tank);
	PlayerTextDrawTextSize(playerid,pTemp[playerid][pFillingBar][5], x, 0.000000);
	PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][5]);
	format(mes,sizeof(mes),"%.2f/%d.0",pTemp[playerid][pFillingAmount],tank);
	PlayerTextDrawSetString(playerid,pTemp[playerid][pFillingBar][6],mes);
	GetFuelName(fillingmark,mes);
	PlayerTextDrawSetString(playerid,pTemp[playerid][pFillingBar][7],mes);
	format(mes,sizeof(mes),"~r~$%d",price);
	PlayerTextDrawSetString(playerid,pTemp[playerid][pFillingBar][8],mes);
	if(gTransport[modelid][trFuelMark] != pTemp[playerid][pFillingMark]) GameTextForPlayer(playerid,"~r~ЏOЊ‡…BO “ЏO† –APK… –O„EЏ ЊOBPEѓ…Џ’ BAЋE Џ.C.",20000,4);
	else GameTextForPlayer(playerid,"_",800,4);
}

stock ShowFillingBar(playerid,vehicleid)
{
	pTemp[playerid][pFillingBar][0] = CreatePlayerTextDraw(playerid,167.000000, 172.000000, "_"); //Задний фон
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][0], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][0], 1);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][0], 0.600000, 8.000000);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][0], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][0], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][0], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][0], 1);
	PlayerTextDrawUseBox(playerid,pTemp[playerid][pFillingBar][0], 1);
	PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][0], 153);
	PlayerTextDrawTextSize(playerid,pTemp[playerid][pFillingBar][0], 470.000000, 0.000000);

	pTemp[playerid][pFillingBar][1] = CreatePlayerTextDraw(playerid,440.000000, 195.000000, "+");
	PlayerTextDrawAlignment(playerid,pTemp[playerid][pFillingBar][1], 2);
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][1], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][1], 1);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][1], 0.900000, 3.000000);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][1], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][1], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][1], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][1], 1);
	PlayerTextDrawUseBox(playerid,pTemp[playerid][pFillingBar][1], 1);
	PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][1], 866792226);
	PlayerTextDrawTextSize(playerid,pTemp[playerid][pFillingBar][1], 50.000000, 38.000000);

	pTemp[playerid][pFillingBar][2] = CreatePlayerTextDraw(playerid,194.000000, 195.000000, "-");
	PlayerTextDrawAlignment(playerid,pTemp[playerid][pFillingBar][2], 2);
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][2], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][2], 2);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][2], 0.900000, 3.000000);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][2], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][2], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][2], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][2], 1);
	PlayerTextDrawUseBox(playerid,pTemp[playerid][pFillingBar][2], 1);
	PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][2], -16777182);
	PlayerTextDrawTextSize(playerid,pTemp[playerid][pFillingBar][2], 50.000000, 38.000000);

	pTemp[playerid][pFillingBar][3] = CreatePlayerTextDraw(playerid,222.000000, 202.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][3], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][3], 1);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][3], 0.500000, 1.500000);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][3], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][3], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][3], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][3], 1);
	PlayerTextDrawUseBox(playerid,pTemp[playerid][pFillingBar][3], 1);
	PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][3], 255);
	PlayerTextDrawTextSize(playerid,pTemp[playerid][pFillingBar][3], 411.000000, 0.000000);

	pTemp[playerid][pFillingBar][4] = CreatePlayerTextDraw(playerid,227.000000, 205.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][4], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][4], 1);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][4], 0.500000, 0.899999);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][4], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][4], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][4], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][4], 1);
	PlayerTextDrawUseBox(playerid,pTemp[playerid][pFillingBar][4], 1);
	PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][4], 4456618);
	PlayerTextDrawTextSize(playerid,pTemp[playerid][pFillingBar][4], 407.000000, 0.000000);

	pTemp[playerid][pFillingBar][5] = CreatePlayerTextDraw(playerid,227.000000, 205.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][5], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][5], 1);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][5], 0.500000, 0.899999);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][5], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][5], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][5], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][5], 1);
	PlayerTextDrawUseBox(playerid,pTemp[playerid][pFillingBar][5], 1);
	PlayerTextDrawBoxColor(playerid,pTemp[playerid][pFillingBar][5], 16711850);
	PlayerTextDrawTextSize(playerid,pTemp[playerid][pFillingBar][5], 367.000000, 0.000000);

	pTemp[playerid][pFillingBar][6] = CreatePlayerTextDraw(playerid,316.000000, 202.000000, "40.2/50.0");
	PlayerTextDrawAlignment(playerid,pTemp[playerid][pFillingBar][6], 2);
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][6], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][6], 2);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][6], 0.370000, 1.300000);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][6], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][6], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][6], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][6], 1);

	pTemp[playerid][pFillingBar][7] = CreatePlayerTextDraw(playerid,320.000000, 176.000000, "~y~_");
	PlayerTextDrawAlignment(playerid,pTemp[playerid][pFillingBar][7], 2);
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][7], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][7], 2);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][7], 0.449999, 1.700000);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][7], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][7], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][7], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][7], 1);

	pTemp[playerid][pFillingBar][8] = CreatePlayerTextDraw(playerid,312.000000, 221.000000, "0$");
	PlayerTextDrawAlignment(playerid,pTemp[playerid][pFillingBar][8], 2);
	PlayerTextDrawBackgroundColor(playerid,pTemp[playerid][pFillingBar][8], 255);
	PlayerTextDrawFont(playerid,pTemp[playerid][pFillingBar][8], 2);
	PlayerTextDrawLetterSize(playerid,pTemp[playerid][pFillingBar][8], 0.400000, 1.700000);
	PlayerTextDrawColor(playerid,pTemp[playerid][pFillingBar][8], -1);
	PlayerTextDrawSetOutline(playerid,pTemp[playerid][pFillingBar][8], 0);
	PlayerTextDrawSetProportional(playerid,pTemp[playerid][pFillingBar][8], 1);
	PlayerTextDrawSetShadow(playerid,pTemp[playerid][pFillingBar][8], 1);

	pTemp[playerid][pFillingAmount] = gVehicles[vehicleid-1][vFuel];
	UpdateFillingBar(playerid,vehicleid);
	for(new i;i<9;i++) PlayerTextDrawShow(playerid,pTemp[playerid][pFillingBar][i]);
}

stock HideFillingBar(playerid)
{
	for(new i;i<9;i++) PlayerTextDrawDestroy(playerid,pTemp[playerid][pFillingBar][i]);
}

stock GetStoreGunSlot(gunid)
{
	switch(gunid)
	{
		case 34: return 0;
		case 33: return 1;
		case 31: return 2;
		case 30: return 3;
		case 29: return 4;
		case 25: return 5;
		case 24: return 6;
		case 23: return 7;
		case 5: return 8;
	}
	return -1;
}

stock GetStoreGunID(slot)
{
	switch(slot)
	{
		case 0: return 34;
		case 1: return 33;
		case 2: return 31;
		case 3: return 30;
		case 4: return 29;
		case 5: return 25;
		case 6: return 24;
		case 7: return 23;
		case 8: return 5;
	}
	return -1;
}

stock SetPlayerHealthEx(playerid,Float:health)
{
	pTemp[playerid][pAbletoHP] = true;
	SetPlayerHealth(playerid,health);
	pData[playerid][pHealth] = health;
}

stock UpdateHotelResidents(hotelid)
{
	new query[320],data[128],data2[128];
	for(new i;i<8;i++)
	{
		if(i)
		{
			format(data,sizeof(data),"%s|%d",data,gHotelResidents[hotelid][i]);
			format(data2,sizeof(data2),"%s|%d",data2,gHotelEndurance[hotelid][i]);
		}
		else
		{
			format(data,sizeof(data),"%d",gHotelResidents[hotelid][i]);
			format(data2,sizeof(data2),"%d",gHotelEndurance[hotelid][i]);
		}
	}
	format(query,sizeof(query),"UPDATE `hotels` SET `residents` = '%s', `endurance` = '%s' WHERE `id` = '%d'",data,data2,hotelid+1);
	mysql_query(query);
}

stock SaveStoreGun(houseid)
{
	new query[128],data[64];
	for(new i;i<9;i++)
	{
		if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseGun][i]);
		else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseGun][i]);
	}
	format(query,sizeof(query),"UPDATE `houses` SET `gun` = '%s' WHERE `id` = '%d'",data,houseid+1);
	mysql_query(query);
	return mysql_errno();
}

stock UpdateHouseGun(houseid)
{
	new hintid = gHouses[houseid][houseHint];
	for(new i;i<9;i++)
	{
		if(gHouses[houseid][houseGun][i] && !gHouseGunObject[houseid][i]) gHouseGunObject[houseid][i] = CreateDynamicObject(gHintGunID[i],gHintGun[hintid][i][0],gHintGun[hintid][i][1],gHintGun[hintid][i][2],gHintGun[hintid][i][3],gHintGun[hintid][i][4],gHintGun[hintid][i][5],houseid+1);
		else if(!gHouses[houseid][houseGun][i] && gHouseGunObject[houseid][i])
		{
			DestroyDynamicObject(gHouseGunObject[houseid][i]);
			gHouseGunObject[houseid][i] = 0;
		}
	}
}

stock GetGunCameraOffset(Float:x, Float:y, Float:angle, &Float:x2, &Float:y2)
{
	x2 = 0.7*floatsin(angle,degrees) + x;
	y2 = -0.7*floatcos(angle,degrees) + y;
}

stock UpdateHouseDress(houseid)
{
	new cnt;
	new hintid = gHouses[houseid][houseHint];
	for(new l;l<4;l++)
	{
		if(gHouses[houseid][houseSkin][l]) cnt++;
	}
	cnt--;
	if(cnt < 0 && gHouses[houseid][houseOwnerID]) printf("Возможны лаги с одеждой в доме %d",houseid+1);
	else if(cnt > 0)
	{
		CreateDynamicObject(2689,gHintDress[hintid][0][0],gHintDress[hintid][0][1],gHintDress[hintid][0][2],gHintDress[hintid][0][3],gHintDress[hintid][0][4],gHintDress[hintid][0][5],houseid+1);
		if(cnt > 1) CreateDynamicObject(2704,gHintDress[hintid][1][0],gHintDress[hintid][1][1],gHintDress[hintid][1][2],gHintDress[hintid][1][3],gHintDress[hintid][1][4],gHintDress[hintid][1][5],houseid+1);
		if(cnt > 2) CreateDynamicObject(2705,gHintDress[hintid][2][0],gHintDress[hintid][2][1],gHintDress[hintid][2][2],gHintDress[hintid][2][3],gHintDress[hintid][2][4],gHintDress[hintid][2][5],houseid+1);
	}
	new data[24],query[128];
	for(new i;i<4;i++)
	{
		if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseSkin][i]);
		else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseSkin][i]);
	}
	format(query,sizeof(query),"UPDATE `houses` SET `skin` = '%s' WHERE id = '%d'",data,houseid+1);
	mysql_query(query);
	return mysql_errno();
}
stock GetYearDayCount(year)
{
	if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) return 366;
	else return 365;
}

stock GetDayNumber()
{
	new d,m,y,diff,daycount,cdaycount;
	getdate(y,m,d);
	diff = y - 2012;
	for(new i;i<diff;i++) daycount += GetYearDayCount(i+2012);
	cdaycount = GetYearDayCount(y);
	new Mon[12];
	if(cdaycount == 365) Mon = {0,31,59,90,120,151,181,212,243,273,304,334};
	else Mon = {0,31,60,91,121,152,182,213,244,274,305,335};
	m -= 1; //один минус переводим в индекс
	new result = daycount+Mon[m]+d;
	return result;
}

stock IsAbleToHire(playerid)
{
	new fractionid = pData[playerid][pFraction]-1;
	new rank = pData[playerid][pRank];
	switch(pData[playerid][pFraction])
	{
		case 1:
		{
			if(rank >= 7) return 1;
		}
		case 2:
		{
			if(rank >= 8 && rank != 10) return 1;
		}
		case 3..7:
		{
			if(rank >= gGangAccess[fractionid-2][1]) return 1;
		}
		case 8: if(rank >= 14 && rank != 16) return 1;
		case 9: if(rank >= 15 && rank != 17) return 1;
		case 10: if(rank >= 9) return 1;
		case 11: if(rank > 6) return 1;
		case 12: if(rank > 6) return 1;
		case 13: if(rank > 6) return 1;
		case 14: if(rank > 6) return 1;
		case 15: if(rank > 8) return 1;
		case 16: if(rank > 8) return 1;
		case 17: if(rank > 8) return 1;
	}
	return 0;
}

stock IsAbleToUninvite(playerid)
{
	new fractionid = pData[playerid][pFraction];
	new rank = pData[playerid][pRank];
	switch(fractionid)
	{
		case 1:
		{
			if(rank >= 7) return 1;
		}
		case 2:
		{
			if(rank >= 8) return 1;
		}
		case 3..7:
		{
			if(rank >= gGangAccess[fractionid-3][2]) return 1;
		}
		case 8: if(rank >= 14) return 1;
		case 9: if(rank >= 15) return 1;
		case 10: if(rank >= 9) return 1;
		case 11: if(rank > 6) return 1;
		case 12: if(rank > 6) return 1;
		case 13: if(rank > 6) return 1;
		case 14: if(rank > 6) return 1;
		case 15: if(rank > 8) return 1;
		case 16: if(rank > 8) return 1;
		case 17: if(rank > 8) return 1;
	}
	return 0;
}

stock IsAbleToGiveRank(playerid)
{
	new fractionid = pData[playerid][pFraction];
	new rank = pData[playerid][pRank];
	switch(fractionid)
	{
		case 1:
		{
			if(rank >= 7) return 1;
		}
		case 2:
		{
			if(rank >= 8) return 1;
		}
		case 3..7:
		{
			if(rank >= gGangAccess[fractionid-3][3]) return 1;
		}
		case 8: if(rank >= 14) return 1;
		case 9: if(rank >= 15) return 1;
		case 10: if(rank >= 9) return 1;
		case 11: if(rank > 6) return 1;
		case 12: if(rank > 6) return 1;
		case 13: if(rank > 6) return 1;
		case 14: if(rank > 6) return 1;
		case 15: if(rank > 8) return 1;
		case 16: if(rank > 8) return 1;
		case 17: if(rank > 8) return 1;
	}
	return 0;
}

stock ShowTestQuestion(playerid,begin,end,dialogid,q=-1)
{
	if(q == -1) q = RandomEx(begin,end);
	pTemp[playerid][pTestQNumber] = q;
	new mes[256];
	format(mes,sizeof(mes),"%s\n1.%s\n2.%s\n3.%s\n4.%s",gExamQuestions[q],gExamAnswers[q][0],gExamAnswers[q][1],gExamAnswers[q][2],gExamAnswers[q][3]);
	ShowPlayerDialog(playerid,dialogid,2,"Школа вождения",mes,"Далее","Отмена");
	return 1;
}

GetWeaponSlot(weaponid) {
	switch(weaponid) {
		case 0, 1: return 0;
 		case 2..9: return 1;
		case 22..24: return 2;
		case 25..27: return 3;
		case 28, 29, 32: return 4;
		case 30, 31: return 5;
		case 33, 34: return 6;
		case 35..38: return 7;
		case 16..18, 39: return 8;
		case 41..43: return 9;
		case 10..15: return 10;
		case 44..46: return 11;
		case 40: return 12;
		default: return 0;
	}
	return 0;
}
stock SetPlayerArmourEx(playerid,Float:amount)
{
	pTemp[playerid][pAbletoHP] = true;
	pTemp[playerid][pArmour] = amount;
	SetPlayerArmour(playerid,amount);
}

stock ServerBan(playerid,actplayerid,time,reason[])
{
	new query[128];
	time += gCurDay;
	if(!time) time += gCurDay + (365 * 99);
	if(playerid < 0) format(query,sizeof(query),"INSERT INTO `ban` VALUES ('','-1','%d','%d','%s')",pData[actplayerid][pMysqlID],time,reason);
	else format(query,sizeof(query),"INSERT INTO `ban` VALUES ('','%d','%d','%d','%s')",pData[playerid][pMysqlID],pData[actplayerid][pMysqlID],time,reason);
	mysql_query(query);
	return mysql_errno();
}

stock AdminChat(color,mes[])
{
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || !pData[i][pAdmin]) continue;
		SendClientMessage(i,color,mes);
	}
}
stock strreplace(string[], find, replace)
{
	for(new i=0; string[i]; i++)
	{
		if(string[i] == find)
		{
			string[i] = replace;
		}
	}
}

stock ToggleLock(vehicleid)
{
	if(gVehicles[vehicleid-1][vLock])
	{
		gVehicles[vehicleid-1][vLock] = 0;
		for(new i;i<MAX_PLAYERS;i++) SetVehicleParamsForPlayer(vehicleid,i,0,0);
		return 0;
	}
	else
	{
		gVehicles[vehicleid-1][vLock] = 1;
		for(new i;i<MAX_PLAYERS;i++) SetVehicleParamsForPlayer(vehicleid,i,0,1);
		return 1;
	}
}

stock ToggleLamp(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(lights <= 0) lights = 1;
	else lights = 0;
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
}

stock GetLamp(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return lights;
}

stock ShowMakeGunList(playerid)
{
	new mes[256];
	for(new i;i<6;i++)
	{
		new gunname[24];
		GetWeaponName(gGunID[i],gunname,24);
		if(!i) format(mes,sizeof(mes),"%s",gunname);
		else format(mes,sizeof(mes),"%s\n%s",mes,gunname);
	}
	ShowPlayerDialog(playerid,dMakeGun,2,"Сборка оружия",mes,"Далее","Отмена");
}

stock GetSubfractionID(fractionid)
{
	switch(fractionid)
	{
		case 1: return 0;
		case 7: return 1;
		case 8: return 2;
	}
	return -1;
}

#include <anticrash>

stock GetClosestPlayer(playerid,&Float:distance)
{
	new world = GetPlayerVirtualWorld(playerid);
	distance = 5000.0;
	new id = -1;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || i == playerid || !pData[i][pMysqlID] || GetPlayerVirtualWorld(i) != world) continue;
		new Float: dist;
		dist = GetPlayerDistanceToPlayer(playerid,i);
		if(dist < distance) {id = i; distance = dist;}
	}
	return id;
}

stock IsGang(fraction)
{
	if(fraction >= 3 && fraction <= 7) return 1;
	else return 0;
}

stock del(op1,op2)
{
	new result;
	result = op1/op2;
	if(op1%op2) result += 1;
	return result;
}

stock abs( value )
{
    return ((value < 0 ) ? (-value) : (value));
}

stock GetFreeSeat(vehicleid)
{
	if(!vehicleid) return -1;
	new model = GetVehicleModel(vehicleid);
	new maxs = GetMaxSeat(model) - 1;
	new bool:seat[3],cnt;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i) || GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt++;
		if(cnt >= maxs) return -1;
	}
	for(new i;i<3;i++) if(!seat[i]) return i+1;
	return -1;
}

stock GetMaxSeat(modelid)
{
	switch(modelid)
	{
		case 596..598,427,490: return 4;
		case 599,497,528: return 2;
	}
	return -1;
}

stock UpdateEconomic()
{
	if(!gWoodWH) gWoodWH = 1;
	economicFactor = float(gCoalWH) / gWoodWH;
	gWorkSalary[0] = floatround((100 / (economicFactor + 1)));
	gWorkSalary[1] = 100 - gWorkSalary[0];
}

stock UpdateBusinessText(id)
{
	if(id < 0 || id >= MAX_BUSINESS_COUNT || !gBusiness[id][busiID]) return -1;
	new mes[256];
	if(gBusiness[id][busiStatus])
	{
		new ownerid = gBusiness[id][busiOwnerID];
		new nickname[MAX_PLAYER_NAME];
		new type = gBusiness[id][busiType] - 1;
		if(ownerid)	GetPlayerNameByID(ownerid,nickname);
		else strcat(nickname,"нет");
		format(mes,sizeof(mes),"\t{"#cORANGE"}%s {"#cWHITE"}\"%s\".\n{"#cORANGE"}Владелец: {"#cWHITE"}%s\n{"#cORANGE"}Гос. цена: {"#cWHITE"}$%d\n{"#cORANGE"}Товара: {"#cWHITE"}%d ед.",gBusinessTypeName[type],gBusiness[id][busiName],nickname,gBusiness[id][busiSellPrice],gBusiness[id][busiProduct]);
	}
	else strcat(mes,"\t\t\t{"#cRED"}ЗАКРЫТО\n{"#cGRAY"}(Информация недоступна)");
	UpdateDynamic3DTextLabelText(gBusinessText[id],CWHITE,mes);
	return 1;
}

stock UpdateBusinessData(id,field[],data)
{
	new query[128];
	format(query,sizeof(query),"UPDATE `business` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_query(query);
	return mysql_errno();
}

stock UpdateBusinessDataEx(id,field1[],data1,field2[],data2)
{
	new query[128];
	format(query,sizeof(query),"UPDATE `business` SET `%s` = '%d', `%s` = '%d' WHERE `id` = '%d'",field1,data1,field2,data2,id);
	mysql_query(query);
	return mysql_errno();
}

stock ShowBusinessInformation(playerid,id,dialogid)
{
	new mes[350];
	new ownerid = gBusiness[id][busiOwnerID];
	new nickname[MAX_PLAYER_NAME];
	new type = gBusiness[id][busiType] - 1;
	if(ownerid)	GetPlayerNameByID(ownerid,nickname);
	else strcat(nickname,"нет");
	new status[24];
	if(gBusiness[id][busiStatus]) strcat(status,"{"#cGREEN"}Открыт");
	else strcat(status,"{"#cRED"}Закрыт");
	format(mes,sizeof(mes),"{"#cORANGE"}Название:\t{"#cWHITE"}%s\n{"#cORANGE"}Тип:\t\t{"#cWHITE"}%s\n{"#cORANGE"}Владелец:\t{"#cWHITE"}%s\n{"#cORANGE"}Гос. цена\t{"#cWHITE"}$%d\n{"#cORANGE"}Касса:\t\t{"#cWHITE"}$%d\n{"#cORANGE"}Цена товара:\t{"#cWHITE"}$%d\n{"#cORANGE"}К-во товара:\t{"#cWHITE"}%d ед.\n{"#cORANGE"}Состояние:\t{"#cWHITE"}%s",gBusiness[id][busiName],gBusinessTypeName[type],nickname,
	gBusiness[id][busiSellPrice],gBusiness[id][busiBank],gBusiness[id][busiPrice],gBusiness[id][busiProduct],status);
	ShowPlayerDialog(playerid,dialogid,0,"Бизнес",mes,"OK","");
}

stock GetPlayerNameByID(id,nickname[])
{
	new query[128];
	format(query,sizeof(query),"SELECT `nickname` FROM `accounts` WHERE `id` = '%d'",id);
	mysql_query(query);
	mysql_store_result();
	if(mysql_num_rows() <= 0) strcat(nickname,"Неизветсно",24);
	else mysql_fetch_row(nickname);
	mysql_free_result();
}

stock UpdateFillingFuel(fillingid)
{
	new query[128],data[64];
	for(new i;i<5;i++)
	{
		if(!i) format(data,sizeof(data),"%d",gFillings[fillingid][fillFuel][i]);
		else format(data,sizeof(data),"%s|%d",data,gFillings[fillingid][fillFuel][i]);
	}
	format(query,sizeof(query),"UPDATE `fillings` SET `fuel` = '%s' WHERE id = '%d'",data,gFillings[fillingid][fillMysqlID]);
	mysql_query(query);
	return mysql_errno();
}

stock GetVehicleType( model ) {
	switch ( model ) {
		case 2000: return VEHICLE_TYPE_BOAT;
		case 17,25,47,69,87,88,148,163,60,111,112,113,119,120,153,157,192,193: return VEHICLE_TYPE_PLANE;
		default: return VEHICLE_TYPE_CAR;
	}
	return VEHICLE_TYPE_CAR;
}

stock ShowAdvertList(playerid)
{
	new adlist[900];
	new data[3][30],index;
	format(data[0],30,"[{"#cGREEN"}Проверено{"#cWHITE"}]");
	format(data[1],30,"[{"#cYELLOW"}Проверяется{"#cWHITE"}]");
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(!gAdvert[i][adBusy]) format(adlist,sizeof(adlist),"%s%d. -\n",adlist,i+1);
		else
		{
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(adlist,sizeof(adlist),"%s%d. %s %s\n",adlist,i+1,gAdvert[i][adSender],data[index]);
		}
	}
	ShowPlayerDialog(playerid,dAdvertList,2,"Объявления",adlist,"OK","Отмена");
	return 1;
}

stock ShowDeliveryList(playerid)
{
	new list[900];
	for(new i;i<DELIVERY_COUNT;i++)
	{
		if(!gDelivery[i][deliBusy]) format(list,sizeof(list),"%s%d. -\n",list,i+1);
		else
		{
			format(list,sizeof(list),"%s%d. %s [$%d] (%d/%d)\n",list,i+1,gDelivery[i][deliCustomer],gDelivery[i][deliPrice],gDelivery[i][deliPerforming],gDelivery[i][deliCount]);
		}
	}
	ShowPlayerDialog(playerid,dDeliveryList,2,"Заказы",list,"Принять","Отмена");
	return 11;
}

stock DonateLog(playerid,money,type)
{
	new query[128];
	new y,m,d,h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	format(query,sizeof(query),"INSERT INTO `donate` VALUES('','%d-%d-%d %d:%d:%d','%d','%d','%d');",y,m,d,h,mi,s,pData[playerid][pMysqlID],money,type);
	mysql_query(query);
}
stock DonateNewUpdate(playerid)
{
    new query[400],reuslt[100],money,newmoney;
	format(query,sizeof(query),"SELECT `donate`,`newdonate` FROM `accounts` WHERE `id` = '%d'",pData[playerid][pMysqlID]);
	mysql_query(query);
	mysql_store_result();
	mysql_fetch_row(reuslt);
	if(mysql_num_rows() >= 1)
 	{
        sscanf(reuslt, "p<|>ii",money,newmoney);
        if(newmoney >= 1) {
	        pData[playerid][pDonate] += newmoney;
			SendMes(playerid,CBRIGHTRED,"[ДОНАТ] Вам было зачислено %d рублей доната на счёт.\n Ваш баланс %d донат рублей.",newmoney,pData[playerid][pDonate]);
			format(query,sizeof(query),"UPDATE `accounts` SET `donate` = '%d',`newdonate` = '0' WHERE `id` = '%d'",pData[playerid][pDonate],pData[playerid][pMysqlID]);
			mysql_query(query);
		}
		else if(newmoney <= 0) SendClientMessage(playerid,CGREEN,"К сожалению в последнее время, ваш счёт не пополнялся.");
  	}
    return 1;
}
stock NumberCheck(playerid,value[])
{
	new query[300];
 	if(IsTextInvalid(value)) return SendClientMessage(playerid,-1,"Произошла ошибка, возможно вы ввели недопустимые символы");
	new longs = strlen(value);
	new values = strval(value);
	printf("длина %d, номер %d",longs,values);
	format(query,sizeof(query),"SELECT * FROM `accounts` WHERE `phone` = '%d'",values);
	mysql_query(query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
 	{
        SendClientMessage(playerid,CGREEN,"Данный номер телефона уже занят.");
  	}
  	else
  	{
   			if(longs >= 4 && longs <= 6)
		    {
				if(pData[playerid][pDonate] < 250)
    			{
				  	OnPlayerCommandText(playerid,"/donate");
					return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 250 рублей на донат счете, чтобы сменить номер телефон.");
	    		}
		        pData[playerid][pDonate] -= 250;
		        pData[playerid][pPhone] = values;
		        SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением номера.");
   				format(query,sizeof(query),"UPDATE `accounts` SET `phone` = '%d' WHERE `id` = '%d'",values,pData[playerid][pMysqlID]);
				mysql_query(query);
		    }
		    else if(longs >= 2 && longs <= 3)
		    {
				if(pData[playerid][pDonate] < 400)
    			{
				  	OnPlayerCommandText(playerid,"/donate");
					return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 400 рублей на донат счете, чтобы сменить номер телефон.");
	    		}
	    		pData[playerid][pDonate] -= 400;
	    		pData[playerid][pPhone] = values;
	    		SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением номера.");
				format(query,sizeof(query),"UPDATE `accounts` SET `phone` = '%d' WHERE `id` = '%d'",values,pData[playerid][pMysqlID]);
				mysql_query(query);
		    }
		    else if(longs == 1)
		    {
				if(pData[playerid][pDonate] < 600)
    			{
				  	OnPlayerCommandText(playerid,"/donate");
					return SendClientMessage(playerid,CGRAY,"Вам нужно иметь 600 рублей на донат счете, чтобы сменить номер телефон.");
	    		}
				pData[playerid][pDonate] -= 600;
				pData[playerid][pPhone] = values;
				SendClientMessage(playerid,CINFO,"Поздравляем Вас, с успешным приобретением номера.");
				format(query,sizeof(query),"UPDATE `accounts` SET `phone` = '%d' WHERE `id` = '%d'",values,pData[playerid][pMysqlID]);
				mysql_query(query);
		    }
		    else
		    {
		        SendClientMessage(playerid,CGRAY,"Введён не корректный номер телефона.");
		    }
  	}
  	return 1;
}
stock UpdateDonate(playerid)
{
	new query[128];
	format(query,sizeof(query),"SELECT `donate` FROM `accounts` WHERE `id` = '%d'",pData[playerid][pMysqlID]);
	mysql_query(query);
	mysql_store_result();
	new result[18];
	mysql_fetch_row(result);
	pData[playerid][pDonate] = strval(result);
	mysql_free_result();
}
stock LoadWood() {
    mysql_query("SELECT `wsklad` FROM `serverdata`");
	mysql_store_result();
	new result[18];
	mysql_fetch_row(result);
	woodsklad = strval(result);
	mysql_free_result();
	printf("Склад древесины успешно загружен, на складу %i кг.", woodsklad);
}
stock LoadMine() {
    mysql_query("SELECT `msklad` FROM `serverdata`");
	mysql_store_result();
	new result[18];
	mysql_fetch_row(result);
	minesklad = strval(result);
	mysql_free_result();
	printf("Склад руды успешно загружен, на складу %i кг.", minesklad);
}
stock LoadNewsMoney() {
	mysql_query("SELECT `gnewsmoney` FROM `serverdata`");
	mysql_store_result();
	new result[18];
	mysql_fetch_row(result);
	gNewsMoney = strval(result);
	mysql_free_result();
	printf("Банк Новостей успешно загружён, на счету $%i.", gNewsMoney);
}

stock SaveNewsMoney() {
	new query[128];
	format(query, sizeof(query), "UPDATE `serverdata` SET `gnewsmoney` = %i, `msklad` = %i, `wsklad` = %i", gNewsMoney, minesklad,woodsklad);
	mysql_query(query);
}

stock LoadDeliveryData() {
	new data[128], id;
	mysql_query("SELECT * FROM `delivery`");
	mysql_store_result();
	if(mysql_num_rows() > 0) {
	    while(mysql_retrieve_row()) {
			mysql_get_field("data", data);
			sscanf(data, "p<|>is[24]a<i>[6]iiia<i>[6]l",
				gDelivery[id][deliBusinessid],
				gDelivery[id][deliCustomer],
				gDelivery[id][deliPerformerid],
				gDelivery[id][deliPrice],
				gDelivery[id][deliCount],
				gDelivery[id][deliPerforming],
				gDelivery[id][deliProduct],
				gDelivery[id][deliBusy]

			);
			id ++;
	    }
	}
}

stock SaveDeliveryData(id) {
	new query[256], data[128], str[2][64];
	for(new i; i < 6; i ++) {
		if(!i) format(str[0], sizeof(str[]), "%i", gDelivery[id][deliPerformerid][i]);
		else format(str[0], sizeof(str[]), "%s|%i", str[0], gDelivery[id][deliPerformerid][i]);
	}
	for(new i; i < 6; i ++) {
		if(!i) format(str[1], sizeof(str[]), "%i", gDelivery[id][deliProduct][i]);
		else format(str[1], sizeof(str[]), "%s|%i", str[1], gDelivery[id][deliProduct][i]);
	}
	format(data, sizeof(data), "%i|%s|%s|%i|%i|%i|%s|%d", gDelivery[id][deliBusinessid], gDelivery[id][deliCustomer], str[0], gDelivery[id][deliPrice], gDelivery[id][deliCount], gDelivery[id][deliPerforming], str[1], gDelivery[id][deliBusy]);
	format(query, sizeof(query), "UPDATE `delivery` SET `data` = '%s' WHERE `id` = %i", data, id + 1);
	mysql_query(query);
	printf("delivery 4");
	for(new i;i<MAX_BUSINESS_COUNT;i++)
	{
		if(!gBusiness[i][busiID]) break;
		format(query, sizeof(query), "UPDATE `business` SET `order` = '%d', `deliving` = '%d' WHERE `id` = %i",gBusiness[i][busiOrder],gBusiness[i][busiDeliving],gBusiness[i][busiID]);
		mysql_query(query);
	}
}

stock NewKick(playerid) {
    SetTimerEx("KickPublic", 1000, false, "d", playerid);
    SetPVarInt(playerid, "kicked", 1);
    return 1;
}

forward KickPublic(playerid);
public KickPublic(playerid) {
    if(IsPlayerConnected(playerid)) {
		ResetPlayerWeaponsEx(playerid);
		DeletePVar(playerid, "kicked");
	 	Kick(playerid);
	}
}

stock GetVehicleRotation(vehicleid,&Float:x,&Float:y,&Float:z) {
    new Float:quat_w,Float:quat_x,Float:quat_y,Float:quat_z;
    GetVehicleRotationQuat(vehicleid,quat_w,quat_x,quat_y,quat_z);
    x = atan2(2*((quat_x*quat_y)+(quat_w+quat_z)),(quat_w*quat_w)+(quat_x*quat_x)-(quat_y*quat_y)-(quat_z*quat_z));
    y = atan2(2*((quat_y*quat_z)+(quat_w*quat_x)),(quat_w*quat_w)-(quat_x*quat_x)-(quat_y*quat_y)+(quat_z*quat_z));
    z = asin(-2*((quat_x*quat_z)+(quat_w*quat_y)));
    return 1;
}

stock ShowPlayerEateryTD(playerid, id) {
	for(new x; x < sizeof(gEateryTextDraw); x ++) {
		TextDrawHideForPlayer(playerid, gEateryTextDraw[x]);
		TextDrawShowForPlayer(playerid, gEateryTextDraw[x]);
	}
	SelectTextDraw(playerid, 0xAFAFAFAA);

	new str[16];
	for(new x; x < sizeof(gEateryCostTextDraw[]); x ++) {
		format(str, sizeof(str), "$%i", gBusiness[id][busiPrice] * (25 * gEateryCosts[x]));
		PlayerTextDrawSetString(playerid, gEateryCostTextDraw[playerid][x], str);
		PlayerTextDrawShow(playerid, gEateryCostTextDraw[playerid][x]);
	}

	SetPVarInt(playerid, "eatery_td", 1);
}

stock HidePlayerEateryTD(playerid) {
	for(new x; x < sizeof(gEateryTextDraw); x ++) {
	    TextDrawHideForPlayer(playerid, gEateryTextDraw[x]);
	    if(x < sizeof(gEateryCostTextDraw[])) PlayerTextDrawHide(playerid, gEateryCostTextDraw[playerid][x]);
	}
	CancelSelectTextDraw(playerid);
}

stock ShowPlayerBarTD(playerid, id) {
	for(new x; x < sizeof(gBarTextDraw); x ++) {
		TextDrawHideForPlayer(playerid, gBarTextDraw[x]);
		TextDrawShowForPlayer(playerid, gBarTextDraw[x]);
	}
	SelectTextDraw(playerid, 0xAFAFAFAA);

	new str[16];
	for(new x; x < sizeof(gBarCostTextDraw[]); x ++) {
		format(str, sizeof(str), "$%i", gBusiness[id][busiPrice] * (10 * gBarCosts[x]));
		PlayerTextDrawSetString(playerid, gBarCostTextDraw[playerid][x], str);
		PlayerTextDrawShow(playerid, gBarCostTextDraw[playerid][x]);
	}

	SetPVarInt(playerid, "bar_td", 1);
}

stock HidePlayerBarTD(playerid) {
	for(new x; x < sizeof(gBarTextDraw); x ++) {
	    TextDrawHideForPlayer(playerid, gBarTextDraw[x]);
	    if(x < sizeof(gBarCostTextDraw[])) PlayerTextDrawHide(playerid, gBarCostTextDraw[playerid][x]);
	}
	CancelSelectTextDraw(playerid);
}

public ReplayChurchTimer(playerid) {
	StopAudioStreamForPlayer(playerid);
    PlayAudioStreamForPlayer(playerid, "http://www.state99.ru/file/church.mp3", -2028.7870, 1117.6362, 55.7204, 30.0, 1);
}

stock ShowPlayerClothesTD(playerid) {
	for(new x; x < sizeof(gSkinShopDraw); x ++) {
	    TextDrawHideForPlayer(playerid, gSkinShopDraw[x]);
	    TextDrawShowForPlayer(playerid, gSkinShopDraw[x]);
	}
	new class = GetPVarInt(playerid, "clothes_class"), skin, price, str[32];
	for(new x; x < sizeof(gSkins); x ++) {
		skin = GetSkinID(class, pData[playerid][pSex], pData[playerid][pColor], x);
		price = GetSkinPrice(x);
		if(!skin) continue;
		else SetPlayerSkin(playerid, skin);
		format(str, 32, "~y~$%i", price);
		PlayerTextDrawSetString(playerid, gSkinShopPriceDraw[playerid], str);
		break;
	}
	PlayerTextDrawShow(playerid, gSkinShopPriceDraw[playerid]);
	SelectTextDraw(playerid, 0xAFAFAFAA);
	SetPVarInt(playerid, "clothes_td", 1);
}

stock HidePlayerClothesTD(playerid) {
    for(new x; x < sizeof(gSkinShopDraw); x ++) {
	    TextDrawHideForPlayer(playerid, gSkinShopDraw[x]);
	}
	PlayerTextDrawHide(playerid, gSkinShopPriceDraw[playerid]);
	CancelSelectTextDraw(playerid);
	DeletePVar(playerid, "clothes_td");
}

stock GetSkinID(class, sex, color, index) {
	if(index < 0 || index > sizeof(gSkins) - 1) return 0;
	if(gSkins[index][skinClass] != class) return 0;
	if(gSkins[index][skinSex] != sex) return 0;
	if(gSkins[index][skinColor] != color) return 0;
	return gSkins[index][skinID];
}

stock GetSkinPrice(index) {
	if(index < 0 || index > sizeof(gSkins) - 1) return 0;
	return gSkins[index][skinPrice];
}

CreateComputer()
{
	new Text:Textdraw0;

	//Фон
	Textdraw0 = TextDrawCreate(0.000000, 0.000000, "Back");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 1);
	TextDrawLetterSize(Textdraw0, 640.000000, 480.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 640.000000, 480.000000);
	TextDrawSetSelectable(Textdraw0, 0);
	gInterfaceElement[C_ELEMENT_BACKGROUND] = Textdraw0;

	//Список разыскиваемых
	Textdraw0 = TextDrawCreate(320.000000, 130.000000, "WANTED");
	TextDrawAlignment(Textdraw0, 2);
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 2);
	TextDrawLetterSize(Textdraw0, 0.500000, 2.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 20.000000, 150.000000);
	TextDrawSetSelectable(Textdraw0, 1);
	gInterfaceElement[C_ELEMENT_WANTED] = Textdraw0;

	Textdraw0 = TextDrawCreate(587.000000, 6.000000, "LD_BEAT:square");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 23.000000, 20.000000);
	TextDrawSetSelectable(Textdraw0, 1);
	gInterfaceElement[C_ELEMENT_HOME] = Textdraw0;

	Textdraw0 = TextDrawCreate(590.000000, 392.000000, "LD_BEAT:right");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 21.000000, 24.000000);
	TextDrawSetSelectable(Textdraw0, 1);
	gInterfaceElement[C_ELEMENT_NEXT] = Textdraw0;

	Textdraw0 = TextDrawCreate(565.000000, 392.000000, "LD_BEAT:left");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 21.000000, 24.000000);
	TextDrawSetSelectable(Textdraw0, 1);
	gInterfaceElement[C_ELEMENT_BACK] = Textdraw0;

	gInterfaceWantedListCount = 0;
	new cnt;
	for(new i;i<53;i++)
	{
		for(new k;k<MAX_PLAYER_ELEMENT;k++)
		{
			if(cnt >= MAX_PLAYERS) break;
			Textdraw0 = TextDrawCreate(320.000000, k*20 + 60.0, "_");
			TextDrawAlignment(Textdraw0, 2);
			TextDrawBackgroundColor(Textdraw0, 255);
			TextDrawFont(Textdraw0, 2);
			TextDrawLetterSize(Textdraw0, 0.500000, 2.000000);
			TextDrawColor(Textdraw0, -1);
			TextDrawSetOutline(Textdraw0, 0);
			TextDrawSetProportional(Textdraw0, 1);
			TextDrawSetShadow(Textdraw0, 1);
			TextDrawUseBox(Textdraw0, 1);
			TextDrawBoxColor(Textdraw0, 255);
			TextDrawTextSize(Textdraw0, 20.000000, 280.000000);
			TextDrawSetSelectable(Textdraw0, 1);
			gInterfaceElement[C_ELEMENT_WANTED_LIST][cnt] = Textdraw0;
			cnt++;
		}
	}

	Textdraw0 = TextDrawCreate(106.000000, 350.000000, "BEARING");
	TextDrawAlignment(Textdraw0, 2);
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 2);
	TextDrawLetterSize(Textdraw0, 0.500000, 2.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 858993663);
	TextDrawTextSize(Textdraw0, 20.000000, 150.000000);
	TextDrawSetSelectable(Textdraw0, 1);
	gInterfaceElement[C_ELEMENT_BEARING] = Textdraw0;

	Textdraw0 = TextDrawCreate(106.000000, 374.000000, "CANCEL");
	TextDrawAlignment(Textdraw0, 2);
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 2);
	TextDrawLetterSize(Textdraw0, 0.500000, 2.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 858993663);
	TextDrawTextSize(Textdraw0, 20.000000, 150.000000);
	TextDrawSetSelectable(Textdraw0, 1);
	gInterfaceElement[C_ELEMENT_GOTO_WANTED_LIST] = Textdraw0;

	Textdraw0 = TextDrawCreate(260.000000, 130.000000, "samaps:gtasamapbit1");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 150.000000, 150.000000);
	gInterfaceElement[C_ELEMENT_MAP1] = Textdraw0;

	Textdraw0 = TextDrawCreate(410.000000, 130.000000, "samaps:gtasamapbit2");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 150.000000, 150.000000);
	gInterfaceElement[C_ELEMENT_MAP2] = Textdraw0;

	Textdraw0 = TextDrawCreate(260.000000, 280.000000, "samaps:gtasamapbit3");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 150.000000, 150.000000);
	gInterfaceElement[C_ELEMENT_MAP3] = Textdraw0;


	Textdraw0 = TextDrawCreate(410.000000, 280.000000, "samaps:gtasamapbit4");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 150.000000, 150.000000);
	gInterfaceElement[C_ELEMENT_MAP4] = Textdraw0;

	Textdraw0 = TextDrawCreate(610.000000, 6.000000, "LD_BEAT:cross");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 4);
	TextDrawLetterSize(Textdraw0, 0.500000, 1.000000);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawTextSize(Textdraw0, 22.000000, 19.000000);
	TextDrawSetSelectable(Textdraw0, 1);
	gInterfaceElement[C_ELEMENT_EXIT] = Textdraw0;

	printf("%d --- %d",_:gInterfaceElement[C_ELEMENT_BACKGROUND],_:gInterfaceElement[C_ELEMENT_EXIT]);

	for(new i;i<MAX_PLAYERS;i++)
	{
		gInterfaceElement[C_ELEMENT_COUNTER][i] = PlayerText:INVALID_TEXT_DRAW;
		gInterfaceElement[C_ELEMENT_WANTED_NAME][i] = PlayerText:INVALID_TEXT_DRAW;
		gInterfaceElement[C_ELEMENT_WANTED_PHOTO1][i] = PlayerText:INVALID_TEXT_DRAW;
		gInterfaceElement[C_ELEMENT_WANTED_PHOTO2][i] = PlayerText:INVALID_TEXT_DRAW;
		gInterfaceElement[C_ELEMENT_WANTED_INFO][i] = PlayerText:INVALID_TEXT_DRAW;
		gInterfaceElement[C_ELEMENT_BEARING_SQUARE][i] = PlayerText:INVALID_TEXT_DRAW;
		gPlayerBearingID[i] = -1;
	}

	return 1;
}

stock ComputerPage(playerid,COMP_PAGES:page = C_PAGE_MAIN,extraid=INVALID_PLAYER_ID)
{
	ExitComputer(playerid);
	switch(page)
	{
		case C_PAGE_MAIN:
		{
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_BACKGROUND]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_EXIT]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_WANTED]);
		}
		case C_PAGE_WANTED:
		{
			new PlayerText:Textdraw5;
			Textdraw5 = CreatePlayerTextDraw(playerid,587.000000, 371.000000, "0/0");
			PlayerTextDrawAlignment(playerid,Textdraw5, 2);
			PlayerTextDrawBackgroundColor(playerid,Textdraw5, 255);
			PlayerTextDrawFont(playerid,Textdraw5, 2);
			PlayerTextDrawLetterSize(playerid,Textdraw5, 0.500000, 2.000000);
			PlayerTextDrawColor(playerid,Textdraw5, -1);
			PlayerTextDrawSetOutline(playerid,Textdraw5, 0);
			PlayerTextDrawSetProportional(playerid,Textdraw5, 1);
			PlayerTextDrawSetShadow(playerid,Textdraw5, 1);
			PlayerTextDrawSetSelectable(playerid,Textdraw5, 0);
			gInterfaceElement[C_ELEMENT_COUNTER][playerid] = Textdraw5;

			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_BACKGROUND]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_EXIT]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_HOME]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_NEXT]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_BACK]);
			PlayerTextDrawShow(playerid,gInterfaceElement[C_ELEMENT_COUNTER][playerid]);
			new mes[12];
			format(mes,sizeof(mes),"%d/53",GetPVarInt(playerid,"wanted_page")+1);
			PlayerTextDrawSetString(playerid,gInterfaceElement[C_ELEMENT_COUNTER][playerid],mes);
			new offset = GetPVarInt(playerid,"wanted_page") * MAX_PLAYER_ELEMENT;
			for(new i;i<MAX_PLAYER_ELEMENT;i++)
			{
				if(i + offset >= MAX_PLAYERS) break;
				TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_WANTED_LIST][i+offset]);
			}
		}
		case C_PAGE_WANTED_INFO:
		{
			if(!IsPlayerConnected(extraid) || !pData[extraid][pMysqlID] || !strlen(pData[extraid][pNickname])) return ComputerPage(playerid,C_PAGE_MAIN);
			new PlayerText:Textdraw0;

			Textdraw0 = CreatePlayerTextDraw(playerid,177.000000, 107.000000, pData[extraid][pNickname]);//Имя игрока
			PlayerTextDrawAlignment(playerid,Textdraw0, 1);
			PlayerTextDrawBackgroundColor(playerid,Textdraw0, 255);
			PlayerTextDrawFont(playerid,Textdraw0, 2);
			PlayerTextDrawLetterSize(playerid,Textdraw0, 0.500000, 2.000000);
			PlayerTextDrawColor(playerid,Textdraw0, -1);
			PlayerTextDrawSetOutline(playerid,Textdraw0, 0);
			PlayerTextDrawSetProportional(playerid,Textdraw0, 1);
			PlayerTextDrawSetShadow(playerid,Textdraw0, 1);
			PlayerTextDrawUseBox(playerid,Textdraw0, 1);
			PlayerTextDrawBoxColor(playerid,Textdraw0, 255);
			PlayerTextDrawTextSize(playerid,Textdraw0, 140.000000, 150.000000);
			PlayerTextDrawSetSelectable(playerid,Textdraw0, 0);
			gInterfaceElement[C_ELEMENT_WANTED_NAME][playerid] = Textdraw0;

			Textdraw0 = CreatePlayerTextDraw(playerid,-24.000000, 127.000000, "PHOTO");
			PlayerTextDrawBackgroundColor(playerid,Textdraw0, 255);
			PlayerTextDrawFont(playerid,Textdraw0, 5);
			PlayerTextDrawLetterSize(playerid,Textdraw0, 0.500000, 1.000000);
			PlayerTextDrawColor(playerid,Textdraw0, -1);
			PlayerTextDrawSetOutline(playerid,Textdraw0, 0);
			PlayerTextDrawSetProportional(playerid,Textdraw0, 1);
			PlayerTextDrawSetShadow(playerid,Textdraw0, 1);
			PlayerTextDrawUseBox(playerid,Textdraw0, 1);
			PlayerTextDrawBoxColor(playerid,Textdraw0, 255);
			PlayerTextDrawTextSize(playerid,Textdraw0, 160.000000, 150.000000);
			PlayerTextDrawSetPreviewModel(playerid, Textdraw0, pData[extraid][pSkin]);
			PlayerTextDrawSetPreviewRot(playerid, Textdraw0, -16.000000, 0.000000, 0.000000, 1.000000);
			PlayerTextDrawSetSelectable(playerid,Textdraw0, 0);
			gInterfaceElement[C_ELEMENT_WANTED_PHOTO1][playerid] = Textdraw0;

			Textdraw0 = CreatePlayerTextDraw(playerid,86.000000, 127.000000, "PHOTO2");
			PlayerTextDrawBackgroundColor(playerid,Textdraw0, 255);
			PlayerTextDrawFont(playerid,Textdraw0, 5);
			PlayerTextDrawLetterSize(playerid,Textdraw0, 0.500000, 1.000000);
			PlayerTextDrawColor(playerid,Textdraw0, -1);
			PlayerTextDrawSetOutline(playerid,Textdraw0, 0);
			PlayerTextDrawSetProportional(playerid,Textdraw0, 1);
			PlayerTextDrawSetShadow(playerid,Textdraw0, 1);
			PlayerTextDrawUseBox(playerid,Textdraw0, 1);
			PlayerTextDrawBoxColor(playerid,Textdraw0, 0);
			PlayerTextDrawTextSize(playerid,Textdraw0, 160.000000, 150.000000);
			PlayerTextDrawSetPreviewModel(playerid, Textdraw0,  pData[extraid][pSkin]);
			PlayerTextDrawSetPreviewRot(playerid, Textdraw0, -16.000000, 0.000000, -90.000000, 1.000000);
			PlayerTextDrawSetSelectable(playerid,Textdraw0, 0);
			gInterfaceElement[C_ELEMENT_WANTED_PHOTO2][playerid] = Textdraw0;

			new mes[56];
			new nations[10][20] = {"American","Japanese","Italian","Mexican","Hispanic","Spaniard","Russian","Portuguese","Frenchman","African American"};
			new level = floatround(float(pData[extraid][pWanted])/JAIL_QUATE,floatround_ceil);
			format(mes,sizeof(mes),"~r~WANTED_LEVEL: %d~n~~w~AGE: %d~n~NATION: %s",level,pData[extraid][pAge],nations[pData[extraid][pNation] - 1]);
			Textdraw0 = CreatePlayerTextDraw(playerid,30.000000, 280.000000, mes);
			PlayerTextDrawBackgroundColor(playerid,Textdraw0, 255);
			PlayerTextDrawFont(playerid,Textdraw0, 2);
			PlayerTextDrawLetterSize(playerid,Textdraw0, 0.500000, 2.000000);
			PlayerTextDrawColor(playerid,Textdraw0, -1);
			PlayerTextDrawSetOutline(playerid,Textdraw0, 0);
			PlayerTextDrawSetProportional(playerid,Textdraw0, 1);
			PlayerTextDrawSetShadow(playerid,Textdraw0, 1);
			PlayerTextDrawSetSelectable(playerid,Textdraw0, 0);
			gInterfaceElement[C_ELEMENT_WANTED_INFO][playerid] = Textdraw0;

			//Квадрат пеленга
			if(gPlayerBearingID[extraid] < 0 || gPlayerBearingID[extraid] > 99) SendClientMessage(playerid,CGRAY,"Пеленг невозможен");
			else
			{
				new xfactor,yfactor,Float:x, Float:y;
				xfactor = gPlayerBearingID[extraid] % 10;
				yfactor = gPlayerBearingID[extraid] / 10;
				x = 530.0 - 30*xfactor;
				y = 130.0 + 30*yfactor;
				Textdraw0 = CreatePlayerTextDraw(playerid,x, y, "_");
				PlayerTextDrawBackgroundColor(playerid,Textdraw0, 255);
				PlayerTextDrawFont(playerid,Textdraw0, 1);
				PlayerTextDrawLetterSize(playerid,Textdraw0, 10.000000, 3.000000);
				PlayerTextDrawColor(playerid,Textdraw0, -1);
				PlayerTextDrawSetOutline(playerid,Textdraw0, 0);
				PlayerTextDrawSetProportional(playerid,Textdraw0, 1);
				PlayerTextDrawSetShadow(playerid,Textdraw0, 1);
				PlayerTextDrawUseBox(playerid,Textdraw0, 1);
				PlayerTextDrawBoxColor(playerid,Textdraw0, -16777080);
				PlayerTextDrawTextSize(playerid,Textdraw0, x+30.0, 30.0);
				PlayerTextDrawSetSelectable(playerid,Textdraw0, 0);
				gInterfaceElement[C_ELEMENT_BEARING_SQUARE][playerid] = Textdraw0;
			}
			SetPVarInt(playerid,"bearee",extraid);

			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_BACKGROUND]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_EXIT]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_HOME]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_GOTO_WANTED_LIST]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_MAP1]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_MAP2]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_MAP3]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_MAP4]);
			TextDrawShowForPlayer(playerid,gInterfaceElement[C_ELEMENT_BEARING]);
			PlayerTextDrawShow(playerid,gInterfaceElement[C_ELEMENT_WANTED_NAME][playerid]);
			PlayerTextDrawShow(playerid,gInterfaceElement[C_ELEMENT_WANTED_PHOTO1][playerid]);
			PlayerTextDrawShow(playerid,gInterfaceElement[C_ELEMENT_WANTED_PHOTO2][playerid]);
			PlayerTextDrawShow(playerid,gInterfaceElement[C_ELEMENT_WANTED_INFO][playerid]);
			PlayerTextDrawShow(playerid,gInterfaceElement[C_ELEMENT_BEARING_SQUARE][playerid]);
		}
	}
	SelectTextDraw(playerid,CGRAY);
	return 1;
}

stock ExitComputer(playerid)
{
	for(new i=_:gInterfaceElement[C_ELEMENT_BACKGROUND], maxx = _:gInterfaceElement[C_ELEMENT_EXIT];i<=maxx;i++) TextDrawHideForPlayer(playerid,Text:i);
	if(gInterfaceElement[C_ELEMENT_COUNTER][playerid] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawDestroy(playerid,gInterfaceElement[C_ELEMENT_COUNTER][playerid]);
	if(gInterfaceElement[C_ELEMENT_WANTED_NAME][playerid] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawDestroy(playerid,gInterfaceElement[C_ELEMENT_WANTED_NAME][playerid]);
	if(gInterfaceElement[C_ELEMENT_WANTED_PHOTO1][playerid] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawDestroy(playerid,gInterfaceElement[C_ELEMENT_WANTED_PHOTO1][playerid]);
	if(gInterfaceElement[C_ELEMENT_WANTED_PHOTO2][playerid] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawDestroy(playerid,gInterfaceElement[C_ELEMENT_WANTED_PHOTO2][playerid]);
	if(gInterfaceElement[C_ELEMENT_WANTED_INFO][playerid] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawDestroy(playerid,gInterfaceElement[C_ELEMENT_WANTED_INFO][playerid]);
	if(gInterfaceElement[C_ELEMENT_BEARING_SQUARE][playerid] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawDestroy(playerid,gInterfaceElement[C_ELEMENT_BEARING_SQUARE][playerid]);

	CancelSelectTextDraw(playerid);
}

stock AddPlayerInWantedList(playerid)
{
	if(!strlen(pData[playerid][pNickname])) return -2;
	if(pTemp[playerid][pWantedListIndex] != -1) return 0;
	new slot = -1;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(gInterfaceWantedList[i] != INVALID_PLAYER_ID && IsPlayerConnected(gInterfaceWantedList[i])) continue;
		gInterfaceWantedList[i] = playerid;
		pTemp[playerid][pWantedListIndex] = i;
		TextDrawSetString(gInterfaceElement[C_ELEMENT_WANTED_LIST][i],pData[playerid][pNickname]);
		gInterfaceWantedListCount++;
		slot = i;
		break;
	}
	return slot;
}

stock RemovePlayerFromWantedList(playerid)
{
	new i = pTemp[playerid][pWantedListIndex];
	if(i == -1) return -1;
	if(gInterfaceWantedList[i] != playerid) return 0;
	gInterfaceWantedList[i] = INVALID_PLAYER_ID;
	TextDrawSetString(gInterfaceElement[C_ELEMENT_WANTED_LIST][i],"_");
	gInterfaceWantedListCount--;
	pTemp[playerid][pWantedListIndex] = -1;
	return 1;
}

stock CreateTray(id, Float:x, Float:y, Float:z, Float:a, interior, vw) {
	new slot = -1;
	for(new i; i < sizeof(TrayData); i ++) {
		if(IsValidDynamicArea(TrayData[i][trayAreaID]) || IsValidDynamicPickup(TrayData[i][trayPickupID])) continue;
		slot = i;
		break;
	}
	if(slot == -1) return 0;
	TrayData[slot][trayEat] = id;
	new pickups[] = {19346, 2214, 2220, 2215, 2354, 2220, 1546};
	x += (2.0 * floatsin(-a, degrees));
	y += (2.0 * floatcos(-a, degrees));
	TrayData[slot][trayPickupID] = CreateDynamicPickup(pickups[id - 1], 23, x, y, z-0.6, vw, interior);
	TrayData[slot][trayAreaID] = CreateDynamicSphere(x, y, z, 1.0, vw, interior);
	TrayData[slot][trayTimerID] = SetTimerEx("DestroyTray", 300000, false, "i", slot);
	return 1;
}

stock GetTray(playerid, tray) {
	pTemp[playerid][pEat] = TrayData[tray][trayEat];
	if(pTemp[playerid][pEat]) SetPlayerSpecialAction(playerid, 25);
	if(!pTemp[playerid][pEat]) SetPlayerAttachedObject(playerid,0,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
	else if(pTemp[playerid][pEat] == 1) SetPlayerAttachedObject(playerid,0,2214,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
	else if(pTemp[playerid][pEat] == 2) SetPlayerAttachedObject(playerid,0,2220,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
	else if(pTemp[playerid][pEat] >= 4 && pTemp[playerid][pEat] <= 7) SetPlayerAttachedObject(playerid,0,gEateryObj[pTemp[playerid][pEat]-4],3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
	DestroyDynamicPickup(TrayData[tray][trayPickupID]);
	DestroyDynamicArea(TrayData[tray][trayAreaID]);
	KillTimer(TrayData[tray][trayTimerID]);
	TrayData[tray][trayEat] = 0;
	TrayData[tray][trayAreaID] = 0;
	TrayData[tray][trayPickupID] = 0;
	TrayData[tray][trayTimerID] = 0;
}

forward DestroyTray(tray);
public DestroyTray(tray) {
	if(IsValidDynamicPickup(TrayData[tray][trayPickupID])) DestroyDynamicPickup(TrayData[tray][trayPickupID]);
	if(IsValidDynamicArea(TrayData[tray][trayAreaID])) DestroyDynamicArea(TrayData[tray][trayAreaID]);
	KillTimer(TrayData[tray][trayTimerID]);
	TrayData[tray][trayEat] = 0;
	TrayData[tray][trayAreaID] = 0;
	TrayData[tray][trayPickupID] = 0;
	TrayData[tray][trayTimerID] = 0;
}
public RegistrTimer(playerid)
{
	if(GetPVarInt(playerid, "registration_stepend") >= 1)
	{
		if(gettime() >= GetPVarInt(playerid, "registration_miniature"))
		{
			if(GetPVarInt(playerid, "registration_miniaturestep") < 5)
		    {
		   		if(GetPVarInt(playerid, "registration_miniaturestep") == 3) createPTDRegister(playerid);
		    	new val = random(18);
		       	InterpolateCameraPos(playerid, registration_miniatures[val][0][0], registration_miniatures[val][0][1], registration_miniatures[val][0][2], registration_miniatures[val][0][3], registration_miniatures[val][0][4], registration_miniatures[val][0][5], 5000);
		     	InterpolateCameraLookAt(playerid, registration_miniatures[val][1][0], registration_miniatures[val][1][1], registration_miniatures[val][1][2], registration_miniatures[val][1][3], registration_miniatures[val][1][4], registration_miniatures[val][1][5], 5000);
		   	}
		    else if(GetPVarInt(playerid, "registration_miniaturestep") == 5)
		    {
		        TogglePlayerControllable(playerid,0);
		        for(new is = 0; is < 3; is++) PlayerTextDrawHide(playerid, RegistertextdrawST4[is][playerid]);
		       	TogglePlayerSpectating(playerid, false);
		       	plogin[playerid] = true;
		       	RegisterPlayer(playerid);
		       	SpawnPlayer(playerid);
		    }
		    SetPVarInt(playerid, "registration_miniaturestep", GetPVarInt(playerid, "registration_miniaturestep")+1);
		    SetPVarInt(playerid, "registration_miniature", gettime()+5);
		}
	}
	return true;
}
stock createPTDRegister(playerid)
{

	RegistertextdrawST4[2][playerid] = CreatePlayerTextDraw(playerid,210.000000, 159.000000, "WESTERN");
	PlayerTextDrawBackgroundColor(playerid,RegistertextdrawST4[2][playerid], 255);
	PlayerTextDrawFont(playerid,RegistertextdrawST4[2][playerid], 3);
	PlayerTextDrawLetterSize(playerid,RegistertextdrawST4[2][playerid], 1.429999, 7.299999);
	PlayerTextDrawColor(playerid,RegistertextdrawST4[2][playerid], -361430785);
	PlayerTextDrawSetOutline(playerid,RegistertextdrawST4[2][playerid], 0);
	PlayerTextDrawSetProportional(playerid,RegistertextdrawST4[2][playerid], 1);
	PlayerTextDrawSetShadow(playerid,RegistertextdrawST4[2][playerid], 2);
	PlayerTextDrawSetSelectable(playerid,RegistertextdrawST4[2][playerid], 0);

	RegistertextdrawST4[1][playerid] = CreatePlayerTextDraw(playerid,180.000000, 207.000000, "LD_POOL:ball");
	PlayerTextDrawBackgroundColor(playerid,RegistertextdrawST4[1][playerid], 255);
	PlayerTextDrawFont(playerid,RegistertextdrawST4[1][playerid], 4);
	PlayerTextDrawLetterSize(playerid,RegistertextdrawST4[1][playerid], 1.480000, 4.500000);
	PlayerTextDrawColor(playerid,RegistertextdrawST4[1][playerid], -1);
	PlayerTextDrawSetOutline(playerid,RegistertextdrawST4[1][playerid], 0);
	PlayerTextDrawSetProportional(playerid,RegistertextdrawST4[1][playerid], 1);
	PlayerTextDrawSetShadow(playerid,RegistertextdrawST4[1][playerid], 1);
	PlayerTextDrawUseBox(playerid,RegistertextdrawST4[1][playerid], 1);
	PlayerTextDrawBoxColor(playerid,RegistertextdrawST4[1][playerid], 255);
	PlayerTextDrawTextSize(playerid,RegistertextdrawST4[1][playerid], 280.000000, 24.000000);
	PlayerTextDrawSetSelectable(playerid,RegistertextdrawST4[1][playerid], 0);
	
	RegistertextdrawST4[0][playerid] = CreatePlayerTextDraw(playerid,333.000000, 199.000000, "STATE");
	PlayerTextDrawBackgroundColor(playerid,RegistertextdrawST4[0][playerid], 255);
	PlayerTextDrawFont(playerid,RegistertextdrawST4[0][playerid], 3);
	PlayerTextDrawLetterSize(playerid,RegistertextdrawST4[0][playerid], 0.980000, 4.500000);
	PlayerTextDrawColor(playerid,RegistertextdrawST4[0][playerid], -1);
	PlayerTextDrawSetOutline(playerid,RegistertextdrawST4[0][playerid], 0);
	PlayerTextDrawSetProportional(playerid,RegistertextdrawST4[0][playerid], 1);
	PlayerTextDrawSetShadow(playerid,RegistertextdrawST4[0][playerid], 2);
	PlayerTextDrawSetSelectable(playerid,RegistertextdrawST4[0][playerid], 0);
	
	for(new i = 0; i < 3; i++) PlayerTextDrawShow(playerid, RegistertextdrawST4[i][playerid]);
}
stock NoShowSpeed(carid) {
    switch(GetVehicleModel(carid)){
    	case 592,577,511,512,593,520,553,488,476,519,460,425,513,493,548,417,487,481,509,510,538,462,497,563,447,469,464,465,501,594,564,441: {return true;}
    }
    return false;
}
forward UpdateDoors();
public UpdateDoors() {
    if(lift) {
    	MoveDynamicObject(floorate[0], 1014.9080200195,-315.00698852539,72.851997375488, 2);//ворота левый лифт верх открытые
    	MoveDynamicObject(floorate[1], 1024.4880371094,-314.98498535156,72.851997375488, 2);//ворота левый лифт верх открытые
    	sostlift[0] = "на верху";
    }
    else {
      	MoveDynamicObject(floorate[2], 1014.8859863281,-315.00100708008,-2.6770000457764, 2);//ворота левый лифт низ открытые
   		MoveDynamicObject(floorate[3], 1024.4470214844,-315.02200317383,-2.6770000457764, 2);//ворота левый лифт низ открытые
   		sostlift[0] = "внизу";
    }
    exitp = true;
    SetTimer("UpdateExit", 5000, false);
    vputi = false;
    return 1;
}
forward UpdateExit();
public UpdateExit() {
    exitp = false;
    return 1;
}
forward UpdateDoorstwo();
public UpdateDoorstwo() {
    if(lifttwo) {
    	MoveDynamicObject(flooratetwo[0], 1040.9110107422,-315.41198730469,72.851997375488, 2);//ворота левый лифт верх открытые
    	MoveDynamicObject(flooratetwo[1], 1050.4759521484,-315.39898681641,72.851997375488, 2);//ворота левый лифт верх открытые
	   	sostlift[1] = "на верху";
	   	UpdateLiftMine();
    	
    }
    else {
      	MoveDynamicObject(flooratetwo[2], 1040.9420166016,-315.35900878906,-2.6770000457764, 2);//ворота левый лифт низ открытые
   		MoveDynamicObject(flooratetwo[3], 1050.3380126953,-315.35198974609,-2.6770000457764, 2);//ворота левый лифт низ открытые
   		sostlift[0] = "внизу";
   		UpdateLiftMine();
    }
    exitptwo = true;
    SetTimer("UpdateExittwo", 5000, false);
    vputitwo = false;
    return 1;
}
forward UpdateExittwo();
public UpdateExittwo() {
    exitptwo = false;
    return 1;
}
stock UpdateLiftMine() {
	new string[400];
	format(string,sizeof(string),"Состояние лифта №1: {FF9900}%s \n Используйте /lf",sostlift[0]);
	Update3DTextLabelText(gsostmine[0], 0x00D900C8, string);
 	format(string,sizeof(string),"Состояние лифта №1: {FF9900}%s \n Используйте /lft",sostlift[1]);
 	Update3DTextLabelText(gsostmine[1], 0x00D900C8, string);
	format(string,sizeof(string),"Состояние лифта №1: {FF9900}%s \n Используйте /lf",sostlift[0]);
 	Update3DTextLabelText(gsostmine[2], 0x00D900C8, string);
 	format(string,sizeof(string),"Состояние лифта №1: {FF9900}%s \n Используйте /lft",sostlift[1]);
 	Update3DTextLabelText(gsostmine[3], 0x00D900C8, string);
	return true;
}
stock GetPlayerID(Name[])
{
    foreach(new i:Player) {
		if(!strcmp(Name, pData[i][pNickname])) return i;
	}
    return -1;
}
stock createPTD_adminSpec(playerid)
{
	PTD_adminSpec[playerid][0] = CreatePlayerTextDraw(playerid, 612.000427, 136.314788, "fon");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][0], 0.000000, 31.980049);
	PlayerTextDrawTextSize(playerid, PTD_adminSpec[playerid][0], 495.333190, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][0], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, PTD_adminSpec[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, PTD_adminSpec[playerid][0], 102);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][0], 0x00000000);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][0], 0);

	PTD_adminSpec[playerid][1] = CreatePlayerTextDraw(playerid, 555.666320, 138.962905, "%s"); // nick
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][1], 0.217999, 1.255703);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][1], -65281);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][1], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][1], 1);

	PTD_adminSpec[playerid][2] = CreatePlayerTextDraw(playerid, 503.666442, 152.822341, "ID: %i");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][2], 0.217999, 1.255703);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][2], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][2], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][2], 1);

	PTD_adminSpec[playerid][3] = CreatePlayerTextDraw(playerid, 503.666442, 165.851959, "LEVEL: %i");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][3], 0.217999, 1.255703);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][3], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][3], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][3], 1);

	PTD_adminSpec[playerid][4] = CreatePlayerTextDraw(playerid, 503.999755, 178.881561, "EXP: 1/2");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][4], 0.217999, 1.255703);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][4], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][4], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][4], 1);

	PTD_adminSpec[playerid][5] = CreatePlayerTextDraw(playerid, 503.999725, 191.911178, "MONEY: $%d");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][5], 0.217999, 1.255703);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][5], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][5], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][5], 1);

	PTD_adminSpec[playerid][6] = CreatePlayerTextDraw(playerid, 503.666381, 204.526000, "WARNS: %i/3");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][6], 0.217999, 1.255703);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][6], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][6], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][6], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][6], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][6], 1);

	PTD_adminSpec[playerid][7] = CreatePlayerTextDraw(playerid, 503.999694, 217.140792, "BANS: %i");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][7], 0.217999, 1.255703);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][7], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][7], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][7], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][7], 1);

	PTD_adminSpec[playerid][8] = CreatePlayerTextDraw(playerid, 503.666320, 229.755584, "ORG.: %s");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][8], 0.187999, 1.330370);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][8], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][8], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][8], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][8], 1);

	PTD_adminSpec[playerid][9] = CreatePlayerTextDraw(playerid, 503.666320, 242.370422, "PING: %d");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][9], 0.204666, 1.317925);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][9], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][9], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][9], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][9], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][9], 1);

	PTD_adminSpec[playerid][10] = CreatePlayerTextDraw(playerid, 503.666290, 255.400009, "SPEED: %d");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][10], 0.204666, 1.317925);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][10], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][10], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][10], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][10], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][10], 1);

	PTD_adminSpec[playerid][11] = CreatePlayerTextDraw(playerid, 503.666229, 268.429687, "HP: %.1f");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][11], 0.204666, 1.317925);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][11], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][11], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][11], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][11], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][11], 1);

	PTD_adminSpec[playerid][12] = CreatePlayerTextDraw(playerid, 503.666046, 282.289001, "ARM: %.1f");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][12], 0.204666, 1.317925);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][12], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][12], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][12], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][12], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][12], 1);

	PTD_adminSpec[playerid][13] = CreatePlayerTextDraw(playerid, 554.998901, 268.770599, "VHP: %.1f");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][13], 0.204666, 1.317925);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][13], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][13], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][13], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][13], 51);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][13], 2);
	PlayerTextDrawSetProportional(playerid, PTD_adminSpec[playerid][13], 1);

	PTD_adminSpec[playerid][14] = CreatePlayerTextDraw(playerid, 502.666687, 297.837005, "ld_beat:left");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][14], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_adminSpec[playerid][14], 20.333349, 17.422204);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][14], 2);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][14], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][14], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][14], 0x00000000);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][14], 4);
	PlayerTextDrawSetSelectable(playerid, PTD_adminSpec[playerid][14], true);

	PTD_adminSpec[playerid][15] = CreatePlayerTextDraw(playerid, 583.666564, 298.422210, "ld_beat:right");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][15], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_adminSpec[playerid][15], 20.333349, 17.422204);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][15], 2);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][15], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][15], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][15], 0x00000000);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][15], 4);
	PlayerTextDrawSetSelectable(playerid, PTD_adminSpec[playerid][15], true);

	PTD_adminSpec[playerid][16] = CreatePlayerTextDraw(playerid, 545.999755, 299.007293, "ld_beat:cross");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][16], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_adminSpec[playerid][16], 14.000014, 14.518499);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][16], 2);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][16], -1);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][16], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][16], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][16], 0x00000000);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][16], 4);
	PlayerTextDrawSetSelectable(playerid, PTD_adminSpec[playerid][16], true);

	PTD_adminSpec[playerid][17] = CreatePlayerTextDraw(playerid, 564.666809, 318.418487, "usebox");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][17], 0.000000, 11.708031);
	PlayerTextDrawTextSize(playerid, PTD_adminSpec[playerid][17], 541.333557, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][17], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][17], 0);
	PlayerTextDrawUseBox(playerid, PTD_adminSpec[playerid][17], true);
	PlayerTextDrawBoxColor(playerid, PTD_adminSpec[playerid][17], 102);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][17], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][17], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][17], 0x00000000);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][17], 0);

	PTD_adminSpec[playerid][18] = CreatePlayerTextDraw(playerid, 608.333374, 154.566665, "fon2");
	PlayerTextDrawLetterSize(playerid, PTD_adminSpec[playerid][18], 0.000000, 15.538475);
	PlayerTextDrawTextSize(playerid, PTD_adminSpec[playerid][18], 498.666656, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_adminSpec[playerid][18], 1);
	PlayerTextDrawColor(playerid, PTD_adminSpec[playerid][18], 0);
	PlayerTextDrawUseBox(playerid, PTD_adminSpec[playerid][18], true);
	PlayerTextDrawBoxColor(playerid, PTD_adminSpec[playerid][18], 102);
	PlayerTextDrawSetShadow(playerid, PTD_adminSpec[playerid][18], 0);
	PlayerTextDrawSetOutline(playerid, PTD_adminSpec[playerid][18], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_adminSpec[playerid][18], 0x00000000);
	PlayerTextDrawFont(playerid, PTD_adminSpec[playerid][18], 0);
	return 1;
}
stock start_adminSpec(adminid, specid)
{
	if(GetPVarInt(adminid, "spec_mouse")) DeletePVar(adminid, "spec_mouse"), CancelSelectTextDraw(adminid);
	if(!IsPlayerInAnyVehicle(specid)) PlayerSpectatePlayer(adminid, specid);
 	else PlayerSpectateVehicle(adminid, GetPlayerVehicleID(specid));
	SetPVarInt(adminid, "spec_activ", specid+1);
	new specstr[29],fraction[32],Float:health,Float:armour,Float:healthveh,Float:X, Float:Y, Float:Z;
	new vehicleid = GetPlayerVehicleID(specid);
	GetVehicleVelocity(vehicleid,X,Y,Z);
	new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 189.47;
	new fractionid = pData[specid][pFraction]-1;
	if(!pData[specid][pFraction]) {fraction = "none";}
	else
	{
		strcat(fraction,gFractionName[fractionid]);
	}
    GetPlayerHealth(specid, health);
    GetPlayerArmour(specid, armour);
    GetVehicleHealth(vehicleid, healthveh);
	format(specstr, 24, "%s", pData[specid][pNickname]), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][1], specstr); // nick
	format(specstr, 10, "ID: %i", pData[specid][pMysqlID]), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][2], specstr);
	format(specstr, 13, "LEVEL: %i", pData[specid][pLevel]), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][3], specstr);
	format(specstr, 17, "EXP: %i/%i", pData[specid][pExp],pData[specid][pLevel]*6), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][4], specstr);
	format(specstr, 17, "MONEY: $%d", pData[specid][pMoney]), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][5], specstr);
	format(specstr, 12, "WARNS: %d/3", pData[specid][pWarn]), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][6], specstr);
	format(specstr, 11, "BANS: %i", 0), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][7], specstr);
	format(specstr, 28, "ORG.: %s", fraction), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][8], specstr);
	format(specstr, 13, "PING: %d", GetPlayerPing(specid)), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][9], specstr);
 	format(specstr, 17, "SPEED: %.0f KM/H", speed), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][10], specstr);
	format(specstr, 24, "HP: %.1f", health), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][11], specstr);
	format(specstr, 24, "ARM: %.1f", armour), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][12], specstr);
	format(specstr, 24, "VHP: %.1f", healthveh), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][13], specstr);
	for(new ptd; ptd != 18; ptd++) PlayerTextDrawShow(adminid, PTD_adminSpec[adminid][ptd]);
	new _specstr[1+28+24+3];
	format(_specstr, sizeof _specstr, "[SPEC] Наблюдение за [%i]%s.", specid, pData[specid][pNickname]);
	SendClientMessage(adminid, -1, _specstr);
	return 1;
}
stock updatePublic_adminSpec(adminid) // вставить в OnPlayerUpdate
{
	if(!GetPVarInt(adminid, "spec_activ")) return 1;
	new specid = GetPVarInt(adminid, "spec_activ")-1;
	new vehicleid = GetPlayerVehicleID(specid);
	new specstr[29],Float:health,Float:armour,Float:healthveh,Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(vehicleid,X,Y,Z);
	new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 189.47;
 	GetPlayerHealth(specid, health);
    GetPlayerArmour(specid, armour);
    GetVehicleHealth(vehicleid, healthveh);
	format(specstr, 13, "PING: %d", GetPlayerPing(specid)), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][9], specstr);
 	format(specstr, 17, "SPEED: %.0f KM/H", speed), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][10], specstr);
	format(specstr, 24, "HP: %.1f", health), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][11], specstr);
	format(specstr, 24, "ARM: %.1f", armour), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][12], specstr);
	format(specstr, 24, "VHP: %.1f", healthveh), PlayerTextDrawSetString(adminid, PTD_adminSpec[adminid][13], specstr);
	for(new ptd = 9; ptd != 14; ptd++) PlayerTextDrawShow(adminid, PTD_adminSpec[adminid][ptd]);
	return 1;
}
stock left_adminSpec(playerid, currspecid)
{
	new newspecid = currspecid-1;
	for(newspecid = currspecid; newspecid != -1; newspecid--) if(pTemp[newspecid][pLogined]) break;
	start_adminSpec(playerid, newspecid);
	return 1;
}

stock right_adminSpec(playerid, currspecid)
{
	new newspecid = currspecid+1;
	for(newspecid = currspecid; newspecid != MAX_PLAYERS; newspecid++) if(pTemp[newspecid][pLogined]) break;
	start_adminSpec(playerid, newspecid);
	return 1;
}
stock end_adminSpec(playerid)
{
	DeletePVar(playerid, "spec_mouse"), DeletePVar(playerid, "spec_activ");
	TogglePlayerSpectating(playerid, 0);
	for(new ptd; ptd != 18; ptd++) PlayerTextDrawHide(playerid, PTD_adminSpec[playerid][ptd]);
	SendClientMessage(playerid, -1, "[SPEC] Наблюдение закончено.");
	CancelSelectTextDraw(playerid);
	return 1;
}
forward GMTest(playerid);
public GMTest(playerid)
{
    new temp[144], playername[24];
    GetPlayerName(playerid, playername, 24);
    format(temp, sizeof temp, "* %s[%i] прошел тест на GodMode, результат - GM %s", playername, playerid, (GetPVarInt(playerid, "GMTest"))?("{AA3333}обнаружен"):("{33AA33}не обнаружен"));
    AdminChat(CINFO,temp);
    SetPVarInt(playerid, "GMTest", 0);
}
stock IsTextInvalid(text[])
{
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "=", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ";", true) != -1) return 1;
	if(strfind(text, "|", true) != -1) return 1;
	return 0;
}
stock ResetWeaponAll(playerid)
{
	ResetPlayerWeapons(playerid);
	return 1;
}


stock getWeaponIdSlot(weaponid)
{
	new weapslot;
	switch(weaponid)
	{
	    case 0, 1: weapslot 		= 0;
	    case 2..9: weapslot 		= 1;
	    case 10..15: weapslot 		= 10;
	    case 16..18, 39: weapslot 	= 8;
	    case 22..24: weapslot 		= 2;
	    case 25..27: weapslot 		= 3;
	    case 28, 29, 32: weapslot 	= 4;
	    case 30, 31: weapslot 		= 5;
	    case 33, 34: weapslot 		= 6;
	    case 35..38: weapslot 		= 7;
	    case 40: weapslot 			= 12;
	    case 41..43: weapslot 		= 9;
	    case 44..46: weapslot 		= 11;
	    default: weapslot 			= -1;
	}
	return weapslot;
}
stock GivePlayerWeaponEx(playerid, weaponid, ammo)
{
	pTemp[playerid][pAbletoGun] = 2;
	if(weaponid == 23) pTemp[playerid][pTazerGun] = false;
	new slot = GetWeaponSlot(weaponid);
	gGuns[playerid][slot] = weaponid;
	gAmmos[playerid][slot] += ammo;
	GivePlayerWeapon(playerid, weaponid, ammo);
	pTemp[playerid][pAbletoGun] = 2;
	return 1;
}

stock SetPlayerAmmoEx(playerid, weapon, ammo) {
	pTemp[playerid][pAbletoGun] = 2;
	new slot = GetWeaponSlot(weapon);
	gAmmos[playerid][slot] = ammo;
	SetPlayerAmmo(playerid, weapon, ammo);
	pTemp[playerid][pAbletoGun] = 2;
	return 1;
}
forward SpcarsAvto(playerid);
public SpcarsAvto(playerid)
{
	new string[256];
	for(new c=0; c<MAX_VEHICLES; c++)
	{
		if(IsVehicleOccupied(c) == -1) SetVehicleToRespawn(c);
	}
	format(string,sizeof(string),"{ff0000}Внимание:{FFFFFF} Администратор {ffa500}%s {FFFFFF}обновил весь незанятый транспорт!",pData[playerid][pNickname]);
	SendClientMessageToAll(COLOR_WHITE,string);
}
public OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		switch(GetPlayerWeapon(playerid))
		{
		case 24:
			{
				SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
				if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && pTemp[playerid][pGunSkill][1] < 100)
				{
					pTemp[playerid][pGunSkill][1]++;
					SetPVarInt(playerid, "SkillD",0);
				}
			}
		case 23:
			{
				SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
				if(GetPVarInt(playerid, "SkillSD")>= Ammo_SDPISTOL && pTemp[playerid][pGunSkill][0] < 100)
				{
					pTemp[playerid][pGunSkill][0]++;
					SetPVarInt(playerid, "SkillSD",0);
				}
			}
		case 25:
			{
				SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
				if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && pTemp[playerid][pGunSkill][2] < 100)
				{
					pTemp[playerid][pGunSkill][2]++;
					SetPVarInt(playerid, "SkillShot",0);
				}
			}
		case 29:
			{
				SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
				if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && pTemp[playerid][pGunSkill][3] < 100)
				{
					pTemp[playerid][pGunSkill][3]++;
					SetPVarInt(playerid, "SkillMP5",0);
				}
			}
		case 30:
			{
				SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
				if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && pTemp[playerid][pGunSkill][4] < 100)
				{
					pTemp[playerid][pGunSkill][4]++;
					SetPVarInt(playerid, "SkillAk47",0);
				}
			}
		case 31:
			{
				SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
				if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && pTemp[playerid][pGunSkill][5] < 100)
				{
					pTemp[playerid][pGunSkill][5]++;
					SetPVarInt(playerid, "SkillM4",0);
				}
			}
		}
	}
	return true;
}
stock WeaponSkill(playerid)
{

	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, pTemp[playerid][pGunSkill][0]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, pTemp[playerid][pGunSkill][1]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, pTemp[playerid][pGunSkill][2]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, pTemp[playerid][pGunSkill][3]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, pTemp[playerid][pGunSkill][4]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, pTemp[playerid][pGunSkill][5]);
	return true;
}

stock UpdateWeaponSkill(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, pTemp[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, pTemp[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, pTemp[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, pTemp[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, pTemp[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, pTemp[playerid][pGunSkill][5]*10);
	return true;
}

stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, pTemp[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, pTemp[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, pTemp[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, pTemp[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, pTemp[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, pTemp[playerid][pGunSkill][5]*10);
	return true;
}

stock ToDevelopSkills(Slashes,Points)
{
	new strign[149];
	new Slash[2] = "|";
	new Point[2] = ".";
	for(new i = 0; i < Slashes; i++) strcat(strign, Slash);
	for(new i = 0; i < Points; i++) strcat(strign, Point);
	return strign;
}
stock Difference(Float:Value1, Float:Value2)
{
       return floatround((Value1 > Value2) ? (Value1 - Value2) : (Value2 - Value1));
}
forward TimerPS(playerid,value);
public TimerPS(playerid,value)
{
    //SendClientMessage(playerid,-1,"deb3");
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
    ClearAnimations(playerid);
   	//TogglePlayerControllable(playerid,0);
	SetTimerEx("Unfreez",6000,false,"i",playerid);
	switch(value)
	{
	    case 0:
	    {
	        pData[playerid][pPiss] = 0;
	        SendClientMessage(playerid,CINFO,"Вы успешно справили нужду.");
	    }
	    case 1:
	    {
	        pData[playerid][pShit] = 0;
	        SendClientMessage(playerid,CINFO,"Вы успешно справили нужду.");
	    }
	    case 2:
	    {
	        pData[playerid][pShit] = 0; pData[playerid][pPiss] = 0;
	        SendClientMessage(playerid,CINFO,"Вы успешно справили нужды.");
	    }
	}
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,gToilet[idtolk[playerid]][0][0],gToilet[idtolk[playerid]][0][1]+2,gToilet[idtolk[playerid]][0][2]);
	idtolk[playerid] = -1;
	prtl[GetPVarInt(playerid,"idt")] = 0;
	//SendClientMessage(playerid,-1,"deb4");
	return true;
}
stock SetVehicleToRespawnEx(vehid)
{
	SetVehicleToRespawn(vehid);
	gVehicles[vehid-1][vFuel] = 50;
	gVehicles[vehid-1][vLock] = 0;
}
stock MoneyFriends(playerid)
{
	new string[150];
	if(pData[playerid][pLevel] == 4 && pData[playerid][pExp] == 1)
	{
		for(new s,namex[MAX_PLAYER_NAME]; s<GetMaxPlayers(); s++)
		{
			if(pTemp[s][pLogined] == true)
			{
				GetPlayerName(s,namex,MAX_PLAYER_NAME);
				if(IsPlayerConnected(s))
				{
					if(!strcmp(namex,pData[playerid][pRinvitation],true) && strcmp(pData[playerid][pRinvitation],pData[playerid][pNickname],true))
					{
						SendMes(s, CINFO, "Вы получили 50 000$, за приглашённого друга (%s)!",pData[playerid][pNickname]);
						TransferMoney(-1,s,50000,"drooggive");
						format(string,sizeof(string),"UPDATE `accounts` SET `invitation` = '-' WHERE `nickname` = '%s'",pData[playerid][pNickname]);
						mysql_query(string);
						return true;
					}
				}
			}
		}
	}
	return true;
}
stock SendInf(playerid,string[])
{
	new msg[256];
	format(msg,sizeof(msg),"• [Подсказка] {ffffff}%s",string);
	SendClientMessage(playerid,0xFFC800FF, msg);
	return 1;
}
forward IsVehicleOccupied(vehicleid);
public IsVehicleOccupied(vehicleid)
{
	foreach(new i : Player)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return i;
	}
	return -1;
}
forward CheckClientOne(playerid);
public CheckClientOne(playerid)
{
	if(GetPVarInt(playerid, "proverkaoff") < 1)
    {
    	SetPVarInt(playerid,"connecttime",GetPVarInt(playerid, "connecttime") + 1);
    	Fallen[playerid] = SetTimerEx("CheckClient", 1600+(GetPlayerPing(playerid)*2), 0, "ii", playerid);
		//SendMes(playerid,-1,"%d коннект тайм",GetPVarInt(playerid, "connecttime"));
	}
}
forward CheckClient(playerid);
public CheckClient(playerid)
{
    if(GetPVarInt(playerid, "connecttime") > 4) return Kick(playerid);
	new Float:xuy[6];
	GetPlayerCameraPos(playerid, xuy[0], xuy[1], xuy[2]), GetPlayerPos(playerid, xuy[3], xuy[4], xuy[5]);
	if(xuy[2] - xuy[5] > 1.3) SetTimerEx("KickSob",5000,false,"i",playerid);
	//new string[256];
	//if(floatabs(xuy[2] - xuy[5]) > 1.3) SendClientMessage(playerid, 0xFF0000FF, "[ТЕСТ] Чит-программа обнаружена");
	//format(string, sizeof(string), "[ТЕСТ] Разница X: {FFFFFF}%f{B4B5B7} | Разница Y: {FFFFFF}%f{B4B5B7} | Разница Z: {FFFFFF}%f",floatabs(xuy[0] - xuy[3]), floatabs(xuy[1] - xuy[4]), xuy[2] - xuy[5]);
	//SendClientMessage(playerid, 0xB4B5B7FF, string);
	SetPVarInt(playerid,"connecttime",0), SetPVarInt(playerid,"proverkaoff",1);
	//TogglePlayerControllable(playerid,1);
	return true;
}
forward KickSob(playerid);
public KickSob(playerid)
{
	if(!IsPlayerConnected(playerid)) return true;
	SendClientMessage(playerid, CINFO, "Вы были кикнуты за использование чит программ. (cod: Программа Sobeit)");
	SendClientMessage(playerid, CINFO, "Удалите файл в папке с игрой: \"d3d9.dll\"");
	SetTimerEx("KickSob1",1000,false,"i",playerid);
	return true;
}
forward KickSob1(playerid);
public KickSob1(playerid) return Kick(playerid);
forward DrugsEffect_OFF(playerid);
public DrugsEffect_OFF(playerid)
{
	if(!IsPlayerConnected(playerid)) return true;
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	SetPlayerTime(playerid,tmphour,0); //noon
	SetPlayerWeather(playerid, 14);
	SetPlayerDrunkLevel (playerid, 0);
	KillTimer(Timer_Drugs[playerid]);
	return true;
}
